{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8a4a7278-3bb2-4fdb-bd26-f39eb413f674",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a9243d73-da56-4758-ba6c-bc4ec9f87571",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a13488c-ad40-4a6e-9d71-c49e1514019e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4681d1a5-d623-4657-a18f-65da1e8c3fe6"
                }
              }
            ]
          },
          {
            "id": "51c6080b-3f1e-4372-bc39-48ce2c4df615",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14969e95-e8f8-4b45-b1be-4663248d167f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eaab36ee-2070-45a7-8cb1-37d2a051974f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3f1ef0ad-d63e-4e11-b3e2-386903f565a2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e5381e65-33d8-4219-911d-2a2e570dbbc0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f2a9b4a-68d0-4922-bfd5-6f3fa36df078",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bafa6f58-98b1-4576-90a2-797b2d37b481",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bb0b5ad-791a-4394-bdc6-71175689337b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ac6238a-7d5c-4853-9d9e-277c9345ee86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fad0093d-e499-4649-9359-fb92d489bfb7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a5b6810-61c7-4d0f-a9f3-4e7b4293da9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47c4a384-635d-442f-a4f4-a02fcf6a73b2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94beff1d-bcca-43af-9fcb-3e6bf1dd08c6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "058d66fe-aa60-43c3-8eca-e1bcbbf58909"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd88876b-54bf-4608-a5a0-0fba661aa6ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3882c85c-1849-4e21-be9f-a1a8584e7dd7"
            }
          }
        ]
      },
      {
        "id": "b5b10e06-af33-4133-8460-f4e7752aad24",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d087df79-8538-4b89-ad85-3e7a5a910b44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e68bfe89-d07f-492c-a58b-0733f36f1a00",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e3d660af-996c-4dbf-a33c-7e82c9c92514",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcc2bfd-b05f-4b5f-a37e-2bf83e37274d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e637addc-b1b8-4322-a91d-55bffb659498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd23797a-a072-440b-b67c-8106258763a7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1cea2f-2a39-4d76-94d7-5fd9a17b4400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89ad14e2-26d0-43a0-aa14-094412522716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c838220-70c0-43f6-8220-17f37639e1d0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd3a787-ca60-4158-9aee-9887b520815c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69867612-41c9-4694-9403-60ea90c768c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce7282ed-b7e2-477c-b1a5-50f8e16c4c4f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b9235c6-c35f-4541-b9bb-471b9ea6898b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d31fb6-2d10-40fe-a59b-438d30c72403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1b2b66f-2433-4ff3-a69f-ad4df2598f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6d51c3-4066-4470-a465-98dc860b13d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152402ee-9180-490f-a81e-8b79fd1fa652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4050c876-797a-4bb4-b735-8f5832f610b5",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c510a4-82c3-4d5f-a0fc-e1320a6b415c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b67a521e-5a43-46e8-944c-7bd3fff29c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafc21f4-7cbf-459b-8ba6-a2ffa5373438",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e8832dee-4e4a-455e-ac41-283d73308ee0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e4fb6bc1-dd7b-49af-b69f-b0b7d94ed557",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e8b327e-9034-4014-85d8-0b023ab75862",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bea890a1-16a0-4b26-bba0-c6074410b575",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "025e3e29-16c6-4dbd-87e5-d130922a7a55"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14d2dc4f-6052-44e3-947f-934ac4607767",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0f86975c-fa4e-42db-90d2-0cc2fcc44439"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "956cd082-8b29-401f-8f44-01703e3a0684",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a69f6fbc-adf3-4601-848c-1a1837e35a02"
            }
          }
        ]
      },
      {
        "id": "5d23a4a9-6b9a-44f0-8f50-bb0a1fe9da4d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8d25e323-0c83-410a-9711-573cb635756e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5d7630d-8f61-4523-8b56-4ae489328845",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c7b61247-d064-4967-b762-5991d9bc56f1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a2cafd-d5ca-4dfa-a7a8-a00e97b0e832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9927634f-1d6c-4c35-8525-d7e60333db5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeb731e-8662-4a12-bc71-5c4a9c0eef6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45c217f7-aaf7-4947-9c20-1da095d2c3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04bd403-a914-4660-b6c0-5dc687229ab6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea09426-c389-42a0-80b0-dd6cc834b8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a182c86-ffa2-4e73-bf25-0842181afc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12159c94-0552-448a-be84-b2a5ff1b9d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "273c72af-bf8a-4d13-a571-fca6f30c0688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bebea5-943a-4267-a81b-17aaf2dc6340",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a8a435-ae13-4474-afff-09bf327bf484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776982e7-77a4-42ad-99e5-8c9b636c57e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993227a8-60f4-42e4-9002-ae8402e36281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cc5d8b6-3880-432a-8d8c-c7cd7aae3e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9500c7-dc01-4700-91b6-3219d46f5f22",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96b1c80-094d-423f-bb64-bb7260fcaf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c82de6-53d4-4409-bd1e-58e906893615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1aef9c-6353-4e62-a6a1-4ef7122a979d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35a2ff7a-3302-496f-88ed-2f46a2e10a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949da7da-9e80-4f9f-b392-16559727fb4b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5502be-394c-4a98-84ef-75d0c3b97e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8d1918-5ef9-4a24-b210-d9549dc97784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73803d2e-1105-4308-97d3-aaa33a8a678a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "268ff631-0b88-4b6b-9e94-e15a58f90b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0656c7a-ea64-41dc-8028-ec066051d5d6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1add2426-54e9-4927-8198-bd29972b7c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959458c1-0681-4dec-bc28-42794f493de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bbceee-c4cf-4e9d-ad91-16d716528f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c28370e5-f468-4875-9ff6-a148a68e313e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c8089a-60e0-4b31-b310-aea7ee33b2d4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97d9ab9-3a15-4677-a456-fdde3475676c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cd0c96-744d-4dcf-b104-75bf2c2ab1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ec0371-3876-45a4-bcdb-51e2fef4cd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f667966-e4de-4ab4-9a85-83855380a0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19c9fd4-0b83-49a6-9f43-879b368a636d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6f00c5-77ee-44c2-9f3d-0144aa15204b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89454480-9939-4d56-9c38-0327e22409cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c656b055-fb02-49e1-b3a4-d56048206fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cf617f2-e119-4d68-b763-621ae43189f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7d22ec-2a42-43f8-a8aa-d3846089e8f3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cdcaa8-967b-4e67-b19f-44fe0c4a4c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8606ab9f-74c4-421a-993b-f39dd272c61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d75e302-8efa-42d4-8004-8f2bc08765f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17300b3b-c7d3-4702-a56d-b3113470e0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed03c9f-402f-4bcb-aa38-f014d7ef262e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a789509-b0d6-4cc5-ac61-4f38b1886bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3440b843-2647-4bb3-a0dd-d781a5b7ea41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779ad1d9-2e5b-4973-a427-a6847aac8bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "032baedf-b23a-40e9-b1ba-643c0b92e752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37f514a-55f0-42ea-a352-37d59d68e54a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da050672-f8d7-4320-bdf2-3f3d90ebab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9389076-e082-4a4d-a5df-ead219799441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4145acb2-41ff-4892-8bc9-0ef1cdbc239f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85211621-5695-4646-bb16-b9eba2e5d6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1666247d-b942-4787-987f-3c9fcb6de03c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad67fee-b541-415d-9032-a63372084267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66030513-60c3-4b16-89c0-4ea507975e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482b5d2a-fc38-4299-8a3d-fefdaac5d710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ad95473-b065-4876-90d6-9e41762eed79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfd5b22-50b3-4db7-8b33-a287954e319d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0fe962-b063-499c-b928-e3fb284258ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1444c0-9c42-4662-ac13-2a28b384fae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f935bd9-39fb-4064-a48d-5768c0daf006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59526c40-df9d-4746-b249-be1049c6048b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fcd856-0a46-4063-9afe-ccedce190954",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfed9bb-7119-4379-9b53-7d270a8a471e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca66615-fee1-400f-baae-2514838c0370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2833e4f8-6a60-48a9-be5a-947ddfe99930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dbedc11-5e30-4019-856e-548f83013c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e813f3d-ddd3-41b0-aa59-5472b6d01bc7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e508178-4738-48a6-a7e3-26f8baaad64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e579b8b6-9625-4dd4-8e64-ded5d6c0f97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2504d0eb-60b1-4425-960e-a2fbe9aaf607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbdf20b3-87de-4e6a-b0e5-ec73b56f1af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf0ac25-13de-4fb8-ae26-39f2823e1699",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b86887-9e18-4ce1-942e-ebee36a9814b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774ba3b8-a651-43fa-9dd2-35a923ebbeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558f65bd-db08-455c-947c-cae7003600e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf512b14-369c-414f-9ed5-36e889d45127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320dbdaa-0d29-48df-9520-72813e84c404",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b6eb46-91ad-411e-a341-451924ff68cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d27cb1-c1c1-4234-9256-791ce19e9e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac8a3d8-4d9d-45ec-a993-68e39b50443f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e814a73a-4c9b-4af9-8c9f-585181ac8bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc121e1-12fe-44ad-9e07-20de286b50bb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6c4300-2085-406c-ada0-53e5eee1b2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40cb2661-be3a-4895-a466-e8b835bb261c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec22e2d-3e29-4d40-a68b-3130a8b58a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2daf1c48-4f6e-40cf-988f-5b781d9cfd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c6bbbe-9669-4a38-bde2-b88f72335c87",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f864dd5-8395-44f3-a725-b4088dde2680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15ff6f0-44e2-482e-9a71-e1cf2751243a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991a8801-07fb-4428-a1e8-367b909f7725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a65bf732-b1a8-49dd-8b6a-f4bf86121507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec7660e-66a9-41f3-831f-4fef9dee2694",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ccd6e7-7cd2-466a-81a2-0aa40d2b6e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ae3eb6-2bcb-4069-aba5-44ec635266d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ef2e78-6408-48b5-a0d6-8583cc9d9f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "772b465c-5136-4a1e-a64e-3f4da5829142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ad3c5a-5d30-4205-b3b6-74fae8df1752",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263add99-feb1-4b68-a4f6-dd5e7d91f239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b368673c-860e-4c3e-a06a-b029a1c41658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171b5e8c-2f95-4096-955a-e94e92d58350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbeb967a-89cf-4b7a-a301-d3f971e77eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80e3912-b2b7-4b0b-bbf1-1a50ac2e3649",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcf14b5-cefc-4f51-b7f9-0f96e8e2c0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5f8831-39a1-40cb-a847-6d34234b8f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1814a18-24b7-41c7-b2e2-0e804fd55e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74efebd9-ee61-47cf-bab9-c2de848ebaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576a0cba-b981-4a61-af2a-b17f404278c5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d013637e-7e5f-40fe-8f17-a91077b2fe60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d095c01b-8cf1-4768-80b8-5d1f34090b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a064c0c-5151-4721-8304-27219fe9f942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a339471f-6ed7-4184-81a6-6306ed2344b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df8af37-8531-41e8-8556-6889502c3c6e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9de535a-f1df-49f1-83bc-ba380acbe244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813567da-d8f0-409b-a400-9d656bb9d129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b3d66c-6633-47e4-b9da-a0849bee0d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b772c5d-7c56-4d2e-9f80-415a7c1c09c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034d214b-2704-421f-8ff3-949290496118",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f8fa32-6541-40e3-8410-5b4710b7064b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cba5252-0f94-4ff6-a765-8b41ae9761cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d3dc32-adef-4a96-b81f-029d34798e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29291b52-2369-4e39-b07f-9fc928f92160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f53581-a3dc-4dc2-9785-9648ea4bfd44",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd5577d-21b8-4e14-9cf9-a457fa0579cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a9a344-0656-4f0d-8c86-fe710bfb8c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf09d43c-d61e-4280-ac50-f6ce89060428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7beb6f4-9107-4c39-9e35-c730e02e6cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b73c30-c5d8-4cab-9ff5-5d500db7d5d0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654be56b-3e29-4e77-b6ea-c0b9f415255e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b97b293-6f29-461f-837b-85c9aeecbc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9449741a-b819-42ad-b04c-3480bfcb33c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7e8fd0-e942-4cfd-b415-6329b3ee9912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ef7b7b-a484-40b7-aed7-a27d9546d922",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce9f449-01dc-4c2a-8bc8-d27013a88b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df030578-a0fe-4b1e-a41e-01e39d260c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e345cb-03cd-49ac-a066-765569095317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dcba36f-0666-4bba-bce4-4cff568518e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4677c9-c9b8-4dbe-819b-c4861f5398a7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a533e25-f709-4551-aad5-c22f96152d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d353088b-408b-45de-a31d-e3adf6cb5435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2cba42-c9ab-410f-be63-cc8d6cb952db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89a02b7f-4523-44cb-a81a-f20b2d3dbd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0807c8dc-0eac-4b7c-8d52-9972aea242a6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab28fe50-251c-4f9f-902a-8e1b3d938c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58dea9b2-fc7e-4f87-ac69-2667c2aca61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018d8229-874d-4832-a6b3-3c47bffbb570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "502aa0a1-d5e5-4008-b72a-373660efe7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1f934d-b9b1-4655-a64b-ee1f5b7b4136",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd98912-9804-46be-a9be-71b48d446289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0b3f07-37d7-4ffc-9ede-0ae07d467be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2438d50-1cf9-4828-997e-7b0c42589b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49a7b536-9ac8-451b-8051-d21030c7953c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f7c8e2-3cc0-4c66-a8e7-4237bf2e207f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de780055-b278-48aa-8a8f-90cb76efef75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9118f702-4b55-40a9-8ab2-320042659854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bc68d0-bbd4-45b2-92fd-bd5e930a4fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d68d100d-9af4-4efb-85be-be5b0a569d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5877bd2c-702d-47da-808f-4619c0a99900",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b7d9dd-0db8-4870-89cc-52b0a51fe8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe665d1-cba6-4a72-9968-957fd8808fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174d4426-46b5-4b0e-bfa9-5730a65752f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a916b858-34f3-4902-987f-c0b24a76d4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b56ba2-9ceb-4037-bb72-5086052165e6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeb0c44-b8ae-4f50-ab41-6c6611b4069b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5ecd96-d0ac-4789-8311-420688ff3707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6542dc-2153-4246-9fda-af67fd567903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f117f5-b45c-44d8-8439-bfe99408ad76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22427ca-661c-4007-9c6d-64df529e5677",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b704a3e-8cea-4ccc-bf65-782eeea0fefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3f4f86-9805-420f-89e2-b0fbe788403b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7151fe71-a16c-46b3-8a12-f185863d62a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "31bc921d-b528-4970-8590-ca00eeb8d3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c0618-4f15-4966-bebd-41a0a0f5596a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94da58df-27de-43ff-8035-403e96e8acc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70a5c460-bf7e-4515-9763-0883a61b3efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d69d6ca-fe18-4aa3-a4f1-0e2bc17d27ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edce3ecb-2f0b-4563-ba6b-44fb95db4428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec86e1c-53ae-4192-b432-2a58ceed88d2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af3095e-b595-4115-92fa-da1487c0783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f81f9ee-7d2d-4c4a-afa7-1a3a2adacf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ead9298-6f92-425c-936e-8cb82596fdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f241b7a-fc36-4e03-82a2-4bc1fa5757cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e104563-1c79-4305-b2a0-19c4abe60d9f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd64236-6578-43d9-8e16-9808a81c404f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f67a5da-d958-4d9d-8d3a-288b3239a96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86dbcdd-6f55-4822-8b4e-5ee2ce357ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "54b47963-09ae-48c6-8bfc-aed618f46514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5275357-d8d2-4294-9cff-bee02bd520ca",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fe579e-dfc3-4a66-a8d6-f41cc310b9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ebde725-e4de-4b2a-a7d6-56b78b469b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3316391-6b4c-421f-b489-07ee83361dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "14e29403-b879-489e-b1d4-35b1be22b939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846f5966-02a0-4b89-90c3-563cd8625862",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b876f3a-cefd-4539-a482-00b073086863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf8cf49-142b-40a9-9e86-c584ff9e1d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05818e3-fdf6-4ac7-9f7d-17796fe24d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6979498d-df94-4ede-ab7e-bb087926b397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3777fae2-822d-4d0f-9655-3cf86cbd37c7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dd2a1c-0483-4868-87cb-def51fa789f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d24a49-7e48-4abf-8080-fb37bf5a0942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be561f50-ced4-4c3e-82fb-dc50f2d3ba0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e418670-d671-4ceb-8c2a-7f2dab307149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7571bd-d191-43c0-9450-3c872963fda6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2c87be-a57b-408b-b89d-ebc6359e2a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019d0823-d502-4d12-937c-9d2afd981692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3dcad7-0896-44d6-b93b-5af77bc5db71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0d2f86-3055-45a0-856d-9f9fdfffa4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39118119-be14-4d72-98ae-8b6057cc46f8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834a0783-0af7-407d-866a-a70ba946fd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222a81ee-e26d-4088-b7a7-c9fe038b004f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3a4ff9-71b3-4b3b-aa8e-188e4cf12060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d949657e-fec4-47df-b0e1-3357effb6ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec810a7-bcb1-40ae-8f56-0f6bc1edfd8c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f82c3a9-3ddc-4bfb-982c-f582469e84a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ee40d9-4f24-4593-aa28-0261cc62866d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6c6898-d9ba-42b2-a79d-416d8184be98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b77e548e-72ea-4d15-b055-29f8ba18a56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383fda38-b52c-45b7-8809-26e299f47dc4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8393b8ed-1627-4cb7-99a2-c63ed6b8fe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b6327b-7349-4499-bbd4-81aff1a8b36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de09dba3-1633-427f-8397-6878d2166a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2531fc9c-4ef0-48a3-913f-35e38bb3dae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0870bdfb-b745-4ee4-86a3-4d79008d9a4a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40387c4c-98a7-4561-a8c5-6b67b97bea9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3e9c55-56ed-4bd5-b731-28ba3d714129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208c23e9-f77c-4078-a81f-2a3ab7f7c80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32e41860-87fd-472a-b979-179b6ac76979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06183518-97b6-4615-9b41-7de948200b1e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce984c89-6d78-495f-9e2b-764e997e34e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1c8e3c-621a-4699-b40d-e36cfe74a0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c43683f-8d71-48ae-bfd7-d7ebff22a068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9652eb-a4b6-4567-b7ce-fd221fc010b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63902f7b-ede8-4c4f-9463-f97ff571569a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c670f1c0-3e60-4a43-b123-e09fdb13aaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6efe5a1-d5bc-441f-b890-8eef6f42737e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb0f1d3-d961-4733-87e3-6d551c6ca02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "560dcbc7-e8b3-488d-b993-11bc5abb852f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af7efd0-9334-4e51-ae26-c9308b7a3f54",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acdb69b-f34a-4e0a-a827-361ccf53f901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b196e34c-72bd-4031-aeb2-2eae388d4501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b75843f-1e5e-411e-a6a4-cedb07ff70d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4187574-f609-48c2-a03b-56b5d2d40506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ebcaa1-b857-4346-8bb8-58b9a064a0eb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc53f30f-e4ef-4f08-8da2-53f9242cff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68616cf7-7825-4e9d-8582-a14c4e44bc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0cf92c-6c84-476d-a974-813fe455e0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7bb8d7-dbc5-43a8-93ad-d0d7aaf63ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9794fd1f-4d79-488c-8aba-35310afd00f5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabec7c8-3184-4ad6-86ac-08ce96040ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89e8304-dd22-4f67-832d-e3c756a1f17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc6c214-1fa7-45fb-ab1a-381f91780643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "56d4d507-466f-4ce0-92e0-f16009cb7964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0813b055-2143-4d10-91ef-e4a26d67efc0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95dabdc-5b7e-45e5-be27-b29afc9d374c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e09974-608b-4728-b564-1ceedbe525dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb94d14-c47d-416d-94fe-ab05a0f99efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a15783-d29e-4d17-a3d1-6a662b2cc1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aa75d4-5a7a-40b6-99ea-68cff6e5b440",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be586a09-271d-4984-a0e0-b46ed7bb7a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44317185-6a92-44dc-8841-b31e5eac6ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8a9cb8-347c-4dff-be29-e9c836c4ab57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd0eeb9-d427-47e4-a8e5-152402f73983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bc1f58-6e3a-43cb-9319-5f529b1a0a85",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509285e2-bc35-4e72-83e9-d4315c0194e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d338e921-7aca-455b-a27f-d3d5e26ff779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e978bdf9-4ac4-4851-aa6d-2cb859c767f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fefdb146-721d-49d6-a141-8a5a7c414f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8027ca07-ec80-4163-a45f-75d52beff48a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ce9f65-08f2-497d-83b7-9a8ef5e2a075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b2e93d-336b-4719-b603-592b2314478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81092971-7e82-44ca-8ef2-844f1d64c306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c03a89-6b35-45ae-ab79-519416aa3b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da52dea0-f2f8-4690-9fb1-b6c59cdf48cc",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea65a0fc-9fd4-402d-98a6-e61e29298188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426effa2-3082-4d86-b6fb-544e4e4d83a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06069fcc-d881-4b9e-b4ea-5fc2c6e25f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d915e0f0-b27a-4819-bb9e-07054ced8b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6e98bf-6dd0-4e71-8447-26b3d1ecf1ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff422a2-c984-4278-9cc4-ed4591acc982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1fedd4-52ad-4a3b-bff4-9ec66f037981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb274ce-7557-46ae-a2fe-77ef22c48e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f639516b-e39d-4141-bbbc-d1a5273c01a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096f64b9-d2f8-4971-835e-8f21a9a744f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac337a4d-54fb-46d1-9ebd-bcee8f23f3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc821c0-da80-4d55-af90-76ac817a44ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c899b6-cc63-4989-a810-a1638cdd26d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9e8277-c460-4313-a16c-903dde2ce42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f802fa-eb5e-49e9-8736-d7f15a2627ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1615d32-ba05-4b7d-b1b9-bbd098d1f3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018a8ceb-772c-4c2a-b5e4-ef9b2d0aefde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb14251-cf6c-41a4-b599-d56f0f462444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd04e1e0-b532-423c-bcf3-73f0e83056e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ef144c-a5f5-4076-a451-054f5d681022",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1714cbe-cc00-4e73-9bbb-c546788d5691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96d4543-85e2-4796-b624-73ad344d504d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3c3620-0894-4972-a031-3bab120c64a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d00fceb9-0ee6-47ea-bda6-7934ab4d826a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adb9040-f2da-4749-9880-bb9fce878534",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ff2093-4198-410f-be05-411095338eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f2af9c-b841-40ef-810e-1e0b728b34d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daea8dcb-a0d6-4c0f-a140-e12c9d9a5a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b24fcac-5ea5-49e3-9691-a71af524c2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc28bd1b-eb80-4df9-b4a2-5c91eceb617f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deefaae-1d9d-462c-bfd7-cf0f525e78d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d56974b-2665-49ad-a245-fffdc18b091a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e658afe-a2fd-459e-b096-510a475bb723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "bca9a643-1122-4344-af73-bbd694b510fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd75981-ed39-4dcc-9c70-258015d048fe",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "365de5d5-7b55-428f-b582-3612ead72efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5dc0cc-aeb5-41c2-a69b-89f9fc980891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315d9c0b-6bff-43d7-a0c4-7b96dbbdf71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72541c9c-5c27-4b7d-936c-d443f445c8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d699c1-26e3-4c0c-bd8d-bf6957681128",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfa106b-0cfc-4046-8b3f-f380e549c289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df2dd17-a645-492a-b053-d5917275bc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632ccce5-43a8-417d-82c2-d11a36b09789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff73583a-86e5-4ed1-a4df-c5257ebe4b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da69600-57ee-4af9-ad29-1565e7b1d0d6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b3dda6-46ca-4bcc-bf02-c5285e7ee538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2d9993-0710-488e-9f39-32f1422af398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f95ca0-7aa1-44c6-ba4c-717c765e3de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "607de00b-2d66-4629-ae97-834f0ede7e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c08385d-4c89-4237-a9ae-06f9a5d3f52c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1309db-ccbc-40d7-a295-91290c3bd687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df02c088-9c80-4d96-b1c1-5e3a631785ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c96c710-9ee9-4b1d-a452-6ba7c10feedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1a4efd-0df0-4e09-84ed-14498d440b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3277e1c-b3cb-4e35-a559-8f130556d272",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9a9879-df0c-4c52-b81c-3cc3ae498f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17db9a7e-b689-404e-870b-3f6f41902c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4b7459-f9a9-4f7d-a440-6ffe74841319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d192b54-9ae1-4c3f-9b5a-bfe2e76cd5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c91dc5-a92f-4e3e-a3e4-4828d16cb741",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234ec1df-1047-477b-8aaa-8134af96c46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3988b616-3e2f-423d-9bb6-1ef32d31042a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0066fee-3454-4836-b1ea-90d88e45717d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c0bdc6-2d2a-4b73-8c35-10cb1515eaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae65bfa-1042-48f9-a4db-0b1d7dc9186f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d20ce7-e319-4201-8114-41d67c2c3b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3e5467-83a8-4064-ae4a-8f73cc88a9fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29418be3-4413-4e03-b91b-5306170c54d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1ae64f-3681-475f-b66e-8fbb618af212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a52aaa-cab1-45b4-8c4a-85bd6afdd85a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c235c1-f09c-405d-aa79-68d7da8d43a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d2dc28-6aaa-4304-9e15-efd041f71976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922231d5-67ec-44f7-8e9f-617681845200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df18c1d7-4c19-47b2-ad8f-5444abbd802d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846a8c01-6834-4cbd-bf56-916418a8b3b3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9880d0eb-a0a2-4961-9508-fa6c05927a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b11a32-405a-4501-a057-c43a398268d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b463a836-dff3-485f-adc3-955c0a5dbde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b3d378-9a8e-40d8-9406-8ade679ab9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e605523-8de2-42b8-8108-4d8f5ec477e3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60666712-0ae9-4809-96f7-b66b78d2754b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35902778-c09f-4638-877f-0144ab81daf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618dad65-12da-4aca-95e7-2e9944cfba34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "538d4a78-0cef-4062-a567-5a1ff89c65bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8178b65-c9b8-44eb-bf6b-4697af4a4702",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ccbf77-6d95-4674-b2d3-b52c619c1978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9cdfbc-a7b8-4e84-9184-a8c905675487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e5273f-ca14-459a-a7c6-256432bda743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fd69ac-d08c-4ede-af7f-9f14f86c0b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1943d0-ef63-4e35-a13d-836202733867",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "782ea57a-20c0-4f2b-a35e-05e0c3994ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8e6134-fa9c-4fe3-81ea-ef224cfd0254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9041fcd5-7b66-4ff3-b4e4-3dda91346a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e80fce6e-237e-4741-8028-66d41192817a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8f9a68-0aa3-4a94-b553-65e972449638",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98af5c58-c376-4a1a-beff-71ddb46b8eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37ecfb0-de0c-4f66-9504-331df8cc6d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cea791-772c-4c7d-870d-ef46108ef6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a24c71e-4ab5-42e5-9460-b6427c618a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03886ac4-00b0-4fed-9845-20b0ba3cde03",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75453013-5972-442c-ad58-43f4de24346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b092cc23-a42e-431a-8024-bc3a260e64bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce04847-7d47-4f3c-b6b8-e4a07b1663fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b43cea7-728a-46f5-bf55-d003b4195768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8f55c1-d47f-48c7-ba92-d30e0118942d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdcf183-8450-4899-8b46-2610cbf73162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e675fa33-210d-4f2b-9087-5f94f0220c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7477204b-08ee-47ec-897e-44f2173f4c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6f4fce-6a9e-4577-8a19-6401e9257193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b151307e-d77a-4e78-a1b5-ec571e5e91c5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e3f51c-ae03-4d9a-b488-14268a519b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900ff254-2371-45a3-8547-d8f5f6f83ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310085d5-5f7e-4f20-86fd-b169bf5f6602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c52d2e-5ed3-4df1-b527-5241e01b00b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb8cad9-1e6e-428d-b706-c2fdf262c714",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff871297-7070-468c-91cd-db4cc505bcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1782c5-dbf1-4220-8cb0-1f03954cb759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe49bd3-acec-46fb-8d25-d18e82175fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1a360e-8725-4b3b-a341-626b4b314af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10c4eab-676f-4518-8822-4b121dd6c96c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e822f35e-97ed-48c8-9032-12a95786befe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e09416-fb80-484d-9f9e-f4a52b11b91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29e2458-4884-40d0-8f26-ab68b02c1233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df1e3505-020b-4e74-b3ac-6a00f300de5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac35a41e-564f-4303-a41d-6eb0e57ee3dc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4f8ad4-a61a-4368-afd0-52e166e83cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca4d5b1-2bde-40d2-9543-62e35e4950e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086dbcdd-21ce-4a12-bcb4-5e8e285b628b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ec545a-2048-4c88-b76d-09b826aade69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba02005-8153-4fff-9902-6cbf3c1ad822",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e454980-da2c-435a-9b5c-b49372d5ac05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c27f4e-566f-4efe-a028-699214c8e91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28536f52-fdb3-4beb-827b-9bfd5bbf0136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e475ec-62ad-48c4-b7f1-15eddc2873f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cca298-02d2-4523-9c75-95dae1b5591a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d68b6dd-2f46-466d-b4e9-41a2c374e0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a9ce80-e787-42af-8bf1-652aa8d11c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ebb4d5-2832-4c6c-bcb5-aed00e77b139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da81af6-4131-435e-a23d-e16ee4b2ad29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0ee7c2-89d4-42dd-a3bc-7be5a340c772",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b43b062-ff4b-4b08-b906-9a3151781ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14407fb-cc8a-452f-9077-91f8604f1170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7621df75-4729-44a7-a447-337f06eaef8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57738613-a1a7-43f1-8246-908b5693b779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c381943c-167c-4592-b1df-a867f31bf79f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71810762-817f-4d10-bece-38828eaf6c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd582b56-8df4-40ae-bb04-5b37661089ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb793b2-46c2-4ba2-b59b-23ad73587ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "132d57e1-95d2-44f4-90f7-eb78f300e3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfb03d4-cb2e-48f1-a703-a5c2b0958ae8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccf8f00-340a-4cd4-8358-29448b2974a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5737ee-c275-415f-8534-76c0ac6bd6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adfd332-f3f1-4e6a-8d71-02d41168505e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8117c9b1-262d-4c41-8b35-fafaaefdf6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d1803f-788b-418b-8a60-fc871da19577",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d0c8f5-3489-4467-a31d-33eeaf512bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9e61c4-c0ea-4732-9143-5d68e46c36e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019af293-9623-4044-a51b-4e83925a2867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "73e938b8-37dc-4781-90cd-efbe8d9c937b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bd2fb4-8826-4c60-ad46-8ec725b56050",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd3f9a0-e906-43f7-bdd7-30904f33e421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd5cd2e-5f0f-4dbc-aea7-d14fb608211a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de678e2e-17be-41ba-b3eb-73cd37222933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28e31c3a-9843-47f0-81b3-7cbee74f4646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1749117-2eeb-4bc2-889d-db47d0007bec",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3a34e7-9280-4160-bab7-1cd8ca9686b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd759ae-c23b-42ab-a318-356146d7db64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebb3b8b-2f7f-45ff-98a0-f72f60694707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "86156fb1-a705-4e96-8c11-9828e99e085a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb26ed8-093d-4551-84cb-d8206820be21",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f851a6-9e7c-49f8-8045-626f9167290e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed802dcc-e22b-4c4f-82a0-62b4dd7e2eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806d5584-1b57-4d73-bd5c-bd80183585fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf418cd-cf2a-41e2-8519-66673555236f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f78b821-9d21-4e21-9f7f-60ebf104a7b2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc679e3d-b582-4e7c-b7b5-f014489c81f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62c2039-5419-4164-870a-12b7edf6a035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bc48ef-3c54-4339-9838-8cb0ace84add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cccd2ac9-f0a5-49e6-ae51-bbc746e0075d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9294fdbc-b85a-40fd-a7d0-7c1a4ef150cf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56120391-9e13-4595-b5bf-533fa7e6701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "799f8191-74f4-425c-a600-f9c919b8ba9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155eb6e1-2778-407d-b063-b835046f49da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c45d1440-aa27-48aa-aa54-33ecffd6480e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fbbd241-f128-4a52-8e27-e72469193464",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "097ee215-7a76-47b6-9ae2-505931b47d1a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e446e13e-1c1a-434f-8cb2-68aef135975e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4484ec3c-e583-4f1b-8621-4690a3795e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374fcf94-fd86-401c-92bb-54a5e951f445",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb025cff-e277-4ee9-8048-4ac7807a12ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9881fa4-82e6-4229-a329-1107d25f5b6f",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daf9aa2-d0bf-41c4-a23f-7e366097d6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71c964bc-bc4f-49be-97eb-d251aa99a422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d704f881-2fa7-4e9a-ae34-345e48a7f0ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7246736-4cd8-4cfd-98a6-8d73478d0233"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e33e0943-7a47-48ff-8039-bb012fb84f09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b72952eb-a592-4d98-9382-ec627d03aac5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2bf505b-5093-4e2a-830b-7026de57a732",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40e69c02-11f0-4fed-acb9-dec28243d543"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d5dc67c-c78d-4236-a230-2b48e4375348",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "763dab7a-cae6-41f7-aec2-c07e02a2f9d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee597235-2c8b-47b7-8884-c9bfa757c81c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa854c0a-8d36-45fc-9033-6b122ee73d9e"
                }
              }
            ]
          },
          {
            "id": "94967dd6-a95f-4d10-b469-9d9e1099ff49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd652184-0492-4a86-8fdf-71ee54a94a16",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "440b75fd-3a7a-474c-b100-b1f123e22a1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b2b25b4-149f-49cd-8b28-d45f414f1119"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c118780e-45d4-4147-b52a-85788902ba37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68bf74f5-5dcd-4af3-a273-e8763dd94ccd"
                    }
                  }
                ]
              },
              {
                "id": "1ca7e736-149e-4be2-92a9-8702eb2d4468",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2d6b1cd-51e4-4523-a421-d6784caad1ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8eeae3b-808c-4093-90f8-5d4b22c11777"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad7614d2-a88a-401f-968e-6944211b203c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65070e78-cce7-4c23-b860-c8ef358806c0"
                    }
                  }
                ]
              },
              {
                "id": "554ac10d-e623-410b-9607-d9edfa1dbd1d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21439585-8d69-457d-baf1-e6e831fadf27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b154102-3169-4cac-81c3-22929a4bafa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1e5032f-2a36-44a4-9985-8aa40f05722e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2935c82c-847c-4eca-a1c6-0f187fd044d5"
                    }
                  }
                ]
              },
              {
                "id": "0f029195-ef70-4034-8e38-1e8e3a058e09",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acd02a59-54d4-4ded-b1f7-7698fce0c1d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "219fe259-a9dd-4f25-a2c4-00f550534c5c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ff9cb77-8e86-4712-941f-d802297ce3c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "02715774-28a9-497f-a7c0-9ed8da28ad6f"
                    }
                  }
                ]
              },
              {
                "id": "2f56c3a0-0ee6-44f4-a721-b2cf2a032781",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "406f67e7-8d27-496d-a7f9-eac00939cc30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5aec64ca-f883-42a8-8db5-80e46d77076a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07e402a0-290c-467c-9bff-936ae1fb6dd5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4db7c6fe-e1d0-4a34-92fa-507b053b5996"
                    }
                  }
                ]
              },
              {
                "id": "0cf3fd1b-1fc1-4979-9f6c-72335a2a899a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf4ea30e-6185-41c4-85ad-5b22ebd40d7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd5c5cca-fb61-49b1-8324-62b42a8fdc7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e79a797-bd43-4d2e-9a2c-e28d32cf395a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e95c7553-a874-4fc8-bfa6-0e90aceecae5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a5dc0cd-3478-4391-9c5e-eda62c078ffb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34c751ee-9b57-4f42-a19f-57fef5eb76ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3a84fe4c-1f1d-4c28-a181-3d4497105368",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff663abc-3115-4c5b-b272-29e3d4c555e5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca71b774-9fe6-4957-a9a0-be277880c9a7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1b4e1b7a-e873-467e-93bb-f970be6e1cbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dd98da8-3c15-4e1c-bf00-ac28ad32d882",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a151320e-21af-441e-b7c9-7fae88ebb31c"
            }
          }
        ]
      },
      {
        "id": "a8e8f793-1300-4bb5-85ef-805ce8b6c011",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1628e68e-9260-45c4-bb39-e944e294e141",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37e515cd-78df-45da-9efa-11a2d742c9d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1cec4b45-8847-433e-a03d-9a8541bd8307",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f490048-d200-44ec-9937-31292690c8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d818fbf-b74b-425b-a7d9-19260981fc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c782d6-98e1-4a43-8c21-062848bf7730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "250b9436-0eba-4e6f-95cc-76f557b69c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abac4857-3f3a-4522-88b9-916c941cbc81",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600e37e9-dac1-4780-bdb0-b129e1016dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91caa7b8-9d6f-464c-8d7f-f776b17b59dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6a35ef-dd6e-4ecc-b0a3-b8cbdb7455f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0550a8c-2315-4927-97ad-60ef7391b32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51036334-56b8-4b7c-864e-a312d5b2333c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cd88ae-ed27-4961-9cd1-bee6ee895ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b644886d-089f-49f7-a63a-a172f9e4dfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ba70a6-bad8-4386-b55b-94df627946b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a4d9c6-4f9c-4e6c-b7e8-2dddff85d04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e8b45a-c441-450b-b592-f99d4303b5cb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3593a016-484b-40be-a99a-ea296d8564db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd79dab-1593-41af-a787-2a587540f9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11dd0e7-31f9-4f81-a452-91505185b6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc66c212-5b7f-4b43-8361-91bb9fdfb583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab03e43e-48c3-4f3e-873e-f6f150cd57cc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987f9203-9fec-4bfa-b616-c01af93d1808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6400efdb-f979-4635-979a-ef4b10c6972f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0527e0bf-d237-454e-8b5c-71953959f27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8386af5-fc4b-4a93-98e8-d13f89dc0ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a7db11-6037-4b09-84df-0edcafaf23eb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c5f9ee-3d96-4bf2-9874-2633b1467452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccbb480-930a-40f3-8034-47c65307439f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1624dcf4-758b-412e-bfbc-e07b0b5bb55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4890ed-6615-4754-81ee-08ad4f4002b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3251d48-dd09-4420-a0b3-9040d0b62fbe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf52381-115b-464f-9aa6-1c7c93836302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e3d263-2247-4184-80b4-48cd8afd4859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023298ab-0558-4dd0-9ba2-39be9b34003b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e54065-e52c-45fe-a2c6-4c545dc53fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ea647e-8d54-46fe-894a-ba12c36cc69e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa2cace-297f-4039-8a2f-ff639d693c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb101b4f-b2c4-4d7c-a35e-5412b00dd975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a63301-4ad2-43d9-987a-528528b921c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15db84a0-b78c-432a-98b9-0bfe90f9f09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d4f710-9cab-441f-8d15-20dae8e36cb1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e60ef1-ba0c-47c7-b15e-aa30e89165c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b32a87-1592-4f7e-98e4-59ff88b9cc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6982cb6-18da-417e-a99b-631032df8f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a54c8a1-44d8-4683-8d42-32a989580a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30794177-287e-4ed2-85d0-5d4855bbe462",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f73f44-8261-43be-8059-e2d0aa0940df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7daba57f-ce6f-40f1-a332-017ef6339c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad99b559-c305-4086-8cf5-c428c98c3dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe236bb1-0372-479d-951b-8505d18e7dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c122254-60bb-4cbb-aa03-1e22531162c0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4391d8c1-73cc-4233-a373-23316d6fc898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abec1cb-8a9a-4a2e-aa99-dc1164aa02ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cf06d1-29e6-4c54-98f8-b007f458786c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "67cea931-28bc-4d8d-a59b-bcc754bd3b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1c60a0-6df0-4925-a379-959457574e4d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef469dc-21b7-4f2f-9975-d9d4667ba9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12efb80-89f9-4f4a-af67-d439590de32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13e7534-b447-4d30-884f-5328ff000a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "595ed2cf-f3d6-4dc5-89f1-18c7a0287af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a74474b-7e8f-4733-9469-de4e5d7dd546",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3870d28-5444-448f-bdb8-fba8612f65f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d933712f-c02c-4e00-bdbc-52d36b51ac4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7d6c9d-f1bf-46cf-9097-1f6e21bcae04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94869bb7-09f2-4aa0-af94-4b9367435ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83723fb-b913-44dc-93fe-f47457ba3212",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c8e623-0780-49ad-b0e1-067215d70314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30379450-4c4c-437a-a066-ab546dae3b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c518c3c-8ead-465c-82b0-7ea4e5b0ee04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb433838-d680-4529-8e0a-9e04f11aa345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893d1944-5b06-4dcf-9726-33349c1d36c9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757df9a3-cc98-4e75-88e8-a56848e9ae07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c30a15e-4933-44ef-b6e9-aa4005787912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e703f3e2-1400-40f5-804a-129216fa78e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "02af73e9-fab8-4d00-bfd6-cfab4b703412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34584c74-4a2d-4e75-8054-00f704fb5118",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456e0019-a0fb-4053-b3a9-df25d414f088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca26c188-6d8a-4614-b7d6-c5ac82d8dda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2d0ca3-4dd9-4bb9-8157-e38e136b6c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "64e1a2e5-43d8-4e2b-aec8-832d0746b1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46bd70b-38c6-412e-a444-11b4dacf83cc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0e9ded-c873-40e5-925e-05dd2bc75711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee2b344-627f-499e-884e-64d7ef2aa836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867dbf2e-af0a-4fa9-8c7d-06357d166407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8464ee-3707-4e14-8471-3ff0f71e9753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea246a4-ba82-49a9-a817-05c20a1ae773",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2044077a-5d4e-4a6b-833c-a31a77a57258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb35c5c7-a793-4f16-8db6-fed05a6ff011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3986c51d-1b01-4c16-b7f2-03b49b61a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87a8ac1b-cea5-4ec9-bf19-5f1d61d5a7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d637a367-5d2a-42b8-9e32-8208a01b2077",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2161bae-4a18-4ccf-bff2-7b1816ec87f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177222aa-aa92-45dc-9e36-f163f375b7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efc0b67-2d0b-4e69-904e-56c2fd423986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb924519-3a97-4e38-854c-f10fbf141b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b92792-08ef-4a58-82cd-aac4fdabcf88",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb91c22-708c-41d8-9c30-9d6533cba5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50396e7-247b-4888-9ee4-f759d65d7ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44d609c-424e-4523-b0ae-7d0c56bc28c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5156c840-fd45-401a-a946-b1d964a9a89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bd5b34-9292-43bb-ba7c-4e0729944397",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b996734a-1a66-4333-9ae2-900c9f4579d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2838de-2dfc-4f60-b08b-73be6bf7ecb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ab155c-0a77-44c2-8632-3701a90409c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f333dc-22da-406f-8036-fcc84de224eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ba8e55-aea7-4af9-8bbd-b82299dc6c11",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c05214-b50b-4087-8f53-a8a6228fb0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed58201f-e63c-4327-b7ab-fda9f25e23fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018b7c5e-e26e-4f7a-932e-1e8442b9437b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7fda10-9097-4c4c-9b70-c70b5c0dbfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60c1e10-6171-49dd-b1b3-cb1078e018a5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9eda40c-f595-4335-984d-e928428ffe82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37bd968-183c-4696-865f-dee41971f5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6910d2b-826f-4301-82ef-f5d0c5ccb954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85c5a14-05e7-4c13-a0b4-b524744f2d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21ee6ae-8b3d-438d-b801-df1b558babb1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa6e9e7-4d2c-4761-a81f-efa35aa4df5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159f43b4-7186-4043-a7ef-46f8cd648678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adb4503-a5bd-45f1-9c06-1dd6cec5c1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b57038-869f-4d8f-8172-52a00c1a6bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0717204f-6f6d-4f2c-946e-7725ae03ce4a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9da05c-b636-4d15-a14e-f7fe7d74d70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde4b358-9ab8-4d6a-8c35-32a8d1821f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cc1456-7738-48c3-bbeb-5e56dfdb2558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf27f550-4347-47ce-88e2-9c2b95305b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f7a473-1886-4bff-bd52-35f241572cbb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21639f4-2468-488d-98f9-101f0de8db42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1041bf62-191e-4e67-9fa4-acd39c9a9feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f62c96e-1d71-422c-84b5-d9305a0a75e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8ef2f9-f223-4020-b357-bc549ca6571a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc231bcc-6024-4f6a-822b-7a3dbea23839",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cea4b5-1b7f-407a-bd9f-92f0d514cc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fe087f-c3b4-45d9-b00e-e6f095076e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a93a940-3802-4d7f-9c10-bb2ba5d0a56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d41a2311-87e2-46cc-b878-154d91d1e855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ccbf64-3e48-4687-ae03-f51812af3087",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c1afea-6651-44e6-9ae4-333046e16e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11c3393-0e99-4ccc-9a6e-1a58a55fde08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681309cf-abd4-4b78-a9ed-869382843844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "363fabb7-7bb3-41a0-8bfc-5a14df1646d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcad48c7-421a-4740-b48c-8602967dc3fe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858e4850-3ba5-4a88-a0e2-94c8f9f6e44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417b63c3-17e2-453a-b1b1-93760ed43291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2315d7a-0416-4f08-a53a-abfc165fee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3c04ae-605e-460f-95c5-87fb499a6587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84aad9f2-7c44-49e6-b42c-d4e1c9713c22",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72831f2a-6f49-46e5-803e-f80fb50bd6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79385aeb-b4bc-4317-8b9c-162757b17b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274382a7-611f-451f-9e31-30703e0ccc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "128707e6-3ea4-4c70-b58d-bb83a78f1a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0345e8-0b10-4803-a9c8-c6de4540e884",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92559d98-e0d7-429f-a2c6-6a249dc9ebab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fa48cc-77f7-428f-babc-a543769cdc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883569fc-8e9a-4d44-8f66-10b505822eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd55174-bbb3-456f-8483-c298b3e1aa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5069fae-a8a2-40ef-af65-d56171b5e655",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beae54a-341c-4918-9e25-298ea9ba0bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4600fe8-a074-47a7-bc9e-4341eeb65308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840e2a92-a0f0-4591-a3c8-f38b4cdc95c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66027470-1023-48a4-b5f5-4b2b4a5ba8b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2bb8f1b5-6874-428d-9cb9-bb22a5f344ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "668797db-695b-48f2-8109-75a8e83384c1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded80d22-f533-4a4a-93d6-3488b5510ca2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "de96fd0a-8588-4762-beea-de07c43e0307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a4fe2d-63ab-4fb9-bbbd-381993bbf572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a455de8-84de-49d6-ac9f-f612d14036eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45e74e5-0360-43be-94af-ede198471271",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868742a8-4fdd-4d31-85ef-9996264a9318",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce83ee8c-a4ae-43f4-a986-8ca46ade4d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731d93fa-af3b-40b0-8274-7d9e8f3fd73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b11f06f5-0f33-4d9b-ba39-78987289003d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd0f2b11-4c30-4317-9939-cc967fabaf00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c26ba89-4383-4ca9-b037-80692f5d8c49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c5501f6-a39f-42be-8d54-fd22cba0ea61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e27e5957-6154-4c92-8a04-2e2ff2063198"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79b242ea-21cb-46d4-a7f9-9165a597801f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e69cf8b-96e6-493e-92f5-69f374c87631"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d93eddc-9a3d-4ad5-9dfb-07a9fce0f2d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5dd0ac8a-37be-4853-9f5e-3b035dcfa509"
            }
          }
        ]
      },
      {
        "id": "53f979ac-047f-44b2-9db9-bffd94848dd5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5b0d11c7-5fcc-45fb-971d-a81bd3a19e6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3557d9c5-3a79-4a6b-ade9-70980d19332c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53328b6b-ebe7-4f6b-9516-d74050406d79",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa1f339-1fce-4c50-9236-8088ede7593e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a1b77e-44ab-4000-b056-2a82781f008d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95764d46-7fd3-4bc2-a068-11412af6f835",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a94a2ed-97bf-4ceb-98c7-be5be0f55fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c07335a-0bc8-43ba-9076-fd139a346f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc06449-5d5f-4cd9-898b-62aee86b187c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5aae80b-a9a2-4943-9350-8f70d0c1c4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22fb80fb-3e6d-4d00-8dfa-cf64f042721a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb45518-88e4-4e69-8b48-462de8946a2c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9797eb-4789-4ded-bac8-5549ff3f9471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02348fa-7bee-4162-9817-1528f4055784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab52b167-f3c3-4603-9fe5-2381e796e452",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a38d04b-1d30-4f05-8ada-1c3ebcda7ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e23b9e-8d2c-4312-bab9-1b142f6c0648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04d1428-1c26-454d-ac57-57b13e923724",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7dc80e7-59ce-479c-b560-90faaed0c67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff58fd89-6cd8-4b72-8777-8fe244666054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542812ef-a5f4-455a-9c12-06c2fff91d2a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac4f450-da40-44e7-b054-5af984acd0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cbbde3e-4596-4e95-b137-f630aa2ea27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be13765e-4da8-44cf-ae09-08f81a060156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138f6f76-4957-45b2-b785-1c23b907ad28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd246bf-0132-44b5-b5e8-e084e09d6889",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17067374-ac72-400c-8613-d06f14199d28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9ced78-066b-4d71-b579-ca6a1e1f43eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f9e564-20df-40c8-9b83-fd17a28cdf02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054b77a8-aff4-427f-bbbc-5e7bb47f2e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1550a2b-9639-4944-b8b9-8f5f12284a48",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfa2347-19b7-4a4c-a250-aba8660a207a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93eb0b95-93bd-41e4-abf3-b0208ace4680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c19722-546c-41c7-983a-565fad836ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54f0f37-8ec0-4623-9e90-0470fdb2b283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d26d89-a3e0-4224-bae7-78d6ad173a8f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71b6850-aedc-4cb3-b3f3-ec50aece8393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5a62dd1-d920-4cc1-9a87-7da843cd7d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e741b04c-3136-44aa-8ef4-f2aa54511652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e5fd79-e054-45f0-bceb-14558cd6b25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c9747b-e3f6-45d1-ac1b-89631d4ee920",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a880a01-7437-4c93-a7a7-37d460583d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df9c767-e13f-478b-84ab-f74241b33de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1c0a60-6085-4eed-a47a-94a840fc6fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc9de12-657f-4fec-baab-7f3df0bfc222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb89563-76e4-4633-8d69-eb7322b3c422",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897cbb38-ca31-4286-b05e-c7c45ad77dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c59862-cff9-4261-b470-cbb06d92e03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e46fea0-12c5-4a33-8f92-3032e6ecee5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97438860-eb1a-4fe0-af9a-feac88271625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf7c1e7-62b1-448a-9dd3-8b256203dabe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d206b3d-7184-4ad4-9685-3653fe142c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbfb655-c6b5-446a-b261-428d79dd729a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b40601-ca32-45d4-ad05-21b183a0223d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15d0b9b-6253-4af5-bf37-acbde7111c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da02b633-3847-4f3d-9547-ca67f41553e8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39962e32-bc8e-4ad0-8a78-5a18f7834196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "430ef574-e3dc-4960-9e3e-50634cccea21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41f9ccd-a49c-464e-93f0-f253668fb421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f7b964-9724-42f7-8127-1a59f82039a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3ab7ab-4ade-4bc2-b493-40216fa7fdbc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f08b17-65df-4727-9dda-9c6f077903b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551326a0-47b0-435b-aac3-7a1a17e840db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2489b2f8-5b01-41ca-b75e-23b0061ea9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8474b347-0d03-4ff4-987e-8f10699209dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff832575-8a49-478b-b9f6-31b4b05f5c02",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d470341-ebb2-4ffc-981e-7617f9bc4eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9edaa30-567c-461d-8056-a73ea31c2c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebff42d7-a272-4223-ba6f-95b3f386545f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d4393e-e4c0-4c3f-ab9f-72b4bc7c12e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba160275-d267-49f8-98cb-ecbcf14e5e3b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1db7d9-c318-4382-8169-da6b7b04d0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5593447-84c3-4e92-b42d-b0e31ff212ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e746f628-cf62-4ffe-9211-e0983467db05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e488f3cb-aab0-4d4b-b641-b7a8c8c1b5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5feec7f-89f1-4331-ac99-1d0d282f9bc0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4097ed4c-c7c1-49f2-9af2-45c023f41d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fbc8eb-e71e-4e43-abf6-943bd4ba7a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d7c140-4eac-453e-98d2-d5e52487c87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0273a2-d165-4495-a305-8bcac2beaa07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5352a22e-84d9-41ab-8c86-a1d8476c0b0a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82697f0-996a-46b2-87fc-bf18b18bb9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3d4611-763b-44ea-b8ad-75c444ff2156"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48be6656-6e60-4fc8-b193-376163b9e9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5f3fbf-a9b2-4ad3-8004-35d00c5ae3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c410f82-d7e4-433a-900b-74bb68068f84",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb8c2b6-9f5b-4b40-beb6-136a54514d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21c2780-0ccc-4b28-bc2d-44bbf1aa661d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba37ad6-aa07-4242-925f-9a0aa20a1110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16fe25c-b4a5-455d-aefe-7592e3ad1593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e34631e-b251-44b1-a76c-84a13d603587",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4ada2d-ebf7-4465-8713-ff0fb7bb3e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db6e860-e50f-4d71-8c28-e87971eb3710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "679b4f0b-62d2-4016-9f60-d1e96d0e67ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf48fec-7154-438b-ad07-4cefb690578d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c19bf65-4c33-44d4-ac79-6da5fcb84e0c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81151644-68dd-4bf3-81f4-1cd874fdfdbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5b645e-8fa6-42c1-8c91-cb6660b6915c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47f5371-9d85-4707-89d5-ebd32bfa5316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287a8083-a7e6-4901-8da2-9083b85a2957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4303eb1c-ea85-4d47-824e-86d66b7681d5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96611919-e395-4e00-ba5c-cab656552b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3f779d-b0af-4609-9846-dac7b5e25a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ef1d53-166f-4a85-8836-cafb492107bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3a55e0-0f12-4559-bc4a-41f258dc6d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dceacad8-f816-4ad3-b0dd-5a97fac3ce33",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e2c6f2-994e-4c01-8366-d9f8e40fd55a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b83adba-a2ae-47d4-bf12-cb1a5b09e4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbf5533-1b8f-47aa-96cf-2bbf62ce13cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851f62e5-4591-488a-8e72-11d3d6af2c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba78e2eb-284f-4550-b5cb-148886e9c9e0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01287b2-81fd-4f34-b533-579eeb6869b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b833562e-3fc2-4697-8c03-53745cc9e653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60599ad-f1d3-472e-a1fc-88dec58bd28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d15e184-6cba-45d5-91f1-cf4a3b2da0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4438b20-6c70-44f6-85f9-989d27b7bb3c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5550425-6809-4d9b-ba8d-1b6291384b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e342aae1-6a86-484e-90d1-d276c1d8f4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca127bc-ea91-4875-85d4-eb3d526205c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b4b280-fa9a-4cfb-b7bd-94a4bf5fb6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b1d050-a4d4-4661-9d92-8255db52d232",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c92502-a6ea-47b2-ae7e-e9db45c4c4d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2aceaa-456f-4b46-ac51-956c1b1dfb6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e026f26b-650c-48cd-a0db-7cb653623e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e62f7a0-9216-49aa-8d88-eb87ca6b7f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cbef1c-cd7d-4be1-8aa4-d868cac5e120",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68360f6-90bb-46f0-b443-af1caf652a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e8efad-ec2c-481b-be26-a692e551187d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763f611f-c987-4d7f-b55e-2a8714264cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893ce590-393a-46e8-933f-fd4f8cb33f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8574aa7-ab72-4982-a494-ab2880fe23fe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8f1c91-3418-4e79-8393-63edf7be7fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f23661-0e43-4be8-bbe6-0525a1145993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fefb174-9595-4ba3-90a7-e5101a1fcad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad6b259-cc73-471d-a942-1035e40cf5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7457b8-6f73-4132-88b3-b8a4750eb925",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b09c43-ee79-4ee7-bf51-15d23de0c37e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2ca9d3-5648-4ab2-829e-12e750757cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98959625-97dd-4e8a-8fff-f83d09b98496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e8758a-c3e5-46f1-bc81-07e337380d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100b8792-30f5-4326-a932-0efd7d7974c9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229cc715-3df1-48ff-8431-83361f1ea98e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba4f362a-3ef6-4391-ab3e-1c83e6a851a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fe6173-b624-424d-b9f3-ed3539c76a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b83dc2-7f84-45fc-ab64-b24a172f9c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4d8b0f-bb7e-442c-ba3f-6d082f84ea6d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a24ab4c-f6b0-4624-beee-fb1cb7fd6371",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d7d82b-87b5-4869-b111-d3a39941b105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5307b5-ead1-4a26-92c8-c228ba0b23ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f9bb63-ef25-45e8-a10b-a51bd0d73c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba6df4f-9a06-4f27-ac2d-edeededdb89e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea406672-d337-498f-867d-66354d8cde0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d6dbe5-07a7-45e6-898b-d8ec46d5cce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916ffd9c-a788-40f8-8751-801de6dce94b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f634c7-260c-4a0c-804f-c6e2d52a76c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6adf2599-aa12-418d-b583-9766c49b943e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2a5359-7175-4d9d-a79d-22f1a513fae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b3df989-6deb-4ab4-a1aa-278742a38aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652f8ea0-34bd-4499-babf-95baf075909c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0720e220-955f-4d67-84d9-bdf371da2101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc4c80e-23f5-47af-9cca-39e5d4ed8698",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3108f1-242d-47d8-a21d-3e39bd697830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47901de-10aa-4b04-a693-3fdaa90e1c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1da2d3-7164-4edc-ace4-29bbcbbffe8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5bffa40-6db5-409d-aace-42928ac0775f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f766f9-6f89-465d-93c2-e0be59b7c362",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbafe2a-a36a-4ad2-b1eb-0283d9e24dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8204a6f-9096-4483-af67-430790c2f1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50810c19-ff8c-4095-9031-a3270454814d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ce9e5b-6661-46fc-aab3-be38946597a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35955dad-698c-42db-8a4e-4ec147b8fd21",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fe7209-002f-4c80-a64e-aaf5ac74dbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae1b083-5f05-4694-a598-a93290e2e205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c784f5f1-1044-4696-8b55-b548cbc4cb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b8e93d-7797-4458-97df-c3708f8fbcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2823aa-df48-441e-9d4c-1b4752cca6f5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db58e53-5f95-4c53-8edd-02bcf6751b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61d8f08-8141-48fd-85f0-a608169304e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f313f94-496a-495f-a4f4-194653c80e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1477c176-e5ce-4f08-acc1-07f4660d0918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b9ceb6-9c60-4c09-9f42-25ba22852390",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4471a218-8d05-44c4-a3eb-0d22de4678fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75beba66-31a3-4dea-811b-3d027c7f092f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38425bc2-10ed-4c05-9c1b-d890ccbc4e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc1e307-60ed-4f56-a196-ad7c686fc4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7e7586-aff6-48c8-909b-41da52a596b7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9c136a-6f93-4ad2-a378-45000e5cab1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfa9b7e-9bbc-4480-a769-429335d62159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f1600e-145e-4cf6-a8e5-24d8512d1a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d314c11-2c1d-4dc8-84b2-08d255b6f0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acb026a-892e-4144-8b94-a5c01c20afb8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84906a1-ef68-4b55-85f9-e26bbc109c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424c37dd-87e0-4e42-a339-6a380bab8677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f648a4d9-1a9c-4d63-926e-708f09b74822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc64b0e-0d5d-46b4-856c-5b453fc0de0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1674da-6196-4892-a623-53470c424cda",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a67041-f06a-479b-b0de-8ac30d9952a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ee860f-809f-4cbb-adf9-c194144dd7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5557ee03-51ad-472f-a130-b326f3d92e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7df481-54b2-4a52-b76b-58b27b88febe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2de218b-2722-4f67-80e7-02035457453d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95eebe15-23a9-4f26-949e-dde48abf101a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a067254-5804-463f-93cb-e46605721433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b07f7b0-4b22-441c-9e51-1811f766e5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c20f783-cbf8-4b53-a6dd-86bf6d02eb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d13cf5-b990-4ed9-a90b-10fa61859287",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0576d4-11c1-40e9-bb77-76e901b2ec42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74665db9-ce58-4dbf-895a-8982e39f6641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96c998b-fa31-4b71-a0c6-89843ba5930b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355de53e-06b6-4ca3-9c2e-4f06551a577b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be00de6-743a-45e5-9a3d-4226bb25f46e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326923b2-8040-44c2-9dd9-4b5e9e49d35c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01bd824-f074-4936-bee7-186b3c8963d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62effe28-ea95-4f0e-bb93-902d3d36fbc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8957852-4a9f-46e3-b1f4-0d6dadc428b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fd6f45-18be-44e1-abc6-00fbb62e3af5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349f3ddc-186f-4a1b-b8be-492f1228e1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e2d0dc-525a-4b2d-a252-db67c4e5aaf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f37ac0-eb61-433b-a4b4-3a16660aed8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f723a7c-aef7-451c-b765-33d8798f4356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0365719a-f5b7-4471-b406-82a6ff329fdb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56694333-e999-4586-b686-8b324f1abf25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7680af-638d-430a-af8d-fe15a7e3dceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da6c423-9a12-445a-a7bc-80106d44884a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f877fc-e125-41b5-97ba-fafe17b0a714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787d4894-94c4-48e3-bf90-b7bd1641bf9a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104cf4f2-5509-450c-b2ac-3b5b957f2234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a514d0f2-8ac1-4c4d-ac49-2e0eaa807f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec4403f-de68-41eb-8778-8f62bfdd7ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5c998d-1907-49b0-a0a5-252b4d0c6c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd1d5e6-ff38-4ae3-ac0a-41c3dae069c0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fd74dc-6d82-4574-881e-356a023cd060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a018d9e4-e28c-4b45-b3de-8da236aee63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecf62b5-89d4-4aca-89b2-011554666606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae4209d-6e07-43da-a624-f987410068bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3d4a4b-a02c-4182-b8ee-be690ce53fae",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaed3717-f497-4596-93cc-d04bcc982b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbcdfc9-ade7-4802-ad63-7d538be46fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11d4be0-28bb-4f51-99aa-2ea7afb291ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08740bc9-d90d-4d30-a08b-02f2df9eec92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d399fa-a108-492c-a641-648984a25034",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37597b2-8b74-459d-8439-b2ed2cc2fc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb498bd-d78c-4a64-83cf-8c5499df8bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252740d3-44af-4fe3-9473-abd1dd955aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b75d2df-b60c-460a-b4b5-5bfb71454e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40bcfbc-de87-4182-a1e0-5c16e7ad89b2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d205cb-e736-4dfa-b53a-47a8f76e34dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb67aced-8c79-4978-8c65-c6a6005ea383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db43456e-1738-42cb-998f-0a3644f0916b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56300dc-8fde-4055-ab75-dd4fff8cf1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3782800b-4333-44d0-9cc1-2ad3c6373ff1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dfb21d-f6c1-40f4-8e37-bfd41f5ec40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adefdabf-f013-4568-b345-fd78614ae2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9ea932-b519-4a92-90bb-473a60c6473e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac2dcdf-8450-42e7-be54-e8a5853ffb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f2ace2-7a58-42cb-a79d-a43ba4b48bff",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017e0664-7d1b-4f3d-b347-6941755b77b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de53441b-0795-43bf-bb8f-48e093314bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410cf549-d1a0-4408-b15d-042486857363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb2ae69-d97e-4811-a3c7-2ea704c6a19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5059e366-4233-4a39-b593-f3988516ae7e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2313ffe2-9153-4fa3-b615-d2451fc59521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd512fd-1c27-410a-be02-5c30f5adb058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011ad91f-0c62-4e12-80ed-53679a6184f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a94ac3-52fc-4a67-b809-e36eb183b2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560fdf6e-1b5a-49e9-929f-fb3f4d298551",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48d2ef1-0c48-41e2-9227-7831f088966c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6730e5b3-d074-4a9b-86b0-60c8cfc35d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408646e5-c6ac-4687-acc2-2befae0d84b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580cfa21-f547-4a2a-83f3-98fff8e8c7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9387f7-97d5-45f4-9310-844c9237fa86",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c08e7cc-6092-4c80-be4e-1c854dacbd09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bbb474-2c39-4de0-9842-085faf014f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a44ae5-f2cb-4e7b-a39e-27c60ede02e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2bbb36-34ec-431b-beb9-dccc519974d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037e230a-1a6a-44ec-96e3-659e58d8f25d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5bb81c-feec-4d05-a914-2a05f17e33c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70578cdf-f95b-4eff-b751-904e2e122267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc68da9-6966-48c5-b8d0-c13331474509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7217921f-94ac-4904-95f3-131bdda02695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7dd7c6-55cb-436a-91a9-f2fc95d2f5af",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2217d9dc-9e95-4702-aade-30da99bcf59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d2b8459-3495-4418-a194-d8f2d6270eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93008fb1-5115-4361-921b-a84c9b7b415f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb5bb66-a403-4113-87b7-c6e157ef383d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5d135f-d125-4ce4-97d6-23abebd87c28",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea05068b-2e60-4b5d-95c9-99cfeba84a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aff8c14-46de-4fff-af92-59241c832e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c02c1d-9c85-4151-8b0c-28a832345d5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89492776-4e78-44a2-a904-7483625d595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98122fa4-db03-4652-9072-cbb68a3f992c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600b29c3-ebd0-4406-bd54-fe7779d8c362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc8a713-c728-4eaf-8bf2-44d30a85a2fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c341ecd2-8672-419e-8ab7-d1ad295a7d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afa38fe-1870-4943-b491-8fa10413858e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee5b346b-91cf-4adf-be35-c16e3cbbd8b5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282c5fb6-c114-4f2b-8e7b-8a564234eb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab027f69-378d-439f-87f6-65d7e0a2c65c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c6e610-5364-4e5b-93f1-43ac396b4c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d483104c-0b7a-4c76-b9ea-d76c9fa3dc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfe109c-3dd0-4173-97c3-dd56836c8440",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97f2771-3245-45bc-8b20-36d193d8f0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e712c005-c63d-4be6-8fc1-45190be0e58a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4c0ea4-667c-4e5b-9508-48f495b636ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8fd790-6ed5-4d9f-8621-bbb04b82e6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154a0fb1-7415-4531-99df-726e2cb2b99b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70377a8-54cc-4c4a-ac6b-37a1887d8c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2abada1e-d4e0-4d75-9778-463eb4cddd81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44787741-395d-40ca-b6e0-b7bc3aca0055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c355056-d593-4840-a48d-44577c965e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0d48af-afdc-4a4f-aea4-8f798b0db33a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf762df-bc7c-4bd2-a911-ecae140d2f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b95fa1a-75c6-41f8-8554-25108ef491c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfab698-e52d-4d93-b0ad-063ef40e777c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e46c20f-9fcc-4a0b-b161-2fc5588cadaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d350479e-0019-4d9a-bc8d-83af78804076",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bfb6d7-1ddd-4766-a230-c26fba4e35ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d7262f2-86cd-4654-8029-81c202b34586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284d2b60-9920-479a-a35d-5e54cbedf5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5d713c-4653-45b2-b968-576a37128d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc80f25-6703-450b-ba9d-e9349d1c1cbe",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11768c1-49c6-43f5-821b-b0b563f56512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba71aa3-f495-4a15-842b-f1b426cc4c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8fc367-2f1e-46b7-a745-fed1560700e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c24f510-77f9-4164-b4be-20a82b209759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796910ce-28ea-4af6-96cc-5dc831a43e8f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af850d8b-c485-44de-bece-634aa830ce7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5df1748-d47b-46ae-8ce0-a08ef4fdcc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15625896-dd6e-4fcb-88e4-f9fd07ed76d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb570b35-bac1-40a5-b7df-da747fe5fb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab42effe-f3d4-4aea-9401-5f82427b4a48",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c9812b-41d4-4e9b-ad76-f7c2827ff35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c2a9a61-82c0-4172-a1e2-77586c35eb9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0580f8-f6d4-46a3-aac1-7b4193eba330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71ba224-d0d8-450f-acb2-99b563b64d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3da1339-bfab-4d63-9d68-f43879157df0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71be647-36e6-4975-9dbf-c32d481222f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27ef0452-c85b-45d6-9b3b-d4e7bc7768ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b0c01c-3547-4a37-85a9-a0dcf4a39376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a029b6-f41e-4fda-ae90-9ce5f03f3fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27ea56a-d48a-4118-8862-bc298b421726",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc5e703-547a-410c-b211-11d5c50ea1a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c8979e-54cf-4308-9166-92df65c93b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7d79d0-1cc5-471a-8a23-421d1adf3364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05cf8f2-0ed4-4ae0-9c6a-105d89875cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a54ff0c-ab7c-45be-93b3-bf2698ac5ede",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184d08b4-6350-4333-bf15-900e6b7e95d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6abf162-6537-4151-9af1-957394e9f5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8907f2c-f241-46ed-a608-dd82a801b2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcff3e1-866b-4a31-8c42-e48337598c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3db4a49-a449-4574-abda-1d9c6cc84621",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3898a64c-dff0-4d4e-91ff-1260a5e0805e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a2e0af1-769c-45ae-90e8-5be2b174e0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3919f2ff-6ff0-4b40-afac-fca9ed428e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516e450c-c720-4cbb-8e94-e413eeebb98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d51f76-4a93-4481-9529-76cf1b60233d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f74f61-d174-466b-b5d0-f7e9a42ced82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a3fdd6-5d39-416c-b2f3-53f1caf24f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8329ae-f20c-41c4-b106-f2b3c6b20a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4070a175-3de0-4f26-acfc-baf00b6b374d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07e67f6-1af3-4114-a23f-1fdf390eddbf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cbd26a-d07a-4560-b4fa-d460d7f5ea3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601b75d3-2196-4ada-adb6-9a2456d5b571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6fdadb-4ddd-43c4-97ca-6aa6917e2913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b4c470-eff9-4257-ae1d-bb00ac615444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284400ca-656b-4117-afab-c33dc12b879b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a311ef-a727-4831-a396-5d158a73afba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53851cc4-8de1-4c5b-9ab4-a05e6cef5c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1519f254-7331-4136-ba55-fa34da913ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d66939-c316-4b77-abd8-c114e4eff966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59995df-a360-4af4-9c8b-df9a0b9b7326",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a215a03-ba66-4022-9146-c343631a23e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eede389c-e0de-4ce9-9960-2a8af907d171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d487cd3a-c6c8-4965-8cfc-6ee5e9f4fe6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c934d1a7-d60f-480e-91e2-0dbc8d9890a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10759e0e-60f2-497c-a831-821c340ab35b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66d82d5-d36a-4dc8-86b6-d86adf7a4ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a81d411b-e8d6-4a91-bbeb-51e3e8d603e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5afbc9-95c8-47a9-9f0b-fdff91d2cc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5cb218-cefc-4a64-8edb-7535f0a77181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1beecae5-0e11-441f-b07e-1174f205beac",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad338dc1-a605-4ff2-b9b3-d677172a882a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51cd7576-b31b-401f-b607-536b529d6027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8807562-c54e-48f3-ae5a-ce05dfbf8245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce344015-3b1d-4857-aac7-5ef5bea99981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8cde44-9ce4-4454-89b3-fcaf512934f4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3488a92-98b8-45cc-a5b8-420ce94b5356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e79983a-326b-41bd-b099-1948715c4502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8682237-2dec-4310-968a-f44a435b112b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81839fc1-269c-4163-8359-373eddc39a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebca049-67fd-4a82-aea2-b3e0a242f4a4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085cb264-909f-48de-b922-c3325fc25af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e8e25c-746e-455c-8671-75b9a1795a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd4d48f-1e46-4885-bf02-4ba8663c0edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cafe052f-d3fc-4b6e-b098-3b88615354b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75385147-73e6-4bf6-abeb-d5a8155207c5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535a966b-bed4-4bb1-8312-8ad655c454ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72c3fe15-94bf-4feb-b1be-5c4b9752087d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f9a7c8-a3fc-4024-8fd0-f2dd14c15f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48e3fe9-7b44-48b5-b1bc-fd39580ba482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3df1d8-846a-4e68-babd-9ee796b16b84",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d445979-3a78-438e-8d7a-610ff3c368a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55691059-cafe-4139-91ec-b38b40665720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d818ba2-9d06-46fa-be54-ad4ccdb1ecb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca8ba4f-5d6a-44bb-b698-9e432c9223f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a599f788-acfb-4796-88bf-590fab0cc6e0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42aaaf62-c852-4556-9a52-5691358bc0f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e3a10f-b49f-4a2c-8e50-fb978b009837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972644c1-740b-485d-9dd2-4e706ff69269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223eef27-3892-4338-b3c1-3142f9a541c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5365e442-1144-49f5-88c5-83aea4d9c907",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3405eb-8a14-41f9-ac97-6b3315d71618",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81278692-d6a1-468e-b27b-c0c6e26a9336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718f3245-5d13-4fe8-80a8-ed4ef0122e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d185f565-4e87-4e36-8c9e-501b7b201c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071f0285-30e6-45c2-abfa-62ab7e516eaf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380f0361-f671-4631-a558-c7e9ac80221a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdbf953e-b0cc-45ef-a0b6-68c4a7bbbc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee4a1b1-7e79-4b2c-9cae-fbbe4cbd2836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a4db4e-2568-48ec-8b46-2f8507bdfb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8e3939-1365-4298-b90b-deb253b2b95d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ab529a-be3c-4aa3-b850-65953f5a0bb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad92d2a6-bfbc-4e80-a096-7abfceaec598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153e76ef-bb05-44cb-819d-2ce29e801d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61933dd4-8f14-4c7a-b06a-3a449316045e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c5e4e7-6193-4a01-9927-a988f33dbfd8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87345161-8a37-4d76-a062-a930ae62a975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7fcdd52-a5cf-4289-89dd-89b7a731b885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211cdd29-40f0-441b-8861-d8819e62338e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cb7805-0003-4d3f-ada2-0a33fdd2544a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f292b8a6-9ef6-4d3a-81de-44d5ba00d929",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4181b7-5fae-41d9-85bc-5fff7f8d98ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c87dfef-7c0c-435d-af48-a2a3362e0866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1520bd-4948-4118-81a9-9fcf280ea2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dab4464-549e-4b57-a3f7-1220913f74fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9523c01-9505-430b-b3fa-108977d60108",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988feeda-022b-4aba-a53a-b8fd242a803c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f0372d0-67cb-4094-8c1b-181a6b00cc80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deddec6c-d70f-496a-94fe-28d6804b6f98",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2805de68-2aae-4b0b-8a54-a445f3a20d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e661ff7-e6e3-4dd7-ac39-688027ad0714",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a72e32a-1237-4ced-bbf7-b40790b448a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2212625-4c2f-4d73-a828-f1790ef385a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a331a0-c7e4-40ef-b253-3a9c50e3e818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271b31e8-412a-4942-8e9c-aa2b4bd614d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76911db0-9681-4298-8e08-5821f9dea591",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5f3fcb-eebd-45ca-8458-09edc5b4b53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ea7cb3-82a1-432e-8f96-8f87f4c58a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10743628-9956-4c5d-bf23-68ae3c36fe28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc201a34-8065-4c7f-b1e9-1623c91c0399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7a3c44-f6f8-47c2-9518-a01f1e39bc08",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68573e86-6b30-4532-9b75-7e8316126c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a57463c-be61-420d-b210-6ab0ef26000f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8644b71f-b137-4a9c-a280-2fd06057c478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a9a55c-182b-43b8-aa60-dc1c897f8eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d382455-17e5-42e5-bdfc-0f1e31cabc8f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ae349c-2e82-4ff1-9564-0fdf8c2be2d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f463296-3dbb-4c8f-bbc0-9c480735bdb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c419007d-203f-4e2b-8b2e-35bea4bf6081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d477415-e239-4cb9-b076-4d15ad323883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd8679c-f069-4b2f-a448-389726a0373b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cd2fca-147a-4016-9010-468cee1c0c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66670f2f-6178-4288-9c9d-ca188fd161b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e254fa97-e115-4f99-a1d9-4c1646ba9e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02d1dcd-259e-4924-abf2-403dba6102cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0963ccc1-1873-465c-af9b-ae7cba8520b0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6678c574-c9da-46d1-8b39-f9bc92d286d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8624887-cd1c-4902-becb-1dd0cb82fc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10962635-952d-410b-af16-9b77914dcb1c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5798c074-c6ac-43fb-aba8-4e241ca42af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9ef3ce-a7c0-4191-b640-5eda539c80a6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb91a44f-3578-4b69-8ecb-f1fe57b0acfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d66adc5b-cf5b-433c-9e1b-81a808b7d55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf2d041-24df-4155-a923-9ba387b7f6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8661be-0b09-4be9-8abb-b5cdb86d1ed5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feec0897-9337-4ba0-b7f7-02b1bd2610ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08f9d751-a1c6-42d8-bf7d-05aae52c0a13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f25868d6-85e7-40fe-98da-19c87e675acd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f8823a8-beae-42f2-b244-d3c8a3a82156"
                    }
                  }
                ]
              },
              {
                "id": "7ecec926-4b5c-4663-938a-dbb653d4b738",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9d844ab-17a3-4fca-90ea-d23f9b7ad98b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da461977-dc11-4331-9a9b-cf3221919ead",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e67fda29-57b3-42fd-b780-e65a81d7f35c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaee971-94b8-49cd-8fcc-a90190b3d1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "799bc39f-715c-46ca-9064-e6549623c3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0138abba-451d-4924-88a5-d2d7b02e682b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0e8329-04bf-4e46-b848-62d2225e8bdc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "03a6963f-67ac-4443-b903-6d4a212c64ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eb9d03-933d-4ee6-9d6e-db6a584c33fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "404eb9a3-32ff-4d4f-b11a-57151fff1904"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2471cbf-87a8-497b-b008-4f8479ba4541",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "def7435d-607a-4d86-84da-482fb7ca364f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c317185-24e8-4c18-9fcb-522b33c3e56b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f239cba4-5ceb-429c-84b4-af32a7a92333"
                    }
                  }
                ]
              },
              {
                "id": "aea11470-c979-42ef-b90d-1fa04443e225",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1226f397-d9d1-40a9-95e1-0533f0321079",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77edbf9c-4ad2-4c1f-a559-05a934c9e2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c965d6ef-3e81-49c2-8a89-384e86aa1b8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0dc879-23fd-461e-b2dd-fa59558ea184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6096a950-83d9-4edd-a62b-d5e247528f4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4d57da70-e039-41da-9108-0cb9672fa6ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3557cbcb-707a-4abc-8695-a652962a2f87",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bea8c24-1341-4ed5-902c-fc1ed3018ece",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3bdd1aaf-24b3-4454-9b0c-36308aea5e54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f678571b-10a6-4602-a5ee-e83ce6e3ddad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68973f72-8eb3-41c3-9cba-8ccc02d2ea65"
                    }
                  }
                ]
              },
              {
                "id": "49970f22-1e2b-4d34-9d62-3ce19fa07578",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cad67be-c325-481b-ae60-b2396bc24d3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8fcebafa-d01b-4690-865b-ae3603e29a29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "923a69a3-2fc0-4c97-87f9-7b98af2e6c44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db1fc91c-6df3-4a1a-9f22-8ffd1dbe7968"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c74d2c4-2172-47e1-a8a8-da3499c3f90b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "86d1ff42-cb11-4967-a9f4-4086a4aa2041"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24415742-b56b-4347-86ae-9616f40a0c20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f041fb00-9b86-4f4a-92ef-1eed0ecc7d75"
            }
          }
        ]
      },
      {
        "id": "1b10f455-925e-4f8e-8c84-256c12918c7c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9b0d030c-7852-4950-99a3-8967bef12c77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9bb6232e-7213-401d-97d0-9107a0d87bcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2442504-ec7a-470c-89a3-01204941ae7c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16d710f-1f72-4934-8d2f-84477c8c3bc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d580fc9-5d83-4989-8d62-e0af2322c78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23312b8a-620e-4c93-9d87-666b980c7ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e90ea73e-9cd2-4b7d-a863-62befcb2e1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5435ce20-0820-4083-80dd-3b4c6d5813ce",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114446b2-8b87-446f-8589-dff152de0c6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a440650a-d1b5-4e5b-a7ae-9ad0e0f5d53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c179727-e48f-4b7b-9c36-f499f758f2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19ec1b8e-c6e5-4f7f-b46b-ca36c0c452e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5ec6943-873f-4ca2-b43e-dfe12efca21c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e3f4c52-565e-466c-acd1-374721ee3659"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae49dff-71ad-42a0-9b8c-750ee5521454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5aeaa611-d289-4ab9-b4c1-202d4ca734ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "143832df-7546-4001-9dee-42efc93c2bfe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "845540f2-5233-4c39-83d3-bbb0cde7aabf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d37f138-bce5-4847-a9bb-879e44fb813f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "179795db-b76b-414e-9c2b-297c32ee8342"
            }
          }
        ]
      },
      {
        "id": "9642afbf-b54e-45dc-84a9-7b7aa2c37ed2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cf20aac0-c1e5-47c3-aaa5-d974bcd28449",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc20352a-97a1-44d6-aebf-59f8e165807a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7014cd33-5310-439c-a061-9e9d7f1d75f2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9690e53-32ce-4e7d-8fe0-fca5e1452521",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbd1dd88-642e-4dc0-83ea-4d2dac1d4ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d593a4c-ec93-43c5-b0fb-cd0e5df747ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70336ac7-cb8f-4a95-8851-6000507d3f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f1948a-e17a-4081-9d24-b4b4ccefdb68",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19918e5-0b62-4983-a797-631ff115eff0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "41eedfef-8e9a-4e45-998c-a5780f5d05d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1c5205-27ec-4767-9314-53f0529586e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7c4a8f4-c535-4a91-8714-a96a895c43e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "598cae04-3269-406e-ba64-ab7caf152ba1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bd1affd-276c-418f-8faf-77bb66deb0fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71706b2d-d552-4578-a166-87d2c455a0e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "767aacf3-c8be-4b3f-86bf-34c58d723d3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ef3a43e-35bf-4a37-8fff-0ffbb6f00e78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e5a578c1-d234-49de-a588-8eae43c7b0b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4422adc7-1a19-466d-adba-922d835b986f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0faeffcc-a8db-464b-a6ed-eb7eea023c6c"
            }
          }
        ]
      },
      {
        "id": "fe42e9d1-768c-4b7c-9904-cfe568f7da10",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e773684a-a616-46af-8aae-c0119fba6e8e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5078406b-784f-472b-b8ba-6a9dc4a0c916",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0f11214-9255-41a2-af03-b258574bb9e5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbec3ed4-3a2d-4e22-86bd-0cdc033c5e4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9b3e41f-12ec-49b6-a1d7-74c253142e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f1925-1abf-4daf-ad68-c318d8677773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6690f2dd-e22e-4f1b-a602-867980ae59f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921f6022-56ef-40df-8d9b-ae4f05b36357",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7b8ba7-51cc-47e2-abe3-3cad421e03bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7f70ac4d-3396-4242-ace3-b06bc1ec9d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05679642-b31b-4d0c-93ab-da46d56a01ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1daac6da-3047-48ff-afcc-ec647d832796"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dee3df3-61a2-49bf-8fe3-58bb3606796c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6ed0167-c52b-4b9e-b96a-af2bd5ac5ea5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e57b33c4-299f-4b89-8959-60e9bb159497",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b1459cf-74a3-48cc-a84e-b1332d6afcb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64b63a8a-98cf-4777-b748-c91ecf86c938",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "940cc664-0bab-44f6-aa4b-7f94a03c400a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6569a8a-3bcc-4e4d-8618-bc38ad368b4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6315eea-4ec7-486d-a5b2-9499d06d1dbf"
            }
          }
        ]
      },
      {
        "id": "d6812368-143b-48e7-9e5a-8406d55b82f6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a23f59ca-f2bf-49c4-8f85-5c8c961e8a5a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07582015-2204-4035-89cd-fdd615f3281e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "50d95c91-ebcf-48bb-80cb-77ceebe8877a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8c2469d-d903-48ae-bbb7-2bc3cfe8a7a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12ae328b-2d7d-4461-99f2-5177f0acf8da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 41.773076923076914,
      "responseMin": 21,
      "responseMax": 368,
      "responseSd": 44.84415799094866,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680223131969,
      "completed": 1680223153771
    },
    "executions": [
      {
        "id": "a9243d73-da56-4758-ba6c-bc4ec9f87571",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8fc819ce-2b60-49f8-b074-3b4baa18dba7",
          "httpRequestId": "db7ef046-c53c-4d94-a14c-b93fef9c11b2"
        },
        "item": {
          "id": "a9243d73-da56-4758-ba6c-bc4ec9f87571",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0fde16d4-670f-4974-b56f-c246e818f955",
          "status": "OK",
          "code": 200,
          "responseTime": 132,
          "responseSize": 0
        }
      },
      {
        "id": "51c6080b-3f1e-4372-bc39-48ce2c4df615",
        "cursor": {
          "ref": "a589222d-d378-45d6-a72c-0f9de770ce00",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ecb51f14-98e8-4e64-b4bd-608217931194"
        },
        "item": {
          "id": "51c6080b-3f1e-4372-bc39-48ce2c4df615",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "341ebddf-1332-4dd4-9c6a-5dd88e1b3e68",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "3f2a9b4a-68d0-4922-bfd5-6f3fa36df078",
        "cursor": {
          "ref": "f89e5669-1210-41fe-bc5b-5927518251d7",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6954377c-4a23-4ced-a897-efd81b4790d3"
        },
        "item": {
          "id": "3f2a9b4a-68d0-4922-bfd5-6f3fa36df078",
          "name": "did_json"
        },
        "response": {
          "id": "2f084305-0f06-4f0d-b5e4-fa05160d612c",
          "status": "OK",
          "code": 200,
          "responseTime": 136,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d660af-996c-4dbf-a33c-7e82c9c92514",
        "cursor": {
          "ref": "d209b24c-7466-4847-9eeb-58033d7d2a8a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "837cd93c-cc08-4ef0-af23-f66af27ff254"
        },
        "item": {
          "id": "e3d660af-996c-4dbf-a33c-7e82c9c92514",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c7c6d85-452b-428f-a8d3-1c101265d3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d660af-996c-4dbf-a33c-7e82c9c92514",
        "cursor": {
          "ref": "d209b24c-7466-4847-9eeb-58033d7d2a8a",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "837cd93c-cc08-4ef0-af23-f66af27ff254"
        },
        "item": {
          "id": "e3d660af-996c-4dbf-a33c-7e82c9c92514",
          "name": "did:invalid"
        },
        "response": {
          "id": "3c7c6d85-452b-428f-a8d3-1c101265d3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd23797a-a072-440b-b67c-8106258763a7",
        "cursor": {
          "ref": "261465f0-f79c-4bf6-b854-265f2b836d82",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "36ca5889-ebb5-4c46-8088-9bfdf4431482"
        },
        "item": {
          "id": "dd23797a-a072-440b-b67c-8106258763a7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ad97874b-d602-40d7-9094-07d0eedcdd28",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c838220-70c0-43f6-8220-17f37639e1d0",
        "cursor": {
          "ref": "1a6a9431-36ab-4b1f-8b96-ae8e0dfa543a",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e8062e2a-8c88-4f29-aaa1-43250b3697da"
        },
        "item": {
          "id": "5c838220-70c0-43f6-8220-17f37639e1d0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0f08a884-320e-48cb-9a48-16906bfa92df",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9235c6-c35f-4541-b9bb-471b9ea6898b",
        "cursor": {
          "ref": "61429cc6-3a57-49b9-8f86-534cb41e26d4",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c5bfecfa-e227-4fe3-af1d-7192365f7132"
        },
        "item": {
          "id": "2b9235c6-c35f-4541-b9bb-471b9ea6898b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e54f505a-6f3a-4c9d-864d-626c4662a138",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4050c876-797a-4bb4-b735-8f5832f610b5",
        "cursor": {
          "ref": "4ec06447-7f56-4b80-b0e1-6c1e8fcc8da5",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ef91d52-7090-439d-85db-e455fc24c860"
        },
        "item": {
          "id": "4050c876-797a-4bb4-b735-8f5832f610b5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "becd6c6b-c492-4f6a-9803-782923b8df15",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4050c876-797a-4bb4-b735-8f5832f610b5",
        "cursor": {
          "ref": "4ec06447-7f56-4b80-b0e1-6c1e8fcc8da5",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9ef91d52-7090-439d-85db-e455fc24c860"
        },
        "item": {
          "id": "4050c876-797a-4bb4-b735-8f5832f610b5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "becd6c6b-c492-4f6a-9803-782923b8df15",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8b327e-9034-4014-85d8-0b023ab75862",
        "cursor": {
          "ref": "c83572df-c5ee-44fa-a0df-345e1ef8fb4c",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "815c7627-0e7d-4e86-8f21-c9aa77ef92aa"
        },
        "item": {
          "id": "8e8b327e-9034-4014-85d8-0b023ab75862",
          "name": "identifiers"
        },
        "response": {
          "id": "ad369b6c-8df5-4297-b73d-4d71e75f517d",
          "status": "OK",
          "code": 200,
          "responseTime": 253,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b61247-d064-4967-b762-5991d9bc56f1",
        "cursor": {
          "ref": "5dcc4152-3dde-4fa0-9a27-c326f808b38e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0ed20ced-c4bc-46f9-b035-f1af9e36e251"
        },
        "item": {
          "id": "c7b61247-d064-4967-b762-5991d9bc56f1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0d9d54dd-baf1-4a0e-8747-2a5eb2385d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b61247-d064-4967-b762-5991d9bc56f1",
        "cursor": {
          "ref": "5dcc4152-3dde-4fa0-9a27-c326f808b38e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0ed20ced-c4bc-46f9-b035-f1af9e36e251"
        },
        "item": {
          "id": "c7b61247-d064-4967-b762-5991d9bc56f1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0d9d54dd-baf1-4a0e-8747-2a5eb2385d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04bd403-a914-4660-b6c0-5dc687229ab6",
        "cursor": {
          "ref": "66880907-6e93-4156-9cf4-06215a7f4560",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7ce3c887-b251-4195-8df8-d788da971077"
        },
        "item": {
          "id": "a04bd403-a914-4660-b6c0-5dc687229ab6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4b9dc8d7-fc78-439e-952c-ccdb0569b362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bebea5-943a-4267-a81b-17aaf2dc6340",
        "cursor": {
          "ref": "b361e67c-86f5-4317-bad7-00271f428e11",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2d6e0d68-8a8b-44a3-9890-0d4e8b8c8cf9"
        },
        "item": {
          "id": "04bebea5-943a-4267-a81b-17aaf2dc6340",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "413f80b2-e414-46bd-bd9c-c71f268f3f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9500c7-dc01-4700-91b6-3219d46f5f22",
        "cursor": {
          "ref": "f0c45bc2-6257-4811-b19d-4896a4db743c",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2085841d-351a-4f3f-99d1-8d9d294edb89"
        },
        "item": {
          "id": "7e9500c7-dc01-4700-91b6-3219d46f5f22",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "773f153a-b76b-4f90-9812-59de2e1b1c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949da7da-9e80-4f9f-b392-16559727fb4b",
        "cursor": {
          "ref": "80e0cc41-eaa2-4d5e-8501-93156d9f3af1",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cbbbfbda-fb54-4b39-8d73-9aa6649c0c13"
        },
        "item": {
          "id": "949da7da-9e80-4f9f-b392-16559727fb4b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7b08cd2e-bc11-451f-836f-659ae05cd63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0656c7a-ea64-41dc-8028-ec066051d5d6",
        "cursor": {
          "ref": "6e6c6bf5-f6ae-46f3-bc90-912621f208be",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0978447e-058d-4c1b-852a-97d341c4cbcc"
        },
        "item": {
          "id": "f0656c7a-ea64-41dc-8028-ec066051d5d6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "eb8b91c1-ff8b-4d07-b4eb-bfdb7d345330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c8089a-60e0-4b31-b310-aea7ee33b2d4",
        "cursor": {
          "ref": "c8210217-9ae1-46d8-85e8-7582f1155750",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3682aca1-baec-407b-8e65-c7daaad1b16b"
        },
        "item": {
          "id": "b4c8089a-60e0-4b31-b310-aea7ee33b2d4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "814b5e42-9ac3-4090-86b0-d104553531ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19c9fd4-0b83-49a6-9f43-879b368a636d",
        "cursor": {
          "ref": "5d2d1176-7c1d-4927-9ba4-26cbb6ee71e7",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3cb018e4-d5f4-4bb6-bd03-e0e4441c8ef2"
        },
        "item": {
          "id": "a19c9fd4-0b83-49a6-9f43-879b368a636d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d3e6a790-7b62-4823-aa7b-ebdb9ceed226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d22ec-2a42-43f8-a8aa-d3846089e8f3",
        "cursor": {
          "ref": "1d560904-8d6b-41c2-a17d-1e11be13d7af",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "373f473b-94e4-48fd-af4a-8ef0f7ba8e25"
        },
        "item": {
          "id": "7a7d22ec-2a42-43f8-a8aa-d3846089e8f3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "859064b9-520f-43fd-ad67-08d005a17c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed03c9f-402f-4bcb-aa38-f014d7ef262e",
        "cursor": {
          "ref": "7755d41c-e008-493d-917d-8c2e8ad6b129",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f145153a-7ef8-4a4f-93f0-0495c9aaeed8"
        },
        "item": {
          "id": "aed03c9f-402f-4bcb-aa38-f014d7ef262e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1ec3a80e-59f7-4903-bf88-5fb01125f5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37f514a-55f0-42ea-a352-37d59d68e54a",
        "cursor": {
          "ref": "081449c5-e810-4f84-9d04-f24cf36f9511",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6de0fa11-c341-46e6-ae16-0758b6d20847"
        },
        "item": {
          "id": "b37f514a-55f0-42ea-a352-37d59d68e54a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bc61c86c-ceae-4110-955b-543a5f34836c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1666247d-b942-4787-987f-3c9fcb6de03c",
        "cursor": {
          "ref": "543545f0-f831-436a-a4ab-99546aff7e04",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "39d0aea7-5f35-4d14-b14b-f747296095fe"
        },
        "item": {
          "id": "1666247d-b942-4787-987f-3c9fcb6de03c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "32e967dd-2278-4b5f-a931-10766ac50b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfd5b22-50b3-4db7-8b33-a287954e319d",
        "cursor": {
          "ref": "97935f4d-4768-47b5-ac56-178698753a08",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "48e72b43-a8a2-43eb-93a6-b3da4a7e2a5d"
        },
        "item": {
          "id": "ebfd5b22-50b3-4db7-8b33-a287954e319d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "890bd690-1b2c-4842-9a12-c48eadc96b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fcd856-0a46-4063-9afe-ccedce190954",
        "cursor": {
          "ref": "c9c8681a-41b6-474c-9acd-92526a02f475",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4f83d235-3093-4249-bbd9-1e6a8e0440e2"
        },
        "item": {
          "id": "93fcd856-0a46-4063-9afe-ccedce190954",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b8bca8b8-16c2-43dd-b9fd-5733e33b4b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e813f3d-ddd3-41b0-aa59-5472b6d01bc7",
        "cursor": {
          "ref": "e08068da-ab1a-48d7-95d9-e2ed1659f0f1",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "18177776-d9c0-4372-84a9-416dcc5aaf4c"
        },
        "item": {
          "id": "7e813f3d-ddd3-41b0-aa59-5472b6d01bc7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0a531efc-a62e-4e09-907f-a79865487860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf0ac25-13de-4fb8-ae26-39f2823e1699",
        "cursor": {
          "ref": "c52341fd-4005-4708-bd08-8015973f8e84",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e8549101-4466-410d-9e72-13e0bc714369"
        },
        "item": {
          "id": "9bf0ac25-13de-4fb8-ae26-39f2823e1699",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "42e657ea-57fc-458e-993c-be832b69deb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320dbdaa-0d29-48df-9520-72813e84c404",
        "cursor": {
          "ref": "39e4782c-acb0-47b5-b621-86e5301077df",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "62be330b-8d65-4729-95e4-9f8bf6f06f63"
        },
        "item": {
          "id": "320dbdaa-0d29-48df-9520-72813e84c404",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d8ce9b09-0ac9-4865-985a-269744b7e256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc121e1-12fe-44ad-9e07-20de286b50bb",
        "cursor": {
          "ref": "4774c4a9-8bd5-4e87-98d6-958de3f457d2",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8324ed10-67fd-482d-b3ee-9040960e0997"
        },
        "item": {
          "id": "bdc121e1-12fe-44ad-9e07-20de286b50bb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "eb449c1e-1af3-426d-a8fe-dfd967aa3944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c6bbbe-9669-4a38-bde2-b88f72335c87",
        "cursor": {
          "ref": "1aafa247-d079-485e-8632-478c57ad92b6",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3c6f7f4e-5153-4a02-8f62-4fe602e8f689"
        },
        "item": {
          "id": "57c6bbbe-9669-4a38-bde2-b88f72335c87",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "563f5dc6-6620-45fc-909f-160db7d2e78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec7660e-66a9-41f3-831f-4fef9dee2694",
        "cursor": {
          "ref": "fa8b732b-a97f-42ad-bb37-753cee22d17e",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e01542d6-16fb-4710-b131-e1423185caab"
        },
        "item": {
          "id": "1ec7660e-66a9-41f3-831f-4fef9dee2694",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "37b40757-4b0e-43fd-bd9d-66c740487237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ad3c5a-5d30-4205-b3b6-74fae8df1752",
        "cursor": {
          "ref": "bdc64020-3eba-44d1-b44c-c2cb15c1000c",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "789d062d-f25f-4efa-9cf0-64de7c021030"
        },
        "item": {
          "id": "00ad3c5a-5d30-4205-b3b6-74fae8df1752",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b541ba84-0d5b-405a-9def-602412ae7eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80e3912-b2b7-4b0b-bbf1-1a50ac2e3649",
        "cursor": {
          "ref": "c9eefa5e-5443-4962-bb16-037c3bfa965c",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b09d6aec-a5d8-405a-9331-ea4ad83737c4"
        },
        "item": {
          "id": "d80e3912-b2b7-4b0b-bbf1-1a50ac2e3649",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ef1bfb46-9293-4c76-8fb6-de0d3e6e972a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576a0cba-b981-4a61-af2a-b17f404278c5",
        "cursor": {
          "ref": "0ab68e2f-82d3-4a05-b6e7-29d581342ad3",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "94d19396-e3bc-46fe-84ce-cb0e6c4b86ec"
        },
        "item": {
          "id": "576a0cba-b981-4a61-af2a-b17f404278c5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "17871435-13fa-44de-bde9-399d05d744be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df8af37-8531-41e8-8556-6889502c3c6e",
        "cursor": {
          "ref": "62cb44cf-f1fb-42b8-af5c-5de5674b612b",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "051abb37-e833-4d4d-9ca7-5eec62894164"
        },
        "item": {
          "id": "1df8af37-8531-41e8-8556-6889502c3c6e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "db8c878d-e284-4593-9aef-dccd86507aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034d214b-2704-421f-8ff3-949290496118",
        "cursor": {
          "ref": "f2d7d96e-cc54-4a25-aa31-2aa5dc9da29d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2f3022ff-5678-491d-98f1-91a31e99e99f"
        },
        "item": {
          "id": "034d214b-2704-421f-8ff3-949290496118",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "77091008-294a-41f9-be4b-e92474adbb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f53581-a3dc-4dc2-9785-9648ea4bfd44",
        "cursor": {
          "ref": "ba4da108-4e68-49c7-a46b-5fcc37d07c8c",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d21091a9-e8c7-46d5-b1a8-21ee659f72a5"
        },
        "item": {
          "id": "b1f53581-a3dc-4dc2-9785-9648ea4bfd44",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a18d2650-9bbd-46a2-8d9d-605e9ba19e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b73c30-c5d8-4cab-9ff5-5d500db7d5d0",
        "cursor": {
          "ref": "c6a06f21-76d7-4cac-93ed-a91aa5628b12",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c569b8b7-f22a-4513-94a9-0e4058552875"
        },
        "item": {
          "id": "e2b73c30-c5d8-4cab-9ff5-5d500db7d5d0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4174a614-9076-415a-8531-98d6ba838ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ef7b7b-a484-40b7-aed7-a27d9546d922",
        "cursor": {
          "ref": "a88229b6-206f-4ba2-9eed-7e197a85a971",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ac6e3ade-e89f-418e-ac8c-c9ea6493ccaa"
        },
        "item": {
          "id": "77ef7b7b-a484-40b7-aed7-a27d9546d922",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0b2afb5d-f8ac-42fa-be2d-2d910d9c38c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4677c9-c9b8-4dbe-819b-c4861f5398a7",
        "cursor": {
          "ref": "dce1282d-40c2-4f61-b5bc-067b1cc19b7c",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c1fff000-e134-41d8-b577-004206484707"
        },
        "item": {
          "id": "2e4677c9-c9b8-4dbe-819b-c4861f5398a7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "83da5237-ca0a-45ea-99fc-ded033a6b8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0807c8dc-0eac-4b7c-8d52-9972aea242a6",
        "cursor": {
          "ref": "6bbefe33-40e4-49fd-aafd-0f692fcdd9ab",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5db2384a-e8b2-4ba8-a400-713d9ac30db0"
        },
        "item": {
          "id": "0807c8dc-0eac-4b7c-8d52-9972aea242a6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3bd64e08-2dfc-4622-9dfd-e34e800cda5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1f934d-b9b1-4655-a64b-ee1f5b7b4136",
        "cursor": {
          "ref": "f2c0ffd0-3ccf-4e70-bdeb-43e747baf995",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "37460221-af8e-438d-ba41-e03d9e4fb746"
        },
        "item": {
          "id": "aa1f934d-b9b1-4655-a64b-ee1f5b7b4136",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "96eb773b-d6d2-4c6d-8e8e-4c5aae82741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f7c8e2-3cc0-4c66-a8e7-4237bf2e207f",
        "cursor": {
          "ref": "ebc184f4-ee25-4297-ac7e-2c0977d3dcfe",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "73ea9d1b-270b-4d8a-95c6-5e563e3e83f5"
        },
        "item": {
          "id": "96f7c8e2-3cc0-4c66-a8e7-4237bf2e207f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9aa6e8a6-19f1-4f3c-84f7-856ff066b628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5877bd2c-702d-47da-808f-4619c0a99900",
        "cursor": {
          "ref": "f2e5c3dc-62be-494b-925a-36fd95e99b4a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "75101b36-6472-4c94-8d26-56976a61be26"
        },
        "item": {
          "id": "5877bd2c-702d-47da-808f-4619c0a99900",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a485d01d-03f1-4c4b-b33d-aeddd15411a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b56ba2-9ceb-4037-bb72-5086052165e6",
        "cursor": {
          "ref": "67411bc9-8ae6-4eb7-bc2c-765ec66dca87",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "74b521af-d493-4509-a401-862aad1e351e"
        },
        "item": {
          "id": "29b56ba2-9ceb-4037-bb72-5086052165e6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a6a81fa1-515c-4085-9c7b-205fd22a6c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22427ca-661c-4007-9c6d-64df529e5677",
        "cursor": {
          "ref": "8151b34d-9e4b-4926-9fdc-ad992493bc85",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5cf51ae3-bc68-4995-ac84-514ca9b1e3ee"
        },
        "item": {
          "id": "e22427ca-661c-4007-9c6d-64df529e5677",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "78bdc715-d3a4-41d0-9fd6-70333d2d6f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c0618-4f15-4966-bebd-41a0a0f5596a",
        "cursor": {
          "ref": "baf8d5e8-9ffc-40e3-8390-a2fb0faa555e",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5eb50e04-1954-4b7b-ba79-ecda3b561683"
        },
        "item": {
          "id": "2d2c0618-4f15-4966-bebd-41a0a0f5596a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "af931161-4dec-4dd9-bb4d-2ce0a35a305f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec86e1c-53ae-4192-b432-2a58ceed88d2",
        "cursor": {
          "ref": "9106508c-2dd0-4141-8bc9-6226536c7760",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6917d0b7-c2a2-4436-8d7c-a75b388983cd"
        },
        "item": {
          "id": "aec86e1c-53ae-4192-b432-2a58ceed88d2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2d8a977d-1f8f-4f58-8ee5-633aca1e579b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e104563-1c79-4305-b2a0-19c4abe60d9f",
        "cursor": {
          "ref": "d2e14445-b48b-4cef-98e3-e77e33960a03",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "871c2a36-7d43-48b8-b413-a49f72f846fb"
        },
        "item": {
          "id": "4e104563-1c79-4305-b2a0-19c4abe60d9f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "72459fc0-cceb-414c-81e2-6bb3ec6b94ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5275357-d8d2-4294-9cff-bee02bd520ca",
        "cursor": {
          "ref": "15c9de89-4885-4621-8ba6-598f46a9dba0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "14ba35d0-851c-449a-8bca-c82d40a6eb09"
        },
        "item": {
          "id": "e5275357-d8d2-4294-9cff-bee02bd520ca",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "96ef6ed6-e7fa-43d7-83e6-13bbd2c2dc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846f5966-02a0-4b89-90c3-563cd8625862",
        "cursor": {
          "ref": "5b262efd-0416-42e1-9756-08f2f949b86e",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8c7155eb-1c98-4cb2-8e51-ae3d7b966b49"
        },
        "item": {
          "id": "846f5966-02a0-4b89-90c3-563cd8625862",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9344177d-590c-400b-b306-3b44b7ab0532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3777fae2-822d-4d0f-9655-3cf86cbd37c7",
        "cursor": {
          "ref": "0ae56458-031d-4043-9e1d-c18076fa2757",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d1494450-b54d-4c57-9df8-7df78b90086e"
        },
        "item": {
          "id": "3777fae2-822d-4d0f-9655-3cf86cbd37c7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5a5c3fe6-6f8b-43a6-b154-1906eb2c715e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7571bd-d191-43c0-9450-3c872963fda6",
        "cursor": {
          "ref": "a6ad149a-eaf1-4ef7-b5dc-bb098b40c584",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "62d6c7f8-0eeb-43df-ac90-9198e3993fe1"
        },
        "item": {
          "id": "ba7571bd-d191-43c0-9450-3c872963fda6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "13df0447-6a2a-432f-97a2-78d33be04dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39118119-be14-4d72-98ae-8b6057cc46f8",
        "cursor": {
          "ref": "f45ec81e-5cab-420b-babc-950fc2c585f6",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cf2a723e-87fb-4bb9-be71-f13c6c650d23"
        },
        "item": {
          "id": "39118119-be14-4d72-98ae-8b6057cc46f8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "638c0a49-65e4-440c-94f8-60ee4fa318c6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec810a7-bcb1-40ae-8f56-0f6bc1edfd8c",
        "cursor": {
          "ref": "c418894b-e791-46e3-8ed2-7dc7ab28c61a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "063e70ec-43d7-4380-99a4-468617cc80af"
        },
        "item": {
          "id": "8ec810a7-bcb1-40ae-8f56-0f6bc1edfd8c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1bf99e98-8097-40ca-89e8-e15ea6db9d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383fda38-b52c-45b7-8809-26e299f47dc4",
        "cursor": {
          "ref": "706931c7-d10c-462c-832f-cb7d18b5ebae",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f652c7af-fd62-4a71-8e83-d4e8dff5e2ed"
        },
        "item": {
          "id": "383fda38-b52c-45b7-8809-26e299f47dc4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1ac50fc0-5a6f-43db-8a61-977e392e1584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0870bdfb-b745-4ee4-86a3-4d79008d9a4a",
        "cursor": {
          "ref": "322ee7e5-b4be-4818-92dc-b3ffebe8f62e",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bd6a55b5-1183-4cac-a0e7-23202ba07688"
        },
        "item": {
          "id": "0870bdfb-b745-4ee4-86a3-4d79008d9a4a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d7ce0ca7-56e0-44fd-90ad-ab41bc4ddfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06183518-97b6-4615-9b41-7de948200b1e",
        "cursor": {
          "ref": "c2a0737c-5f08-458b-90d5-cd8356256e6d",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4b1f6e1f-eb8a-4e53-8aee-f0b1077f8f7c"
        },
        "item": {
          "id": "06183518-97b6-4615-9b41-7de948200b1e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "73e4ef3c-d750-4e58-aaf6-7ae71b59b1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63902f7b-ede8-4c4f-9463-f97ff571569a",
        "cursor": {
          "ref": "14ad79ee-70dd-431f-91f1-c654522cd85a",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "037b4c88-1687-42ba-b195-e4ec22cfbdf7"
        },
        "item": {
          "id": "63902f7b-ede8-4c4f-9463-f97ff571569a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fb4ef69f-f5dd-4c03-be96-d15de829994a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af7efd0-9334-4e51-ae26-c9308b7a3f54",
        "cursor": {
          "ref": "ce94c21b-c051-47af-bbd5-432deaebe677",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f5eb3dc1-08cf-49a6-b419-40adc98e4fd1"
        },
        "item": {
          "id": "9af7efd0-9334-4e51-ae26-c9308b7a3f54",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cf021b54-7897-4bb5-8468-40179a402ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ebcaa1-b857-4346-8bb8-58b9a064a0eb",
        "cursor": {
          "ref": "86c2419c-c873-47ed-8aa5-9964512e26bf",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b287761b-c290-4984-90bc-5e66a5debb81"
        },
        "item": {
          "id": "44ebcaa1-b857-4346-8bb8-58b9a064a0eb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7223a8db-7119-4f5d-b675-3d5ae96c0716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9794fd1f-4d79-488c-8aba-35310afd00f5",
        "cursor": {
          "ref": "db0adf34-e19d-4fa3-958c-f2c08a3e6b89",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b2e25c56-fe06-4c1c-8362-467c77626c2f"
        },
        "item": {
          "id": "9794fd1f-4d79-488c-8aba-35310afd00f5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d7cc14b8-1f37-4bb7-a5c7-8a381a85ba7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0813b055-2143-4d10-91ef-e4a26d67efc0",
        "cursor": {
          "ref": "075f4e7e-10a1-4cb9-b951-c0d6f9be151e",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5d14c57a-84b4-4ae2-84b9-fc7fcba2bdef"
        },
        "item": {
          "id": "0813b055-2143-4d10-91ef-e4a26d67efc0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "27201513-51d0-4862-b0ed-da3f80750b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aa75d4-5a7a-40b6-99ea-68cff6e5b440",
        "cursor": {
          "ref": "405df46d-b5b8-4aba-9b1a-3aaf83ef4e4a",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1f56f5f5-c0f6-49d6-b097-875682970708"
        },
        "item": {
          "id": "59aa75d4-5a7a-40b6-99ea-68cff6e5b440",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "46c9fa8b-c5ee-45fa-9e5a-ebbd7c53a37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bc1f58-6e3a-43cb-9319-5f529b1a0a85",
        "cursor": {
          "ref": "cb9f73e0-8dfc-4c86-a921-a7ddcef702f5",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bbcad57a-3b9d-463e-bfa2-fd11c52bf751"
        },
        "item": {
          "id": "58bc1f58-6e3a-43cb-9319-5f529b1a0a85",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0f8ffc91-0560-4b52-b4be-ff53ee1323b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8027ca07-ec80-4163-a45f-75d52beff48a",
        "cursor": {
          "ref": "ecaaaec4-e2c5-4302-bf27-00cc77e58378",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2f10cdd3-e2da-4eba-b723-04820fb04b40"
        },
        "item": {
          "id": "8027ca07-ec80-4163-a45f-75d52beff48a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "95169f18-2016-497a-b8ce-757589adff76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da52dea0-f2f8-4690-9fb1-b6c59cdf48cc",
        "cursor": {
          "ref": "a04abe1a-8ee5-4969-9445-6d0adaed8f2d",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e4cf31be-433a-4d6c-8ffd-70b23229e955"
        },
        "item": {
          "id": "da52dea0-f2f8-4690-9fb1-b6c59cdf48cc",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3086b748-d12e-4ed7-8290-e9b93275c750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6e98bf-6dd0-4e71-8447-26b3d1ecf1ae",
        "cursor": {
          "ref": "23004e2d-2713-4b24-9d34-2a3da7c71789",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9b4321f2-afed-4045-b7ad-b2a0b218bb59"
        },
        "item": {
          "id": "cb6e98bf-6dd0-4e71-8447-26b3d1ecf1ae",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0ea56545-0554-4152-8811-a20fd35ca188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096f64b9-d2f8-4971-835e-8f21a9a744f5",
        "cursor": {
          "ref": "055f65c4-ca07-4ea6-b545-a268ac60d3b3",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0d69c2af-28e6-480e-913c-0f39b2a35b9e"
        },
        "item": {
          "id": "096f64b9-d2f8-4971-835e-8f21a9a744f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "56542985-e43a-4bae-9217-77a142565d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f802fa-eb5e-49e9-8736-d7f15a2627ba",
        "cursor": {
          "ref": "dda21e0d-ef22-448d-a4ae-4c35efac381b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b3d520a8-f368-4210-8d81-9580d1566e0b"
        },
        "item": {
          "id": "e9f802fa-eb5e-49e9-8736-d7f15a2627ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "46148b32-d91a-4d5b-819b-8f3064396ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ef144c-a5f5-4076-a451-054f5d681022",
        "cursor": {
          "ref": "781632b3-7b2e-44f2-81ec-4bec967e3db2",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7ea4d15f-83ea-4e33-83e7-30b4cd0e18e3"
        },
        "item": {
          "id": "40ef144c-a5f5-4076-a451-054f5d681022",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1ca53336-4bd0-4183-b73e-618e5f56a1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adb9040-f2da-4749-9880-bb9fce878534",
        "cursor": {
          "ref": "ba7f1719-cc42-4661-be40-5676c9bf836f",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f681c150-ec2e-474b-9e0e-5d49bda9b516"
        },
        "item": {
          "id": "9adb9040-f2da-4749-9880-bb9fce878534",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8ff7d9ea-21f8-478e-8ef9-437159edf9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc28bd1b-eb80-4df9-b4a2-5c91eceb617f",
        "cursor": {
          "ref": "6ba278ab-1e5a-44e4-853c-8f12f982c9d8",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "39841f08-8ad2-4f98-9e30-007b7fb81eea"
        },
        "item": {
          "id": "fc28bd1b-eb80-4df9-b4a2-5c91eceb617f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f182c22c-0fc5-4c47-8338-fcfc5281d8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd75981-ed39-4dcc-9c70-258015d048fe",
        "cursor": {
          "ref": "cfe25b20-be42-45f6-b51d-b66a94e0bf1d",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8d227bb7-df45-405e-8376-0e635c1e5a6d"
        },
        "item": {
          "id": "5cd75981-ed39-4dcc-9c70-258015d048fe",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d9aa3378-c592-4ee3-a907-11c876dfac29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d699c1-26e3-4c0c-bd8d-bf6957681128",
        "cursor": {
          "ref": "97f83399-1e5d-4975-afc4-39f512d5fb99",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9d7f685f-a387-419c-8460-1c23e02a4ad9"
        },
        "item": {
          "id": "e2d699c1-26e3-4c0c-bd8d-bf6957681128",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "73f3589c-dd69-467e-987b-fd3edd5b6e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da69600-57ee-4af9-ad29-1565e7b1d0d6",
        "cursor": {
          "ref": "30ce53c6-4465-4a88-aacc-b1dd28235657",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4e7a03f0-aee9-4853-b9fe-bc3305088e1e"
        },
        "item": {
          "id": "9da69600-57ee-4af9-ad29-1565e7b1d0d6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "158fb0e0-f196-47c2-866d-7ac899280105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c08385d-4c89-4237-a9ae-06f9a5d3f52c",
        "cursor": {
          "ref": "2d2e5053-7a38-4b6e-a7e3-5504dca1795e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "39181201-196f-454c-974f-749632ff7353"
        },
        "item": {
          "id": "8c08385d-4c89-4237-a9ae-06f9a5d3f52c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "93c722c3-b178-4c9a-894a-a6fa6f2db25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3277e1c-b3cb-4e35-a559-8f130556d272",
        "cursor": {
          "ref": "ba744a86-9abd-490d-8eac-98d4553fa14d",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3251d5eb-4480-4495-9891-de5216fa21a3"
        },
        "item": {
          "id": "b3277e1c-b3cb-4e35-a559-8f130556d272",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1af81212-26f3-4680-be5e-a5b23a2fa197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c91dc5-a92f-4e3e-a3e4-4828d16cb741",
        "cursor": {
          "ref": "45d179f4-a0bd-481f-90de-f53d4c00f425",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3968e554-1ba6-440c-8895-552bdf062d43"
        },
        "item": {
          "id": "b4c91dc5-a92f-4e3e-a3e4-4828d16cb741",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "52057996-394e-4a6b-98bc-97ebaca242d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae65bfa-1042-48f9-a4db-0b1d7dc9186f",
        "cursor": {
          "ref": "7d593105-0a23-4971-935f-15099c9336e0",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ee4461a4-d45e-4420-928a-626791e6072b"
        },
        "item": {
          "id": "bae65bfa-1042-48f9-a4db-0b1d7dc9186f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "684ca6f6-bb5c-464a-a4d0-6a6884350599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a52aaa-cab1-45b4-8c4a-85bd6afdd85a",
        "cursor": {
          "ref": "1ae4886f-de37-4686-9eb9-d095d4311955",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "544aac43-6c28-48b0-a03b-cd5745bdb96f"
        },
        "item": {
          "id": "40a52aaa-cab1-45b4-8c4a-85bd6afdd85a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8dc5b3ae-2e22-4fbd-a4c6-68b8414d345a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a8c01-6834-4cbd-bf56-916418a8b3b3",
        "cursor": {
          "ref": "e6a3a8f7-3708-44ec-8b31-8969ccc4ab3d",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f8acce79-eb05-4bba-bf3c-3ddc8c8776b1"
        },
        "item": {
          "id": "846a8c01-6834-4cbd-bf56-916418a8b3b3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b28af048-b9a1-496e-93af-7745986eb470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e605523-8de2-42b8-8108-4d8f5ec477e3",
        "cursor": {
          "ref": "fd15e803-ddf4-41a7-81d4-f25ea067b8f4",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5171b4c1-26a2-47ce-b29b-225a37ec5f59"
        },
        "item": {
          "id": "3e605523-8de2-42b8-8108-4d8f5ec477e3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "51a87565-354c-4215-b978-066da0812615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8178b65-c9b8-44eb-bf6b-4697af4a4702",
        "cursor": {
          "ref": "2916db0c-e181-4100-9670-d8569f9739bb",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "01e3d585-21ec-4909-ae8d-e728ddb3ef22"
        },
        "item": {
          "id": "f8178b65-c9b8-44eb-bf6b-4697af4a4702",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "998b636a-b4ed-4ffe-bcb2-da66819b6646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1943d0-ef63-4e35-a13d-836202733867",
        "cursor": {
          "ref": "8dc526d2-7176-4ac6-9a09-0d96fcc3be00",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0d7741c5-06df-4a89-a5ba-a8bf4c91e8ca"
        },
        "item": {
          "id": "ae1943d0-ef63-4e35-a13d-836202733867",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d5d7b694-f0c0-42d6-93f8-84ddc0062720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8f9a68-0aa3-4a94-b553-65e972449638",
        "cursor": {
          "ref": "45e3a180-789f-4844-8e0e-79f1a69c9d7a",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2bfec75a-9e4b-4c95-8d20-ec76c0a75826"
        },
        "item": {
          "id": "bd8f9a68-0aa3-4a94-b553-65e972449638",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "406e5856-f9a6-436c-87ad-556b45243272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03886ac4-00b0-4fed-9845-20b0ba3cde03",
        "cursor": {
          "ref": "246b1d35-afcf-4a24-b9ce-ad77093cfc23",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8a3d3a55-6fcb-4878-85c7-a398cf82d21c"
        },
        "item": {
          "id": "03886ac4-00b0-4fed-9845-20b0ba3cde03",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a8eb6473-b39c-4e8d-b4f2-cc6008384fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8f55c1-d47f-48c7-ba92-d30e0118942d",
        "cursor": {
          "ref": "3670f6a9-5c06-4233-adeb-9bb205d45eee",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5c5fa84b-1812-47d3-a683-ecfe9517a0cb"
        },
        "item": {
          "id": "be8f55c1-d47f-48c7-ba92-d30e0118942d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7979b73c-173a-441e-8741-381d4edb22c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b151307e-d77a-4e78-a1b5-ec571e5e91c5",
        "cursor": {
          "ref": "9cb06e2d-e47b-4c68-8001-ca7558ee01f2",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9f640dc4-4bef-4248-82bc-23d2d79fc520"
        },
        "item": {
          "id": "b151307e-d77a-4e78-a1b5-ec571e5e91c5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ebf1e20c-6371-4c19-b81c-94ab6fe11fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb8cad9-1e6e-428d-b706-c2fdf262c714",
        "cursor": {
          "ref": "c7173a86-5dcd-440c-8e93-e9fd0790b1c2",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8e6d1bba-4688-47d6-8cc5-a2a56ee329f5"
        },
        "item": {
          "id": "fcb8cad9-1e6e-428d-b706-c2fdf262c714",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e8d1d108-ae7e-449d-aeb4-c77334f8cff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10c4eab-676f-4518-8822-4b121dd6c96c",
        "cursor": {
          "ref": "7f21df1b-843e-474f-8ac2-602a95f6bede",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "02590f4a-e5af-4441-b257-14beff4204e6"
        },
        "item": {
          "id": "b10c4eab-676f-4518-8822-4b121dd6c96c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "54f53f99-7436-4544-8d37-b298c7e6a6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac35a41e-564f-4303-a41d-6eb0e57ee3dc",
        "cursor": {
          "ref": "ccb68024-30c2-4eb1-9d25-d0b2c43dbe81",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "569601fd-fab6-443b-9526-7f026a644d9a"
        },
        "item": {
          "id": "ac35a41e-564f-4303-a41d-6eb0e57ee3dc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ce5e58d1-38e6-4c13-a909-accaee33c48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba02005-8153-4fff-9902-6cbf3c1ad822",
        "cursor": {
          "ref": "e5ffbae9-60b4-4f3a-b141-659552ae1ac2",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4fd997a1-a9fb-4d76-96a2-8a0912d9db25"
        },
        "item": {
          "id": "dba02005-8153-4fff-9902-6cbf3c1ad822",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "027f1db6-fb71-459d-9c74-666437bdc6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cca298-02d2-4523-9c75-95dae1b5591a",
        "cursor": {
          "ref": "18d58689-eaa3-4e36-b292-50c9190c1909",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ea52e9fd-3d9f-4b22-8919-d2637c280e47"
        },
        "item": {
          "id": "91cca298-02d2-4523-9c75-95dae1b5591a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dd2a2cf5-4a61-4bbe-adbd-24e916f1dc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0ee7c2-89d4-42dd-a3bc-7be5a340c772",
        "cursor": {
          "ref": "547b6fb3-c023-454b-8acf-a32b886817fb",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "84d77f4d-6c74-46a9-9e51-4695a0112b48"
        },
        "item": {
          "id": "8a0ee7c2-89d4-42dd-a3bc-7be5a340c772",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "537aa88c-2e1b-4e0c-86c7-de0d47c2f8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c381943c-167c-4592-b1df-a867f31bf79f",
        "cursor": {
          "ref": "0bafef38-2a28-44e9-9dfe-8fef63a3db0d",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ceb52e51-196c-4d27-be55-dd1a28b534c7"
        },
        "item": {
          "id": "c381943c-167c-4592-b1df-a867f31bf79f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "54a480c6-4170-4ab6-841c-3a0a48ee4fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfb03d4-cb2e-48f1-a703-a5c2b0958ae8",
        "cursor": {
          "ref": "2528d812-e4ca-40cc-87c2-5b4028f1e68b",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "99622513-8141-42b2-b9ac-631102980039"
        },
        "item": {
          "id": "4dfb03d4-cb2e-48f1-a703-a5c2b0958ae8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "65caeeaa-bb63-4c29-9387-84089b297ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d1803f-788b-418b-8a60-fc871da19577",
        "cursor": {
          "ref": "a616d2bf-0768-4632-9ccc-395fb07775e6",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "390faf81-8620-4178-b6e8-0a6753f7b821"
        },
        "item": {
          "id": "e2d1803f-788b-418b-8a60-fc871da19577",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a4d4dc12-9306-4880-892c-178b12e5a1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bd2fb4-8826-4c60-ad46-8ec725b56050",
        "cursor": {
          "ref": "b67ad307-c0fb-488f-87e5-b59647e005e3",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2793001a-b97b-4b99-bc69-90556c416ac6"
        },
        "item": {
          "id": "50bd2fb4-8826-4c60-ad46-8ec725b56050",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "680283c8-32a6-4d5c-8a15-8488f301344f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1749117-2eeb-4bc2-889d-db47d0007bec",
        "cursor": {
          "ref": "34930c05-b49f-4819-9fba-3d23afbfb031",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "00e0fd7b-7664-4450-a8fa-15339c6197d9"
        },
        "item": {
          "id": "a1749117-2eeb-4bc2-889d-db47d0007bec",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6eac91ff-57f7-4807-a6e6-4b43cc33e47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb26ed8-093d-4551-84cb-d8206820be21",
        "cursor": {
          "ref": "6917470c-1e87-430b-bbc7-61c6fccf999e",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b99081f0-b259-4d98-beb8-a501ceece34d"
        },
        "item": {
          "id": "0eb26ed8-093d-4551-84cb-d8206820be21",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f9ea4a30-5608-49d7-90a5-534164ef4581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f78b821-9d21-4e21-9f7f-60ebf104a7b2",
        "cursor": {
          "ref": "8a67f78f-46e5-4876-b4a3-bec6160a9870",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d9db380e-3199-41b4-b463-82f589e0a194"
        },
        "item": {
          "id": "5f78b821-9d21-4e21-9f7f-60ebf104a7b2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "04a2dbd5-dcc2-49de-9fe7-f40669c8c376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9294fdbc-b85a-40fd-a7d0-7c1a4ef150cf",
        "cursor": {
          "ref": "72b1612a-3bc9-46f2-8932-f5a4a037da9e",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6ce65a33-9781-41f2-9977-ab7fd5496941"
        },
        "item": {
          "id": "9294fdbc-b85a-40fd-a7d0-7c1a4ef150cf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cc9a803f-113d-4fde-b243-8f4b9bfe51c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097ee215-7a76-47b6-9ae2-505931b47d1a",
        "cursor": {
          "ref": "5701f9e7-f5bf-4efb-aeac-e807f2f6e18f",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a2a01453-2c9f-4710-9a4f-342103c4eabc"
        },
        "item": {
          "id": "097ee215-7a76-47b6-9ae2-505931b47d1a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c3ff9214-d6d7-463b-8522-60c1d4fdc4f5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9881fa4-82e6-4229-a329-1107d25f5b6f",
        "cursor": {
          "ref": "8731150e-60de-4417-b309-67fce9d5b6fb",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6218946f-1c54-404c-b5d2-afe5ac413560"
        },
        "item": {
          "id": "a9881fa4-82e6-4229-a329-1107d25f5b6f",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "14ad6dd5-c22e-4f3a-8847-896bf3cf01e2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 127,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd652184-0492-4a86-8fdf-71ee54a94a16",
        "cursor": {
          "ref": "4e654e03-59bc-41c8-8e80-57eba38fcafc",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3f403abf-4cbd-4184-bd9a-d1bfaed315f5"
        },
        "item": {
          "id": "bd652184-0492-4a86-8fdf-71ee54a94a16",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a70483d5-fb47-4803-bd6c-504ea2d52b4c",
          "status": "Created",
          "code": 201,
          "responseTime": 101,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca7e736-149e-4be2-92a9-8702eb2d4468",
        "cursor": {
          "ref": "7242c992-c2f5-41cb-a295-656e0b6b54c8",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "738c22ad-7dfa-436c-8041-2cf86ea3c8db"
        },
        "item": {
          "id": "1ca7e736-149e-4be2-92a9-8702eb2d4468",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "29ab75d9-c428-439e-89ff-5e1b7198d093",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "554ac10d-e623-410b-9607-d9edfa1dbd1d",
        "cursor": {
          "ref": "b5c2462e-4f69-41dc-82d9-e3d89f66353d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d8ce74bf-5255-49ca-a31e-1cb8286d4e4d"
        },
        "item": {
          "id": "554ac10d-e623-410b-9607-d9edfa1dbd1d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a4021f77-e905-493f-b78e-872fc2b1e3f1",
          "status": "Created",
          "code": 201,
          "responseTime": 245,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f029195-ef70-4034-8e38-1e8e3a058e09",
        "cursor": {
          "ref": "d2948e2c-59ed-4ab3-a4fa-cba9c870d28e",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "abdceb7b-9a66-4d56-b417-3015379bb92f"
        },
        "item": {
          "id": "0f029195-ef70-4034-8e38-1e8e3a058e09",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "20eb92c6-1645-404c-b7bc-615018e1dda7",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f56c3a0-0ee6-44f4-a721-b2cf2a032781",
        "cursor": {
          "ref": "9b5a0a9b-0693-443a-b5f4-2d400277c4d7",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b3a0e7b8-2f45-436f-a448-33c50e3fd3fb"
        },
        "item": {
          "id": "2f56c3a0-0ee6-44f4-a721-b2cf2a032781",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "254779ad-1e53-4608-a207-2aee5a201afe",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf3fd1b-1fc1-4979-9f6c-72335a2a899a",
        "cursor": {
          "ref": "7f98f584-4e37-4d15-a6a6-492ef06f351d",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7805f5a9-9634-4a99-8ddf-952553850d9e"
        },
        "item": {
          "id": "0cf3fd1b-1fc1-4979-9f6c-72335a2a899a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "959e41b7-5975-42d8-991a-8bed4c97bb90",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cec4b45-8847-433e-a03d-9a8541bd8307",
        "cursor": {
          "ref": "9ae20a62-810e-466e-9003-c73e0dec7ad3",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd461f53-7aa6-495c-ab2e-3a1c7a872e57"
        },
        "item": {
          "id": "1cec4b45-8847-433e-a03d-9a8541bd8307",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6e38f87d-9897-42f7-aa79-51370b202128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cec4b45-8847-433e-a03d-9a8541bd8307",
        "cursor": {
          "ref": "9ae20a62-810e-466e-9003-c73e0dec7ad3",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd461f53-7aa6-495c-ab2e-3a1c7a872e57"
        },
        "item": {
          "id": "1cec4b45-8847-433e-a03d-9a8541bd8307",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6e38f87d-9897-42f7-aa79-51370b202128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abac4857-3f3a-4522-88b9-916c941cbc81",
        "cursor": {
          "ref": "5ec7a645-a609-4b45-a0f4-a9f1cadab2e8",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bf86b636-7c90-4760-a536-f3f6188a599b"
        },
        "item": {
          "id": "abac4857-3f3a-4522-88b9-916c941cbc81",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "278f012a-2196-4374-bfab-e71695d3ab24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51036334-56b8-4b7c-864e-a312d5b2333c",
        "cursor": {
          "ref": "6ae9344c-cd7a-4157-8e42-75975d67cacd",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "61b1f613-d528-46e9-9b30-f1a761483dc6"
        },
        "item": {
          "id": "51036334-56b8-4b7c-864e-a312d5b2333c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a7fbba78-cef4-45d9-9452-4cd28e8c21a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e8b45a-c441-450b-b592-f99d4303b5cb",
        "cursor": {
          "ref": "86017417-3efa-4cd8-919c-d9805e85326f",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3c40c60b-45b6-42b6-aff7-337f79323ac6"
        },
        "item": {
          "id": "c2e8b45a-c441-450b-b592-f99d4303b5cb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "65afcaa9-6c70-4c5c-b3ca-0a7a81bc839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab03e43e-48c3-4f3e-873e-f6f150cd57cc",
        "cursor": {
          "ref": "84876d6d-bed8-4d4e-b5b7-d78c8974032d",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "40fa9d49-1e8a-4c57-ab9a-f953d0aa02f8"
        },
        "item": {
          "id": "ab03e43e-48c3-4f3e-873e-f6f150cd57cc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8d6203be-99fb-4c8d-a8b5-47f7312e1d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a7db11-6037-4b09-84df-0edcafaf23eb",
        "cursor": {
          "ref": "b166d788-744c-413c-8006-107df84ee16a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dc826b19-ed12-47a0-9a59-cd4120b9e33c"
        },
        "item": {
          "id": "c6a7db11-6037-4b09-84df-0edcafaf23eb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "afc16709-6400-4991-a60d-c032c2dfd062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3251d48-dd09-4420-a0b3-9040d0b62fbe",
        "cursor": {
          "ref": "bd710baa-51c2-4f63-b2c8-cfbe066d6630",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6e0e9da5-4b60-4ad8-ac37-bdc41be8b227"
        },
        "item": {
          "id": "f3251d48-dd09-4420-a0b3-9040d0b62fbe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "af33dd7a-5f92-451f-8d0a-c1b59117319d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ea647e-8d54-46fe-894a-ba12c36cc69e",
        "cursor": {
          "ref": "9830b5c2-aaef-4398-841c-f2a6082feac0",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "da4116df-a671-4487-b2ab-89cece0cbb6c"
        },
        "item": {
          "id": "91ea647e-8d54-46fe-894a-ba12c36cc69e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b4d7bc28-2cd3-4381-98fe-d351c3589ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d4f710-9cab-441f-8d15-20dae8e36cb1",
        "cursor": {
          "ref": "862bd406-b2d2-4b89-ac94-3bdbe6830ecd",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8f3236b8-443e-4340-a1fa-fcb2363e9d93"
        },
        "item": {
          "id": "85d4f710-9cab-441f-8d15-20dae8e36cb1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6427e373-1840-4839-be2f-cbea55f88986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30794177-287e-4ed2-85d0-5d4855bbe462",
        "cursor": {
          "ref": "f491530b-67ce-4fea-ab45-68828da76c2e",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fbbe73d4-dd61-4fae-8c8a-3e3bd15c94eb"
        },
        "item": {
          "id": "30794177-287e-4ed2-85d0-5d4855bbe462",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ac7c68db-b3d0-41ca-b7d7-30d1d1e13337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c122254-60bb-4cbb-aa03-1e22531162c0",
        "cursor": {
          "ref": "a6645569-776b-4a0e-8aa8-d5d0d99575eb",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "383b0867-b5b2-442a-a6e3-e00f56fa01e3"
        },
        "item": {
          "id": "9c122254-60bb-4cbb-aa03-1e22531162c0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "882f4559-2726-4964-8ddc-ce4fd694165c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1c60a0-6df0-4925-a379-959457574e4d",
        "cursor": {
          "ref": "e2a35882-8b11-4613-9da1-a0e15d2133e0",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4a15ec62-bd63-4f3c-a9db-ee29df385941"
        },
        "item": {
          "id": "af1c60a0-6df0-4925-a379-959457574e4d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c1347df-a12d-475f-8b14-4d57b1e3aba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a74474b-7e8f-4733-9469-de4e5d7dd546",
        "cursor": {
          "ref": "d20ab854-84cb-4f76-b2c2-31cd98c3b2c0",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f83c898f-826b-41d9-940e-142a96c8a1d2"
        },
        "item": {
          "id": "5a74474b-7e8f-4733-9469-de4e5d7dd546",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a19054b8-45ce-45e1-9ca4-216adc8bd16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83723fb-b913-44dc-93fe-f47457ba3212",
        "cursor": {
          "ref": "d4aa988e-a477-41dd-8567-d9c8522a65a3",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "80e51596-a781-4417-88d0-ce232f97a93b"
        },
        "item": {
          "id": "a83723fb-b913-44dc-93fe-f47457ba3212",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9d57d861-c93a-416f-a8ea-d342b8da1832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893d1944-5b06-4dcf-9726-33349c1d36c9",
        "cursor": {
          "ref": "61b9099e-6d67-4aa1-81a8-3bdbc3f83361",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "616eb4a1-55ac-4288-a9fa-dc0fc8d9204e"
        },
        "item": {
          "id": "893d1944-5b06-4dcf-9726-33349c1d36c9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3c1122f0-4e03-4f98-b368-f0908bb6a657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34584c74-4a2d-4e75-8054-00f704fb5118",
        "cursor": {
          "ref": "f9b0e324-1d3b-4dde-82a9-6370b2573c24",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5ebb4fbe-5a40-423b-9025-3024e094ef9e"
        },
        "item": {
          "id": "34584c74-4a2d-4e75-8054-00f704fb5118",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0cd86417-15f7-4ded-a35e-04023a373b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46bd70b-38c6-412e-a444-11b4dacf83cc",
        "cursor": {
          "ref": "0c5b59c6-c8bf-4282-a794-da865da58823",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2244b435-d3fc-46dc-94d1-218253f12ce6"
        },
        "item": {
          "id": "f46bd70b-38c6-412e-a444-11b4dacf83cc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "95eb8259-6d51-40eb-8f03-9e7b2e7b5a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea246a4-ba82-49a9-a817-05c20a1ae773",
        "cursor": {
          "ref": "b42f7fed-7387-426c-967f-67de2d894fc1",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c38ab340-e314-4503-9c72-9fe2121fc1f6"
        },
        "item": {
          "id": "8ea246a4-ba82-49a9-a817-05c20a1ae773",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1a5923a4-85bb-4c5d-a727-9dcbda9c0f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d637a367-5d2a-42b8-9e32-8208a01b2077",
        "cursor": {
          "ref": "3b63b307-c6d5-4049-9db4-af7e264694c0",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "55b1a7e1-4d5f-40a2-a156-75f9a5db303d"
        },
        "item": {
          "id": "d637a367-5d2a-42b8-9e32-8208a01b2077",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "badc572e-6300-4f0d-bb3e-83cf3fe693d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b92792-08ef-4a58-82cd-aac4fdabcf88",
        "cursor": {
          "ref": "11eed84c-726b-4895-8141-87fe8f72c8f0",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1a4af8d5-7991-47a3-b741-032f45c1d28e"
        },
        "item": {
          "id": "f7b92792-08ef-4a58-82cd-aac4fdabcf88",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "33672e2e-6097-427e-bd51-1640b8693921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bd5b34-9292-43bb-ba7c-4e0729944397",
        "cursor": {
          "ref": "33227b6d-599f-445a-a874-61b3af8df6b2",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6427dd03-ade2-4aaf-bc6d-161b6cfe8dc7"
        },
        "item": {
          "id": "73bd5b34-9292-43bb-ba7c-4e0729944397",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "851419c7-8940-40d1-85ae-b55cff016382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ba8e55-aea7-4af9-8bbd-b82299dc6c11",
        "cursor": {
          "ref": "1e32c9de-bb17-4057-8b08-3670bd4f3529",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "87034b93-be9a-4257-9111-c055c3ae93a0"
        },
        "item": {
          "id": "76ba8e55-aea7-4af9-8bbd-b82299dc6c11",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6b2776ac-6a8c-4c78-8946-38dfd7ea3f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60c1e10-6171-49dd-b1b3-cb1078e018a5",
        "cursor": {
          "ref": "8af32018-174a-429c-96ea-64f47d271dfa",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "304280e7-4053-482d-9633-a098710517aa"
        },
        "item": {
          "id": "b60c1e10-6171-49dd-b1b3-cb1078e018a5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f562c7ef-bc3a-4608-9d6e-4e1dc679c8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21ee6ae-8b3d-438d-b801-df1b558babb1",
        "cursor": {
          "ref": "f20af47d-efb9-46af-9f61-a1358c228e1f",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "455d51ea-bd49-45fa-9a2a-23be9738658b"
        },
        "item": {
          "id": "e21ee6ae-8b3d-438d-b801-df1b558babb1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b94e157e-f917-4dee-bf96-260dbe2aa165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0717204f-6f6d-4f2c-946e-7725ae03ce4a",
        "cursor": {
          "ref": "6b3e69ee-b169-4c4e-8423-eaa494471d7e",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d5f57fb9-dba4-4b87-bc89-cfe50e8a824e"
        },
        "item": {
          "id": "0717204f-6f6d-4f2c-946e-7725ae03ce4a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "84625ba9-561d-423c-89c8-dc0e718dca57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f7a473-1886-4bff-bd52-35f241572cbb",
        "cursor": {
          "ref": "8969e444-c7fc-4abb-aac0-e1222d6361fb",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "50af2d0c-c616-4b94-ac98-443d9fb56e12"
        },
        "item": {
          "id": "87f7a473-1886-4bff-bd52-35f241572cbb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fb61e337-2bc2-4cb1-9c2c-57096507a717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc231bcc-6024-4f6a-822b-7a3dbea23839",
        "cursor": {
          "ref": "d7d7478c-795b-47af-aee5-075363e17ce5",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "71b44aa8-0dd0-4190-af09-86db795fc2f3"
        },
        "item": {
          "id": "fc231bcc-6024-4f6a-822b-7a3dbea23839",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5c272498-8a72-47b1-b3e3-281b2bdb68b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ccbf64-3e48-4687-ae03-f51812af3087",
        "cursor": {
          "ref": "53031bd4-b7da-4d0c-85bf-1cec110875fa",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "05e94a39-4769-45f7-8480-508211c67230"
        },
        "item": {
          "id": "92ccbf64-3e48-4687-ae03-f51812af3087",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ad7df45b-18e6-4faf-917f-ddcaa092ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcad48c7-421a-4740-b48c-8602967dc3fe",
        "cursor": {
          "ref": "1bab7537-34ba-4083-8305-30b99a2bfb5d",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e3890f93-501a-467e-8ff0-743ab969d4eb"
        },
        "item": {
          "id": "fcad48c7-421a-4740-b48c-8602967dc3fe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cc438641-15a2-448f-8123-efee90e42ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84aad9f2-7c44-49e6-b42c-d4e1c9713c22",
        "cursor": {
          "ref": "7fdaf9f9-2356-4348-917e-7e9c35830d75",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2e5ae4b1-e253-4df5-9b9f-f9ab77bfb8a9"
        },
        "item": {
          "id": "84aad9f2-7c44-49e6-b42c-d4e1c9713c22",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2dc88f73-4359-4788-927a-35ec6aadb6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0345e8-0b10-4803-a9c8-c6de4540e884",
        "cursor": {
          "ref": "a8c826d4-b30a-431b-9f6c-1ec9a35be151",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f3759d53-c582-41fb-952b-ea376d66c413"
        },
        "item": {
          "id": "3a0345e8-0b10-4803-a9c8-c6de4540e884",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e4620812-ec44-4228-adbe-f85dca310b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5069fae-a8a2-40ef-af65-d56171b5e655",
        "cursor": {
          "ref": "022421a8-061c-42d3-b33e-329063262877",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "16242793-f14d-4c5f-9d1d-c063db8afb68"
        },
        "item": {
          "id": "b5069fae-a8a2-40ef-af65-d56171b5e655",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5f49d42b-fdb7-4148-8251-3ee764096947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668797db-695b-48f2-8109-75a8e83384c1",
        "cursor": {
          "ref": "f2fa47e6-63f3-4a32-9b14-20497910c1de",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "43f5f9e3-78f9-4fa3-94e9-0ffe6c9c844d"
        },
        "item": {
          "id": "668797db-695b-48f2-8109-75a8e83384c1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ca5d2d2a-c6c4-4257-a58d-8a23be04c1ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45e74e5-0360-43be-94af-ede198471271",
        "cursor": {
          "ref": "58dce479-1a54-4e77-b351-c71d1f51f4a6",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c9983b76-ae9c-42ce-af0b-8d96f0ea54b2"
        },
        "item": {
          "id": "d45e74e5-0360-43be-94af-ede198471271",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "dc369f1b-9206-44ce-8d5d-dc6e874dc514",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53328b6b-ebe7-4f6b-9516-d74050406d79",
        "cursor": {
          "ref": "be599b54-bf3a-4c18-827e-bfcf8830aa69",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6289c130-3cb3-4398-af75-85d0650fa09d"
        },
        "item": {
          "id": "53328b6b-ebe7-4f6b-9516-d74050406d79",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "86a6fdf9-394b-4e37-bc08-95f13e5ce35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53328b6b-ebe7-4f6b-9516-d74050406d79",
        "cursor": {
          "ref": "be599b54-bf3a-4c18-827e-bfcf8830aa69",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6289c130-3cb3-4398-af75-85d0650fa09d"
        },
        "item": {
          "id": "53328b6b-ebe7-4f6b-9516-d74050406d79",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "86a6fdf9-394b-4e37-bc08-95f13e5ce35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95764d46-7fd3-4bc2-a068-11412af6f835",
        "cursor": {
          "ref": "eb85bae8-3c32-4da5-a4fa-3dae8c0f6da5",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "edc9462e-6bad-4833-88bb-c8a3d80a7dab"
        },
        "item": {
          "id": "95764d46-7fd3-4bc2-a068-11412af6f835",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0fa7c65e-5713-41d1-a022-129f3e929aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc06449-5d5f-4cd9-898b-62aee86b187c",
        "cursor": {
          "ref": "41c34dc7-b658-413c-8ff7-6a0f108deb84",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f05b5386-b92b-4532-b6fd-4de5fa730056"
        },
        "item": {
          "id": "1fc06449-5d5f-4cd9-898b-62aee86b187c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ba61c9af-20ab-4041-9d99-15cf42a0d74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb45518-88e4-4e69-8b48-462de8946a2c",
        "cursor": {
          "ref": "4f21746b-4860-40e0-a16a-2e3416ece634",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b6e68097-45ee-4c20-b021-4e6e77c3a4b5"
        },
        "item": {
          "id": "9fb45518-88e4-4e69-8b48-462de8946a2c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2886235f-8895-453b-83d8-d0765979b551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab52b167-f3c3-4603-9fe5-2381e796e452",
        "cursor": {
          "ref": "f6b96646-70a2-45c5-a321-5515f07cf5ed",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2596d62c-3174-4609-84ce-5794f7c81846"
        },
        "item": {
          "id": "ab52b167-f3c3-4603-9fe5-2381e796e452",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "aea9d36c-50f9-448a-8bb6-82dd2b6de222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04d1428-1c26-454d-ac57-57b13e923724",
        "cursor": {
          "ref": "4a81e1d3-5968-470d-8d00-5dd2dc3b0d04",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "092ddc85-0f17-47ef-8491-66aefb79ac97"
        },
        "item": {
          "id": "c04d1428-1c26-454d-ac57-57b13e923724",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "19c81ec8-180f-408c-a01e-273c4a816adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542812ef-a5f4-455a-9c12-06c2fff91d2a",
        "cursor": {
          "ref": "72e30f28-47f0-4f09-af69-52be5eb52a9c",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e378e6ac-8bdf-4626-bc7e-b2eb739cb0ca"
        },
        "item": {
          "id": "542812ef-a5f4-455a-9c12-06c2fff91d2a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bd96be3d-661c-4578-bcee-9dd29225258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd246bf-0132-44b5-b5e8-e084e09d6889",
        "cursor": {
          "ref": "bebe45a7-dae5-4a73-b439-63ca6e98980c",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2d2e7c82-97ed-4397-982e-bccfc79839d0"
        },
        "item": {
          "id": "2bd246bf-0132-44b5-b5e8-e084e09d6889",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "755fee49-6f6b-4faa-bc2f-b649a1ebc8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1550a2b-9639-4944-b8b9-8f5f12284a48",
        "cursor": {
          "ref": "633641b6-787d-487c-a6c7-354dde936a28",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b4174f2f-f0fc-4ecf-a93c-03f03a849afd"
        },
        "item": {
          "id": "e1550a2b-9639-4944-b8b9-8f5f12284a48",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ed2d1174-9ffc-4f7f-937c-0eddcd9534e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d26d89-a3e0-4224-bae7-78d6ad173a8f",
        "cursor": {
          "ref": "278f7bd4-d094-4195-ba91-1501b0759a5c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7ef8b1e6-b4a9-4a3c-952c-c5e1379d35a1"
        },
        "item": {
          "id": "c6d26d89-a3e0-4224-bae7-78d6ad173a8f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e8be9389-57e0-4f5f-908c-8a53e545d1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c9747b-e3f6-45d1-ac1b-89631d4ee920",
        "cursor": {
          "ref": "37c56909-7dcd-4334-86df-770e1eb82804",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0fc67898-70a1-4d18-9224-a2385ff8b64a"
        },
        "item": {
          "id": "d5c9747b-e3f6-45d1-ac1b-89631d4ee920",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b0d94b33-cacd-4945-8f84-748b8442771e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb89563-76e4-4633-8d69-eb7322b3c422",
        "cursor": {
          "ref": "d1cc1ce6-0df6-472f-9067-113d8258d021",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9a4ee34e-e440-44ab-a779-e58d36d47902"
        },
        "item": {
          "id": "3bb89563-76e4-4633-8d69-eb7322b3c422",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0b02d0e5-04ed-4b42-82ab-baa556873a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf7c1e7-62b1-448a-9dd3-8b256203dabe",
        "cursor": {
          "ref": "0fc8a596-716a-4021-b9fc-68ee20a340e4",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bf3458fc-f62e-41e6-b8e3-b75c42e16dbe"
        },
        "item": {
          "id": "8bf7c1e7-62b1-448a-9dd3-8b256203dabe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "40e8db41-ec5f-43ce-a24e-06ee41b5f013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da02b633-3847-4f3d-9547-ca67f41553e8",
        "cursor": {
          "ref": "26b49b76-3da2-418e-b61f-cbc232bf7838",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "debeaf27-4cab-486f-9e26-f1a9bfdb274a"
        },
        "item": {
          "id": "da02b633-3847-4f3d-9547-ca67f41553e8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0c390b91-2763-41ba-a5a4-e6569ba43496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3ab7ab-4ade-4bc2-b493-40216fa7fdbc",
        "cursor": {
          "ref": "1f219add-4358-4ba1-99c1-14eb41bb6134",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7d6a1bd7-5588-4175-8f87-5b010c7f0913"
        },
        "item": {
          "id": "5a3ab7ab-4ade-4bc2-b493-40216fa7fdbc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "73ba2693-1d43-4291-840b-69da7617804a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff832575-8a49-478b-b9f6-31b4b05f5c02",
        "cursor": {
          "ref": "cdea65fb-6aa3-4a82-a040-45d1fae1e27c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "51e053ee-5f18-4da7-b56d-5c0aa7a9c831"
        },
        "item": {
          "id": "ff832575-8a49-478b-b9f6-31b4b05f5c02",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "48cf23e9-4f9e-44c9-8391-7e4b35aafdec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba160275-d267-49f8-98cb-ecbcf14e5e3b",
        "cursor": {
          "ref": "12bf25be-14f3-4235-a72d-e96c8595d596",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "050fcf8d-ed6a-40d3-b805-6d8b9b8d6511"
        },
        "item": {
          "id": "ba160275-d267-49f8-98cb-ecbcf14e5e3b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "44ab5212-2d3b-4ffd-98b0-e111cffcfd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5feec7f-89f1-4331-ac99-1d0d282f9bc0",
        "cursor": {
          "ref": "278874e9-3b3c-4de2-b95c-e9883a28663f",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6012f71c-1989-40c1-b795-4cae50197a50"
        },
        "item": {
          "id": "d5feec7f-89f1-4331-ac99-1d0d282f9bc0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4cc56246-0f24-450a-a543-d08bfc84869a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5352a22e-84d9-41ab-8c86-a1d8476c0b0a",
        "cursor": {
          "ref": "8e594acd-270f-47b4-ad1d-75eada271399",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5cbfd6de-6cfd-4aff-9a7e-aaa93c969f98"
        },
        "item": {
          "id": "5352a22e-84d9-41ab-8c86-a1d8476c0b0a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "29977d59-bfad-4cb2-8ad0-4e7268dc04d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c410f82-d7e4-433a-900b-74bb68068f84",
        "cursor": {
          "ref": "9f63569d-6748-4ba5-891c-14c3f18d56a0",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "698cd43e-ac84-434c-9961-326cd9db89bc"
        },
        "item": {
          "id": "0c410f82-d7e4-433a-900b-74bb68068f84",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "22ced0d7-8dab-49a7-884f-b945aa72c543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e34631e-b251-44b1-a76c-84a13d603587",
        "cursor": {
          "ref": "ab29f741-8da2-4ed3-9cdf-43ecef01cb99",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9b6055a1-c7df-40fd-b97a-1aa87b394c01"
        },
        "item": {
          "id": "9e34631e-b251-44b1-a76c-84a13d603587",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5717236d-266b-411e-92fa-b13334b66717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c19bf65-4c33-44d4-ac79-6da5fcb84e0c",
        "cursor": {
          "ref": "a4a2eaf7-1d8f-4767-b234-903aeb211808",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "be1c5353-cdc2-42a9-9521-4d5772af216e"
        },
        "item": {
          "id": "5c19bf65-4c33-44d4-ac79-6da5fcb84e0c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8180e883-3b8f-429b-879f-a57bd12c00ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4303eb1c-ea85-4d47-824e-86d66b7681d5",
        "cursor": {
          "ref": "d23dd188-c633-42b5-a785-44ccccbd20a3",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d99d6212-859d-4007-ae4c-3c1f80b8767e"
        },
        "item": {
          "id": "4303eb1c-ea85-4d47-824e-86d66b7681d5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0b4bba7e-eddc-4f89-9f02-8e1dbfd44dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dceacad8-f816-4ad3-b0dd-5a97fac3ce33",
        "cursor": {
          "ref": "9e4b97e5-fa7c-44a4-89f2-2ea2b2a799cf",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4bd97204-d14c-4802-9d71-90e22c1ee051"
        },
        "item": {
          "id": "dceacad8-f816-4ad3-b0dd-5a97fac3ce33",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5b709f70-4d78-45c1-8a3b-2e88cb5a3b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba78e2eb-284f-4550-b5cb-148886e9c9e0",
        "cursor": {
          "ref": "3ea7a1ad-43cc-4679-b8d5-381d9db1c2c4",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9f25dc4f-f16d-4939-b512-48f4928a032f"
        },
        "item": {
          "id": "ba78e2eb-284f-4550-b5cb-148886e9c9e0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "11267231-5c15-45d6-81ec-1f780016813d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4438b20-6c70-44f6-85f9-989d27b7bb3c",
        "cursor": {
          "ref": "d65b248b-81ba-4ba3-badd-84d86f4b69db",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "06bc3c78-96bd-4dc4-b2a7-4e476ff78e10"
        },
        "item": {
          "id": "c4438b20-6c70-44f6-85f9-989d27b7bb3c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5079fcce-0f1c-4969-9e34-c3326c154001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b1d050-a4d4-4661-9d92-8255db52d232",
        "cursor": {
          "ref": "5483d30d-88db-4ea7-9e55-e69eb9eef9b7",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "00d6a9d1-ca99-4aec-906f-4dffc7970f3d"
        },
        "item": {
          "id": "b2b1d050-a4d4-4661-9d92-8255db52d232",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "42dc89dc-b5b6-4d3e-97b2-dd7d42fd2c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cbef1c-cd7d-4be1-8aa4-d868cac5e120",
        "cursor": {
          "ref": "d4eb5d63-d898-4243-bb63-fd3af4e02453",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "021b71f2-22e9-4ce3-ba0b-f69d61b426d9"
        },
        "item": {
          "id": "d5cbef1c-cd7d-4be1-8aa4-d868cac5e120",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7b2f787e-c1ba-4c60-90d9-1f270762420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8574aa7-ab72-4982-a494-ab2880fe23fe",
        "cursor": {
          "ref": "dd5b45ff-f412-4381-be8f-64cb7e3784c4",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1ee8f8b8-1aaa-4820-9205-4dccd789cbb9"
        },
        "item": {
          "id": "b8574aa7-ab72-4982-a494-ab2880fe23fe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3474fabc-5e05-4c2b-ad62-827f12f2518a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7457b8-6f73-4132-88b3-b8a4750eb925",
        "cursor": {
          "ref": "7727b2ce-9543-4650-bf7e-15ed9560ed08",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2904d147-15ee-4b91-bef7-11564c5849c8"
        },
        "item": {
          "id": "3a7457b8-6f73-4132-88b3-b8a4750eb925",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fd455be3-6b89-4415-8252-4ded4f1e6455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100b8792-30f5-4326-a932-0efd7d7974c9",
        "cursor": {
          "ref": "280a5060-2552-426f-92ed-6dcbf3e11994",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b240e046-985e-4022-8177-7cc92b0956cd"
        },
        "item": {
          "id": "100b8792-30f5-4326-a932-0efd7d7974c9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "40b3488d-de82-452a-aee8-05fb8eb248d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4d8b0f-bb7e-442c-ba3f-6d082f84ea6d",
        "cursor": {
          "ref": "39767b32-f68c-45e6-97a7-1cd3b59b7b45",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "26d396b1-8501-48fd-9e9d-5a7fdcd73882"
        },
        "item": {
          "id": "6a4d8b0f-bb7e-442c-ba3f-6d082f84ea6d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6d2791b6-91f3-4978-bead-e3f65d021e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba6df4f-9a06-4f27-ac2d-edeededdb89e",
        "cursor": {
          "ref": "1f27d1a2-1e76-48b0-987f-539c6cf886ef",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0f060f19-d677-40e7-971d-68ae22d56b69"
        },
        "item": {
          "id": "cba6df4f-9a06-4f27-ac2d-edeededdb89e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e40efee0-2cce-4b6e-92c3-118f899be8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6adf2599-aa12-418d-b583-9766c49b943e",
        "cursor": {
          "ref": "415ac209-9155-43cf-a102-1b7b41c82bd3",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d2c8f302-cc93-42ca-83a1-921906fb4077"
        },
        "item": {
          "id": "6adf2599-aa12-418d-b583-9766c49b943e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d2c98478-fc3d-41d5-9fd8-9a395708a0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc4c80e-23f5-47af-9cca-39e5d4ed8698",
        "cursor": {
          "ref": "c90bdc85-d90b-47cd-8340-70d1a06563af",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "223c94af-2604-478d-9b06-6b97a7a9cf47"
        },
        "item": {
          "id": "0bc4c80e-23f5-47af-9cca-39e5d4ed8698",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5e02a5df-a6e7-4ac7-8242-dbc9c35220ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f766f9-6f89-465d-93c2-e0be59b7c362",
        "cursor": {
          "ref": "69e282dd-e962-43c2-a8fd-52cecfa58610",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d9aab7c9-860b-421b-b778-95d34b2efba6"
        },
        "item": {
          "id": "c1f766f9-6f89-465d-93c2-e0be59b7c362",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d95a093c-11fe-46a0-94e3-f060a055ec0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35955dad-698c-42db-8a4e-4ec147b8fd21",
        "cursor": {
          "ref": "2ad3cb7f-64b3-4db5-be2c-4caa61ae5de1",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e46b314a-8b58-4d24-b956-3c4ae6e8e11e"
        },
        "item": {
          "id": "35955dad-698c-42db-8a4e-4ec147b8fd21",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ba7ea082-c29c-4a48-aec2-c6ccb04ae7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2823aa-df48-441e-9d4c-1b4752cca6f5",
        "cursor": {
          "ref": "4f393174-7e11-4b72-8063-84972d7a55c7",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "09b75139-a7f9-4ee2-b0e7-8f11308b6949"
        },
        "item": {
          "id": "6b2823aa-df48-441e-9d4c-1b4752cca6f5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3d43a10a-5068-4c7c-98b8-abadafc54aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b9ceb6-9c60-4c09-9f42-25ba22852390",
        "cursor": {
          "ref": "2f5799cc-3dfc-4d4b-b9b8-bc21000b5dce",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e94d8fc3-37c4-4df9-8905-7bb3638c8b16"
        },
        "item": {
          "id": "25b9ceb6-9c60-4c09-9f42-25ba22852390",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1f562302-3220-4899-851b-03cc7dc9374e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7e7586-aff6-48c8-909b-41da52a596b7",
        "cursor": {
          "ref": "85fd1943-0aae-459d-aff0-1cc6c8b4c00b",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4d34756a-9ee0-4662-8b76-9c7206c3ffec"
        },
        "item": {
          "id": "5d7e7586-aff6-48c8-909b-41da52a596b7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ce3b59e8-a59e-457c-a918-00a193969ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acb026a-892e-4144-8b94-a5c01c20afb8",
        "cursor": {
          "ref": "7b550aab-e21a-45d2-a5c1-b3098daede39",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e8cb573d-a1fe-4e60-8f47-731a3a163187"
        },
        "item": {
          "id": "2acb026a-892e-4144-8b94-a5c01c20afb8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9cac6f55-8d4d-4ecf-b083-2f41b7c9f981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1674da-6196-4892-a623-53470c424cda",
        "cursor": {
          "ref": "be6c9710-26af-42bc-b2b1-0880b3cf62ab",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d5a9b063-6ac7-4924-9ed9-3fe75ceaf60c"
        },
        "item": {
          "id": "0f1674da-6196-4892-a623-53470c424cda",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b00b8719-e1d5-4851-a5c3-2d07c4531248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2de218b-2722-4f67-80e7-02035457453d",
        "cursor": {
          "ref": "33575dc7-c9fa-4d87-ba8f-cb3c2383ead2",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e4bc0db8-adba-48a1-992a-db1572c9a228"
        },
        "item": {
          "id": "f2de218b-2722-4f67-80e7-02035457453d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ca1ff67c-3ced-4e13-8e33-79739aec94ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d13cf5-b990-4ed9-a90b-10fa61859287",
        "cursor": {
          "ref": "eee1cd93-ac0a-41c4-a3bd-c8eee8404ddd",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d7cd942e-7693-4516-8ebb-f91ee78a9f91"
        },
        "item": {
          "id": "f7d13cf5-b990-4ed9-a90b-10fa61859287",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f2314e90-3f0a-424b-8e47-fb2270096755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be00de6-743a-45e5-9a3d-4226bb25f46e",
        "cursor": {
          "ref": "c2c7687b-5082-4d11-ad67-8bc69855843f",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b5503d47-bd8b-4bfd-8aea-a0e268b7d753"
        },
        "item": {
          "id": "8be00de6-743a-45e5-9a3d-4226bb25f46e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c77a9d94-3cfe-404a-9613-0e4fd8e1f108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fd6f45-18be-44e1-abc6-00fbb62e3af5",
        "cursor": {
          "ref": "0cdcd5a7-c3c5-4b37-99da-983acd8c853c",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7e7fa0e9-04ae-46df-8053-c5e6a1d65cb7"
        },
        "item": {
          "id": "75fd6f45-18be-44e1-abc6-00fbb62e3af5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "92195ece-670b-4ad8-9020-9644b410b299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0365719a-f5b7-4471-b406-82a6ff329fdb",
        "cursor": {
          "ref": "99216dd6-4a10-4e3c-8f38-03f612135948",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5c40f65e-e342-489a-9815-6cae39568193"
        },
        "item": {
          "id": "0365719a-f5b7-4471-b406-82a6ff329fdb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "32ca38e5-180e-417b-a6e3-7989b5d6d81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787d4894-94c4-48e3-bf90-b7bd1641bf9a",
        "cursor": {
          "ref": "70cb82c6-8a79-4cfa-a14b-bfb1d3e0f661",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "404d579f-4b90-448c-9bbb-bf7643cee8d3"
        },
        "item": {
          "id": "787d4894-94c4-48e3-bf90-b7bd1641bf9a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a022d609-0d49-431b-9ca0-fba0fbc81fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd1d5e6-ff38-4ae3-ac0a-41c3dae069c0",
        "cursor": {
          "ref": "f9973a98-ef09-47eb-ab25-3e71b9be1284",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1672afc2-ca1d-4642-88f9-f789ce1f004b"
        },
        "item": {
          "id": "bbd1d5e6-ff38-4ae3-ac0a-41c3dae069c0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7ec1aca3-8d52-452a-bcf8-90bcaa60728a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3d4a4b-a02c-4182-b8ee-be690ce53fae",
        "cursor": {
          "ref": "fdb6f61f-442c-444e-8cbb-31dfd33cacc5",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "73f6d6c3-1ffc-4b8c-b5ff-2f93afea577f"
        },
        "item": {
          "id": "5c3d4a4b-a02c-4182-b8ee-be690ce53fae",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d21c6c65-7a2a-45d3-9149-0d1a9504d1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d399fa-a108-492c-a641-648984a25034",
        "cursor": {
          "ref": "cdf91b46-d625-46fa-9999-a6df98e610fb",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f781df07-24c1-427f-8062-3e125aab3a94"
        },
        "item": {
          "id": "40d399fa-a108-492c-a641-648984a25034",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "31a1669b-aed7-4d3d-908d-10400cee9658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40bcfbc-de87-4182-a1e0-5c16e7ad89b2",
        "cursor": {
          "ref": "b7f59ca4-4db8-47c7-916a-a334941a0dfc",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3fc0caed-5ce2-4df7-ae3b-c31bc1e0cb51"
        },
        "item": {
          "id": "d40bcfbc-de87-4182-a1e0-5c16e7ad89b2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7571195f-505e-47ce-b7f3-eb6b36c0c358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3782800b-4333-44d0-9cc1-2ad3c6373ff1",
        "cursor": {
          "ref": "944d7f05-572a-4e47-8b2d-e6d8bf54e015",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6342c397-f50d-47d5-86d9-4110755e7ed2"
        },
        "item": {
          "id": "3782800b-4333-44d0-9cc1-2ad3c6373ff1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cc1837a5-24c0-4bf8-8338-3e7b77821d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f2ace2-7a58-42cb-a79d-a43ba4b48bff",
        "cursor": {
          "ref": "4efd2e6b-332f-48a8-aee5-fe65d2fe9e40",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "340745ae-0deb-4c47-a636-a215e0873b82"
        },
        "item": {
          "id": "67f2ace2-7a58-42cb-a79d-a43ba4b48bff",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ddc623d2-a48d-4dc7-83e7-b92f65ecd21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5059e366-4233-4a39-b593-f3988516ae7e",
        "cursor": {
          "ref": "dca9447a-265a-4a4b-9422-9333b8bc2457",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d6d916b0-8b86-4084-a84e-3e90429fcca5"
        },
        "item": {
          "id": "5059e366-4233-4a39-b593-f3988516ae7e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1f0127a1-717a-46c7-95c4-386fd7ff8fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560fdf6e-1b5a-49e9-929f-fb3f4d298551",
        "cursor": {
          "ref": "3fde427f-0485-414d-ae04-ec1b56bdb370",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "08577344-6b1c-46ee-8416-f52b32a9a615"
        },
        "item": {
          "id": "560fdf6e-1b5a-49e9-929f-fb3f4d298551",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "26c1485c-5881-423c-a84c-d7e083f0bae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9387f7-97d5-45f4-9310-844c9237fa86",
        "cursor": {
          "ref": "2b5c6649-b2cd-4cec-a4f2-1a1a38b2263d",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d4fd270a-001c-425c-8510-66d7cee62836"
        },
        "item": {
          "id": "9c9387f7-97d5-45f4-9310-844c9237fa86",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c07cbbd6-5555-48c7-af53-e20d9662d735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037e230a-1a6a-44ec-96e3-659e58d8f25d",
        "cursor": {
          "ref": "d2891280-c324-4f94-b439-6730d84602d5",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "85d41617-c7be-4c11-8f02-612df0097d3b"
        },
        "item": {
          "id": "037e230a-1a6a-44ec-96e3-659e58d8f25d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0e876232-640a-4e40-a52f-fd77ac27c35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7dd7c6-55cb-436a-91a9-f2fc95d2f5af",
        "cursor": {
          "ref": "0eef36e2-af91-44af-ba85-3e14c7342713",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "860cd937-8d76-4826-8486-95323c6f046e"
        },
        "item": {
          "id": "de7dd7c6-55cb-436a-91a9-f2fc95d2f5af",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1aeb7600-102f-4c2b-912f-49d33fea6b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5d135f-d125-4ce4-97d6-23abebd87c28",
        "cursor": {
          "ref": "0a352a88-0ead-458a-9f54-647540bdced9",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8c9ec8c2-490d-4a13-906b-e75c60e71f83"
        },
        "item": {
          "id": "df5d135f-d125-4ce4-97d6-23abebd87c28",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "69a0b292-9163-46b9-bcb2-c72ba6da1778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98122fa4-db03-4652-9072-cbb68a3f992c",
        "cursor": {
          "ref": "55492572-71e9-4915-b3d4-703214501904",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4be61860-3bbe-45a6-a0ef-7074bc2ec2dd"
        },
        "item": {
          "id": "98122fa4-db03-4652-9072-cbb68a3f992c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c0aafe7c-7b3a-46b7-adb9-70853b29511e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee5b346b-91cf-4adf-be35-c16e3cbbd8b5",
        "cursor": {
          "ref": "566b006c-664e-4083-bd9e-104ba5590c41",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "269a8e37-60bc-440b-b5d9-e9295b7b494d"
        },
        "item": {
          "id": "ee5b346b-91cf-4adf-be35-c16e3cbbd8b5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1b74a9d1-7fe1-478d-ac2b-d3caecf3fc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfe109c-3dd0-4173-97c3-dd56836c8440",
        "cursor": {
          "ref": "710bebc8-4405-4eac-afc5-cf2a56f348f6",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a33fecef-5bc9-4ebd-959d-3d94158c6c5f"
        },
        "item": {
          "id": "0dfe109c-3dd0-4173-97c3-dd56836c8440",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6edd1654-0bde-4a38-801e-3ddfa7e5c0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154a0fb1-7415-4531-99df-726e2cb2b99b",
        "cursor": {
          "ref": "c56f6518-1d66-4959-a1ed-325299087c4c",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5d046689-d272-4273-ba59-9b972e6da925"
        },
        "item": {
          "id": "154a0fb1-7415-4531-99df-726e2cb2b99b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "685ea936-62dc-4e55-9d37-9a064b9da01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0d48af-afdc-4a4f-aea4-8f798b0db33a",
        "cursor": {
          "ref": "acde9878-03ad-4433-b029-86988839f77a",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5d7fdd3b-480c-4c97-afca-77a4bc80a6bf"
        },
        "item": {
          "id": "da0d48af-afdc-4a4f-aea4-8f798b0db33a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8cf4b754-ae9a-4ae0-95a4-f0e72253473d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d350479e-0019-4d9a-bc8d-83af78804076",
        "cursor": {
          "ref": "c23f2894-f0b9-48b9-ab00-b6e53404bbc2",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "64f52486-d8ea-4960-ae4b-94b8ec9eddf8"
        },
        "item": {
          "id": "d350479e-0019-4d9a-bc8d-83af78804076",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "458c37c5-8b4b-4037-86d5-84f03ad5e976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc80f25-6703-450b-ba9d-e9349d1c1cbe",
        "cursor": {
          "ref": "74c96c26-ef6b-46c7-9f8d-b1ec658422d5",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "74c04f6f-12d1-4708-854b-ac146c9b7169"
        },
        "item": {
          "id": "afc80f25-6703-450b-ba9d-e9349d1c1cbe",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5c0e270c-6b87-4c09-8c8a-2a735e7f6612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796910ce-28ea-4af6-96cc-5dc831a43e8f",
        "cursor": {
          "ref": "7995b643-40e5-426f-9b07-6f9850dfe25f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ec646f18-a6af-4148-846b-98e2170ca0e1"
        },
        "item": {
          "id": "796910ce-28ea-4af6-96cc-5dc831a43e8f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "409d749c-0c74-4e32-a9e8-b76763af9c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab42effe-f3d4-4aea-9401-5f82427b4a48",
        "cursor": {
          "ref": "e6e079d0-73a9-4373-b4e2-20d8b4ca59c4",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1bb55a0c-9234-4232-9e80-d38f5af6275f"
        },
        "item": {
          "id": "ab42effe-f3d4-4aea-9401-5f82427b4a48",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eca34119-0c05-462e-ace2-1334d7fc7a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3da1339-bfab-4d63-9d68-f43879157df0",
        "cursor": {
          "ref": "746ecaf5-444a-48bd-8403-6a4049614e85",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "128381fe-2d05-4ce7-adf0-1e7a016f7bfc"
        },
        "item": {
          "id": "d3da1339-bfab-4d63-9d68-f43879157df0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7b65b60f-de11-4a3e-ac7a-7c0a72dc02ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27ea56a-d48a-4118-8862-bc298b421726",
        "cursor": {
          "ref": "a91a064d-8e5d-4c89-bdb9-826b30c79f5d",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1995830a-efb9-4783-bb6f-67535eda3a65"
        },
        "item": {
          "id": "b27ea56a-d48a-4118-8862-bc298b421726",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e8251b8b-142e-4291-a0a7-0f60812c3f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a54ff0c-ab7c-45be-93b3-bf2698ac5ede",
        "cursor": {
          "ref": "b821ccc5-5edd-44df-a9ec-f47de3958b2a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d101462b-147f-4cc2-bf91-8bcf5f48a7c1"
        },
        "item": {
          "id": "2a54ff0c-ab7c-45be-93b3-bf2698ac5ede",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7cdfb4c3-3397-45a6-90f3-b2aeab303cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3db4a49-a449-4574-abda-1d9c6cc84621",
        "cursor": {
          "ref": "2eaa732a-17d6-42ff-823e-63002ced0781",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "690c614e-2a5c-4b63-86c9-76416099269d"
        },
        "item": {
          "id": "c3db4a49-a449-4574-abda-1d9c6cc84621",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9f1c894f-251f-4436-932a-81b258fce4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d51f76-4a93-4481-9529-76cf1b60233d",
        "cursor": {
          "ref": "dbf694cb-7b6d-43b0-afb7-9ef7d72e6078",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0b62549a-c926-41b8-8ea2-c318cad8b3e7"
        },
        "item": {
          "id": "98d51f76-4a93-4481-9529-76cf1b60233d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a8eed57f-a877-4e01-928b-9f732f3ed05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07e67f6-1af3-4114-a23f-1fdf390eddbf",
        "cursor": {
          "ref": "89bf4736-d21a-48d6-accc-f809cd2742da",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3d723ee3-4f8f-4582-a29e-afcd470c279e"
        },
        "item": {
          "id": "f07e67f6-1af3-4114-a23f-1fdf390eddbf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a7d2d73e-7bf9-46c6-9dc8-3bbe7c0cedad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284400ca-656b-4117-afab-c33dc12b879b",
        "cursor": {
          "ref": "c1a7a864-ddbf-4659-8df6-f1185b8b6e1b",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "77679a80-ef07-41c4-b69e-7db243fc2c26"
        },
        "item": {
          "id": "284400ca-656b-4117-afab-c33dc12b879b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0a6707d2-548b-4b39-989f-463c93dd65fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59995df-a360-4af4-9c8b-df9a0b9b7326",
        "cursor": {
          "ref": "1e6f43e5-96f2-4959-8e21-d8c177006972",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "85cbe592-e37c-4abb-ae04-02e7c93b905d"
        },
        "item": {
          "id": "d59995df-a360-4af4-9c8b-df9a0b9b7326",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0340c02f-5576-40c7-ac53-894b1442986d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10759e0e-60f2-497c-a831-821c340ab35b",
        "cursor": {
          "ref": "ae034e13-ed1e-4dc5-a763-ba3a7ceab4d5",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6b63e21e-e93c-4479-b0ba-428245303730"
        },
        "item": {
          "id": "10759e0e-60f2-497c-a831-821c340ab35b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c6552bcd-39d9-4059-a339-bdeafdc503e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1beecae5-0e11-441f-b07e-1174f205beac",
        "cursor": {
          "ref": "33ce8cc4-f217-49d0-bbdc-afc438e97639",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "31b6d6ee-46ac-444a-8f63-85bee948fce2"
        },
        "item": {
          "id": "1beecae5-0e11-441f-b07e-1174f205beac",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "373f40bd-6368-41f8-bf3e-8380bd6426ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8cde44-9ce4-4454-89b3-fcaf512934f4",
        "cursor": {
          "ref": "5ec9dd49-6d0e-4c48-9d03-0772e4086082",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ef99cc85-38ef-4ac8-b254-b2b02ad6dcc2"
        },
        "item": {
          "id": "bc8cde44-9ce4-4454-89b3-fcaf512934f4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "43a1840a-740c-429d-854b-11a12d012f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebca049-67fd-4a82-aea2-b3e0a242f4a4",
        "cursor": {
          "ref": "a6ced805-7203-47c2-963a-5578e96c8968",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9fee2dba-c4f8-4d22-aa4e-cf1039d56797"
        },
        "item": {
          "id": "7ebca049-67fd-4a82-aea2-b3e0a242f4a4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "72ee3a14-f769-4c9c-af28-bca19534c59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75385147-73e6-4bf6-abeb-d5a8155207c5",
        "cursor": {
          "ref": "0219111a-cd4b-4551-ac41-95d0e71c740b",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "61431041-077d-410e-b62f-701a60efb9a3"
        },
        "item": {
          "id": "75385147-73e6-4bf6-abeb-d5a8155207c5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9dc6708b-21f6-479e-9813-687792fd7cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3df1d8-846a-4e68-babd-9ee796b16b84",
        "cursor": {
          "ref": "b61d5a25-c676-4116-beca-a8d2a12bc1d0",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7a11f07e-30c8-45e2-a4ab-f580934b8043"
        },
        "item": {
          "id": "2a3df1d8-846a-4e68-babd-9ee796b16b84",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8c0f73b2-6262-4372-8f92-94de665409f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a599f788-acfb-4796-88bf-590fab0cc6e0",
        "cursor": {
          "ref": "f4d37b79-649c-456a-8db0-674b99728b28",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2b603be6-fa16-4f15-b621-ce46b07f1a57"
        },
        "item": {
          "id": "a599f788-acfb-4796-88bf-590fab0cc6e0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0c897ba5-0c47-47b0-9b49-d3888fe71ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5365e442-1144-49f5-88c5-83aea4d9c907",
        "cursor": {
          "ref": "203bc2b7-6717-4c2d-97cf-111eb7e6a7a2",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9c52e750-d3ba-43b9-915f-d573cdaf3cfa"
        },
        "item": {
          "id": "5365e442-1144-49f5-88c5-83aea4d9c907",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "13a60be1-e0d9-45f3-8637-56a49dc32bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071f0285-30e6-45c2-abfa-62ab7e516eaf",
        "cursor": {
          "ref": "ba125487-dfd1-4ea7-950f-9c0605a70509",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fb76661c-a474-41a1-856a-19cfc64c58c8"
        },
        "item": {
          "id": "071f0285-30e6-45c2-abfa-62ab7e516eaf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "09ae242e-067e-4797-ad39-c09ec0825d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8e3939-1365-4298-b90b-deb253b2b95d",
        "cursor": {
          "ref": "3c260b16-233f-426e-ad96-db8f49535003",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c938ad40-b312-45e5-b3d3-041f8c4173bb"
        },
        "item": {
          "id": "0d8e3939-1365-4298-b90b-deb253b2b95d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bd92f8f1-6ce5-433f-aad2-e99c43d9eed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c5e4e7-6193-4a01-9927-a988f33dbfd8",
        "cursor": {
          "ref": "75338c1d-d16a-44d7-8fb3-8c5facef7430",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5406ff91-8892-4b0f-82a4-a84f2d1f371b"
        },
        "item": {
          "id": "10c5e4e7-6193-4a01-9927-a988f33dbfd8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7a99f696-8406-4c66-8b4a-c678553456d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f292b8a6-9ef6-4d3a-81de-44d5ba00d929",
        "cursor": {
          "ref": "f88607d3-cbf8-4a8d-9b96-2bf754756292",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d04e9d14-30c5-4ae8-88d1-5d3639242140"
        },
        "item": {
          "id": "f292b8a6-9ef6-4d3a-81de-44d5ba00d929",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a6e4d97a-95e7-479b-92f5-ff42833c512e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9523c01-9505-430b-b3fa-108977d60108",
        "cursor": {
          "ref": "6c73c2d4-e446-46f7-9f04-42539a1ffc65",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cd088e78-c471-4025-ab9b-34a5cb31b55b"
        },
        "item": {
          "id": "b9523c01-9505-430b-b3fa-108977d60108",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7db1fc18-30db-450d-bfd3-ee6639028663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e661ff7-e6e3-4dd7-ac39-688027ad0714",
        "cursor": {
          "ref": "8208fa56-5196-492b-a8e1-0dafb9bdf0f1",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c64ded2f-66e4-47c3-b385-c801f051db56"
        },
        "item": {
          "id": "1e661ff7-e6e3-4dd7-ac39-688027ad0714",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "15460db5-0795-4b07-9413-ebce20bc9822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76911db0-9681-4298-8e08-5821f9dea591",
        "cursor": {
          "ref": "fc0588a3-7cb5-4845-ac41-28ec547a067b",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "24054ad7-f89f-4948-a861-94444f4e13f8"
        },
        "item": {
          "id": "76911db0-9681-4298-8e08-5821f9dea591",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "af6965ef-dd57-43af-b296-c67020913360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7a3c44-f6f8-47c2-9518-a01f1e39bc08",
        "cursor": {
          "ref": "61a973f5-c419-40fd-b1f1-da19acbdc2c1",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4e2f4d4c-2340-4a92-a6c6-c69775f22e5b"
        },
        "item": {
          "id": "0c7a3c44-f6f8-47c2-9518-a01f1e39bc08",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "07a1cdc0-0bd8-43f2-804f-3d3476fdb406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d382455-17e5-42e5-bdfc-0f1e31cabc8f",
        "cursor": {
          "ref": "7ca451e1-a75b-4918-a011-731cccd474ee",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1fb3a58b-e3ec-42d5-aa2d-9f29b48fc48b"
        },
        "item": {
          "id": "5d382455-17e5-42e5-bdfc-0f1e31cabc8f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2c72c869-755b-45f8-8fa2-bc35623c7b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd8679c-f069-4b2f-a448-389726a0373b",
        "cursor": {
          "ref": "79a4e5aa-dc87-4c65-a67a-e3fbca54d01e",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b63ab70c-ac34-41c9-a8fd-ae1623e86331"
        },
        "item": {
          "id": "5fd8679c-f069-4b2f-a448-389726a0373b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "219a46ce-0be5-4efd-9db3-bdcdd35e95a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0963ccc1-1873-465c-af9b-ae7cba8520b0",
        "cursor": {
          "ref": "dc0d1964-3c44-489c-8021-e949434868ff",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8c28771f-a2a0-4e1c-814b-44c47e096f36"
        },
        "item": {
          "id": "0963ccc1-1873-465c-af9b-ae7cba8520b0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ffabd7e1-a229-467f-a711-5c1fdbb4eed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9ef3ce-a7c0-4191-b640-5eda539c80a6",
        "cursor": {
          "ref": "03918096-f329-4cc8-a165-245fecbbed45",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7f11093e-830f-492c-82fd-699225963b69"
        },
        "item": {
          "id": "de9ef3ce-a7c0-4191-b640-5eda539c80a6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "63f99fb2-22f4-474b-8028-48c61d1830d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d844ab-17a3-4fca-90ea-d23f9b7ad98b",
        "cursor": {
          "ref": "c82bb039-ec9b-4268-86cb-9876b5ff52ba",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "151bb34f-1dee-41a3-8850-671bb1496cbe"
        },
        "item": {
          "id": "c9d844ab-17a3-4fca-90ea-d23f9b7ad98b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f7e98525-1200-444b-895c-f07ff2fe51b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0138abba-451d-4924-88a5-d2d7b02e682b",
        "cursor": {
          "ref": "bce79f47-1a9b-43f3-8866-18951b853fa9",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b10dd7b9-8367-4e83-a56b-6dff02feb5ca"
        },
        "item": {
          "id": "0138abba-451d-4924-88a5-d2d7b02e682b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e3c521fd-0eda-4176-a56f-5e8eaffb41a1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1226f397-d9d1-40a9-95e1-0533f0321079",
        "cursor": {
          "ref": "eb581b24-738d-4059-bac3-fd4191867d95",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "583cc343-b582-441c-9c11-233c28fc6ccc"
        },
        "item": {
          "id": "1226f397-d9d1-40a9-95e1-0533f0321079",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "89084176-f678-4d3e-8ba3-4628d4fcf6c6",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3557cbcb-707a-4abc-8695-a652962a2f87",
        "cursor": {
          "ref": "da90df99-f796-408e-ba61-d06fca981a03",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9024532a-2c1a-44d2-9555-92c1c5cc8207"
        },
        "item": {
          "id": "3557cbcb-707a-4abc-8695-a652962a2f87",
          "name": "credentials_verify"
        },
        "response": {
          "id": "08177383-2870-4725-9bb1-bfeb3ecf8f80",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49970f22-1e2b-4d34-9d62-3ce19fa07578",
        "cursor": {
          "ref": "34a3b9d9-a6c2-449f-b4be-6de22a005963",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "89a033c5-b7c3-4ebf-ba23-305ef0ec4a94"
        },
        "item": {
          "id": "49970f22-1e2b-4d34-9d62-3ce19fa07578",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0cc18aa5-dfd5-44ca-b15e-d5e8b05a48d7",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2442504-ec7a-470c-89a3-01204941ae7c",
        "cursor": {
          "ref": "9c78e74d-95dd-409b-8434-85b677f9aae1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "88decc6d-ca3b-4f8a-9192-d9f0592d219b"
        },
        "item": {
          "id": "b2442504-ec7a-470c-89a3-01204941ae7c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "675496a1-f5e0-40da-97c7-5fedb9f581ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2442504-ec7a-470c-89a3-01204941ae7c",
        "cursor": {
          "ref": "9c78e74d-95dd-409b-8434-85b677f9aae1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "88decc6d-ca3b-4f8a-9192-d9f0592d219b"
        },
        "item": {
          "id": "b2442504-ec7a-470c-89a3-01204941ae7c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "675496a1-f5e0-40da-97c7-5fedb9f581ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2442504-ec7a-470c-89a3-01204941ae7c",
        "cursor": {
          "ref": "9c78e74d-95dd-409b-8434-85b677f9aae1",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "88decc6d-ca3b-4f8a-9192-d9f0592d219b"
        },
        "item": {
          "id": "b2442504-ec7a-470c-89a3-01204941ae7c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "675496a1-f5e0-40da-97c7-5fedb9f581ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5435ce20-0820-4083-80dd-3b4c6d5813ce",
        "cursor": {
          "ref": "218a59e5-b8bf-429b-80e0-a4f83bb8f77d",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4c970bbc-90a5-4f7f-a18c-459d76b487c7"
        },
        "item": {
          "id": "5435ce20-0820-4083-80dd-3b4c6d5813ce",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "14746a64-194c-402d-8422-c26bd000294d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7014cd33-5310-439c-a061-9e9d7f1d75f2",
        "cursor": {
          "ref": "404e5f08-ca4c-45cf-8e22-adfc12bc0b80",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "43a967f7-82dc-421c-8fb2-8a67d2ac705f"
        },
        "item": {
          "id": "7014cd33-5310-439c-a061-9e9d7f1d75f2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "652589b2-332e-46c0-8c4c-6f2f6208aed8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7014cd33-5310-439c-a061-9e9d7f1d75f2",
        "cursor": {
          "ref": "404e5f08-ca4c-45cf-8e22-adfc12bc0b80",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "43a967f7-82dc-421c-8fb2-8a67d2ac705f"
        },
        "item": {
          "id": "7014cd33-5310-439c-a061-9e9d7f1d75f2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "652589b2-332e-46c0-8c4c-6f2f6208aed8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f1948a-e17a-4081-9d24-b4b4ccefdb68",
        "cursor": {
          "ref": "5beddee5-918d-4124-8d2d-252e67b183b5",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ae1aa720-d550-4161-9798-621efc84ca37"
        },
        "item": {
          "id": "f6f1948a-e17a-4081-9d24-b4b4ccefdb68",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0a75ff35-116b-4bd1-bf8a-59434cdc61e0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f11214-9255-41a2-af03-b258574bb9e5",
        "cursor": {
          "ref": "9f1c3ab0-3677-477f-8b5d-81dad7b35f48",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "93f5deb3-e366-4f05-b3a3-2d40fda7b00a"
        },
        "item": {
          "id": "c0f11214-9255-41a2-af03-b258574bb9e5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "837dde62-b45a-41fd-8a8e-d9fd080be36a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f11214-9255-41a2-af03-b258574bb9e5",
        "cursor": {
          "ref": "9f1c3ab0-3677-477f-8b5d-81dad7b35f48",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "93f5deb3-e366-4f05-b3a3-2d40fda7b00a"
        },
        "item": {
          "id": "c0f11214-9255-41a2-af03-b258574bb9e5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "837dde62-b45a-41fd-8a8e-d9fd080be36a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921f6022-56ef-40df-8d9b-ae4f05b36357",
        "cursor": {
          "ref": "b77c95d9-6fb3-4184-b526-d41227c4c7e4",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8a23e979-9d74-4fd1-8501-41768b281c5b"
        },
        "item": {
          "id": "921f6022-56ef-40df-8d9b-ae4f05b36357",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6588eaa2-5aa8-4d4b-9a35-0df99c61653e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}