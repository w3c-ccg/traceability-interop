{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7a789f88-6523-4bc9-9a8b-ace0ddd611ad",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b347242a-1a52-42db-b636-2c2106e966f2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5722f261-d299-481b-9c1c-5c87c59d7a77",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "532bde53-48e8-4734-be6a-e057a0d84c2b"
                }
              }
            ]
          },
          {
            "id": "008c7bc7-3f93-4277-8d43-45be50ef9ae1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e57194a1-9308-4b79-aec3-37cf5d943c46",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f4772ef8-0ce4-4a96-b6a6-b9beae9416ed"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "20d24228-f141-4a4d-a884-4c66787bdcc9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cca66dbe-3839-4182-a99f-bdf1bc112ccc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ee98677-64d4-4e20-b3ef-5cd26e950248",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93ebc87d-7678-421d-8c52-dbb05672a50c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d363d7ad-2428-4b13-ba26-7af202bbcffc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7128ef53-24af-4b28-9638-d1707fcff7e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b9c551e-5e15-433e-83f9-ff298f164a03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0bfb2e9b-437f-43a5-b24e-8514c90f50dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74028737-7e30-4662-9f03-8dc6b3fe16ab"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11b4c280-8546-49f2-ada1-392290023bde",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "50834c66-d53b-453e-a0a5-5fb6454d7a92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea3dbd0f-8154-45a2-9ed2-f58157ad1ea2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dc0ebf9-ebc2-4f3b-9662-479a85e8d958"
            }
          }
        ]
      },
      {
        "id": "f0298c40-e787-4375-bb88-fb5ca3625c1b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e2c1385b-f100-418d-ad9c-da8d2cf5f16e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3b77bb9-3503-475d-850a-a6c19443c7df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a81e4d17-16a3-44c5-92be-9e69fd1933bf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244138c2-d2d5-45fc-ae26-66223bd7665c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93cedf0d-60ba-4166-b6b5-c7d74d83581e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d801f3d6-e6f7-4808-b723-77fc8182a14e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bade74c-4369-4a18-ad5a-5dfa0ab34379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa59333b-117f-482c-a759-0d1e982ab361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664dd950-457f-44e3-84f3-cca5c18e6320",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a631f9-8d9e-4637-a77f-11aa687dfd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a623fdc-e217-467b-952b-032001b59c7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0186d017-924b-46ed-8891-065277d257fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba69ef77-6990-4e0f-9471-95afec4450e3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e9c5db-1261-4af5-9d7b-c3fd8612281d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0b799f1-7429-499f-934d-b87afad7e3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6498fd32-3e7c-4209-8a57-5cb42ea1ad5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62180b00-4ea5-4910-a0ff-8cfc11724de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c31950-656b-4820-a48d-83b845f7df65",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b72abae-68ac-4b25-bf38-34192693c888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7577634-8121-4dc9-877f-5782249dc151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5484c7-f912-4500-b10a-47e01fa50570",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e72a0414-24c9-4fcc-9350-fd5189d027ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "94a87037-00a7-414e-bb18-486b8ee1653c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed431f57-fd7c-4852-945d-45ae72599c61",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56b210aa-d6bd-4f06-be81-8b3ffe44756f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f88cdece-0b23-4302-9564-24ed13f5b3d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99e1b302-dbae-4a8d-ade6-d4d619826bc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "52b791a8-6a21-40e5-86e2-379b512cf0c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cdc04ba-b75f-4c58-9117-aa609ae923e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6080168-5f3f-4527-a423-47b3a751bc5a"
            }
          }
        ]
      },
      {
        "id": "8bf993eb-f8f5-4694-b1eb-4c93e605fd87",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "261e988f-c143-4d11-b30d-883fa0b097aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2b2c597-0b57-4066-953f-09ffbb562536",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5cc6f481-a0e5-4fba-b27d-6f8d80473f52",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1eaef43-5021-4ef9-bbb2-c1de7db4dc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a9e11c-8c29-46cc-aace-54349d9256ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad068123-a144-49d9-9db9-22545463b059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e54f814-dfbe-4250-bf35-fb175501b057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e616d2-7e51-4d6c-ba8a-0c5ff8be344e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6607ae0-c4db-4523-a203-14d30686c975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1720c8d3-cb3d-43ed-8d22-abd782dca1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d604f2-0c30-4a77-a0b6-84822a3348be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b029209b-a49d-4485-b845-91d7f28b2c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92816318-6886-4204-ac7f-ea0f657b8852",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede5f8f1-af6e-4e5d-89c6-9eb04bfbec53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02be5d79-f073-44f0-acca-9ee0601e75b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c814fc-a808-4686-9780-36c8f19d0673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc47eb62-29a3-47a1-a3c3-9325d3995b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0118a596-0904-4004-9fd1-9e4767b1a6a4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278a54b4-ea78-4a2b-98ca-fcbd5f9742db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edbee56-ba92-4dad-a2e4-53719e014467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825364ca-554d-4f34-8326-5c74e114e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cf9910d-95e1-4c0b-93c6-91dc691b5388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6841d937-caad-4f45-95e8-0fe5fda0c5e1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a1f200-c355-4044-b813-1efd26d369dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f69ec61-735b-4a98-a909-fdc1195245da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39e181d-025a-40c8-a450-fc3ef75810fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa797be8-6574-47cb-87e4-8377675ba7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3139d4-4a78-4b2e-8df9-69f24a9aecda",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7d30a6-54fc-4dc1-9fd2-fc979a654619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a308fe3-2061-496d-86be-960634ccdf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d1d227-1e7d-4fd3-89b0-e6755d1ca3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e4b29e2-0668-4f55-85e7-24dd24cff3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a88239d-8eb8-4f1d-b7a4-0ac3bb94429e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929325c1-3216-4c3d-84f4-71b08b4b12ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6d21b3-92bb-475d-9b43-5af71b877ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eb9ce7-0818-4188-8136-10c66a1c247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69b6b0ac-8447-41ae-af9c-179fe264841e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed4d2ea-26af-4635-bf3f-e0fd9f92b6b5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac80ffb-f427-44be-930b-ac093ab03076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996d14f9-e12a-4780-823d-d78325c1412e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e949d6d-61cd-4453-9041-4459d6a27025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8b27c53-796e-4527-8b56-a4503fb91852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19bbb0b-d290-4d17-bb67-c4e947038ad5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3f02b0-08d7-4366-94e9-3d65a9a52331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4345e9-0e50-4fc2-99b6-8fa3c2c9357a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a09a36-ce26-437a-8ca6-544d825bd884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "238326a1-6c79-42ac-a22f-29754e37e2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064469a3-c879-4801-9569-53ea2fa570a3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea25eda6-7b22-423c-aa5b-81d655b2d689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d7527e-755f-4164-a36f-7215fb70a78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1652c132-b629-4160-9c3c-f1d044b09270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d1a1566-9c99-47bb-973f-608015d1b11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecde012-d4e3-4c32-9f9d-0b0665a460c5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378d058c-0323-4401-ae18-7e51466d88d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e5a985-2bc8-42cd-88d0-dd4d338d7cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3af991-48b6-439d-a441-a78ce6fc6c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e5b80ac-e103-4d31-84dc-2fea6b54f665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0545c4a4-bc04-4598-b9a1-df1af5f8f141",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0900952b-9a2c-4e96-87a0-e26a7e3d2a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc1501c-dd80-4fc5-a605-8310ea89eec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457f3a4a-0b4c-4bc7-a4a9-2663e51ecafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3e7775c-b758-45b4-bb40-43c990cfc360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563af018-bd71-45aa-88b9-ba0bc34e52a4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe45085-b10b-42a3-bbdd-d1ef27c47f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76542876-9943-4b15-8c12-08690800e9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63dd437-c2b9-4f93-9e7c-fe159e96c235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b6c2e08-8765-482c-acba-ca909233f297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bacf73-ab66-44fe-899e-d2d75cc306fb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840cc4ab-1156-4849-abe5-a05e1d273af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2546254-d4e7-496f-8585-65563f374b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf60042-872e-436a-a1cc-c31cd992c663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e3a6ed7-403c-4e72-9d60-b3b9b4d41b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5eb7442-38d4-4a1b-8737-0be9641fcb94",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26949e0b-2207-4053-9eb9-03e2997c2efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25c39c2-b181-47ab-af78-5bf282f123cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e341d2d-5663-4cd5-b05a-1a3f9d73f50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ecda5d7-c847-4118-83b0-142f80590adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d608acfd-82a4-43c0-a7d4-c6a1189face1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8a5ded-3ead-44e5-997a-18ba2934af08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db98f6b-b09c-4112-b039-088ea3dd2244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893777fe-e81a-48de-9af6-17920d6a8d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7e31a3c-6137-49b5-8b0e-06130cc50005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e78a25-f3b8-4dbe-8d2d-d6d8c87aa5ba",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82cf8c4-2baa-42d8-8484-f2fc1cf38524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd02ffb-0bf2-4b61-92a2-bbd8c5c4cbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa629c37-5666-482d-93c9-26f480743905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9c655ac-e853-48d7-82f1-d20e8abe6fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173f559e-6c07-4b86-bdff-20450a31b28a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3395417-9f5f-4afe-9a04-aacb30e40d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7c48ab-e02b-4d63-989a-c2da4de8fb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ed4b86-9513-4e8a-8196-440075d86f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4ec549-31ff-4bbe-953e-54551fef95da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef58bfc-00b4-4f99-a2c4-14ff5d99853c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c564e2-38da-4213-9971-2431e9d86c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2c6709-a9cd-4368-a789-c224baeec665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee85235-df7e-42ba-825c-88cbb1c58ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9669aca4-ffd1-42c5-97b0-9be58ca279b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db44d05-957a-4bcf-b163-591b56e78d69",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1397aaca-614d-4082-9e8e-2fea5147368c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e84ae9d-3dee-4ae3-a0cb-703aa26a943d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5652dec9-adbc-45d7-bb0f-70b770d41507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b7ae7f-2149-4586-b1b6-b524baf84d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca771c14-d2c5-4fb7-a299-c6f9569b58fd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bf64ce-ce30-4a0a-892f-b342bd570f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafd41ea-0c30-48c8-8c72-f075aefac4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec254f1f-94ff-43f8-ada9-821aaf2f874d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd78d7f9-66fc-49dc-8ecc-af67ca15dc8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f94eb4d-f2cb-47e3-bf63-b38b8b777358",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e709d44-f26e-4f13-9d63-31e6bfcad5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb06998-ca3f-4349-94dd-4186e62cfaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beec8d4-2bf9-4310-82e7-93210d5ae8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "396c57df-0792-40b3-9fcd-db56eb63f29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24967d3c-4791-4a54-9330-10cad47f2cbd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44277805-ceab-4fe0-b74a-0f78a0660ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0201f34b-c9c6-4e3e-848c-21c07e5dd965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f7a043-2dba-436a-9eb7-62870b6eb28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f42a459-3715-4e9f-839e-fc425eb4fc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218307f2-67ef-4db5-91a7-d0f2387eba64",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5ad025-c282-4d04-9243-52b50b65c91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d551976c-9324-49ae-8fff-2c0ffc11ab15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1b269c-3493-4ae2-8b22-83a243a72cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a16782e-8494-4421-991e-937f025fb7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f984186d-e3ad-40ea-8656-9b38486f1cd2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e25cfb-4f8e-4db6-8dd7-2079296ac0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fb652d-7fbd-4c89-9852-abd45418789a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8d787d-2aba-4f54-a42e-863384b6984a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab8a073-bf71-43bc-95af-165f4841ff2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddec6cab-2c87-424c-a74c-edb7cdd6fb11",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cd09e0-f16e-432b-9c8a-c54d110ede74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6247f52-f73d-4632-a385-92e69815e762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3c2f9a-8b82-4d88-b7ca-b503195ed146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d6b3b4-8cdb-4436-89c5-1c31e6e7296e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60260105-0fb8-4e65-acdc-15bcbe18effe",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b0fc8e-458f-4324-94b2-ca50db96b681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5b00e5-777d-4041-a5ba-b40c4707bb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcc3800-2202-409c-a130-134d8db28699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e1252c-1186-447c-9650-cf0fe8c7a2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cb9a8c-7fe1-433d-a4d2-6bb00e39299a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aff01de-1536-45c7-b8ab-d6fc3938e03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ae3af8-3c92-49d1-9ff1-e8f96183ad9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0603882-5072-4662-aa6d-344ed252fdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "269758a0-355e-4b93-8ad8-e7f22a444cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d72427-c028-468a-8077-43c8d66d02d7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f03a8c9-58d7-477f-a3f2-c277580cdf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a793ff-64db-47c8-acc0-dc436d18ed01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152fe2eb-ddb1-42a2-a4b9-0ef3a723d663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "967d990c-1408-4e8d-95a8-541ee5627276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a250f73-7c3f-4757-9aae-2cd25b8c3b58",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff30b7da-a4b7-4c00-a45d-2a1bc8ac5db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da5b96a-32ea-4c35-aaca-97fdd8ee22a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800e08f1-7e0e-4dbe-bb78-330eca5890b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ccba20-711d-40b0-8768-7b232d7a23b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9f4a7c-ed6d-4a98-af64-d24f8242e9d9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afa2df9-2a47-4141-a45b-066fe0168817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ac5dff-43db-464f-bcbd-e6e92e036a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7194331-9fb3-4d73-a4d6-4ca9b248d624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "228d2d05-548c-4b9f-9f00-71a70ca4709d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef7e8bb-85da-4852-8472-acb787b10d9c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a58f8b-a41b-4481-812c-4f44c5668847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbda8076-dc64-4705-a150-1a1cea7d38c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2411c66-4e9b-4005-b389-937c2e16e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "179f4a5d-3564-4ef9-a270-81ae503ebfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f889131f-c240-4afe-aff5-2d665bca3f81",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abafb339-2d21-4dbc-af2b-91208baf8d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f855ecaf-146b-4c7b-8a85-96d07b804586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b23134f-5349-4b5e-90d7-02adf553e0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50066b32-8333-4e37-8a3c-f0b768c67863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f798427-223d-4cca-8fa5-833c20b127c3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df22fc10-c99a-41a6-80fe-5f52eb79d8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b129f5a-901c-448f-b5bd-f32e26bf93aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62081e37-5049-4c12-a810-f97eef06e282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2adac8f0-6fc8-4a3c-9382-f274d89a59c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f54f71f-3011-497f-9125-8743da3c8bac",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78280fa0-1dcd-49ca-b02e-8c9e120a16d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bdac01-8c98-40ce-96d9-06f80e16bc93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7148a445-38f0-49da-a274-f6b66b29014d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9255a17c-0250-4410-8e8b-54e021ead8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4143e2a7-f75a-41a2-b5e9-7aed27c8f1b5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c9b663-ecbd-4a12-a856-7ec5caca95c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c3dce82-239d-48c1-8d55-2d2e47724376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4dd8df-93d5-45cb-8bdc-2f1eff28c429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdc79c3-a2b8-4828-b54f-a4eb09a8282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf4b545-68ba-41bb-bd78-04f9f970e9fc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e73b68-9752-467b-a0f7-d9cd5ea89fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a360c5b-bfb5-4bbe-9ce2-a991d19f11eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f4ffb2-9fd3-44e8-b8e7-2740ce577c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "627741e7-b64d-46a5-93d1-9cd90db56d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e7bbc3-5d24-4429-96fa-e55d973d28d8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b15f772-b09e-4e84-acae-05fe219d560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a46c68-b136-4e0d-806b-345acbb40e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a101657-1c75-4163-b6bd-f95329ac6ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b420eb6e-22a5-4592-9d01-97be56f317e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a213025f-f6ce-45c3-b3df-06b870be44d8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3229517-646e-4245-943d-8eaf21fda073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd16b78d-2b02-4ba7-bf05-108a7e698248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea3ca86-faec-4fa6-8dcd-e9cb09b7b167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cb0d5b7-bf7c-4863-a502-99c121a1aa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc12485c-f3c8-4de0-8461-fc4ff138a64b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f7405d-4a3a-4682-b088-f1aff6b16546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6491baf-3286-48ff-b5b6-a4e2ca052acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae9bf08-c5e9-4733-90d6-4ca5fccbb867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c455547a-6802-445e-b069-a446e76238d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb44c2f5-9a9a-4613-9e5b-de7b302ee001",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97691f18-1937-491c-8142-69494e260d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95632810-4b5f-4419-843b-ecaf6e789a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d82c4e-f405-48d5-aaa9-5a05ce6dccfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "22d3f023-768a-44dc-ba8e-395b105ec04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5875b834-2eea-452b-9cb1-e65ee5b9ec66",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4903c13e-afe2-420e-a4cb-d0482dabc861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad11258-fd8d-42b1-85b9-1e16373b3bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadd693d-3100-4e6a-b3fa-31d7b12d37ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5473d30e-0db4-42b7-bccd-e20dea260896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbb2798-36fa-4bdc-b50f-4c7ac07bc680",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bfc59b-53d2-451e-b613-00661c8fa010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aa64b7-c448-4198-8b41-bf357ec1525d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97221e5-f018-48c7-a76b-00486217e886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c91067-9af1-45e8-be3d-a9a41901a21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bf37d5-fc16-4a58-a2e7-bd416516c91f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d939f313-a945-4f05-9cff-80d7e61880e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f40cba-ace3-4893-937d-5502593ca4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556cf620-944c-4d48-bd03-ffc7d19c23f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d300b300-73b4-4633-a426-1f454dc9a1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4422ec-201e-40a8-9953-3bf212cd5f49",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dea130d-8c96-4095-8e88-3331815090e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f536006-77b7-4075-909c-1825719f9b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff37dec-f548-4ff4-b9f6-185195e88b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a421ead2-8cf2-4e80-b9e1-c0354f2b8690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7fc89b-301e-4f52-ad67-61925ba53d3b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669d94f2-44b1-4e24-8292-371e828fc870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3096132b-7241-422a-9bda-28bdc79f3882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446a90f9-afd9-44e3-8ddb-0ddb1a9173df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba493967-324d-4f38-8944-add41f1fc0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fae18fa-350c-4598-a929-63587f036d12",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3ceb64-71e5-429a-92d4-b7e5a850ca7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ece2c1f-fec2-4e53-9f38-461c90954e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cec2292-ec8e-4493-a4e6-82bbdac91f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49fae5cc-db88-4ad1-a9cb-cfa43d2768de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139e308f-bcba-4ec4-92eb-f9010a5f154f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3e96b0-9bae-4fe0-91e0-88f12ce446ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b95006-2c11-41e5-b4bd-83995355d8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f0f78a-e040-4a4d-8ab8-ad3983281691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "848f72d5-3eac-4d12-86fa-fe0b5cba2339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d6937-2d20-4d7a-98ff-177597d0f1a5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6661771e-fb38-44af-a9a7-e7448822aa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17cf22ac-9b4a-4927-a982-d660e9bb86e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75477a8d-348a-4795-b6d7-e80366e9a26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e742b966-8d36-42d8-b70c-320093155824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a241f75-f611-4d13-bd44-c4b9bd099112",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ca944a-26ca-43e0-a3e4-ddde9d97c4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2134e2-c75c-495c-ad50-751ec310baa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e21575-7baf-4b9a-9e98-99f7b33a99ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c15ce1-bf62-4e52-8f1b-a8553f8ec229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4367e6b0-812e-4470-967f-849388998f74",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a24d9e-7189-4752-a957-a2d66c328712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d1a9aa-289c-4c8d-bf7e-f43095b46295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c63920-5b5f-445e-8059-a25bcbe48d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "12f11733-f870-4681-b70f-1abc6e593611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e94e17-a618-4394-a6f2-5e63156f345a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de72285c-8917-4575-82c2-803a33442c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebac7f70-fad3-459f-9d26-1c211fe8a85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63faad20-4007-48a2-acb4-b2d24b77b963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e900cd4c-6807-4504-99fe-7eb720799093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea06428f-9908-4d19-a207-2c94fd35cfdb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4692fdd6-c73e-4195-9a21-c400f74d9cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cce12f1-81a8-4276-ba92-b64c538f8829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b4b20b-4f49-4035-b720-86b3ef89676c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75da3b0d-86b0-40ce-bc22-4efb1824d5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc955c90-10e1-42e0-b472-2d091946580b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81003eb7-0fe8-4815-a1e9-26bc32d31114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "246b0937-e1f6-4778-b973-dbe5e2625969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb69d773-2f8e-4a07-a5fa-bfa13d6b6570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "598b98a2-23ab-4758-a01f-d16cfa9d153f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9c91f2-05b7-4248-8670-504f16b23b69",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3122f46-d9b6-4edb-8bf0-43e0f1b9c870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc3e720-f258-455a-b7d6-58838f08587f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ad563a-e9bf-4c38-b42c-a6b8aed93e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe7c62a-661b-4880-b728-732145f061a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb05faf7-b3fd-4326-984a-fe97dd269b21",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be61d73-2b07-4b92-bcbb-ac15b217725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434aa928-f82e-44cd-b9ea-82184617479a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b506eb-a00c-49d9-b757-ffa6836edf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e7329c14-690e-4854-886d-43eff1538523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ce8a58-52d3-461f-aae4-e0101bb93a4f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5435738e-b8d9-4fdc-a92b-bbb641f9c9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e127f726-1132-4759-9624-b6868483eab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f595da74-d2b5-426c-953a-d230d30e397f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3d95a4-4bcc-41d2-93af-294ae9a5723a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24178638-1be2-45d6-bcbb-2c9f90a08b9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fedddf-ffe6-4e4f-8eec-8c49d35e22cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2107c3e9-0c2a-4c57-b975-362d3013f777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47f35f0-8517-4871-97b8-7dc775ab2162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8bb8d4-f1f5-43b1-8a36-d2a8c6a81780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b541805-28b6-46f3-a2e6-4c6d402570e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e3c591-a432-4fb6-ab09-c35b9aa422fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3729a1bc-195c-4ed7-9bda-8ba01ee8e9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec6f73a-1d6b-4db5-8961-b0e9693d0c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e17dc0-9fa6-4497-af7b-60f41f98453a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8872a4c8-6756-4e9a-a3b2-5f35a65760d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e6d3a3-8142-4035-b4ed-9b5623f31880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f66c38-a3bc-416f-b338-fc1763f57bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdd1d9b-95be-4ef7-89cb-60f33034ea0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7b607a-045f-4b64-8712-bfa07ef159d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ebbd05-d089-4fba-a05c-e0637921be51",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63027041-a505-43b0-bb19-d921972154ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9698637-c1bb-4572-aa29-4f131bc18cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48dd033-8ff6-4b5d-9a4b-458ea51425be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "22825110-45fe-4903-9936-d50dc61d0055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93570598-ebb3-45d5-a564-0cf466d5adee",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ccd2b7-79e1-4584-9a1c-b8bac149348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355f4438-626a-46ba-b081-a3056cbe1a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6327b8ee-d6b0-4c1d-ae30-7a60d899358c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cc6139-98f2-4b3e-9329-7a2b1e54f605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9c0c53-4560-4f85-bba7-9e14361fd838",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5327d6c-b5db-46ae-9738-ccf440ae1029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8e3684-3b4a-4162-8fd6-d17d0fe3e10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c38acf7-0c75-4483-9b06-b79e37c16afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b34820f-018c-49db-a621-df00ea775954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee20fb66-09e8-4d54-a9a0-f795093f3cd5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c12560-7dcc-409d-9a4a-9d7359dbf9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d58a84c-cedb-465c-b021-62827958e0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2301834-fdad-4575-8829-e3a2511641ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2488ee59-16cc-402c-bbfe-81528113203b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862ec4be-37c9-46b6-a2b4-edd55a6a0124",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb623b9-0fa4-4bcc-b0bc-4602f288a837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad549cc3-f76a-4dd6-9d09-7d74e7d9ff72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60b8e60-7e09-471b-a6f6-bed07f6bac32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10c0d7f4-edb1-4ff3-9547-ced0a1f2b6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3430fd-5dd1-4b69-a89e-b269601826f5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0609aeb-ee71-419a-b5b9-b589dd8fc468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81b21ef-8c3c-49f8-bfb7-322fc4830ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfdf72b-41c6-4fcc-a2f4-4bc47ff6333b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e007584d-bebb-43d7-b4dc-f3770bc71b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916f1627-4af5-4a2d-aa96-22ca95be8d02",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242a7503-32af-4c74-84f4-3113f8e07def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dc8e51-bdab-4f2f-ab53-4fc99453889d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1c8db7-4a22-49c5-8aae-9752ae2ccb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "acb5d867-6db0-4add-bda7-3f17df57e535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921d6163-4261-4970-aeea-dfc1beb85fe4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21f80ed-928b-4582-82c5-269de17fa6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b99ff59-bf49-4bb8-9e78-065fbec45210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df34370-5e57-4c00-93cb-0501df1ed851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb24d1b4-066e-41c2-b277-2cbd442673ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6ce179-9b02-4b77-ab76-ac82f640b96c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da5afcc-bc0b-4dce-9222-ba25b5eaa9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b674a1b7-cb21-4f61-ba4b-6a74714ed4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff4231c-84a2-4ab1-bd8c-c80f743ad9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67461bb7-0278-4bcd-965d-af56466f7708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340e2b1a-6874-4568-9334-5efa9403d47c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1fe058-f6c7-42c7-8d99-c5cc49fc4970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9683914-d37d-4efd-85df-c66079cad783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e13908-201d-4966-b1dc-32c54057c7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09dd4516-d808-4dc5-b367-1f206e92e383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44687187-b40c-49a9-9777-c2b8d1665ce0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ab8235-8e73-49df-8d92-8fb410a6af2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67ec539-bf7a-4c2a-b8a3-614897b546c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b0bab0-f253-45f4-aec8-5369a1ec3c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53388aa4-8df4-4c64-b759-c49a28dfdddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df1e581-ca16-4bad-9dba-ab0ec20eba41",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69ed885-eb62-4955-a10d-1ac875d41283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d507f46-83aa-49d1-b475-96e0d1b7a15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e7e5d3-66de-400f-8276-0ac9570b8042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc4c41c-431c-4d45-9404-e8dc61058968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a901942-8b56-4a89-bac2-1f6ff5a668d1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e1b82a-8060-4e24-8289-37dd5c6f1079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d16dfb3-a5ea-4083-ac6e-af582bb69d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ba7043-ce26-45db-bdb3-4d68b9a6e29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1627d84-6bd2-4660-b140-6f226f246279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6f98a2-23c6-4d17-94bb-b7da1adf6ae1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06645aca-f92c-45a2-b305-ae05dc5969f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6d5b1a-372f-4537-beb8-cadb5c3161f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b762a820-9ff8-445a-aa4a-ac04a11a6ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6be0dac-b358-4136-bf84-69ce6bf0a2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3f59d6-3105-4b0c-bcb2-390988df61d4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2f3a93-375b-4501-b29b-348f2128fe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fd8efa-06ca-4bec-8aa9-82f27f053e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf106cf-8b39-4d00-bdfb-d3e6e5e11833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99ec47a1-3b3e-4ce0-a568-15286a8b2a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb47898-8a6f-41fa-ba0e-9a385f2a42aa",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd27500-3c81-4eb9-ba5b-04a51417fc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9324b58-75d6-43a9-b3e0-beb123df52fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1571e0-7d7d-4fdc-b525-369ac40f81fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "794294f7-ff01-4b23-8fc7-75a08a8a4de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d8c5a1-64fd-40c9-957b-47718f0495f8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8565de1d-a8cc-4e84-9387-65547e521380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f895463-1560-45c8-9550-c8167906e0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe0a90c-bc72-4e46-ad18-edbbc5ffebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf040e8-5fda-4448-be52-3ebd016d12d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cbeb2f-6a1a-4bcb-9816-9194e24d10c9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af41fb3-bff4-471b-884b-437284a81b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dec34c0-b36c-40e3-87c7-7e9585327a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92db7fa7-4f16-42d3-bfba-77019a33bb0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d81eb2-394c-4b6a-82c8-1de9a0d08bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95315508-365e-4aa0-87bf-d82b6dc665ea",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5ccc88-a240-4f19-a9c7-83369904c0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b93b22-41f7-4a4d-9775-fb81ba15d22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fceac4-500b-4e73-b296-cc4591e32da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5857dbe-0b28-471b-931b-b03512dfdcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cfac82-e833-4b75-b824-b0bac558044b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc6334a-3c92-4824-8457-905a4dabfd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55494609-b8db-419c-8599-bc217ec59f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e387e39-843c-4c50-8db7-16ea3246435a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c420946d-3a38-49e2-910c-c28f78898dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbb688f-0223-4c92-958e-89dde938fa2c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51534028-9b2a-4595-98fb-5e906b5bbf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58b39bb-cf93-453d-8ae1-7ec62d8c2e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac6dc71-4ab1-4ed4-8d32-c4adbf7bbdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c979ee8d-1690-4d22-88d3-4e829a5e96d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253c371c-c88b-4c80-a8eb-ab72705e784b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c004205-a1fe-4921-aa18-35922796218f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd55a6b-dee2-4273-b42b-96a14790e5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a357afb-9a9a-4e7c-b668-e9ab89de849f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b4cd0f-0f3e-446a-97c8-e9d225e556e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ddbeea-0823-4246-aaae-30ad6ce56ed4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a257315c-3868-4a43-b64a-a4eec4331055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea26938-7fcd-4f60-bf2d-8229cbc9ba4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44d86b4-f7b9-4bc0-b566-5a70c59a8da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ae9130-cfb5-44bf-863e-1e581a148bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe70faa0-69c6-463b-a5bd-f27b837d384c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7998bd5-2751-4db6-a78c-3312e92809ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629fd26a-456e-48ed-980f-1f47fe6d5953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1422253d-45da-43f6-8612-350056b983e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f12f41f2-ce31-4792-a974-8c43c4aaa273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d55766b-eac9-4e35-b0d2-5b2f3e24d6b3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0e3f3e-a48a-4602-b9ac-ba09d2f6177e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f70a87-394d-4430-af90-66890ab35d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169c7c60-a09d-4d2f-a558-d43c4322f429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0924ca57-461a-4e1e-bb9c-189200d299c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc25e55-0d10-4e0f-af67-507b37d4ae5c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0c7939-091e-46fb-a3ac-d55e94cb2870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f680a8-f930-49ee-808c-64910607cae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0cb8b1-418c-4943-9830-1221e0872589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e86b3dbc-baa1-47f6-8d80-6b3216f99842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee7d1a6-d94b-4b52-8a29-5a73efbc53e4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83e0c9c-3781-4854-bef4-c1a00861bc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750c5dd2-50e0-494d-b13b-296129f3986b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4eb8f5-7ef4-40ee-ab46-2e605ecb1f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcb964c-9892-424f-a23c-49e1997b779e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b631e6a-ffb4-4d37-b9a5-97d3699113d5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c289ca51-d258-4582-a358-e116ee8cc18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0bda45-29ee-4e06-b730-5626e6d5bd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47681535-79d7-4a52-9a61-6f1b9740f3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "45d7af7d-bb32-499f-bb08-175f57773708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f83337-1099-469d-a38a-64af6d719fd4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a859d1f3-5094-4415-bfa7-14e6c09534b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0a7325-b32f-47ee-b015-2e5380966192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65099ec-7c08-4496-b463-0bb2d95f80f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98fd0763-2015-4f50-bbf2-e3161cd183d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86b5320-3ce4-4811-b5e3-28ce4e70ff77",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6497f4-7f2e-4239-911b-467dbf3c7a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3054b988-46ac-42ed-9295-73a427f15358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d60866-1651-4979-a773-46e856b0b154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef3581c-929b-47de-8ec5-d845d966a55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6bbba1-a9d9-4543-9e16-7e173ec12827",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aa165f-bf2a-402c-8a07-b0f22c8deea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fb97e0-0aa4-443c-937d-5d0b8ca436e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9434bac-01dc-4710-a94b-73eab0350c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "96f5aa39-1110-4bc4-9555-b8da90741d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc875a6-1b2e-4e19-b2ca-ba094218fb45",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6686241c-8936-4e68-8e7f-811103debd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0c2e37b4-8448-4ab4-9d74-797123e3132f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c0e64f-0f1b-493e-ba5b-da8264f77a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d931423-9f74-48fa-a7a2-2d8096812ca7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8bebd6c6-a755-4531-b455-4d9bbb386a25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85b0ad0c-ae5d-461d-8af3-5d7966202403",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da7efb7-d431-45bd-a10f-b53c636ac34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6d3175d-7042-49d2-a55d-5e2fa12394f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1229eb32-ca00-4d86-be40-c8d12057ddea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71bfefc7-3feb-4cf5-aa03-1a61bc661569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f38ed4-8a56-4d46-a30c-730a4a67934a",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c395076-1c95-44d2-a040-6e5d03a999fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab257ccc-9d6d-4cc9-b656-9f6402603561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0542d0-c476-4577-a14a-c7a5b0525b5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00dda239-82f5-410d-b9c6-b96673440741"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32762752-7b80-4b93-9550-eff5c07c3450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75662b2e-c883-418c-b1f2-432cc6a87462"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "273a3591-5903-4de7-a1d1-b554fae56213",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c7dbc0f-8768-4844-9801-f17ea5c286c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed9e80c2-efb3-4191-8a44-68e9ac8543df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2a44236-03a3-474e-b5b5-4718a07ec3f3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "62b256d6-4513-4a0d-8fa5-64d3f581ea72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f840c7e1-dee4-49ed-8484-00369a574287"
                }
              }
            ]
          },
          {
            "id": "415bf39b-e59d-4b18-b39b-bc08a2856a24",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1dabbfb6-b828-4448-8792-60eaf509ee27",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02b75b2f-0e45-49eb-895f-5278abe72997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5b034a7-0f04-4b0a-a4f4-6e269f95ae26"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54afbc70-4d68-4e29-b8a9-e97ce92a0fae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b377067-a400-4be8-b411-bae436ba308b"
                    }
                  }
                ]
              },
              {
                "id": "b2dc3ec8-32f5-497d-8d2f-2fd9605631b0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65bcbd5e-7a0d-45d5-99fa-846c7b9881e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48dd0ec8-9ae1-44a7-b0ed-a3e3d04c8739"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b2bb06b-a121-44d8-a999-ef928f439dc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73ea3805-7911-473d-b501-9016a21e3ff2"
                    }
                  }
                ]
              },
              {
                "id": "c24b572e-19c8-45d1-9b85-06c473ba2ed2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2a6621e-3e7f-4796-abbb-4d9acf5a94c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1d636a6-7196-4f8e-bab5-48ff6f2a1932"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b919a019-20f8-4ba8-a54b-fb10263cdae3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "154e6585-7afd-40d8-945f-a4814c3fdf56"
                    }
                  }
                ]
              },
              {
                "id": "27a7daac-e368-421a-8d0b-25ba9efed538",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d4565e4-252e-4e7f-8780-42f8844f5f7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7f44011-d29c-426a-98dc-ba3efec87104"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b257349-2e38-4d33-8c25-6aedb755734b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ddfdd96b-7dc8-4b5b-b5bb-88791ce73ca9"
                    }
                  }
                ]
              },
              {
                "id": "f17fc0b4-f9dd-498c-a49a-6545d7369aeb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf76836e-0a36-4be1-bf08-df29f03f6606",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7ccae33-cc39-40c8-bc39-f568a6888de7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daf43315-a894-405e-b595-4b93335c65f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e31ed797-acdb-4565-a8ce-d86a761c029f"
                    }
                  }
                ]
              },
              {
                "id": "ac84051d-0cfd-4665-9e7a-f99fc6e7c9f9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "535b9b75-0bac-4572-a01b-b82f77abb558",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2346ce95-7bb1-4871-be69-ba3a7d09acfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18284338-67d2-4183-a17c-c16289246ba9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7a9bdd06-961a-4bcd-9ff5-5ad54c37456d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "922252bf-e303-4b22-94de-02d7b1cc38cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4214b77-e794-4892-9a34-7cf542443324"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "286d6b18-5865-48e8-8e01-d16f8412237c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b79f4051-eeb6-405a-93f3-c7d92d62f541"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ea6cbf3-9d89-464e-ae9d-5624bcec6a13",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e30abe18-4cc7-4710-9080-f222453b4370"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "231f0f04-c14d-4a63-a440-a32f8829c181",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4741861-1cdf-44f8-89b2-f9c353ef7a8f"
            }
          }
        ]
      },
      {
        "id": "22a75848-e393-4ffd-aa7b-19c355029ec6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e1c4b50a-89d5-476b-8892-1d79f517bc94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b46f7711-e06f-4d6b-a46a-e7ad9027ddf9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38c9df98-94dc-4c4b-8c16-ba2e7a228af1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbcbccb-9066-4f83-908e-9ac53a05a7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3055b81-acc3-4c49-8262-1a300dc2133c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1616bec9-69af-4ecb-a0bd-3632670dfbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb845c7-84ba-4197-9c4c-25f5f50c87d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f58683-bc86-40c5-a1e6-def995d33779",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986eef7b-e70c-41f7-ae4e-0bcfb4e17619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da19e260-20fd-4fe5-b94b-b0ff5c1b66af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592cd108-69bf-4ff2-903d-e6497e90e9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d49d39-fd94-4722-84ca-4e9f84339980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e65b4f8-ad5e-4d34-b612-1d3d35f35dbe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dc0efc-8bc9-48d2-b055-47637a59cea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb82c42-99f1-4acd-b703-28bb4a354693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae5e43d-ac5a-420e-9212-99b765624e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "196b2ec0-8ae0-450a-8a8f-3ff3f683ec31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1ecd33-64d6-4fb1-8855-f0129ab7fb6c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882e9d8a-dbe6-4ee1-b650-a42067bb19f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93602397-06fd-4fee-8f05-5fba7d6b8f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e866ed49-48bb-4df4-a9cf-579ec429ffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd89dd8d-acd7-460b-b8d3-0b2ce8286925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71fa024-8122-45bf-84c2-e95087e1bef3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bf542e-fd5d-4273-8f22-85f631f856f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909d1ee0-2bc7-4a47-8d1a-9747b6f66f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a602fbf-058e-4778-9bd0-3544b2f9fc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2978d1-295b-43da-a1a5-74731edc9e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28cb3e6-0517-4e95-a67f-97d83a03ed1a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7adbfb-553c-4297-9783-7f165176b9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6fe3d4-bfa1-48c1-bb81-e58cb81499d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe0290b-ff13-4990-a9c9-6d8feb7b4c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5a2798-e551-4a2b-b59c-f1c4717dea5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a90710-f053-4325-a6aa-ff40da6c34cb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f9c59a-e509-462f-b466-1528ea7f8955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0582c03d-e439-4297-9cbc-dcf7a2939cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e5dfc0-c540-43cf-9521-5ed7152f2212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2407da-5c29-46dd-94b5-82b50497b192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22374bda-cb3c-4d92-bf51-6351c96033f1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a99c9c-0c49-4fc2-bd54-4f96f1e48765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91d49b4-63df-430e-a653-86247bd52ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da0b83a-23a6-4e06-a7aa-e616ec03b878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "973e168b-7a0e-4b36-8c33-465e8fa4c059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675d6d9b-4752-4074-8a01-b35d64aad289",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9e5bd4-d3f2-48fd-a713-a0082b90129e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86d6ebe-e9f1-4a64-998c-3c44d2e462e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba03e7f-94af-40b8-aeb4-ec15df6be5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca11e67e-d92a-45bd-8a7c-9c1edddc3a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dd046d-4661-437a-82ab-a4f05438c102",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aa74fb-0405-4660-86fb-f8f4718054fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d6c6cd-18e5-450e-8d98-f4b7a0567411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13c5fd2-aaff-444a-990a-be455faff98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2d62bd-153a-4f02-9794-9284a6b492d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87ec3e4-879f-48aa-ba8e-af4b412c9e0d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b19f7b-d437-4cca-8849-acaa5a81c446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3581db7e-5428-4388-99ba-a9c182bb2838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9930f8-3499-40bc-800b-bd638ddfd629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "177dc091-f836-475e-9b53-190041996a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244b5ecd-804b-454b-a9b5-84149050efb8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3218e50-73b0-4f87-85e6-5ffff5f07683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e59b0e-b91d-4940-80bc-6e869dd76a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05da802e-ce9e-4f56-afe4-bcc5367d6682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1aae842-8680-437d-a823-3fdac9160de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a8e65e-5e9f-4ef5-8551-3c2921da30ee",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1cda00-a333-4150-a970-1e851e7ba923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfddde9-160f-4223-93f1-777056701137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b49ec09-ba6a-4697-86fc-5dd56cedbcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6c08b3-6cf1-4b5c-ae1b-2c8e63a89cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12bf08c-731b-4636-be4d-db1599c21f86",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694deacf-a268-4d1c-8f1a-269ae7b341e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fed6850-4893-432b-994d-a066dadc8aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439f9948-2ccc-4d85-baa2-f4892a9d5c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "837f816b-50e7-4d9b-a1db-6ab534ada912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac55340-cfa0-4dc9-a991-0eb1c694752e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013ec5a3-122f-416c-8671-5631cbbf63c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9ea687-d826-4ef1-b784-ec797ea94b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f197d7-282e-4642-bdbd-9c81fba39374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cf9284-fa01-4899-a6cb-b1b4771e5a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd53cd0-9e69-4abb-b7cf-0e842d42beb7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7647757e-2cb7-44d1-8c31-0ee285afcccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e547ee1-72d3-48fc-8353-3a8c54bb9131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1b5d83-f40c-4e0c-8db3-3f16bdccb344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "80377c8b-ef0a-41ab-91c4-073d7e778a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022b716c-b516-47d6-80e6-341d4dde319b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef76cb8c-9c3f-4373-843a-479684f1ac9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd21da72-600a-41e2-9c70-c6235c20d38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0393d7b0-ac6c-43db-a0fa-b69417cadad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ee8293-eea5-4c43-99ca-4f20980da376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c74a0c8-04cd-42be-8e5f-e2cc9e9ad260",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56235359-53b8-4961-96c9-43fa5db34725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4d2681-88f6-4ce7-a819-fadf3b4f07a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a985c470-df05-4445-ac4c-fa4b92316c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "485ead28-a0a1-48f5-9d50-fab3d560e807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962d2a61-b392-4ada-81bf-675d344b13cf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd0c8a4-5aec-4a53-93c7-d20f5dd9d5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f382380-8e4f-4c27-b784-ec07aabeaf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f7913b-e68f-48c0-ae2b-953c0a530f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c39996-edf2-4447-aa2f-bf0cf9112941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cc0d7f-a1aa-49b4-9a02-02740507773d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b822dff4-f5b7-489f-9f35-73e44e0add60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7af751-7e36-4de7-a6c4-c5f15a99fd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4ad153-c10b-435f-82fd-8cbfb45a0964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dc6a25-2577-48f7-be54-73a122738df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c2add3-7e64-4ca8-b672-f3e7befdce1e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf02961-6bad-4301-8722-18c2954a7541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a87777-7128-4332-9c09-f0f758ccfce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d35e55-abda-492c-ae54-d537b11af119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14078c6b-ae45-4b86-8422-739f4333b7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c59654-2062-4ac3-91c7-d528a62fb017",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d345fde-103b-40dd-a684-832950ffde16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01677904-88ce-4ec3-a4c7-72871e09f2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7224c044-1474-42f3-84ac-24ae79c53ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2359293c-adad-48e8-807e-e7f11c71fe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4008c499-134e-425a-8470-4b7ef4ba1d70",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6481f1c-f43e-4eb1-b45b-d3ee3cce69d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ddc99f-83f1-4827-8d0e-a61093ac7270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5849f8-0b5c-4696-8f74-1187b563ff8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c3c1ca-f37d-4dfa-814d-c078267aa550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d194376-1df8-4500-8be9-ebde93e14fab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d50ca7-07f6-406c-a59b-a0bc1607ad9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b9e5a6-f69c-4018-a6cf-0ac79e0c798b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292ad326-b825-49a6-9778-8d5e0336c418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "669f562b-d2da-44d1-8c1e-cc4776adf43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4f2ede-0190-4998-a69b-326794f6091b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67acac5d-4bc2-40bc-966e-83224b32c6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2b9190-fe5d-49aa-96c6-6008fc4c1176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb15dc59-937a-4f72-9729-4d8fe259c9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d685b137-63e5-4d38-ae5f-703552c22de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80eacca0-6042-40bf-b717-4c4478b18742",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687564ce-c984-4834-8e3c-625d44c004a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903e05b7-81f7-4adb-85fa-00a17fdb1eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f57bd4-0df2-40c7-ae3d-4526aeeb7667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6472f941-384d-4d87-a117-5a4ea7473dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da50640-cde7-44b3-80d1-5bbf5b311ee0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea810f52-f79f-40ba-b850-1b9ce9b0ca19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00488fb-6181-4c50-88d8-8c3844ab7c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f44284-0feb-40b3-806e-b9d340dfafb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c02247-b36c-49d5-8e5d-bcaaf554939d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2c125f-15ab-4b41-bfbc-07be5c6f964f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005e1290-8101-4043-ad1c-3b4b734d5256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62fac2f-ae5e-467a-9f26-9652010a8ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96315ed8-ed8c-4815-bb2a-3e0b2ac7b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "223dca3d-c5d9-4b3d-8b08-c32066065069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b96639-eccf-4329-8070-3ff940ceae1a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a3eff9-fa2e-475e-af65-ef7dcdf69d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7875b74d-b81a-4db6-9eee-59fff9b0d451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7136b47e-f911-4e15-871b-5e1620c712c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce926f14-8460-49ff-9153-165f426fb64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e81ffe9-5571-4daf-bcf8-ddcba6b835c9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6961e9f-fd96-40b5-b68d-c015f3ccfcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb2461d-f1c2-4c52-ab20-77a006a6af3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9604c0-ea05-40f8-bf7a-6adc84c754d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "827bbd34-650e-4f4a-a8ee-bea7af4349cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2669a1ba-ffaa-4363-839e-5b5ab075269f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807f8479-a307-465b-b382-8e9e66d5c5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc6b72e-ee58-43fe-8233-d70b7c3f9afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d6750b-e24f-4d7c-89b6-d29e422cade5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9f07b0-816d-41d4-b9c8-19aad8c0359d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0a652d-7dcb-46fd-9871-85e26c76744e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fecb3e0b-ac38-4a38-93d3-7c809bc7149c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd06d9a-36aa-486e-bba1-5c45f8ca8bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8c2297-98a9-4eae-a72b-fd4831d92166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66083fc3-ce4e-4e85-a1ec-95487a6bff72"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5fc7e478-b6e7-4ea6-b015-c48532bb959a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ac97efa-ee5e-4036-ac24-c1c7b61e8967",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab831fc-fbf9-4bb0-84fc-7f2701fb83e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "70d65b1f-0b31-4532-a14e-14bce94ab6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb058aa-33f9-4934-98c5-e708cbe72d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "404bbba3-9166-416d-86e6-296da76a8f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6763fa18-24db-4003-ba79-6209f80c71dc",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f888f871-fecc-4153-86ab-4c810c852e90",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cde6e134-f3eb-452a-b1d2-35bf8d5c80fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0796ac-e19e-419a-9d64-475dd15a0abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ee69db0-2b02-430e-ab91-0c013ceee2d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9cc671e-051f-4557-87c2-3c88dafa43ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef6b9499-e780-472d-849f-efc55e908634"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e92f46b4-0514-4fb8-b61d-8baa1f06d9b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7978ee0e-44c8-4be5-932f-832154b5bae9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76d7117f-607f-4b19-8cbb-fb2e90a68651",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d4fd71cb-54db-45bf-b541-0b10cec0e993"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad6773cd-49e7-4b0f-9e18-a3c2769b0082",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2591824f-ee0a-4e9e-a00f-0d80836b61ce"
            }
          }
        ]
      },
      {
        "id": "74287bab-79fe-498f-97b3-904dcd120295",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "63058c17-627a-4936-b74e-f23d69ec6850",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5feefab9-a9fc-4985-916f-c6d96dee55de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cb1d6df4-e248-4388-b272-7ef1e7cc4f42",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8534816e-0f0f-420b-a74a-b77d3b87c76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c713f6-ff1c-438a-8f17-4b82a61cfbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb26bdde-8a12-4ce8-9a2f-85cb05eb3db3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91087ae-ea01-43c1-98ee-d49e8c9bcac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f2e65e-39cb-4015-bf90-e6a0e64ba250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0df9f8-15be-49fa-87a3-a0b95c9ece02",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f4c851-a27d-4df9-9c0c-471c0f9b1fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf90314d-4e62-4ab4-acd3-28ea23e8c206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525dbde5-c59c-4888-a8b0-98334ba00d64",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44b174f-661b-4a27-924e-aaa657c07039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a8c9b0-ed92-4d04-8e98-6cc95daf1065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94be285-ff8b-4592-af48-4aa7b0669cb5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b983dfe9-fa55-4504-b8e4-b69efebdb321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0615c7-9f70-4110-ab6b-0ca24f354e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb619af-d4a6-4d36-bc33-9e35a6cff832",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9ec74f-f33c-488c-b77c-79a4079a0209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf390fd-cd31-475c-b2b0-3bc9a9b7fe1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa8ab64-fec5-46ee-8932-8b934c31903e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea88122-98e0-482b-99b0-95586f6b050e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac7cd8b-081e-4224-b29f-4cc14b23a937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8369f954-8ed5-4713-be43-87d7f0c47e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d31a2b-c9cd-43c5-9824-da5db6d45faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7723b2db-6695-457d-b6d4-34269dc4290d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cde822-704d-426b-9495-1af85866b230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b0fa2e-4aa2-4685-8146-a6126b49d6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3cee53-892a-4e10-b1c4-0848044cd69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dd4625-7598-4633-b07f-ee4c35d36250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2accfc-5016-453f-b8b3-ff4c24ddc6de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c6a100-3b2b-4fb3-aa27-06f35e0c2818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24575d8e-2f51-47ab-8ac4-e55f61df3eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680b3684-d471-4830-a6f4-efb8bf32bb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1fe1ca-f209-4939-bc97-07788334731e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ca5e9f-7e51-4f01-b3b8-98bf4609ad8d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4b7f4e-f382-4291-84f0-d121f0e4fe97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f63ae6-d8bc-40c4-8a73-de3a72794fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a18fb5d-467b-4f2a-9bc6-5b16aaccce56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b37f25-fc13-424e-8708-dbda921776ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7800d7b-4142-4ab4-bf8d-6212c3e7a2ec",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d26bfa-3282-4444-8ef4-900db0ed9b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bf64b0-6295-4c84-be4f-4e546e314b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c91252-7ed8-4cca-a0c9-e29f52f4eba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3284a3-1481-4972-9999-7fc518d8d992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5751e43c-d73b-4c1e-bc9a-e64c6f4bc64b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e059871-6330-437c-9995-de5d466964da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7597d65d-166d-4f84-a4af-304d45a8bb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ee8264-b628-42e6-916b-3db753144676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de0ba9f-2e2d-457e-ab93-c74b67d062d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32237c33-cab8-49aa-b2c3-c90474d338a4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8675ba19-ac2e-47bf-a5fa-7a633401ef9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376e4ab1-8548-482f-979b-5e0e67ed76b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187af8aa-d995-4507-b5dd-3acb4fc920ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bc2adc-7ed1-4c5e-b84d-8743818c29fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b171f8ab-6e56-49e4-962f-27af6068f597",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bd6c84-1237-4cbf-b7de-0f0821182a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad3ae9cc-6ea3-4fd1-b90d-5d211f76f970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6f9377-10f0-48eb-b618-f383e89ed171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f08792-f1ba-48f7-bda1-834bd86d2751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201461e7-3da4-4398-8a71-9b0a2fd60aad",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302751f1-fd47-4575-821e-5df5ba154f80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba4a6cf-d974-4121-8434-ef061cac658e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced53227-4460-4354-a2d5-c8afad245598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb1f485-6bbd-412a-896f-ee5828cc719a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d7f849-91ce-496c-baea-58109e9c8e31",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814a743d-219a-4d91-ba70-924597143501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d221e26-386e-4073-90dc-eb460acc7912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7680f29-46d5-410d-8d84-aaf4593fd906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa818e23-98d4-42d0-aacb-926eba1e08de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce629d34-c965-4d80-b6d8-e225cd92412a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99135b0b-cc1e-4ac6-af64-11b4f7484500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21a1c11-d528-4c81-8e7d-47e75fdfc05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e3c488-c08e-4df5-8855-20472e7a0066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eedc9a0-29ba-4d3c-a6fc-f6c8d923c394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba72ea55-ec91-4671-8866-89d97bffd202",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19a8306-6c79-4f04-bb9a-0a8b921c35de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c15d252-5dd7-4ee6-84d4-82d86299a97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397f88a1-28e8-4dfa-b99e-ca32d451a7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c91b2f-6844-424d-95e6-3a5fe60d296b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fcc96f-f467-466d-9cbd-1fac59ded03a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b918fcf3-14fb-4a80-962e-895ea4e46e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee0af5e-d60c-4233-8d4b-2688fef163be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6a316b-88e3-46d8-bd72-a3b064ea7452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d04cc0-d36a-413e-a066-d797f00e28b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8f41d4-d2d1-41fe-9dbd-851451c449f2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4c4623-e4c6-4286-9297-3c02f3fd661a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b154d4-129d-4c79-8904-7f19d4fca00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab77439-452d-4a0a-b885-0d92da199974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ed11a3-1a9f-41a0-a2b0-cd3e4666d930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8762567d-3973-4364-9c88-01d5f93bec55",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f9d9b8-7afe-4637-82fd-0f43d7faef2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ceec73-f5f4-4fb1-918a-e11b1f94e7c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ad59e5-0413-470a-8cd2-42f664394ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ac803d-3c39-449d-a1c4-2f6c92d21e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3399899-860e-4c53-b964-3c3ce4ef11f7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905f70c9-bbfd-422f-b26f-c2dc15a04c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009c0f01-9bab-452a-be3b-3543765ee938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4535ba-b10e-4674-a9bb-41999cd75706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64019b55-dccb-41c4-8681-200798e5f973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7826c063-7c00-4414-a079-187495c7e560",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8458a16-9bba-4cf2-93f2-feff7ebb82d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c75e383-9d31-4ebf-ba99-1792e8b34b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496a4aa2-45dd-4767-9b9b-b19b1e4d9584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2528b5f-4190-49f8-8c17-c18a7ad074ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae387660-1911-41f4-a1af-564e234d830b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f32b3e-2422-4680-aa53-b92507683f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f75901db-003d-44a5-b45e-faf762fe983c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47511cbb-217f-406d-a007-1a03be06bb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8c2d9a-c308-46e5-9d2a-396b621bdc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cb53a1-70e4-4035-903a-4f6fdd88316a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079fcce0-f220-459e-b08c-f553ead25445",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5032b8a9-acd7-48cb-b275-7230f7eee5ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a1e5c1-952a-4325-879b-2807deda63a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7c1fcb-68b6-41f0-87f4-351231fffdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46276f4f-1ec0-4de8-9011-46c01677ab1c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32b320c-c12d-4c93-af5c-426324a852e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e49bd304-1738-484a-b058-fd88e830dbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e56375e-9e83-4fd3-b079-43c6bd4443dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02732f0-ba15-4f10-9856-6de3a863c834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01b3ea6-e778-4a09-b6f9-883ad7738a8b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934400e6-c480-4a00-9240-ee73e2a64ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e6c71c5-4a2d-4e7e-8119-aa09f22b4d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59e2aad-06d4-49b4-8c79-871eab93d2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4791e6-47e3-4bd5-a165-e7ca737a5552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f208e0-9390-4cc6-8e0a-9c0933741932",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5176795-6fca-46fa-b915-d999a067a49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c61939bc-0de7-4a57-ae2e-12a149d4b286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae9b8b6-6e72-48d1-a9f0-1616136198c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3b7e2c-3689-44ed-a4a5-2470e702c14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b76aabe-bca9-4b07-af85-f36f47150c95",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae05ac7b-f567-415a-b8b3-0d37a90b364d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91933cd2-5990-4aed-be5d-050932c4c5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5efc27-bfd0-4c1c-867d-e806898faa09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99815fd9-1190-4437-92ab-523d4e941e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e65d3c-d5bc-4009-bff4-7bfb94c6ab57",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff76ed1d-eabe-48e6-9ca2-3cf9c994b5d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2be5c67-9627-48fb-b4f8-501b651529bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19c8217-bfc1-4539-b758-692b6c0996ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d795c3-0475-4c86-8850-7b5edbd8e406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120f26c1-1e71-42be-9e8b-2f4ff422c9d1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4053b8-6726-4ef0-a92e-f2e8ca2d902d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3e5ccd7-8973-42e0-be2b-10f0fd821aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff99380f-9253-4d21-8208-a9508ef7b118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aad2575-2537-4de7-9697-f5c799f6c21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51848dd5-08e3-433d-8598-a4998ec80c2b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53be0e29-7a54-4c9f-bd63-9f0587233f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6764ca09-37f5-4e91-938c-8e7045626295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f27460c-ca42-490f-816c-0d0f27002ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139d121e-e5ec-47fe-8865-12670ee669fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0394a2a6-91b3-44c2-a6a1-93f2f7cbb6df",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c52ae41-dd57-43ec-86f1-09ca67e61f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd1135a-fbd7-4d61-96a2-438ae0d134e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5154cc62-2bdb-43c9-89f6-6c9c79d774cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c924b1-e299-44f4-b7f6-448480879d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f868261a-1589-44c5-ace8-6c911df2bcea",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1386ed-070a-402b-9934-f763a929d498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70aa2bdc-63ae-4ffe-8329-4a78409928a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cf4678-37ae-4b1a-8852-6bc04c2a3b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36882097-29a9-40cd-97af-00faae04246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d28e19d-b614-445d-a1f5-cee4398ff379",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0127bd15-a833-4396-86de-41d6ad3ed20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f6a360-3b3f-401e-aaed-fcde654111d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc60776-6204-45ec-b309-8745b7e97f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6eaf057-4a52-426d-a465-c6886c77ef85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabfc291-809d-4f13-8f9e-b18df2646e75",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1341fe38-12d6-4c18-9bbc-5c163da1756b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e159471-cec5-4198-9320-4ce6eb5c577a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2248ebb-b3b0-41ce-ab5a-4db1bf350adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9bc364-fdeb-47c0-a576-5371f76df503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed60110d-bd74-4aee-b38d-df1bfcedfd99",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6e2b54-9711-45ff-a72c-6dd9d0fc0586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8de0c97-f3e7-4964-9746-54950fb6f08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de8314f-6492-4e2c-a7cb-5a6e43617aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148ea1d1-b84b-4ce5-b501-314691d53be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae88b489-cfff-42f1-bfe1-fc22834f7bc3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59a5cf7-dd8e-4d8b-8309-40b84fc6e007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fa1cd7-5654-40c3-bfe2-5ef98c256e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c7589a-93c3-465b-817a-256adcf747d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74ea3f8-deb3-441c-af6c-5d3f2b569947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3992ac-5e2f-48be-9071-3e000c26e69d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a3a606-9f9a-49b4-8f7d-0e1db6d55594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea629838-c5c1-4c16-b390-40a9ca3d2950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acece31-5552-438f-8e48-d0467d6f6ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5590d843-6104-471c-ab8c-dd2036bd0f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff757ea-6bd8-48ef-ad37-d96f0ff2369a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b412df93-6443-4906-94c7-3b65a855e9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b4dadc-85ba-41cf-ab47-a19114bf5c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06902906-3c32-49dc-bf6c-5e9a8a368b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8bebbf-b9df-4d5e-9b6f-8835708cd175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c70bb1-9495-44c3-8b51-d9ff17de97c8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ea0f01-249c-4883-a86d-ad4d69806544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30563b2-1dee-4c62-83fe-5147ed7ff3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d83f2d6-7e24-4ab7-8ab1-602fda97db40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f5ee23-cbc5-41cd-bb55-c0e6cae16c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e8d7e1-efe7-4201-a85b-ac689c29e19c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183354cc-5131-4fa4-850a-eb638bae6d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2586a301-3be4-4677-810b-33c96154f1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7456e636-611a-41b4-894e-57e296ae4b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73706087-eca3-4e8e-8e7b-34013bb75a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86a53ab-2e47-4081-b188-918c4da22ca4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07060141-2b72-497e-b953-bff67edb4baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18fc9b21-76f9-4f43-90dc-283b7a58d2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4274f38-b47b-4ee9-a250-058e2605672c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeffeab-3125-401d-be85-d675cdca6f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815a126e-5602-408a-bb12-b7cb53d63c40",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5e0397-94ea-4fd3-b155-a28223e452fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4bf6f5-699b-452d-8578-1eff64a131b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3404874d-7e65-4e9c-818c-9a34852d5dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b70833a-5a41-4923-ad8e-7248da930d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0387f507-2c02-4a1f-bb2a-0c8e9b3d9511",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7442722-249a-4a6b-8654-0bfc76650f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f27819-8867-4771-87bd-58a9c433794a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883decbc-a550-41b1-835f-2a48f4e0e41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42379732-b6fe-482f-b073-d6bddf98c032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cb16c5-cbde-4180-bed6-ddd8616e926f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b8c615-ccde-4fbe-a721-32b0e39edd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77045bbb-196f-4cf3-a9bd-ced8ec265d37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a767965-a767-4324-a1cc-55af2bbaa6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb962d7f-26c4-4933-a5a3-664102fee0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fce0f9-707c-4f35-9fc2-82eda17bbaed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0e1a16-61ca-402a-98e6-b5dc7d870b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485a575e-cb0f-45cd-b6f3-2a3ccb2dde9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46d3d27-0429-4c99-a74c-db4ddf4dc52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74361e60-520b-4864-b251-0a8fd830ea45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c3911b-4b80-4568-bab0-7c36f7ac41d9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581c15d-9cfe-409e-a9b4-0b25fd73fc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa312b72-dc4a-4df0-aa22-c8b6367abc65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3ec54d-1b06-45b3-a2f9-a34137ae5166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3bd88c-ac41-4fa7-8501-30e6960b8b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526644db-a7c9-4511-a472-d56cdf6ac16f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17275d3f-27a1-44d7-9ff9-e0b6ced71e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52290df3-0d3c-44d5-91ac-25708f94f815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cd245e-2d04-43a6-bfc2-216635c65ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcbc85e-69fe-4f45-9a1c-7efa65eff4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da4c96e-99e4-4389-88cc-0d78a06bad2f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b025f8-9e06-4e26-97da-2c795957b508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3727be49-8232-40ff-809f-452b217b8cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dccb5f-dc52-4ecc-9c62-f6a191d33225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da26b0a-21e2-4d0f-989d-7108ae402bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ac31e9-ae9d-4836-8185-f4ee336fa1da",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae582cbb-6030-4855-80cc-113d516e0c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2baddf1-f712-4804-b700-edc33cfd4e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c96555-cc21-4614-94c1-e339fb46bb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97eacf0-7430-4189-aa0b-0b5a29a7febd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1cb823-937b-4d3a-86e8-47c2ecfeef04",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce7671e-8b6e-4931-91f2-5d42c807ea41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798425cf-ff55-4754-b9d8-ac09fdeee586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339f5bba-adf9-42ce-8ca4-ee436a30f0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb19cd2-44ab-4078-bf19-5e0c41dba85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac48399f-b776-4856-970e-5bec27813e97",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dd6e20-5910-4da5-88a2-922dc09d0f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236b3f97-e896-4f0b-8591-dae07a690e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628e9474-cef7-4591-822e-54d9be888d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0ffcb4-1947-436c-b494-8277772b00cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c4122c-4ca5-43fd-bc39-e2dd3c1fbc87",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bd824f-c26d-4abc-9d33-284ca63eb06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f26988a-5b46-47fe-a182-57800df60ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e790ad-f546-453e-a669-923184589392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37557cca-7ee5-4d5d-b6ad-9638dc43ef1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5aeacf6-980c-474e-b948-4ccc7d814f2f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5343d537-95ac-4c97-a3ae-f9086c6e7bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c379503b-bbfe-49d4-a73a-d89add9c2ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee4e477-d939-4a49-a101-56d35f5da05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7833d454-e810-4929-8c3b-41e19042a85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166bcfc6-9b4e-4c69-bbd0-3c7d463663be",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77315875-fd4a-4fae-9c15-97c15c8c07ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af0c01c-a574-42d9-89b8-98e1bb543c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd62fc7b-ffb7-4c42-b351-ccea3500f14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea018dff-bd22-4c02-8b18-dc5ef20cc7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278ef00f-dc6e-45e5-84e3-03a98f7fdbb6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392eb14f-a674-4571-890d-69657eacb0ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9c3a7d-0bc9-46ff-8e7b-ec43ef18acac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a828fbfc-14a2-432f-a803-83e528ef414c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058f74f9-5552-47f0-a67e-34d4f6bf151a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ded91d-0ea8-4807-8d29-c3bbaaecfc48",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f44fe62-58e4-406b-aee3-6aeae247a284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32217954-8cc6-494e-87c4-442d2cd97135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b330825f-9a18-4d3a-933c-b132d518180c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef275ee-e8f1-4e04-a4f3-93a0a0cd5202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87329f41-a56d-4f8a-a0cf-e9199c8456c0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b558987-42e3-48e8-973a-fcc72c7b2710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b250cd6b-7b31-4441-bb22-fc96af351a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed36c4d6-62c2-4f9c-8d00-30e8c1ee4679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077f774f-db22-4b52-9ac5-1c62ccbd7b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f875bac-e478-4450-a9f1-47d565ab070d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578e0b10-89c3-446f-b21d-55a0916886e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345b3af1-162e-4a44-b98b-aa8021e482fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce208e3d-72a9-4cc4-a7f8-6e060cb326c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e009446b-8344-4641-bff7-901c59d60a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb6ee82-4248-4863-be5c-f24feaa6547a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47ac9e0-0ea1-49cb-883f-eb09ff22af07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1933d074-7293-4062-ac22-0b1a6047bbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc41cee2-98b9-4f25-a9cb-cc0c59dea814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0ddcbb-891e-4eb8-a28f-6617ea70e784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7693b5d7-c61c-4586-afcc-5f6374acd3aa",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b241afa1-82a2-48db-bff7-f69f7d7add62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec578de-b7dc-4772-91fa-dfcad7eff868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90c20cc-0aa8-41e9-b1a1-ea6848d7f0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1001c1ec-b3e4-4141-b312-b8068d5df117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868f578f-7b8d-4429-9ab8-0c9f03803a63",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba40a6f-faa0-44b8-bc02-9023858c8820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598509db-65b1-4698-8102-2065d9ac44de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c969c2f9-51b9-4d29-8e5c-60d4f0468d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "556c7679-815f-4014-8f9a-d207980fca86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c9fa7f-88ee-46af-8265-cb1b591f5c93",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f269af5-83fb-4ddc-874a-2a2dd8150d04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a53805-b0f0-4349-832a-1c74432dc2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b02d76-0c53-4dec-a63c-52bb14811f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29aaf4d-57a6-4116-8766-65912ca0e939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6cf5aa-56bc-4b67-ba2f-f4d859d2dedf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8adb9c-eb35-4030-8859-6393b38b538c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7d60b54-cb5e-4e2c-b9ba-f24942a2dc96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36048a7a-bae5-4f01-89ed-ed53333797c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d24e2729-8e72-484a-8d86-d226ece9d59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffc6425-e49e-4c75-85ba-cb3e5d5a27a7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f92a30-1914-4de1-9a5b-e977a12772a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578c4d35-9681-41ea-8957-7627e47e4e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7434b9-c6a8-46a9-a861-d6f2e5266ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324fa7dd-d07e-476e-88d7-583c2721bbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d11cf2-36ad-497e-940d-20a2b7fd5e9c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1636fd2a-7ac2-4356-9331-f364519a79d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53cafd8d-e744-4f84-bbed-cc428bc7762a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f772aa7a-4f15-4536-b5ea-39e9f7cb80c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81493b1f-b81f-45d0-8f60-6375f7eff00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fb0255-1b85-4672-ab7b-392dd1b532f6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478e091f-d231-400b-b6b5-9031490faf2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12bd8b69-7885-4a97-8e88-1308f633233f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e9e07d-65e3-47b2-b314-1945d27a5c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40746519-37f8-46d4-a188-6578f295018a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186b59e5-6bb3-4c79-873a-989084f2fac2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8f2a4b-0169-4865-bf9a-3877a759fdec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9166f6f7-b8e8-4bf9-8192-77dee9895218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02f04f7-f192-4117-9228-14774c8c26a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9785a1a-5dff-4561-b007-e43847671e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a6f579-f42e-4f74-a682-74d38bf5e19e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ebf5f5-2a38-4269-9dbf-7bfba6120285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6c3120f-da59-415d-b1ad-7a70fe9e2168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4bc37c-2021-4d3c-89db-9fdc7bfdad7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6658e3d5-6830-4308-a72a-b56d88512c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65470f55-0d24-4d5e-8eec-e6fe1a05546e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f09c681-2567-4b96-bc0c-fabc2e70073b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3eead2-0559-4974-a86a-11a4d2f89b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b209c76-de74-4304-8032-3dc9c3e3ff7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dc601e-cb3a-4364-85c2-ed00545eaafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635c838d-8458-44ee-8678-7dad1487e2a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a156b7-c63e-49c4-8b94-eb2408914ae0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057184e1-d600-4b23-bedd-67db34ffed0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b89cf1-1db7-4a72-8919-b925180dc804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a5b827-fbc4-45f7-90a8-88969d391981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456b680a-d7c7-4d46-8d81-79bfa290e608",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7b2f61-7e38-4605-a059-bac4fe3c219e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0ed635-3d69-4a66-9aaa-966217dc6303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10d6190-3071-4ce1-8d23-0155a27661c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f9a4ce-cf19-4012-9212-148ed93f5502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93486172-89af-4084-8ab7-683839501919",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040c30a4-4981-4821-966b-eb2440230fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63aa74c6-c1aa-4b8a-b994-c88010529388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3caaf7-eca8-46ca-9926-4c2f103eeb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd3fbb4-de34-49cd-a627-3d584fe23451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875392dd-46af-4eac-9942-b003daee5d68",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75317a52-0738-4a1a-be18-b47c8fde6c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1007d297-38e6-42d9-b6bc-4ed7eeca920c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08726026-b187-439d-ab98-0d7c25c5e754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d489da-e1b7-4a6d-ba86-f101311401e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00ac72e-b2d1-4198-883a-7d3532dc2971",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3845a6e6-9509-4295-ae0d-2c263516c52b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185f2996-3599-42d3-ad32-7e8e0a20d5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e841f7f-e4af-4305-a9ed-7b9eb309e45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec2c572-20c7-4403-bd56-49f2323ad9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef0eb3e-b9af-4250-a23f-6647f00d087e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bea8ccc-675a-4e5f-982c-a43035f6f697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c037660d-808f-4ed7-9039-0cbcfc97e9d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe32489a-5e37-44fb-9754-f1bae66a736d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a3f7df-2833-4313-9f79-1b7f67af47c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01771c0-3f4f-4ea6-aaa1-3d5837a88cce",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584acf31-0ab8-4fd8-8514-41571ba000a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca3c4db-0a72-4545-8ede-aa7e58f4278f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146b1c37-ca85-4e8c-91f8-330055aeebc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0345b3cc-195e-4e81-b962-11d7657704c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19db389e-3606-428f-a1e2-79877e6ba191",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f11f5e-bb81-4886-b92d-2826fa5bf424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eef3bfd-0965-4c6f-8aaf-bc50f7f4ed7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07864ba5-3439-436e-95a6-92b6467c5ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97771eca-a29a-4753-a92e-837ca74506c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586a5fc2-3cfa-4b52-89a2-bccd9e71ccf3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf0a000-c38d-4652-865e-c67a7f905dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f59369-6d0e-4696-a2f1-bdef473bf747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da49bfb-aaed-4b71-8688-650fbd67ab06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfce6dc-cd52-4eb3-81f5-e5169db7d64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94460f7e-d3c8-4b09-be81-d1db4583292a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a160c0-3e0a-4ed2-9753-2464865a06c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf819cd-6792-40d7-8a8c-be2e1c7a9890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a5957a-079c-49a3-a96c-cb2692ddf71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21902cfe-e396-458e-98c6-2a292553d739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7161185-0775-4638-bc48-295acf085a9b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44def79c-94ad-48cf-9757-61b03756b1d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83b11d21-2aa0-4550-beae-b2103e9dbd87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fbba84-1b56-4d96-b3cd-f5820a374c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d91dec1-f424-41b1-8744-6a93e78982e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa8c862-3a61-4f98-8abb-cba6a1ade87f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a844152e-cdd4-4635-a5b1-cffa74e781c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012abf0c-b2f3-42c1-b81c-b67d27f0c285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cb5fbe-a40a-490d-afcd-4ae173196062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3838e5c2-c8c1-4bbb-967e-2637ee323c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478ce588-da63-4379-a61e-116439e0bbfa",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781902a4-f002-43f8-b388-0860e2dcca61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d5e966e-ac18-41db-840f-b694652c51f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06af9f13-49c2-4049-843f-a9cdc4985065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889987c6-cbcd-4c14-b342-39c76c0e9eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd10f6c-bf34-4f03-b291-6086ff112d92",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24ef0a4-f39e-4396-b893-0202c0659840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e1d51bd-4da0-47c7-b2b0-242ddce9b465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6569039-f825-45d2-af3e-5928e8ad8331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcfaa6a-9884-417f-839f-babd4d1d4b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13ac2ed-9b5f-4c24-8572-58fb3073754b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643bc742-c7d1-497d-a707-fc8b6590cac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67c127f-daf6-47ad-b0a9-25c1e00794c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05dc9ea-9603-49ed-a0eb-30a210d9ea75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beee7c53-134b-4964-8526-4f107e436576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8ad3cf-df73-40bd-a281-fb0bcd552893",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852a3baa-c025-4eec-b34f-2543760daf5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc5bee3-400b-48c1-81db-e32d5fd75fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a4d355-0a36-4d4b-b85c-0e11368bba45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d9ce57-726e-4fcd-b1f3-454afc8e4db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e0e4e0-e637-4957-a00b-ecf6c38afad6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f834206-de73-43bc-a64f-2f302125191f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1997e5f8-36d3-4fce-9255-efd236b72fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e74d12-e076-44e2-80f0-14e187021c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fd7907-1082-4a7c-a311-e1e43f1c985b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666cec5a-cea4-461a-86c7-57527132d2a3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4218f7f-9a07-4160-a332-a94ff3da6dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f91739f1-ddff-4ec4-8c19-9a22e46c911f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dfaab6-6091-4eb0-9ba0-3634d523fbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5dc8c0-4707-4990-ba95-7219a9a52fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367ca0ba-b9ed-4828-ae1f-3b50ae9f8b96",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17be776-4fe1-4b11-b8ae-94c0b58d9cbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d473b28-a326-411b-9361-09f992c7e8c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7811835a-ded3-49b3-9832-a6584833770f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db871016-72ea-4140-bcdf-d6a99b5bc06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9499f1f-128f-444a-ada4-00f066b1098a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cd1001-a5fb-4649-9175-e19b65d83b35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441bb2cc-21f8-45f4-b79b-ecebad072006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fc09b8-084d-4eff-b0ea-9d47ab6d0f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4772a4-e57b-4fec-bf9a-fd45013cff13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e11695-2bc6-427f-896a-038bc62fc584",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cf797d-1261-48ce-bfac-77b3d97d315d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17cab05d-0f14-43e7-9981-6b310189d265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ba9487-1f6f-4f11-822f-b37667e83fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a60e09-6d34-4fef-9841-5b9396686c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e3e15a-84e6-4948-a13b-70c05666d155",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a513ed62-a048-40f1-b54d-8e976400810c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522efb3e-2a1f-41f8-9966-dce9026c10ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d1c95b-93f8-49ae-a8ac-a5df40bd0bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b1d0af-b252-40ea-9d70-445eaeb866fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb3d1f0-06b6-48c0-9816-d4807fdb4323",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be91c50-2deb-41f6-8dfc-9ceae5d3c7e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841c7ce7-a02b-4e91-beba-0df7f17ae358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590aa930-9ba5-4590-b2fe-eb0c40b05e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5693bf32-c05d-4221-955b-1e4e29aaa987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c56a45b-4f61-4968-9c94-24a0db836114",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1e9d15-3d16-4a1f-ae7a-3365c5dd753d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9d317b4-28a8-4860-aad9-ea2a17a13f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9fcf38-884e-47dc-8a26-2e81366be8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3deee1-7a3d-4865-98e9-a7104cf78ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac3d626-ed1f-4e96-bc01-8f93a951ed04",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62f7393-b0d0-467a-ad96-a993d8725378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b2fd6c9-3692-4840-9623-4f48b08fcbfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3383fda2-280a-4fd8-a9f7-1f4b9e7d6caa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a54f6f-f536-46cc-a874-6fb83d2838ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e3c51f-ac52-47ae-be16-6233f6da09e5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b2c715-1bc4-4713-b1d0-b57f21f41d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bedfa2-3e07-4fc6-b171-7ab3a93e5583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38d6a7a-e49b-40dd-bae9-d371e1a53bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5fd7a2-cae0-4f13-8b08-758844cb433c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36561fd0-ca79-42cf-b452-da465c06e155",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bacb0f9-fbeb-4026-b804-3ce9a5a06b99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5fcf5ba-1167-431c-8730-795ab9b4cf9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8838ac5f-9585-401e-882e-330b3100951c"
                    }
                  }
                ]
              },
              {
                "id": "9bf06361-86a7-4ac2-a8e0-c6d23be1f218",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d64fdaf-2297-403d-aced-62bb367b5dfd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5135616-a71c-4e48-a0ef-e98d86dff431",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "51652859-1b9d-45c9-8609-6f5156cf02fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8723d81-e86c-4e40-b464-8019b932f8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ce1f248-4a72-4ff0-831c-8636a4ced0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b135331-45e2-4cfd-ab13-12e75bb5826e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21139a9c-3210-4090-8ad5-8cd50f01893f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7784c70d-aaf1-4350-b6f3-bcc2d3ce42bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a99776-004b-4374-b821-ab85c6c8d394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98958d2f-fa6b-4ad0-9c0f-40d8beb3b9bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6d8404d-993f-4639-a161-8a2dacad7b7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83fffaf3-c027-4958-b279-06167d64eb17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3956c03c-3249-469f-b317-32661a6014be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caf022d2-2201-4a4a-987f-bd3be208ad6e"
                    }
                  }
                ]
              },
              {
                "id": "69c5cd98-0002-434d-9ab7-4893e44cc765",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c525afc0-7c38-4ae5-a743-6180db2d8300",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0b9e0c-df2c-4230-a3ef-8ca530143899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6a0e43de-e0dc-49f3-b17d-fa9901021885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f8d770-7a45-49cd-816e-5ef933766d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d48101-9073-42bd-a96b-318a1ddc684c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38a44a89-5dc8-4e7f-b616-22711570070c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6aa13eae-aabb-43dd-81f9-8e10433f531d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09f5962d-ac97-4aae-9f80-668d94df50a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9de783b0-6391-4e9b-85f0-6bfca072ccd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "686f5253-5ff4-4215-b5cc-b27519bc793e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f2a26ad-3f60-4dc1-9555-34e254d7e2b3"
                    }
                  }
                ]
              },
              {
                "id": "8684ed2f-d049-43b9-9175-e54fc8ed1dcf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebadba06-e1c8-4971-b409-74f8876e54ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "86ba0f96-df08-4c6c-bda3-2ed98cf5830f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f297e220-c7a8-4663-ba82-7d5514bc07c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11e0317d-4976-4bfb-994b-079e01b8789e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7075f9b8-9953-42fe-a64b-9dcc4674da54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5cda915f-eb1c-450b-8dcf-15cc8a6bd9cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fa21561-503f-4796-a944-2f49ea6f6a39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "428107ee-e92e-4a8f-aa62-c2133a42631f"
            }
          }
        ]
      },
      {
        "id": "93d76296-1935-4cac-bb24-6aae3a03cd9d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "afc42fad-35a3-41d8-9c47-ff372071bbd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9cab20b0-d7ad-4386-8210-f9826d2408cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c60e9f6-2e25-471f-a567-bcb009923b37",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602db2c5-79d9-440a-b1ab-9a54bb50e12d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca3e84fb-83e1-4f5c-8b38-2583d063f5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a056bdf-82a9-4d10-9b6c-91290b627bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dee9d4f3-c176-495d-a338-45945e3a0de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b3636a-1d27-4fca-be0e-86b5579bece9",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88154d8-91fd-42e9-990c-a377d37d7b1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e7ac4359-9f23-4d6a-93f3-1e7ec2a7e1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb049e16-d90c-4ae6-8306-032ab16541d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "219573e0-f2ee-493d-aaae-d2542e9ca7f4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d902cda-2426-4e5a-992c-e6b0a7a98717",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfadc2c2-cbf5-499d-b865-9e3e41906a10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40fe6c99-e834-4de1-bb29-29d2b103fc5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "984258f2-869c-4242-8095-132ec053a90a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a739de2-7863-44f0-ba7e-53ed613aa45b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ad335c5b-1f68-4ba9-a9b8-6b454287ef40"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1ea0a2a-4683-434e-860a-f563a7f9b689",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce95a86d-db8e-4bba-8c66-f7d240228b8c"
            }
          }
        ]
      },
      {
        "id": "8d5b48ce-f228-45ab-beb4-885bc344a7f5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b7c66525-ffcd-4c8d-aa25-92f55b51dcda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5afc2ca-e731-4711-bec2-d26b0fc7ded4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b77742a0-669d-4ba5-ba6e-61ff363bc56f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfce2a9-1215-43ff-b615-975c3f727675",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7a449d4-5c56-4da7-9feb-7478c28f27f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccc9c04-0990-4281-a2dc-d57c54cc2044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d2b8f4f-a9de-40bf-bac6-124b3e36cf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f170e05-4dca-4906-9bcd-919b258b808a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbe29e8-4e8b-4124-89cd-b21e40bda0f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ca378d13-1f38-4bb3-b9ef-f7a758a0fecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1c6d54-3dbe-46ab-af94-4a97737840a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "468127ef-5488-4f46-80a1-b783fba64106"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7627cd01-691a-4397-b988-d06098aef752",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67820ba9-58d9-40ea-b627-4ad69c23a2aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2db6b59-7096-4630-b27e-5e58be57d3a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "958e9480-b0be-41f6-bed0-20d644d8d6ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd379f2d-a835-4ec5-bbae-f5fe06417a60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5e7b260b-65a9-4b97-9a50-147813519fb8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b45d5ea5-a0cc-43d7-9ef9-8763d403dd0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7744db4-5dc6-42d0-92fc-fb2e0788f1ed"
            }
          }
        ]
      },
      {
        "id": "4955e722-77ed-4d6d-a502-94974b7b203d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "884c02db-2087-4e8e-8905-3e1bdbff3f38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c211747f-b6dc-4e01-be66-852493c0cc59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca23b31c-135a-4149-89ce-1d39b812df5a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a556919-04fe-481e-af8b-fa07a9840845",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d23738c3-8f15-4c78-9056-9cc5edbe1824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bc1af3-1df4-49a8-8f79-634479320cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bdeadfb-b6ff-45cc-aac0-daa48ba14124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a2985a-c886-4caf-b126-07c2c9163ca2",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11070c6c-83c1-4e64-8277-5cbeb7e6751d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8eafbf79-6de9-4cba-a265-a1c4f061679c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9382fea-dc60-4734-8dde-419d911278e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d621ac3-0a9a-4b21-8f51-36751b545415"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8e10c8e-2d38-47d5-b2b9-7c6852f32946",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc3e3cc0-8fe7-433a-9956-074bf7fdf7cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbc545c1-ee57-40c5-94ef-32b6c946a580",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e095b8ff-0efd-4619-b810-1600843ebe44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6282bc5f-03f1-4a31-9aea-8f867d397f07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "074fddc0-bdfa-4ea3-9590-e8a30032a1b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "66ac20aa-abea-4dc3-a1ef-0e963d970ccf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c979ca7-dbf4-4b5b-ba01-767d2b88aca4"
            }
          }
        ]
      },
      {
        "id": "4c5bbb12-14e0-4954-9d7c-2e9897112470",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f406c52-7fb2-47e3-b7e2-33fdeab62116",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c36c253c-1cb0-48e8-97bd-ed771a6871d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e69e5865-0bbf-4a59-b1d4-a6a4869d19f9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "832c3a1c-63dc-4661-863e-054e1a09bb02",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fcc5151d-0ddf-4e61-a127-7937315705f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 785.2846153846153,
      "responseMin": 15,
      "responseMax": 9258,
      "responseSd": 846.7893320302501,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680223137371,
      "completed": 1680223354058
    },
    "executions": [
      {
        "id": "b347242a-1a52-42db-b636-2c2106e966f2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "53892e71-76f0-4bba-a6f8-c0c2b135351e",
          "httpRequestId": "f0a074aa-946d-4f49-9def-e7ed613e8e74"
        },
        "item": {
          "id": "b347242a-1a52-42db-b636-2c2106e966f2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2a15c757-328f-4abb-aad0-8440de005963",
          "status": "OK",
          "code": 200,
          "responseTime": 164,
          "responseSize": 0
        }
      },
      {
        "id": "008c7bc7-3f93-4277-8d43-45be50ef9ae1",
        "cursor": {
          "ref": "657f1e8b-4cc1-4ba2-a3d3-846f1765df7c",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a11daf73-1f08-4278-b0df-a02cb45a9c20"
        },
        "item": {
          "id": "008c7bc7-3f93-4277-8d43-45be50ef9ae1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d96b63cb-a9fd-487f-9e5d-73cbffce09b0",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "8ee98677-64d4-4e20-b3ef-5cd26e950248",
        "cursor": {
          "ref": "94d90272-551c-4dd6-84d8-83f97064ee5f",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f14d3284-17e4-4daf-8d0d-785ed5685bc2"
        },
        "item": {
          "id": "8ee98677-64d4-4e20-b3ef-5cd26e950248",
          "name": "did_json"
        },
        "response": {
          "id": "2dc60a51-c66c-422a-98a4-056cebbfd725",
          "status": "OK",
          "code": 200,
          "responseTime": 971,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81e4d17-16a3-44c5-92be-9e69fd1933bf",
        "cursor": {
          "ref": "5302a02f-187e-4b5d-99a3-83162b4809f1",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "527e1ed4-15cd-4550-a5aa-a01bf6a9cad7"
        },
        "item": {
          "id": "a81e4d17-16a3-44c5-92be-9e69fd1933bf",
          "name": "did:invalid"
        },
        "response": {
          "id": "5267cc7a-ac3b-4c42-97bd-75ee911ef229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1169,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81e4d17-16a3-44c5-92be-9e69fd1933bf",
        "cursor": {
          "ref": "5302a02f-187e-4b5d-99a3-83162b4809f1",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "527e1ed4-15cd-4550-a5aa-a01bf6a9cad7"
        },
        "item": {
          "id": "a81e4d17-16a3-44c5-92be-9e69fd1933bf",
          "name": "did:invalid"
        },
        "response": {
          "id": "5267cc7a-ac3b-4c42-97bd-75ee911ef229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1169,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d801f3d6-e6f7-4808-b723-77fc8182a14e",
        "cursor": {
          "ref": "4e179f87-f105-453a-98a8-150a32b7f9ae",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cb1cda9c-f64b-4cbd-bc39-b2d4b2149a50"
        },
        "item": {
          "id": "d801f3d6-e6f7-4808-b723-77fc8182a14e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5ebd5b75-620c-4d3d-9774-d9ef415ef949",
          "status": "Not Found",
          "code": 404,
          "responseTime": 696,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664dd950-457f-44e3-84f3-cca5c18e6320",
        "cursor": {
          "ref": "e72a5bad-dbe0-4c22-bd3c-9331c79cd1e1",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "985096f1-bc65-4220-8b84-f560b3bfac11"
        },
        "item": {
          "id": "664dd950-457f-44e3-84f3-cca5c18e6320",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f7cf494b-16c7-4cdf-b067-a22b92ea7c5b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1188,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba69ef77-6990-4e0f-9471-95afec4450e3",
        "cursor": {
          "ref": "507aba43-4010-4529-927a-23854830ad7c",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7bf675fb-9acd-4f67-bf20-9a2b9ac02a57"
        },
        "item": {
          "id": "ba69ef77-6990-4e0f-9471-95afec4450e3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ec2c4070-20b5-4010-a33f-f74881071db7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c31950-656b-4820-a48d-83b845f7df65",
        "cursor": {
          "ref": "68186853-ec4b-4c3c-a919-c8163572044b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5492f12-6624-4826-8373-82e1efa4f400"
        },
        "item": {
          "id": "90c31950-656b-4820-a48d-83b845f7df65",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "55ecff8a-e5c8-4c64-be9f-f7484bb0fdd6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 994,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c31950-656b-4820-a48d-83b845f7df65",
        "cursor": {
          "ref": "68186853-ec4b-4c3c-a919-c8163572044b",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b5492f12-6624-4826-8373-82e1efa4f400"
        },
        "item": {
          "id": "90c31950-656b-4820-a48d-83b845f7df65",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "55ecff8a-e5c8-4c64-be9f-f7484bb0fdd6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 994,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed431f57-fd7c-4852-945d-45ae72599c61",
        "cursor": {
          "ref": "0cee544e-a4f5-4cbe-91b0-618ced4c3964",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9f8e8d65-7d4d-4b4d-be97-13ab9bcf089b"
        },
        "item": {
          "id": "ed431f57-fd7c-4852-945d-45ae72599c61",
          "name": "identifiers"
        },
        "response": {
          "id": "2cc43ca9-85e9-407f-b0a0-20ffdbd3f9e6",
          "status": "OK",
          "code": 200,
          "responseTime": 1554,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc6f481-a0e5-4fba-b27d-6f8d80473f52",
        "cursor": {
          "ref": "3938e47a-b636-4066-953c-e80b569cb028",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "98f2f09e-8668-4e16-8e45-2d0328de91ee"
        },
        "item": {
          "id": "5cc6f481-a0e5-4fba-b27d-6f8d80473f52",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b3ff33fa-0f21-421f-8e81-3220690cd2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc6f481-a0e5-4fba-b27d-6f8d80473f52",
        "cursor": {
          "ref": "3938e47a-b636-4066-953c-e80b569cb028",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "98f2f09e-8668-4e16-8e45-2d0328de91ee"
        },
        "item": {
          "id": "5cc6f481-a0e5-4fba-b27d-6f8d80473f52",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b3ff33fa-0f21-421f-8e81-3220690cd2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e616d2-7e51-4d6c-ba8a-0c5ff8be344e",
        "cursor": {
          "ref": "34f7dd6a-193c-494e-9b29-fd1c65a9f4ec",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "713fdbf6-2e82-45f7-996c-02f82521531f"
        },
        "item": {
          "id": "80e616d2-7e51-4d6c-ba8a-0c5ff8be344e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "850e3a7d-06f8-43b0-b8e7-5aa78cccc7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 967,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92816318-6886-4204-ac7f-ea0f657b8852",
        "cursor": {
          "ref": "b07fbe1a-e59a-43f2-83b6-fe6ba4772e02",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "59b543b6-2bfd-4618-8340-728d4d86ba46"
        },
        "item": {
          "id": "92816318-6886-4204-ac7f-ea0f657b8852",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "72db81f9-17cd-4f04-86e3-401ee66279df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 870,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0118a596-0904-4004-9fd1-9e4767b1a6a4",
        "cursor": {
          "ref": "aef99121-1727-44cd-903c-b3c5d4ce85e3",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8876cc7f-cb0e-4a10-87fc-dfd61b5d4a89"
        },
        "item": {
          "id": "0118a596-0904-4004-9fd1-9e4767b1a6a4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f76da25c-5bd3-4675-b2ad-58e3fee1b5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6841d937-caad-4f45-95e8-0fe5fda0c5e1",
        "cursor": {
          "ref": "ad705cd7-0959-44b1-a07a-999a3cbd9b71",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "99117e8b-c709-42a8-b8c2-efeec26596ac"
        },
        "item": {
          "id": "6841d937-caad-4f45-95e8-0fe5fda0c5e1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a62cdec2-c8e5-48cd-a93c-355e97dcb128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3139d4-4a78-4b2e-8df9-69f24a9aecda",
        "cursor": {
          "ref": "55221e68-8b1c-46c1-ab6a-e249f625a186",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "33c16c05-0c77-4a78-bc9b-7ff094392df9"
        },
        "item": {
          "id": "ec3139d4-4a78-4b2e-8df9-69f24a9aecda",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f98e7321-f109-42b9-b986-7a331cf3be51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a88239d-8eb8-4f1d-b7a4-0ac3bb94429e",
        "cursor": {
          "ref": "2b2a8298-d0a5-456e-841a-41d98ee8d3bd",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e34920fd-a545-40c9-8946-379086d1e3c7"
        },
        "item": {
          "id": "7a88239d-8eb8-4f1d-b7a4-0ac3bb94429e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7e4e57d5-c769-4c8f-99b7-e066c4723b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed4d2ea-26af-4635-bf3f-e0fd9f92b6b5",
        "cursor": {
          "ref": "b30dcca2-650d-4982-9ee4-823f2ccd083f",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ef360980-19ae-4998-9161-0da25789337d"
        },
        "item": {
          "id": "3ed4d2ea-26af-4635-bf3f-e0fd9f92b6b5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4495aadc-fe5e-4641-8d91-fce3820a2991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19bbb0b-d290-4d17-bb67-c4e947038ad5",
        "cursor": {
          "ref": "7b5b0263-f4b1-459e-840c-8a894b557559",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e1e5abcf-561b-422f-a093-a536f626f971"
        },
        "item": {
          "id": "f19bbb0b-d290-4d17-bb67-c4e947038ad5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "40957a2f-56b8-4793-9e1e-aaf050e019a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064469a3-c879-4801-9569-53ea2fa570a3",
        "cursor": {
          "ref": "39cde80d-bcba-47ff-84b7-a8a184cdb0a1",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3c57ed45-dc97-425c-81ca-44ffd6af40e5"
        },
        "item": {
          "id": "064469a3-c879-4801-9569-53ea2fa570a3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "79a97d95-a750-4a8b-87d5-249e5a1a60fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecde012-d4e3-4c32-9f9d-0b0665a460c5",
        "cursor": {
          "ref": "c3ad2f4a-29a5-48ff-ac38-332e5ff3ab23",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c8a61ffb-0bde-4ad4-b6e4-ae021de36ca5"
        },
        "item": {
          "id": "1ecde012-d4e3-4c32-9f9d-0b0665a460c5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "29b53e3f-53e7-4636-a838-2e15eaf710a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0545c4a4-bc04-4598-b9a1-df1af5f8f141",
        "cursor": {
          "ref": "ea366dcb-4078-4d17-b634-5986a74b93b9",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e07ef303-9ab0-4d2a-8582-0d6acd6af996"
        },
        "item": {
          "id": "0545c4a4-bc04-4598-b9a1-df1af5f8f141",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "213cdd5f-a62c-4c44-aa55-234543d3ed74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563af018-bd71-45aa-88b9-ba0bc34e52a4",
        "cursor": {
          "ref": "90ca985f-79df-4770-9983-e12e64ef1c1b",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "99ca23be-ccec-4b4b-aa68-3dc9388d6781"
        },
        "item": {
          "id": "563af018-bd71-45aa-88b9-ba0bc34e52a4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "afaf5121-d6e2-45d3-873b-474f15b2c7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1127,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bacf73-ab66-44fe-899e-d2d75cc306fb",
        "cursor": {
          "ref": "b0f245fa-64f1-4dbc-bbb3-8a7558c223f0",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "52814bc0-702a-450f-b51c-28d0f6056306"
        },
        "item": {
          "id": "b0bacf73-ab66-44fe-899e-d2d75cc306fb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6b0dba48-741f-48a9-83b2-d76a5c3a78e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1289,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5eb7442-38d4-4a1b-8737-0be9641fcb94",
        "cursor": {
          "ref": "5aff4c1c-74db-47d0-8c20-29b53a108370",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "05d999c4-ce75-4076-8c9d-d10f24946dc2"
        },
        "item": {
          "id": "a5eb7442-38d4-4a1b-8737-0be9641fcb94",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f2113782-efd5-4cf4-af09-e09b1b697dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1195,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d608acfd-82a4-43c0-a7d4-c6a1189face1",
        "cursor": {
          "ref": "e9d43d40-b91f-4c36-8132-58b0ff6371d4",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4b1f3c35-46eb-45e9-8988-f225de440623"
        },
        "item": {
          "id": "d608acfd-82a4-43c0-a7d4-c6a1189face1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d378d59d-9cf8-4473-8505-3ace750a8589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e78a25-f3b8-4dbe-8d2d-d6d8c87aa5ba",
        "cursor": {
          "ref": "31991694-4646-4d66-8b0c-819b66c8bb2d",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4cc9404e-7741-4f95-aca5-1a2b773a63c1"
        },
        "item": {
          "id": "17e78a25-f3b8-4dbe-8d2d-d6d8c87aa5ba",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c767efaf-bae2-49f8-bf78-70381e4c3a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173f559e-6c07-4b86-bdff-20450a31b28a",
        "cursor": {
          "ref": "faff99da-d90c-45f2-afe8-52900305a476",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "84f3530c-42ae-484f-a956-00603cae82a5"
        },
        "item": {
          "id": "173f559e-6c07-4b86-bdff-20450a31b28a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fe8b3ef2-e094-4251-98d7-4dda0edf7d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef58bfc-00b4-4f99-a2c4-14ff5d99853c",
        "cursor": {
          "ref": "eee3b9fa-bd0b-43db-bae0-2d5520b8b3b1",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2cee013e-e1f3-4251-ba8d-6e29c6d3fd5e"
        },
        "item": {
          "id": "6ef58bfc-00b4-4f99-a2c4-14ff5d99853c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2bb92bab-50e6-4dc1-a1f9-d9ec9da53298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db44d05-957a-4bcf-b163-591b56e78d69",
        "cursor": {
          "ref": "59348608-2615-497b-9016-3a051a8338a9",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "30583be4-df4e-4c0d-8732-044cb5379e9c"
        },
        "item": {
          "id": "7db44d05-957a-4bcf-b163-591b56e78d69",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d101e0c9-3783-4d62-98ef-ac1d1e2cc1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca771c14-d2c5-4fb7-a299-c6f9569b58fd",
        "cursor": {
          "ref": "e0b04019-6d79-4995-a47d-174529e9fc10",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c5fddd3a-9736-4fc2-8a04-65fc3eb94bbe"
        },
        "item": {
          "id": "ca771c14-d2c5-4fb7-a299-c6f9569b58fd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ef3102d7-4f86-4c9f-919f-64f02d35e8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f94eb4d-f2cb-47e3-bf63-b38b8b777358",
        "cursor": {
          "ref": "ff3cf581-db8c-47d4-8548-0ffd496e12c2",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1423c885-87a5-4486-9912-d1eb6b82ada2"
        },
        "item": {
          "id": "7f94eb4d-f2cb-47e3-bf63-b38b8b777358",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eb6b4b11-594c-4b52-9288-769a9b91169a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24967d3c-4791-4a54-9330-10cad47f2cbd",
        "cursor": {
          "ref": "c3703a7d-5d93-4cb5-b3fc-6a2b83e5681f",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "40bc08ec-9d5a-4eb8-9c72-82db2d84bfb4"
        },
        "item": {
          "id": "24967d3c-4791-4a54-9330-10cad47f2cbd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "74bb74c7-d856-45be-a4f5-0a8d284c7590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218307f2-67ef-4db5-91a7-d0f2387eba64",
        "cursor": {
          "ref": "be70eb6f-38b8-4d28-bdd4-1df8c52063e5",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "89cd0b36-d083-454a-b2cc-7c3fb82e3835"
        },
        "item": {
          "id": "218307f2-67ef-4db5-91a7-d0f2387eba64",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "95d50424-9ec5-427a-ac91-dcb9eac4c0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f984186d-e3ad-40ea-8656-9b38486f1cd2",
        "cursor": {
          "ref": "eda868e6-ccd4-4f31-9623-ccc4caa4967d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "26eb7dfe-c839-4947-abf3-8a4f8f1c23fe"
        },
        "item": {
          "id": "f984186d-e3ad-40ea-8656-9b38486f1cd2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "580703da-a987-4404-94da-1897f7f76341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddec6cab-2c87-424c-a74c-edb7cdd6fb11",
        "cursor": {
          "ref": "76609544-f46c-4ea5-85a6-cefc348b3230",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f150b368-02b8-4177-a280-f84f2300e473"
        },
        "item": {
          "id": "ddec6cab-2c87-424c-a74c-edb7cdd6fb11",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dc35896a-3bcb-4101-8fa7-51dbf855cda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60260105-0fb8-4e65-acdc-15bcbe18effe",
        "cursor": {
          "ref": "47f527ba-98bf-4d0e-9127-43344c8dbebb",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dfa232f9-a89a-42f9-8ff0-9e1201159ec5"
        },
        "item": {
          "id": "60260105-0fb8-4e65-acdc-15bcbe18effe",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4488e9fa-164a-4b29-90d5-1b8277bf7aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cb9a8c-7fe1-433d-a4d2-6bb00e39299a",
        "cursor": {
          "ref": "543a78a7-3e51-4690-9b1a-3572f5c22493",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c8b45bf4-ebf9-4774-b7e4-716203380b0d"
        },
        "item": {
          "id": "57cb9a8c-7fe1-433d-a4d2-6bb00e39299a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fe162b1c-291b-406f-ada6-01fa1523bf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d72427-c028-468a-8077-43c8d66d02d7",
        "cursor": {
          "ref": "6a4f65e3-4d07-4618-931b-833a8a5b9993",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4bc34f10-9ace-4faa-aa9d-5d4b5d5d528e"
        },
        "item": {
          "id": "a4d72427-c028-468a-8077-43c8d66d02d7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "023bbebe-2772-4dc5-b90c-53fb1f3ab4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a250f73-7c3f-4757-9aae-2cd25b8c3b58",
        "cursor": {
          "ref": "8496d7ad-5152-4c96-a73e-bdd4f0b8de09",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "42291926-63d1-4554-b511-0c35891c90a8"
        },
        "item": {
          "id": "0a250f73-7c3f-4757-9aae-2cd25b8c3b58",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1df1bddf-574b-4ce7-ad02-a6c100940ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9f4a7c-ed6d-4a98-af64-d24f8242e9d9",
        "cursor": {
          "ref": "3e072271-86b0-44f4-bdc3-405528d11c27",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2b3cef95-7881-47b6-94fe-59714d92e8ae"
        },
        "item": {
          "id": "ac9f4a7c-ed6d-4a98-af64-d24f8242e9d9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cf5081f0-1e2a-43de-b011-5c68983a580b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef7e8bb-85da-4852-8472-acb787b10d9c",
        "cursor": {
          "ref": "bb5115ae-7d1c-4c72-b27c-1de2f067225f",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "98b44849-7204-4507-981b-698c826f72e8"
        },
        "item": {
          "id": "aef7e8bb-85da-4852-8472-acb787b10d9c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6cec4474-36ae-4845-b6b3-e6c87d9c292e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f889131f-c240-4afe-aff5-2d665bca3f81",
        "cursor": {
          "ref": "84e93168-e4a2-414a-8b58-650774203015",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ed009ff6-2cd0-4b87-a9a2-effdde5663fc"
        },
        "item": {
          "id": "f889131f-c240-4afe-aff5-2d665bca3f81",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8b01eafa-9827-4404-8d73-4038e6420906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f798427-223d-4cca-8fa5-833c20b127c3",
        "cursor": {
          "ref": "bc0b096e-c31a-406c-b52f-318627af0338",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eeaa1fdc-0f9a-4a9b-a656-b29cfa11b038"
        },
        "item": {
          "id": "0f798427-223d-4cca-8fa5-833c20b127c3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1682b94e-7d3e-48a4-85be-d6bc52545444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f54f71f-3011-497f-9125-8743da3c8bac",
        "cursor": {
          "ref": "edb1d411-9c32-47d8-b783-3b3f28d6c0af",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d25b92ed-983e-40f8-b597-bc9c72634e44"
        },
        "item": {
          "id": "2f54f71f-3011-497f-9125-8743da3c8bac",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "66946e34-b2b9-4fdb-b38d-68035e1dbf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4143e2a7-f75a-41a2-b5e9-7aed27c8f1b5",
        "cursor": {
          "ref": "edf94375-fc9f-4104-9331-8d428b527f91",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ef58fe40-90ee-45b7-8dbc-e9513db7561d"
        },
        "item": {
          "id": "4143e2a7-f75a-41a2-b5e9-7aed27c8f1b5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5eeecb6f-38a5-4ec6-b2ce-1cbcb643136d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 735,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf4b545-68ba-41bb-bd78-04f9f970e9fc",
        "cursor": {
          "ref": "2691bc58-3244-475c-8fb3-fb62b9f06f92",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9ed9f71e-80d1-4b64-a4e2-2aea877f0af7"
        },
        "item": {
          "id": "3bf4b545-68ba-41bb-bd78-04f9f970e9fc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "48d9c3cd-9961-470e-b306-f3f4d815ab90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e7bbc3-5d24-4429-96fa-e55d973d28d8",
        "cursor": {
          "ref": "f418e1be-e491-49f2-b35f-3c79e380067d",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3b5c0aac-5527-402f-9ac0-0df05397ec86"
        },
        "item": {
          "id": "17e7bbc3-5d24-4429-96fa-e55d973d28d8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "92043374-775d-4905-8463-93bde508ac00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a213025f-f6ce-45c3-b3df-06b870be44d8",
        "cursor": {
          "ref": "6b2e902c-68dc-4fb1-a649-2bbcdea7d673",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "649a167b-6dfc-4a08-a54a-e305a46dc6d8"
        },
        "item": {
          "id": "a213025f-f6ce-45c3-b3df-06b870be44d8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fe265fb0-42a1-4e14-b3cc-b547b7f35349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc12485c-f3c8-4de0-8461-fc4ff138a64b",
        "cursor": {
          "ref": "5c087caa-6358-4460-be31-32772b338c58",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bec79beb-aec9-4817-ab73-34e1b6a00715"
        },
        "item": {
          "id": "bc12485c-f3c8-4de0-8461-fc4ff138a64b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9e598a8c-d97e-40ae-8476-3c231c2bc9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb44c2f5-9a9a-4613-9e5b-de7b302ee001",
        "cursor": {
          "ref": "821068ce-45c8-455a-ba4a-d4ffd11add32",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "66983293-3bb5-412b-910d-5ba806d97fe9"
        },
        "item": {
          "id": "bb44c2f5-9a9a-4613-9e5b-de7b302ee001",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f50ca292-4c73-4e8e-a3b1-be9955889357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1187,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5875b834-2eea-452b-9cb1-e65ee5b9ec66",
        "cursor": {
          "ref": "adf748a6-af9c-40b0-a957-52a9b3e26934",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2086fd90-5ee7-4b29-b87f-4baa314bc3af"
        },
        "item": {
          "id": "5875b834-2eea-452b-9cb1-e65ee5b9ec66",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "add0de1d-f3ef-4f54-86e0-bd6df36aa429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbb2798-36fa-4bdc-b50f-4c7ac07bc680",
        "cursor": {
          "ref": "2ad72ef1-8f59-4c3e-8391-7c65c37edd60",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "96876231-c81a-45a1-a06c-80e149056ea9"
        },
        "item": {
          "id": "5fbb2798-36fa-4bdc-b50f-4c7ac07bc680",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fdbc16de-73b3-4248-b14d-8608a9105757",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 867,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bf37d5-fc16-4a58-a2e7-bd416516c91f",
        "cursor": {
          "ref": "bc803ce9-c6bd-4b17-8068-463c218770ec",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dfb6ec89-fcce-460b-bf06-b3ecadc0e74c"
        },
        "item": {
          "id": "91bf37d5-fc16-4a58-a2e7-bd416516c91f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9c627408-9091-4345-a33f-1160b7c40466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4422ec-201e-40a8-9953-3bf212cd5f49",
        "cursor": {
          "ref": "e02b7d10-e031-41d4-8fff-4b2fcfd637eb",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "838e7f38-a092-42b9-a950-40c2ee545677"
        },
        "item": {
          "id": "2f4422ec-201e-40a8-9953-3bf212cd5f49",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "01888f71-aa51-49ea-8348-c701f758c67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7fc89b-301e-4f52-ad67-61925ba53d3b",
        "cursor": {
          "ref": "77211de1-fae5-4fdd-82a5-f4d93b217405",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fca693e2-1fc0-4d65-8fec-a4067471bf40"
        },
        "item": {
          "id": "ab7fc89b-301e-4f52-ad67-61925ba53d3b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9604034a-1867-4ee1-bd1e-ac4f452c67c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fae18fa-350c-4598-a929-63587f036d12",
        "cursor": {
          "ref": "2de6ca4c-35ae-441a-a617-082956797f48",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cb7c8d67-f0bb-490c-8087-dfcbcbc56eb1"
        },
        "item": {
          "id": "4fae18fa-350c-4598-a929-63587f036d12",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ab96a9d1-5c59-4c24-9614-e9fb2e913391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139e308f-bcba-4ec4-92eb-f9010a5f154f",
        "cursor": {
          "ref": "efe56f7d-f482-48e0-96bf-307c17b9b8e5",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6a86b0e3-56d5-4da9-bbe9-acdd22cb20df"
        },
        "item": {
          "id": "139e308f-bcba-4ec4-92eb-f9010a5f154f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "41820b6e-c943-4522-87b0-5566193d6492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d6937-2d20-4d7a-98ff-177597d0f1a5",
        "cursor": {
          "ref": "6572cc7c-c263-4f4c-8315-2f504e6e1a01",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e0dc26b6-ec27-4178-bed2-f70909b20855"
        },
        "item": {
          "id": "358d6937-2d20-4d7a-98ff-177597d0f1a5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d9203875-d36f-4fca-991b-5767aab3daa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a241f75-f611-4d13-bd44-c4b9bd099112",
        "cursor": {
          "ref": "a88b7261-3d11-49c5-8685-4f3d34d8bba8",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c737c5f5-abbd-4817-a10f-1d8bea4f34cc"
        },
        "item": {
          "id": "6a241f75-f611-4d13-bd44-c4b9bd099112",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c510f97e-0d2c-425b-b2b8-61ac148b54be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4367e6b0-812e-4470-967f-849388998f74",
        "cursor": {
          "ref": "babc1113-5e86-48e5-85f6-f8d3a2b2f580",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e50e35d4-4eba-4433-9993-c40c3814dd4a"
        },
        "item": {
          "id": "4367e6b0-812e-4470-967f-849388998f74",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b50d0d52-227d-473a-a391-3d88d80355c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e94e17-a618-4394-a6f2-5e63156f345a",
        "cursor": {
          "ref": "08912cfc-9ce0-40b9-ba76-29e5d9e21ddc",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "056508aa-6c52-47f8-81e8-e75a59fa1ba8"
        },
        "item": {
          "id": "34e94e17-a618-4394-a6f2-5e63156f345a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3843ce15-85c5-4977-9dc8-ac03fe052626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea06428f-9908-4d19-a207-2c94fd35cfdb",
        "cursor": {
          "ref": "4795f536-8c65-427b-b628-377b827ac7d1",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c14db58a-3277-4bac-8b34-e7abaa96a9b2"
        },
        "item": {
          "id": "ea06428f-9908-4d19-a207-2c94fd35cfdb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "27083bab-a38d-47ee-8a6b-77434e2baf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc955c90-10e1-42e0-b472-2d091946580b",
        "cursor": {
          "ref": "20f6206f-67f9-4ae8-8093-2c5a04f846ab",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "18f90a0d-f91c-4c57-aa76-8c806b27692c"
        },
        "item": {
          "id": "fc955c90-10e1-42e0-b472-2d091946580b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fed49ca8-d920-4e8f-b2bd-c71fb0852f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9c91f2-05b7-4248-8670-504f16b23b69",
        "cursor": {
          "ref": "9dedfe51-16d2-44f5-807d-6a942bc5b605",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e4e30d37-2bec-4e77-8296-fc8c8e4825ed"
        },
        "item": {
          "id": "ee9c91f2-05b7-4248-8670-504f16b23b69",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fd4bd914-b983-4859-98b4-03020d233165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb05faf7-b3fd-4326-984a-fe97dd269b21",
        "cursor": {
          "ref": "e7a304b8-6b97-4fd8-bb62-115e60b097c8",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bd480c3d-41d7-4a5d-bcb0-35dbeb1a6d12"
        },
        "item": {
          "id": "eb05faf7-b3fd-4326-984a-fe97dd269b21",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "637ad7ff-27a4-46a8-986d-7acb94904de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ce8a58-52d3-461f-aae4-e0101bb93a4f",
        "cursor": {
          "ref": "1c7f5f58-087a-4c4a-bab6-3ed4625e059b",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2f98798d-285c-4a53-8f8c-609c1ca027b1"
        },
        "item": {
          "id": "50ce8a58-52d3-461f-aae4-e0101bb93a4f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "302e0d49-f8ad-42c3-8287-7a0acd583dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24178638-1be2-45d6-bcbb-2c9f90a08b9d",
        "cursor": {
          "ref": "248477d0-f82e-4cfb-87ec-f6e8db2750fd",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7eb69a15-7890-4881-864b-4d6f1a44bf5b"
        },
        "item": {
          "id": "24178638-1be2-45d6-bcbb-2c9f90a08b9d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "24b623a6-97e8-4bb9-9686-87b4afdddf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b541805-28b6-46f3-a2e6-4c6d402570e0",
        "cursor": {
          "ref": "9e312d6a-89a2-4e10-9ac5-d7c941c5073b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3b7723e3-f5f4-48ab-af9a-c42251a3da0c"
        },
        "item": {
          "id": "3b541805-28b6-46f3-a2e6-4c6d402570e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a072630c-09c3-40b1-b294-c7f5a81d0e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8872a4c8-6756-4e9a-a3b2-5f35a65760d6",
        "cursor": {
          "ref": "6e48d785-16c0-4d88-8068-cead4e37157c",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e04c09c8-27e4-425c-95ad-d5be614c2edd"
        },
        "item": {
          "id": "8872a4c8-6756-4e9a-a3b2-5f35a65760d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0e0cf2af-2549-4801-bf9d-ff54e82012d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1092,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ebbd05-d089-4fba-a05c-e0637921be51",
        "cursor": {
          "ref": "ce04ef78-2d14-4a7f-bce0-0a6b7ceaabe8",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2f480f25-b0cb-44b9-820c-96bf835dc4cd"
        },
        "item": {
          "id": "b7ebbd05-d089-4fba-a05c-e0637921be51",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d20c580c-5ed1-42a3-800d-569677c35727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1034,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93570598-ebb3-45d5-a564-0cf466d5adee",
        "cursor": {
          "ref": "d244bce4-74f4-46da-a5ef-6d1b2078645f",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d712a611-d366-47c8-a29b-e0de68aff699"
        },
        "item": {
          "id": "93570598-ebb3-45d5-a564-0cf466d5adee",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bd464cb7-90be-45af-96b5-3a56c493114e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9c0c53-4560-4f85-bba7-9e14361fd838",
        "cursor": {
          "ref": "29aac440-0fbb-402d-8f43-db8cd338fc90",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "aede9c41-7050-436f-9c5b-f0993bc3115e"
        },
        "item": {
          "id": "8a9c0c53-4560-4f85-bba7-9e14361fd838",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3a7b3f64-5b6f-4add-b533-5cc1dfcb2363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee20fb66-09e8-4d54-a9a0-f795093f3cd5",
        "cursor": {
          "ref": "e08e9c50-68f8-427d-a424-8994c16bfe9b",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7eee0906-0160-49c2-ba4f-165e31527ae7"
        },
        "item": {
          "id": "ee20fb66-09e8-4d54-a9a0-f795093f3cd5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "03a545e4-0d6b-41a4-b3eb-8c77c34cfe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862ec4be-37c9-46b6-a2b4-edd55a6a0124",
        "cursor": {
          "ref": "7cd0c728-c5f5-4bdb-93d9-60c4c21a5398",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a1927aa4-0ee7-4057-9aa9-302fb2c71223"
        },
        "item": {
          "id": "862ec4be-37c9-46b6-a2b4-edd55a6a0124",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "55ece9ae-83bc-421e-8a01-be4c0e96c164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3430fd-5dd1-4b69-a89e-b269601826f5",
        "cursor": {
          "ref": "a283a79c-fce1-4205-87fe-31f9391eb224",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ca6ba93b-d95a-4d2a-b037-108a7ad57edd"
        },
        "item": {
          "id": "df3430fd-5dd1-4b69-a89e-b269601826f5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a225dece-8850-4efc-b95e-74e628638376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916f1627-4af5-4a2d-aa96-22ca95be8d02",
        "cursor": {
          "ref": "bd44844c-1d7f-46c4-a64e-d70f661c55b8",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3348a670-775d-4848-8f0a-48625c44d925"
        },
        "item": {
          "id": "916f1627-4af5-4a2d-aa96-22ca95be8d02",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "212f3051-8fb5-4401-be46-e03328a68fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921d6163-4261-4970-aeea-dfc1beb85fe4",
        "cursor": {
          "ref": "20c02c78-f13b-4a85-b43e-9ba00776b76f",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "abfdaf47-0c7b-4cd1-9417-967f6f14c2a6"
        },
        "item": {
          "id": "921d6163-4261-4970-aeea-dfc1beb85fe4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9e29caff-6350-4e22-acf7-8fba7d336979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6ce179-9b02-4b77-ab76-ac82f640b96c",
        "cursor": {
          "ref": "92bae729-070e-4514-add5-798060e793f8",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f9a3841c-d3a5-4dfc-9387-3c17f5e7ddf1"
        },
        "item": {
          "id": "3b6ce179-9b02-4b77-ab76-ac82f640b96c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "71313802-2a5a-4acf-8af0-0fc11e9efc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340e2b1a-6874-4568-9334-5efa9403d47c",
        "cursor": {
          "ref": "f4980d2c-a350-4f96-9eda-7c7402c12c19",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "edac3240-7926-46b5-aec7-e62bbbb0e9b7"
        },
        "item": {
          "id": "340e2b1a-6874-4568-9334-5efa9403d47c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dd477aa3-29c6-4753-8956-a315eb306dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44687187-b40c-49a9-9777-c2b8d1665ce0",
        "cursor": {
          "ref": "f4fbf551-2d9c-4abc-9196-0fc2062ee750",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0f113830-3d59-422a-9fe3-9e58d5623dcd"
        },
        "item": {
          "id": "44687187-b40c-49a9-9777-c2b8d1665ce0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4adcc03d-c216-469e-8159-774a504305ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df1e581-ca16-4bad-9dba-ab0ec20eba41",
        "cursor": {
          "ref": "06189aba-775d-4b9a-8c67-2cea0faf5253",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0387d88f-fd10-4aa2-9147-fe864b9eb0bb"
        },
        "item": {
          "id": "8df1e581-ca16-4bad-9dba-ab0ec20eba41",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2b1591ed-3353-4bea-9487-d81edf4d94fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a901942-8b56-4a89-bac2-1f6ff5a668d1",
        "cursor": {
          "ref": "8ce089e4-1872-4419-a291-731c8afaafdd",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a6cbdd63-189a-48b9-b973-12d8c11b6458"
        },
        "item": {
          "id": "2a901942-8b56-4a89-bac2-1f6ff5a668d1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ce4d802d-3b92-4f48-a2e0-b99a1e7f4b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6f98a2-23c6-4d17-94bb-b7da1adf6ae1",
        "cursor": {
          "ref": "16d7c451-d2cf-42fb-900e-1c4c2e0a4732",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "808b4e95-1db4-45ef-9d2f-0ca607b945be"
        },
        "item": {
          "id": "6a6f98a2-23c6-4d17-94bb-b7da1adf6ae1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a467fc32-74e6-4b6e-942e-9a389cf85251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3f59d6-3105-4b0c-bcb2-390988df61d4",
        "cursor": {
          "ref": "5ee61a0f-b8e4-4e15-9add-9c9fe8cdbd40",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "28a2c7e4-494d-483f-a1fe-97119b8d17c9"
        },
        "item": {
          "id": "3e3f59d6-3105-4b0c-bcb2-390988df61d4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1f14ced7-c58e-40c0-acf3-2353bb68da77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb47898-8a6f-41fa-ba0e-9a385f2a42aa",
        "cursor": {
          "ref": "ba5e6d39-1e0f-41e5-bac1-0e9b794afb70",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "20ba37ef-252c-4826-8a02-1bf9f77ef1e6"
        },
        "item": {
          "id": "cdb47898-8a6f-41fa-ba0e-9a385f2a42aa",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "338d8948-e181-42b4-9bc2-75e04516942f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d8c5a1-64fd-40c9-957b-47718f0495f8",
        "cursor": {
          "ref": "010c130e-d281-424c-9745-5914b647b7d6",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "373d9acd-d176-4f71-94b8-7c302919579b"
        },
        "item": {
          "id": "e4d8c5a1-64fd-40c9-957b-47718f0495f8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6c0b592a-6f1c-4c0c-8f70-eacfd5c3ed4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cbeb2f-6a1a-4bcb-9816-9194e24d10c9",
        "cursor": {
          "ref": "ddf1bd06-d841-4845-af7f-611b4416661f",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c78f04b8-c628-429e-bf93-9dfdbc5a0223"
        },
        "item": {
          "id": "c2cbeb2f-6a1a-4bcb-9816-9194e24d10c9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b49d0815-f968-41bd-a706-a772d21e2dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95315508-365e-4aa0-87bf-d82b6dc665ea",
        "cursor": {
          "ref": "c2af5ce5-9b85-4858-a322-1b5dc598e85b",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6737170d-21ab-4d86-a858-0ce15b26b1e1"
        },
        "item": {
          "id": "95315508-365e-4aa0-87bf-d82b6dc665ea",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "31784839-66c3-4b93-8a36-4dad89a2d341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cfac82-e833-4b75-b824-b0bac558044b",
        "cursor": {
          "ref": "8a76e79b-87f6-429f-8243-ab8f27a05ef5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6df991b5-1160-4d62-a3ee-1219ddecca60"
        },
        "item": {
          "id": "f1cfac82-e833-4b75-b824-b0bac558044b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "41212974-0717-46a9-9507-0045c30f5ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbb688f-0223-4c92-958e-89dde938fa2c",
        "cursor": {
          "ref": "e4633bd7-2aa5-433b-ba1b-04f154552992",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3623b40d-f1ff-472c-931d-e4098eca6e76"
        },
        "item": {
          "id": "8cbb688f-0223-4c92-958e-89dde938fa2c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "534b315e-0329-425d-85ba-330ea1d0c6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253c371c-c88b-4c80-a8eb-ab72705e784b",
        "cursor": {
          "ref": "a0dd35e1-f586-45ee-8c8a-c7d17d393f5d",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bbe6c80a-b44f-42cc-b8ed-50a8ebbea22e"
        },
        "item": {
          "id": "253c371c-c88b-4c80-a8eb-ab72705e784b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8205fecb-0df7-4d6c-84e1-46fdb6326031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ddbeea-0823-4246-aaae-30ad6ce56ed4",
        "cursor": {
          "ref": "98c50a53-0d45-44bb-8e25-7204c523b7ba",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b03f93da-43e3-4e92-b652-7eff6f9abe20"
        },
        "item": {
          "id": "d7ddbeea-0823-4246-aaae-30ad6ce56ed4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "799a2bfc-922a-43ee-a514-7fa3fc310fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe70faa0-69c6-463b-a5bd-f27b837d384c",
        "cursor": {
          "ref": "45708fde-1d1a-4bb6-ae12-1e1c6a5cb31b",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7af3f1b8-b092-4ba6-9376-f75e2defdcc5"
        },
        "item": {
          "id": "fe70faa0-69c6-463b-a5bd-f27b837d384c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "75cd1077-f530-4f2e-aa31-1207500f168e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d55766b-eac9-4e35-b0d2-5b2f3e24d6b3",
        "cursor": {
          "ref": "84482930-a0df-4b17-8adf-6a56bdf764c4",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bd10a600-56ea-4588-becf-e0751b628c44"
        },
        "item": {
          "id": "8d55766b-eac9-4e35-b0d2-5b2f3e24d6b3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7568cb1c-707a-4baa-907c-6d6d699431e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc25e55-0d10-4e0f-af67-507b37d4ae5c",
        "cursor": {
          "ref": "5de68f9d-f6e3-48cd-9ead-36e981c04b57",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "78e3a479-7005-48fb-b818-9d45e5a45390"
        },
        "item": {
          "id": "ecc25e55-0d10-4e0f-af67-507b37d4ae5c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6ca7c1e3-646d-4cf6-b65d-5027182889cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee7d1a6-d94b-4b52-8a29-5a73efbc53e4",
        "cursor": {
          "ref": "fe9710cf-a339-49ae-b6d5-a3952528cdf1",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "52c6a3fd-8574-48f6-ac0b-fe533f633b3d"
        },
        "item": {
          "id": "2ee7d1a6-d94b-4b52-8a29-5a73efbc53e4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8af27f15-8e9a-4c93-9f36-77368ef6e828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b631e6a-ffb4-4d37-b9a5-97d3699113d5",
        "cursor": {
          "ref": "4d4d242c-0c0d-4fa2-b8ac-50c2c1d1b720",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "28974ec5-2431-48ba-9203-3a8695303dc2"
        },
        "item": {
          "id": "0b631e6a-ffb4-4d37-b9a5-97d3699113d5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ef2f2048-413a-4ccb-bd09-a63d30cf8ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f83337-1099-469d-a38a-64af6d719fd4",
        "cursor": {
          "ref": "ae00b5b9-5cb6-4639-8a06-033784350a0f",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "de3723b8-86ac-4368-9b0d-c33f8b038ce7"
        },
        "item": {
          "id": "72f83337-1099-469d-a38a-64af6d719fd4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f4c42446-bf04-4f37-8836-55b6fe923e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86b5320-3ce4-4811-b5e3-28ce4e70ff77",
        "cursor": {
          "ref": "bd550622-bd97-4044-bd0a-bfcc9cdb18b8",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e9c24135-cde1-4f5c-a593-ecf77eb09e92"
        },
        "item": {
          "id": "c86b5320-3ce4-4811-b5e3-28ce4e70ff77",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bc7e630a-c273-4e60-a6e2-e3471df03521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6bbba1-a9d9-4543-9e16-7e173ec12827",
        "cursor": {
          "ref": "94030391-7f34-44fb-932b-73f3e59ebc32",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3dd0d83e-964c-45b4-86b8-d9d0f770de63"
        },
        "item": {
          "id": "fc6bbba1-a9d9-4543-9e16-7e173ec12827",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3d5534bb-7f94-4d56-bee8-4dc879942768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc875a6-1b2e-4e19-b2ca-ba094218fb45",
        "cursor": {
          "ref": "c974fdec-4351-45c2-bf87-6471f3260887",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e505d9d8-664f-426d-8b48-6eb5c9c0c693"
        },
        "item": {
          "id": "0bc875a6-1b2e-4e19-b2ca-ba094218fb45",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a42c462a-a81a-45c1-b944-f44e6be597c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b0ad0c-ae5d-461d-8af3-5d7966202403",
        "cursor": {
          "ref": "804bdc79-e5ea-4fa4-88dd-14efbaa6415f",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "586db28a-70e0-4f68-b25e-e53f40a6b695"
        },
        "item": {
          "id": "85b0ad0c-ae5d-461d-8af3-5d7966202403",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d1a1d81f-afff-40ec-bc6b-f98ae0784e0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f38ed4-8a56-4d46-a30c-730a4a67934a",
        "cursor": {
          "ref": "65c69ba9-84d3-4ae3-ab80-fc5e5d5e1d75",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8a0024eb-5704-4bed-9c3a-aa9b998e8bf1"
        },
        "item": {
          "id": "69f38ed4-8a56-4d46-a30c-730a4a67934a",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "66f69405-9bf2-4961-863f-6b548563ec61",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 639,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dabbfb6-b828-4448-8792-60eaf509ee27",
        "cursor": {
          "ref": "05cf8b95-ac5a-47d7-abc8-8bd803dcbebe",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "92f0a3fb-c0c0-4eca-a178-d56235bb6598"
        },
        "item": {
          "id": "1dabbfb6-b828-4448-8792-60eaf509ee27",
          "name": "credentials_issue"
        },
        "response": {
          "id": "09ce7cda-b102-4f63-920e-ef9f6c464532",
          "status": "Created",
          "code": 201,
          "responseTime": 5441,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dc3ec8-32f5-497d-8d2f-2fd9605631b0",
        "cursor": {
          "ref": "9691c377-088e-49c6-8328-44248744f8ea",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b930e051-cdee-4fd2-8894-2b1f08de0edb"
        },
        "item": {
          "id": "b2dc3ec8-32f5-497d-8d2f-2fd9605631b0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1f301c25-d628-4a6e-a0fc-b64485dc577a",
          "status": "Created",
          "code": 201,
          "responseTime": 4782,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24b572e-19c8-45d1-9b85-06c473ba2ed2",
        "cursor": {
          "ref": "509a06bc-9641-47f8-9ea2-eb310ee76e1d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f2b98530-5348-420d-9045-df01f0d0d96d"
        },
        "item": {
          "id": "c24b572e-19c8-45d1-9b85-06c473ba2ed2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "29c324c2-e2a2-4585-acc9-9f4e21868975",
          "status": "Created",
          "code": 201,
          "responseTime": 4459,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a7daac-e368-421a-8d0b-25ba9efed538",
        "cursor": {
          "ref": "0e8bb694-5be7-4e8f-91c3-d63bdd94b5d8",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b077e2ef-287d-4ddb-b878-b9664ccb830f"
        },
        "item": {
          "id": "27a7daac-e368-421a-8d0b-25ba9efed538",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5fda3d33-fd4a-4570-b001-2bd9d7f0cb42",
          "status": "Created",
          "code": 201,
          "responseTime": 5374,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17fc0b4-f9dd-498c-a49a-6545d7369aeb",
        "cursor": {
          "ref": "93aa355d-cc94-450a-bb18-7a2c9288b287",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b1b03fc4-8206-47fd-b827-4dd0775ea62a"
        },
        "item": {
          "id": "f17fc0b4-f9dd-498c-a49a-6545d7369aeb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "50940d07-54a9-49c0-be87-4e37e8a1b08f",
          "status": "Created",
          "code": 201,
          "responseTime": 4753,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac84051d-0cfd-4665-9e7a-f99fc6e7c9f9",
        "cursor": {
          "ref": "ba5a4411-ab00-44c2-a01d-e508ea016fe7",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba394b6e-9036-4ee5-a825-b6c6815547e1"
        },
        "item": {
          "id": "ac84051d-0cfd-4665-9e7a-f99fc6e7c9f9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0f2e80e8-e506-4b58-b01c-25cd501caa38",
          "status": "Created",
          "code": 201,
          "responseTime": 9258,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c9df98-94dc-4c4b-8c16-ba2e7a228af1",
        "cursor": {
          "ref": "536ee882-deb1-4453-a616-8f7179257bb9",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4adbd690-ec85-4396-b99e-6f0bf6696224"
        },
        "item": {
          "id": "38c9df98-94dc-4c4b-8c16-ba2e7a228af1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a7846138-f7f2-491f-baf4-02a2f6c13443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c9df98-94dc-4c4b-8c16-ba2e7a228af1",
        "cursor": {
          "ref": "536ee882-deb1-4453-a616-8f7179257bb9",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4adbd690-ec85-4396-b99e-6f0bf6696224"
        },
        "item": {
          "id": "38c9df98-94dc-4c4b-8c16-ba2e7a228af1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a7846138-f7f2-491f-baf4-02a2f6c13443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f58683-bc86-40c5-a1e6-def995d33779",
        "cursor": {
          "ref": "aaaebf12-5606-4c81-86bd-dc3e77245928",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d86b6c0d-e88f-4f4d-a7cd-c465bc41cdba"
        },
        "item": {
          "id": "49f58683-bc86-40c5-a1e6-def995d33779",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "88fd0314-495c-4525-a8ec-061f0c680fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e65b4f8-ad5e-4d34-b612-1d3d35f35dbe",
        "cursor": {
          "ref": "0b887ad7-5d60-4225-80a8-dfd493e1af95",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f8443a1a-4e73-4b04-becb-01b31a1d6b50"
        },
        "item": {
          "id": "5e65b4f8-ad5e-4d34-b612-1d3d35f35dbe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "178a912e-684b-44ac-8506-e0587003fbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1ecd33-64d6-4fb1-8855-f0129ab7fb6c",
        "cursor": {
          "ref": "eac53118-04ff-4380-8d03-4a9117985c02",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9f1580ae-8a68-4f4d-a87f-86d810bb49e3"
        },
        "item": {
          "id": "8a1ecd33-64d6-4fb1-8855-f0129ab7fb6c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cbf6cec8-df20-4ef3-ab25-fe1d0ddac45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71fa024-8122-45bf-84c2-e95087e1bef3",
        "cursor": {
          "ref": "831c92a0-1e91-4a8a-a309-7b1bb791528e",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b1fdafbf-91e1-4407-b358-72d7aed2af13"
        },
        "item": {
          "id": "f71fa024-8122-45bf-84c2-e95087e1bef3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f2a44e68-b6de-45f5-b53d-2a61e6733705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28cb3e6-0517-4e95-a67f-97d83a03ed1a",
        "cursor": {
          "ref": "24035815-c941-466d-9c46-694aa7ce22f2",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fc1e2c8f-6a86-4f2c-a8ab-2e173918141c"
        },
        "item": {
          "id": "e28cb3e6-0517-4e95-a67f-97d83a03ed1a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b2bb58c4-d07d-41e0-b5b7-1d79ba4f1336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a90710-f053-4325-a6aa-ff40da6c34cb",
        "cursor": {
          "ref": "6290774f-f306-4c90-8d6e-4fe04db8039a",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "13381cba-1737-4a8f-8221-40446774c8ab"
        },
        "item": {
          "id": "89a90710-f053-4325-a6aa-ff40da6c34cb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "794686fa-f2e6-44bd-aa98-e9ccfd3f0c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22374bda-cb3c-4d92-bf51-6351c96033f1",
        "cursor": {
          "ref": "9fe8c846-3b85-4c7f-8d97-45f8c3757f13",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "887c1966-8a36-46bf-815f-976da45cfaae"
        },
        "item": {
          "id": "22374bda-cb3c-4d92-bf51-6351c96033f1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a0edf790-9182-49e1-8521-492e3d6bd43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675d6d9b-4752-4074-8a01-b35d64aad289",
        "cursor": {
          "ref": "5bbe5295-d304-4f57-86f8-ddfd2560f549",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a8f22b42-3066-4d8d-81c5-450d6d94a4b4"
        },
        "item": {
          "id": "675d6d9b-4752-4074-8a01-b35d64aad289",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "168f1e4d-5807-4121-8da6-f70dec4b13a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dd046d-4661-437a-82ab-a4f05438c102",
        "cursor": {
          "ref": "d94e0a7d-a9c2-48a7-a414-1211ce9df53c",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2eb7fb79-f783-4916-be28-c2252563d787"
        },
        "item": {
          "id": "b6dd046d-4661-437a-82ab-a4f05438c102",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fae6843a-87cf-474c-9447-56b3dd50ba3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87ec3e4-879f-48aa-ba8e-af4b412c9e0d",
        "cursor": {
          "ref": "7d3867d5-5077-4e76-b308-e3b7f24e8d53",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fabaf2f7-5f59-4519-88f2-a8cf3763f054"
        },
        "item": {
          "id": "b87ec3e4-879f-48aa-ba8e-af4b412c9e0d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "589ea520-64d1-45be-88bd-6b0007f93dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244b5ecd-804b-454b-a9b5-84149050efb8",
        "cursor": {
          "ref": "ad3d9cdf-8cc6-4201-a3d9-84568e37366e",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c9cbf155-31c4-4ca3-bf55-f88903b64daa"
        },
        "item": {
          "id": "244b5ecd-804b-454b-a9b5-84149050efb8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f7d79070-5d88-44dc-8efd-7e07a9efba1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a8e65e-5e9f-4ef5-8551-3c2921da30ee",
        "cursor": {
          "ref": "aa6664ef-5578-48d1-a340-c2b6fa46152e",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ec694fb7-848a-4eaa-bad2-006f6a5c4706"
        },
        "item": {
          "id": "18a8e65e-5e9f-4ef5-8551-3c2921da30ee",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d2a9aa55-a377-49e3-bf0e-a4ca7d1dcfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12bf08c-731b-4636-be4d-db1599c21f86",
        "cursor": {
          "ref": "7ce43cf3-85d5-4251-aecf-e1a87cbaa8b1",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "468dc008-785e-4cd5-92a1-3d25309ea8d0"
        },
        "item": {
          "id": "c12bf08c-731b-4636-be4d-db1599c21f86",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "76766ca6-f34d-4996-b9b5-bf3c205a6e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac55340-cfa0-4dc9-a991-0eb1c694752e",
        "cursor": {
          "ref": "d3a52eda-d137-4bc0-9b2b-b17c443fdb7d",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dc318680-2ce6-40d7-9ab2-db706f562cf0"
        },
        "item": {
          "id": "dac55340-cfa0-4dc9-a991-0eb1c694752e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9d6e9366-392d-4d3d-bbfd-a590dfb7541c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1094,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd53cd0-9e69-4abb-b7cf-0e842d42beb7",
        "cursor": {
          "ref": "25dbd837-0368-46a0-b75c-e214708817db",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f10b2006-8e29-4dd8-8ede-5e7f915800d3"
        },
        "item": {
          "id": "7bd53cd0-9e69-4abb-b7cf-0e842d42beb7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b02be0be-0272-45cb-844c-0916d0b59902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1639,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022b716c-b516-47d6-80e6-341d4dde319b",
        "cursor": {
          "ref": "492af6ec-04d1-4260-9ddb-f7d6c8dc4e0f",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "33ccc5d3-d8c6-434c-adf1-d8f9c70a9402"
        },
        "item": {
          "id": "022b716c-b516-47d6-80e6-341d4dde319b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "15d5603a-ffcb-4b1a-83f1-5c406802c4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2390,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c74a0c8-04cd-42be-8e5f-e2cc9e9ad260",
        "cursor": {
          "ref": "b64d2a8f-9653-4c41-bcd4-179ec691b5f2",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "23997b0f-1ee5-46d9-ad30-551c269039c5"
        },
        "item": {
          "id": "5c74a0c8-04cd-42be-8e5f-e2cc9e9ad260",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "97f82004-ae5a-40e6-80fe-1990e9a286dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1837,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962d2a61-b392-4ada-81bf-675d344b13cf",
        "cursor": {
          "ref": "5ba51966-1a09-44ff-be3c-5003346ad9c1",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9da3b309-de3a-442d-bc43-30e4c3378ea4"
        },
        "item": {
          "id": "962d2a61-b392-4ada-81bf-675d344b13cf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9a76912d-39c6-4bf1-ae49-68c775d0facf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1827,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cc0d7f-a1aa-49b4-9a02-02740507773d",
        "cursor": {
          "ref": "f7f6b4f5-ecca-486a-8f6e-6a465694d5c7",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8eb1d9f7-4a98-4f1e-afa0-83bfbcc57b36"
        },
        "item": {
          "id": "42cc0d7f-a1aa-49b4-9a02-02740507773d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "da5d2b1c-375c-4a5b-b065-9005578e4974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1063,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c2add3-7e64-4ca8-b672-f3e7befdce1e",
        "cursor": {
          "ref": "64538398-537d-4280-9d20-234c744e0aad",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a2b97948-ff67-4b0f-a029-d00fd82206a5"
        },
        "item": {
          "id": "a2c2add3-7e64-4ca8-b672-f3e7befdce1e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "db15f5e9-0614-46a3-8a1d-e93b694001f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c59654-2062-4ac3-91c7-d528a62fb017",
        "cursor": {
          "ref": "a0b3d39b-9b0f-4f09-ba79-49c9c226fa63",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a59b9969-a25d-48d8-9e97-5b7fbe4baf7f"
        },
        "item": {
          "id": "91c59654-2062-4ac3-91c7-d528a62fb017",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fdec84b4-25ca-46c4-9e61-f30ddeebbc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4008c499-134e-425a-8470-4b7ef4ba1d70",
        "cursor": {
          "ref": "9f4fbd18-ec11-408a-b082-6ebf64c4fb71",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b8f3a970-240f-4bef-afbe-6801e22bcdde"
        },
        "item": {
          "id": "4008c499-134e-425a-8470-4b7ef4ba1d70",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "91f54203-f10a-4b43-a332-6b5b2cd76c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d194376-1df8-4500-8be9-ebde93e14fab",
        "cursor": {
          "ref": "1766b2d3-d84a-4f64-85cd-745d3cd825aa",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c616d5a6-9ad7-41e4-b51c-9c71ca9cd2b2"
        },
        "item": {
          "id": "2d194376-1df8-4500-8be9-ebde93e14fab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bced3a91-dfb9-4cfd-bdf4-194779b37017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4f2ede-0190-4998-a69b-326794f6091b",
        "cursor": {
          "ref": "1509008d-5231-4f51-bf9b-b243f899d12c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2e1e6646-fa98-46a9-9ef7-2ebcc6c30550"
        },
        "item": {
          "id": "6d4f2ede-0190-4998-a69b-326794f6091b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "86191df8-a52e-4f5f-af0f-f5afaf4c5980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80eacca0-6042-40bf-b717-4c4478b18742",
        "cursor": {
          "ref": "d9fec1bf-6979-4fd4-bc90-3708815f3447",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "21771ce9-25ed-43e8-ba31-bb10042ffeff"
        },
        "item": {
          "id": "80eacca0-6042-40bf-b717-4c4478b18742",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9bd0a670-5b8a-4e05-8464-24e986971726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da50640-cde7-44b3-80d1-5bbf5b311ee0",
        "cursor": {
          "ref": "94b5afe5-b950-4f36-a901-f3d5e51ad35c",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8601136f-35b4-416d-9d7c-fd961130f0bb"
        },
        "item": {
          "id": "4da50640-cde7-44b3-80d1-5bbf5b311ee0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e7cffe2d-b43b-4637-9999-963f9c12d3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 673,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2c125f-15ab-4b41-bfbc-07be5c6f964f",
        "cursor": {
          "ref": "412009a0-eb47-423b-bac1-f44ca1ef0751",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "97bd92fd-9bd7-40d6-8e6b-152f1e03028d"
        },
        "item": {
          "id": "9d2c125f-15ab-4b41-bfbc-07be5c6f964f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "97aa2ef8-d4e9-4135-b590-5acd3b97f4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b96639-eccf-4329-8070-3ff940ceae1a",
        "cursor": {
          "ref": "22d4b374-a6d8-4c47-ac73-325690da88a4",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0279142a-d65c-4a91-bfef-0d81a8d0156c"
        },
        "item": {
          "id": "c6b96639-eccf-4329-8070-3ff940ceae1a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0df2bc19-6d3a-4d4e-94a6-7e91a5319c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e81ffe9-5571-4daf-bcf8-ddcba6b835c9",
        "cursor": {
          "ref": "653d0c16-1ee1-4704-8ce7-7caa71ebd757",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0c2e9d14-5457-4891-8385-173d3318a29a"
        },
        "item": {
          "id": "9e81ffe9-5571-4daf-bcf8-ddcba6b835c9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "318fc59c-6f52-4d27-80e0-c48489551514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2669a1ba-ffaa-4363-839e-5b5ab075269f",
        "cursor": {
          "ref": "93fa8c44-0d1d-42af-83d4-8fb6eaef100b",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "eb4a0653-8d3e-4e0c-8ac5-5d105df7ddbc"
        },
        "item": {
          "id": "2669a1ba-ffaa-4363-839e-5b5ab075269f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4bd29767-cffb-41ba-ba1d-6c146f16e572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0a652d-7dcb-46fd-9871-85e26c76744e",
        "cursor": {
          "ref": "8e22017f-1c59-4f69-b3b9-93d366e0a69e",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "968c1b49-02af-4fca-be03-291af5f12de8"
        },
        "item": {
          "id": "3f0a652d-7dcb-46fd-9871-85e26c76744e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e775ae94-a828-4608-9f8f-cf7e670e122f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 690,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac97efa-ee5e-4036-ac24-c1c7b61e8967",
        "cursor": {
          "ref": "f5011f8d-8119-46dc-85b8-21b698ddeee4",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "576a6569-f5fd-4686-879f-cc525c3f4ab7"
        },
        "item": {
          "id": "9ac97efa-ee5e-4036-ac24-c1c7b61e8967",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0e8d8e1a-04fc-4b26-8c04-d295490084d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6763fa18-24db-4003-ba79-6209f80c71dc",
        "cursor": {
          "ref": "a201d74c-fad1-4331-8a1f-b817f7c5b688",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "71379cb1-4b0e-4ccc-90cb-494e63cb05b3"
        },
        "item": {
          "id": "6763fa18-24db-4003-ba79-6209f80c71dc",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e91f56c5-7b3c-42a2-8cd2-84d9100cac31",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 624,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1d6df4-e248-4388-b272-7ef1e7cc4f42",
        "cursor": {
          "ref": "2f289456-3c6a-4a71-8c90-885260eb2e7e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47d9a4b9-60b2-4f08-9862-60e11e3360d0"
        },
        "item": {
          "id": "cb1d6df4-e248-4388-b272-7ef1e7cc4f42",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b6ef880f-4ae3-466c-81f9-04e0b73cef11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1d6df4-e248-4388-b272-7ef1e7cc4f42",
        "cursor": {
          "ref": "2f289456-3c6a-4a71-8c90-885260eb2e7e",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47d9a4b9-60b2-4f08-9862-60e11e3360d0"
        },
        "item": {
          "id": "cb1d6df4-e248-4388-b272-7ef1e7cc4f42",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b6ef880f-4ae3-466c-81f9-04e0b73cef11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb26bdde-8a12-4ce8-9a2f-85cb05eb3db3",
        "cursor": {
          "ref": "6a7c88bd-b6ed-46a1-904d-5b0ad2c83360",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c43b2b63-3eb5-4b0d-86c3-7219904453b4"
        },
        "item": {
          "id": "fb26bdde-8a12-4ce8-9a2f-85cb05eb3db3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8a4190dc-767a-4aa2-af93-1cf4f09717e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0df9f8-15be-49fa-87a3-a0b95c9ece02",
        "cursor": {
          "ref": "30f86a75-35b4-4042-a40d-7c0edf382da2",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "188c5440-3aaf-4709-a18d-5d68e768eb4a"
        },
        "item": {
          "id": "1a0df9f8-15be-49fa-87a3-a0b95c9ece02",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b3cbc562-1129-4b76-96a2-5d6b0e95aecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525dbde5-c59c-4888-a8b0-98334ba00d64",
        "cursor": {
          "ref": "bfb5fe16-af03-4f66-950e-de776acc7c39",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3ba01f80-0000-4e21-a53d-db12a10a3a5b"
        },
        "item": {
          "id": "525dbde5-c59c-4888-a8b0-98334ba00d64",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2da1548f-3012-4170-ab09-bd9709bbf7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94be285-ff8b-4592-af48-4aa7b0669cb5",
        "cursor": {
          "ref": "de390b22-3915-4581-a146-cb850b55d99f",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c31b0207-355a-4e4a-a48f-53429203f902"
        },
        "item": {
          "id": "b94be285-ff8b-4592-af48-4aa7b0669cb5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4c0d6ca4-b2f1-45a1-ac6c-714ee13964b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb619af-d4a6-4d36-bc33-9e35a6cff832",
        "cursor": {
          "ref": "1da07b46-72e2-4a31-bca5-b645f87edbd6",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3f6e6e65-776f-4970-9651-b95b42839866"
        },
        "item": {
          "id": "1eb619af-d4a6-4d36-bc33-9e35a6cff832",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "efa3bd4f-2d99-45a5-9b54-25f37deb4611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa8ab64-fec5-46ee-8932-8b934c31903e",
        "cursor": {
          "ref": "4b34a24a-adb1-4bd1-80fc-9cd95655b37c",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "32d17417-05c3-40e1-b672-358c293ddf75"
        },
        "item": {
          "id": "0aa8ab64-fec5-46ee-8932-8b934c31903e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e2fcb8c1-c7d5-4aae-bedf-bb06b7e1ac21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7723b2db-6695-457d-b6d4-34269dc4290d",
        "cursor": {
          "ref": "a6e926fe-462f-4a61-a4cd-adccb50aa338",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8e171aa5-4577-4ae0-9ced-8cf52326ebad"
        },
        "item": {
          "id": "7723b2db-6695-457d-b6d4-34269dc4290d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a24cf709-d9eb-4b6f-9107-d802827786be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2accfc-5016-453f-b8b3-ff4c24ddc6de",
        "cursor": {
          "ref": "8a3a23c8-5174-4bcb-8dea-9d2210f44f28",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "83196478-c825-4ee4-a1af-e5d5c17cda51"
        },
        "item": {
          "id": "1a2accfc-5016-453f-b8b3-ff4c24ddc6de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "81ffb0ee-db6a-4643-933c-ea9ad8bc01f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ca5e9f-7e51-4f01-b3b8-98bf4609ad8d",
        "cursor": {
          "ref": "0f1504a4-4070-48bd-a51f-2832092c73b8",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0afc4c9a-6582-4fa3-9335-ac8c8b1c25f4"
        },
        "item": {
          "id": "d4ca5e9f-7e51-4f01-b3b8-98bf4609ad8d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3427f6ef-6d66-482e-93c9-96a0742bb2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7800d7b-4142-4ab4-bf8d-6212c3e7a2ec",
        "cursor": {
          "ref": "90fc1711-f4a2-4481-993e-58c69df582eb",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7b0f3d52-8661-44a9-966e-9bb3fccf0ead"
        },
        "item": {
          "id": "f7800d7b-4142-4ab4-bf8d-6212c3e7a2ec",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "08152567-1934-4b92-936b-a484b11a438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5751e43c-d73b-4c1e-bc9a-e64c6f4bc64b",
        "cursor": {
          "ref": "b7ad6feb-ee76-4b54-acc5-49878cfed48f",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "be0d6d8c-0009-4335-b0c5-7114942fd214"
        },
        "item": {
          "id": "5751e43c-d73b-4c1e-bc9a-e64c6f4bc64b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "82d85193-895d-4db9-b8fb-e8e3d075c4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32237c33-cab8-49aa-b2c3-c90474d338a4",
        "cursor": {
          "ref": "993dfd68-defa-4e5c-bc82-7d57ac763f3d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "901a8a3a-e1b7-4d28-b876-f7f47c4b14dc"
        },
        "item": {
          "id": "32237c33-cab8-49aa-b2c3-c90474d338a4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "85efc420-b7fc-467a-9bec-5ba15a933081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b171f8ab-6e56-49e4-962f-27af6068f597",
        "cursor": {
          "ref": "f755b48b-c0d2-4dc4-b41c-c5ccd4862db6",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1bfc6c53-d4a0-4b3a-9b20-6d8532d238c3"
        },
        "item": {
          "id": "b171f8ab-6e56-49e4-962f-27af6068f597",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4a39168c-2e9e-426f-89d9-61d0a87000db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201461e7-3da4-4398-8a71-9b0a2fd60aad",
        "cursor": {
          "ref": "b7e6067f-174f-4168-a467-08dd7fce31e1",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b3e3cfd7-f266-4dc3-9118-0d78c590cb15"
        },
        "item": {
          "id": "201461e7-3da4-4398-8a71-9b0a2fd60aad",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "42e6304d-523d-4d69-a3d5-63f47a40545a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d7f849-91ce-496c-baea-58109e9c8e31",
        "cursor": {
          "ref": "f5543784-56e5-471b-9d47-6e6fb863d69b",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "474e6d20-d61a-4e40-a03f-b1ff0eabc385"
        },
        "item": {
          "id": "49d7f849-91ce-496c-baea-58109e9c8e31",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fec86142-d0c7-4d35-9ebd-16fca3f2df1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce629d34-c965-4d80-b6d8-e225cd92412a",
        "cursor": {
          "ref": "8da5efae-5b1b-4b23-afca-46de8466d63e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "65a31880-5e0c-4718-89b0-8e8bbbb7625e"
        },
        "item": {
          "id": "ce629d34-c965-4d80-b6d8-e225cd92412a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "842aa6f1-40eb-49b0-96bd-68d1cc0f52cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba72ea55-ec91-4671-8866-89d97bffd202",
        "cursor": {
          "ref": "dee487c5-cabb-4c05-bce4-947de8033c24",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "634510f0-afe9-428e-96ad-58dff3276403"
        },
        "item": {
          "id": "ba72ea55-ec91-4671-8866-89d97bffd202",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6f5db070-4ced-40f1-ad77-78a504c3c5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fcc96f-f467-466d-9cbd-1fac59ded03a",
        "cursor": {
          "ref": "fe4e7336-3551-4cf8-b551-ca385f3e11b2",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1554201f-429c-40b0-8c4d-95b0e54eb2fe"
        },
        "item": {
          "id": "b2fcc96f-f467-466d-9cbd-1fac59ded03a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "55a3da0c-2709-411c-9b9e-322ee60f9f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8f41d4-d2d1-41fe-9dbd-851451c449f2",
        "cursor": {
          "ref": "8d0cf9a5-60ee-4834-ba6b-7f94663fafba",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "185ea645-ecaf-4774-ba28-1217f84072aa"
        },
        "item": {
          "id": "fc8f41d4-d2d1-41fe-9dbd-851451c449f2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f21f4c07-54a6-4120-a3bb-74cdebc6b04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8762567d-3973-4364-9c88-01d5f93bec55",
        "cursor": {
          "ref": "c2ece5c2-3def-4e4f-99a7-1e3498f2c9a8",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "17085f43-55ef-4c3c-ac4a-c953c1b41b86"
        },
        "item": {
          "id": "8762567d-3973-4364-9c88-01d5f93bec55",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "11d249a9-3da6-4a0d-b523-fc6724f5e4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3399899-860e-4c53-b964-3c3ce4ef11f7",
        "cursor": {
          "ref": "cace125b-101f-4920-80f6-864382c2dcd0",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a0a309fd-88ff-4099-a0c1-77519432ce59"
        },
        "item": {
          "id": "d3399899-860e-4c53-b964-3c3ce4ef11f7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "40ed7cc1-2c58-42e2-bafc-6bf54b9b4c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7826c063-7c00-4414-a079-187495c7e560",
        "cursor": {
          "ref": "401b372b-e1bb-4596-a668-ee6fee5417d2",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "49057dc5-af9f-4505-b055-8d8298e11aef"
        },
        "item": {
          "id": "7826c063-7c00-4414-a079-187495c7e560",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d7c27721-3faf-4ee9-8919-2390c2b22242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae387660-1911-41f4-a1af-564e234d830b",
        "cursor": {
          "ref": "15564067-89fa-4f5c-8860-b0a25f2b4b65",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1dcb1b30-226e-40da-bb20-14c4f2ae9cd6"
        },
        "item": {
          "id": "ae387660-1911-41f4-a1af-564e234d830b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "11d7b3d1-09e9-4988-ab6a-b782ab32bdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cb53a1-70e4-4035-903a-4f6fdd88316a",
        "cursor": {
          "ref": "d9e229dc-0cd6-4462-95d1-f68596f48e9f",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c1ee88b9-dec9-4554-84eb-3652d6eef474"
        },
        "item": {
          "id": "f4cb53a1-70e4-4035-903a-4f6fdd88316a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bf4c6101-797f-4e13-a773-47db5e79c866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46276f4f-1ec0-4de8-9011-46c01677ab1c",
        "cursor": {
          "ref": "fce8fa00-24ca-49ef-8b1f-bab06775674c",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c34767aa-fa74-4c91-a627-32a553fca985"
        },
        "item": {
          "id": "46276f4f-1ec0-4de8-9011-46c01677ab1c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4c85b643-0736-4527-8c66-b2aeaa1f683f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01b3ea6-e778-4a09-b6f9-883ad7738a8b",
        "cursor": {
          "ref": "db6c7edd-6359-4fc4-9b5a-903e2f899246",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1e8d4d2d-325e-4076-b0e0-810ae95b234a"
        },
        "item": {
          "id": "d01b3ea6-e778-4a09-b6f9-883ad7738a8b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a535124c-a12c-4927-95bc-a251b57e411d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f208e0-9390-4cc6-8e0a-9c0933741932",
        "cursor": {
          "ref": "29d92c48-72c5-4455-a033-b7c6de255d77",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "67c86f9a-0e14-47e5-a936-e311256ad4f1"
        },
        "item": {
          "id": "07f208e0-9390-4cc6-8e0a-9c0933741932",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7fbc28dd-fbe8-4d8c-b901-4858dbc5c233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b76aabe-bca9-4b07-af85-f36f47150c95",
        "cursor": {
          "ref": "442c4c0b-5f52-4b9a-8f8a-a0c874b5685b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9561614f-0ff9-4dbc-9aa1-010174445e30"
        },
        "item": {
          "id": "6b76aabe-bca9-4b07-af85-f36f47150c95",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "72fe3721-38f0-4d46-be51-e88a98458bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e65d3c-d5bc-4009-bff4-7bfb94c6ab57",
        "cursor": {
          "ref": "5ec3d7b7-b353-4c81-8085-b8d720f02922",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "45919ddd-f355-4534-a097-fa8e6ea0e7bf"
        },
        "item": {
          "id": "66e65d3c-d5bc-4009-bff4-7bfb94c6ab57",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1d8a54c6-089c-4163-af71-eac8d3463719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120f26c1-1e71-42be-9e8b-2f4ff422c9d1",
        "cursor": {
          "ref": "ed7aa820-143f-4eca-9e0f-b57ee1de89ab",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "12f2cc7e-2672-4a47-bd66-17635a91a7bc"
        },
        "item": {
          "id": "120f26c1-1e71-42be-9e8b-2f4ff422c9d1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5f18b84b-4219-4368-ad02-1823b316c979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51848dd5-08e3-433d-8598-a4998ec80c2b",
        "cursor": {
          "ref": "f8934043-6c30-4ff2-94a0-1b31186f2068",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ece3559c-b14c-4592-b27f-e7c04db8a16b"
        },
        "item": {
          "id": "51848dd5-08e3-433d-8598-a4998ec80c2b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ccb62f0d-154e-42f8-856b-388f595c6186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0394a2a6-91b3-44c2-a6a1-93f2f7cbb6df",
        "cursor": {
          "ref": "36053114-4b09-431e-a718-e28ac0ccf264",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bff1f613-3ce6-4816-9e13-0afc88d74d88"
        },
        "item": {
          "id": "0394a2a6-91b3-44c2-a6a1-93f2f7cbb6df",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "631fec18-4fcf-4f7d-9707-0a615291e3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f868261a-1589-44c5-ace8-6c911df2bcea",
        "cursor": {
          "ref": "9a0265e5-c2bf-453f-8446-dc2d726f3b55",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "62d15b48-1e55-4765-8db6-e1a4d67b4dc3"
        },
        "item": {
          "id": "f868261a-1589-44c5-ace8-6c911df2bcea",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b05360a4-5660-4d53-b8f0-0c0b63f2f549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d28e19d-b614-445d-a1f5-cee4398ff379",
        "cursor": {
          "ref": "5e9f4f9c-aeae-422f-841f-a1de6042ee20",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c9d45c6d-cf4f-48ad-867b-eac17c215e59"
        },
        "item": {
          "id": "0d28e19d-b614-445d-a1f5-cee4398ff379",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e1d930ad-88f2-4c4b-8c92-7fc48f16d6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabfc291-809d-4f13-8f9e-b18df2646e75",
        "cursor": {
          "ref": "9502d4bb-a39e-4fb7-bc88-03a89b31ea44",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8230cad8-ce82-49cd-81ca-b1a5c2be9db7"
        },
        "item": {
          "id": "aabfc291-809d-4f13-8f9e-b18df2646e75",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5d1f7099-50b5-4fb9-9e14-65fc463c0c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed60110d-bd74-4aee-b38d-df1bfcedfd99",
        "cursor": {
          "ref": "f07512eb-db4b-4fe4-b913-6aaa029ff29d",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "414a1edd-6c57-4650-9cd0-e3aaefbf4d3e"
        },
        "item": {
          "id": "ed60110d-bd74-4aee-b38d-df1bfcedfd99",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "176ee70e-111a-4b30-9fed-10787ca9792c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae88b489-cfff-42f1-bfe1-fc22834f7bc3",
        "cursor": {
          "ref": "189e6006-65e2-4992-91b1-385897f13920",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "51420e83-d723-4ade-b290-88795dd6ae10"
        },
        "item": {
          "id": "ae88b489-cfff-42f1-bfe1-fc22834f7bc3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f9318bfd-38fb-4fe3-8bec-7e6dbb463070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3992ac-5e2f-48be-9071-3e000c26e69d",
        "cursor": {
          "ref": "05d67a78-771b-4626-911c-c09d8b4ca74b",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3c0b8e64-8cb8-4be4-8ae9-4b3d1ae681d5"
        },
        "item": {
          "id": "ac3992ac-5e2f-48be-9071-3e000c26e69d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "092f1f7c-d193-496e-9c2b-06a1c3aeea4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff757ea-6bd8-48ef-ad37-d96f0ff2369a",
        "cursor": {
          "ref": "04f763ef-0ede-4b79-8b62-8130a8446a1d",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ec71d7e5-5359-4eeb-bdad-720025132241"
        },
        "item": {
          "id": "4ff757ea-6bd8-48ef-ad37-d96f0ff2369a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a2c8ee3c-69a4-4f9e-bc93-7242bb665dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c70bb1-9495-44c3-8b51-d9ff17de97c8",
        "cursor": {
          "ref": "ce50d799-8384-4e0c-aad6-75faa0002cb8",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "30abf650-c27a-41d5-a93e-167974d65faa"
        },
        "item": {
          "id": "37c70bb1-9495-44c3-8b51-d9ff17de97c8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a58a8ea9-aaf4-48cb-a841-3111dbe267cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e8d7e1-efe7-4201-a85b-ac689c29e19c",
        "cursor": {
          "ref": "6b7299df-044d-429f-8d0a-59e1c27df7fd",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d180c475-9e95-468f-aeff-753c1b0ac2d5"
        },
        "item": {
          "id": "11e8d7e1-efe7-4201-a85b-ac689c29e19c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "68d468f7-8d0a-4f08-bb6d-ef09c286c596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86a53ab-2e47-4081-b188-918c4da22ca4",
        "cursor": {
          "ref": "3d81adbe-3910-4027-b503-99d6a1b35561",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0a88d634-aa0f-4d55-a771-398778061d0e"
        },
        "item": {
          "id": "e86a53ab-2e47-4081-b188-918c4da22ca4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9c5a5f92-ed60-4d4c-9e7a-22d320c2ac23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815a126e-5602-408a-bb12-b7cb53d63c40",
        "cursor": {
          "ref": "8cb0ad44-94ac-46ba-8ac1-e1140079773c",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6b8259c6-5d93-4689-b1aa-2174aa65866e"
        },
        "item": {
          "id": "815a126e-5602-408a-bb12-b7cb53d63c40",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0b626b5c-2e32-4f11-8d13-770b6e2e5525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0387f507-2c02-4a1f-bb2a-0c8e9b3d9511",
        "cursor": {
          "ref": "0423f760-807a-4602-bc4b-fbab15d82f0c",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "014ec909-cb54-47e1-a865-ba69ea345cc3"
        },
        "item": {
          "id": "0387f507-2c02-4a1f-bb2a-0c8e9b3d9511",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d0335147-90fa-4130-8bbd-86fe8d052777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cb16c5-cbde-4180-bed6-ddd8616e926f",
        "cursor": {
          "ref": "b76a3728-78df-4784-9577-3e544e012502",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "084cb347-ce64-41f8-847b-83b052d52da4"
        },
        "item": {
          "id": "e0cb16c5-cbde-4180-bed6-ddd8616e926f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f1bf3700-7117-41bc-9ac2-9ed5ea5e0434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fce0f9-707c-4f35-9fc2-82eda17bbaed",
        "cursor": {
          "ref": "3e6ca07c-61fe-4fbd-8b7f-394c58febed1",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "451c1785-5e73-43d5-af53-352d5611f42c"
        },
        "item": {
          "id": "b5fce0f9-707c-4f35-9fc2-82eda17bbaed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b2d19aa3-0d45-4acd-8ef6-fc43593b9755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c3911b-4b80-4568-bab0-7c36f7ac41d9",
        "cursor": {
          "ref": "59c6f037-07b9-49dd-9f6e-3ca116c77f25",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "33211db9-d5cb-4565-921d-f4ee3fd99c91"
        },
        "item": {
          "id": "c1c3911b-4b80-4568-bab0-7c36f7ac41d9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ea9c8e30-8d3c-4b54-bdaa-cd6bca71c361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526644db-a7c9-4511-a472-d56cdf6ac16f",
        "cursor": {
          "ref": "556bdf3f-8715-470d-bbf7-f60da5968cf8",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "93e3c43c-56de-4eea-b458-517fab5d150a"
        },
        "item": {
          "id": "526644db-a7c9-4511-a472-d56cdf6ac16f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "13c53e9d-17f6-4f79-8ea0-5685e2fa1f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da4c96e-99e4-4389-88cc-0d78a06bad2f",
        "cursor": {
          "ref": "43c03ad2-3a55-497e-b030-2ce75a0af458",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bfe11f70-86c3-455b-add9-9433461d125f"
        },
        "item": {
          "id": "2da4c96e-99e4-4389-88cc-0d78a06bad2f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "774ce0a0-af89-4057-9634-948fd80927a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ac31e9-ae9d-4836-8185-f4ee336fa1da",
        "cursor": {
          "ref": "c7d932c1-dcc7-4a53-850c-b4bcc8f6f593",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8f7a51e9-0687-43dd-b98a-43da8529981d"
        },
        "item": {
          "id": "09ac31e9-ae9d-4836-8185-f4ee336fa1da",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "55212e37-9192-4eba-8ad4-a45d7860fdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1cb823-937b-4d3a-86e8-47c2ecfeef04",
        "cursor": {
          "ref": "765f86ae-ade6-4caf-a497-ea1e71284fdf",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f696d46-93d0-41dc-b659-fd84fdc5f988"
        },
        "item": {
          "id": "2e1cb823-937b-4d3a-86e8-47c2ecfeef04",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f89f9847-92ad-4776-be62-f16af28dc28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac48399f-b776-4856-970e-5bec27813e97",
        "cursor": {
          "ref": "59d4cd93-e64b-4282-a477-c735c8a1d589",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9074791a-f895-4fe2-824c-b25fd89ef3ce"
        },
        "item": {
          "id": "ac48399f-b776-4856-970e-5bec27813e97",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "61e4c85b-f526-412a-add2-ee7e424c8458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c4122c-4ca5-43fd-bc39-e2dd3c1fbc87",
        "cursor": {
          "ref": "2f978cca-b6a3-4426-adf1-9b8f0870281e",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3a1ac495-c2cc-4e02-8c1a-031cf770c570"
        },
        "item": {
          "id": "d8c4122c-4ca5-43fd-bc39-e2dd3c1fbc87",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8d5f2731-0150-4c62-80bd-387f7570a97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5aeacf6-980c-474e-b948-4ccc7d814f2f",
        "cursor": {
          "ref": "c9651757-a9b3-4503-bf04-da88108547e2",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e6c71bae-fc67-4dec-836e-a1d270590fd7"
        },
        "item": {
          "id": "c5aeacf6-980c-474e-b948-4ccc7d814f2f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d01c6aa8-f682-4a81-85e9-a994444ad2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166bcfc6-9b4e-4c69-bbd0-3c7d463663be",
        "cursor": {
          "ref": "c228312b-7087-4005-b8b7-74b68f3f3629",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "173ca6ca-841c-43f8-a7c4-a77417d7e173"
        },
        "item": {
          "id": "166bcfc6-9b4e-4c69-bbd0-3c7d463663be",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7de75a83-832b-478f-a8da-44837f77e716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278ef00f-dc6e-45e5-84e3-03a98f7fdbb6",
        "cursor": {
          "ref": "07d4b104-e3cb-448f-8397-b227e35c66cc",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "754e2e99-1b91-45dd-b6bd-0542c45beff5"
        },
        "item": {
          "id": "278ef00f-dc6e-45e5-84e3-03a98f7fdbb6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "af291778-8e49-4333-bc4a-2c211e40a7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ded91d-0ea8-4807-8d29-c3bbaaecfc48",
        "cursor": {
          "ref": "74f36f5a-8733-4e19-8d2f-9efb81a2d999",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b7994268-0107-4bce-ac50-6049b82f2660"
        },
        "item": {
          "id": "c9ded91d-0ea8-4807-8d29-c3bbaaecfc48",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cc8f8358-ccdb-401e-b7a8-61414fc944e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87329f41-a56d-4f8a-a0cf-e9199c8456c0",
        "cursor": {
          "ref": "519b875b-69cf-4824-8c87-78110e528e54",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "855f098a-2480-42d1-9207-2d15406942e8"
        },
        "item": {
          "id": "87329f41-a56d-4f8a-a0cf-e9199c8456c0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3fb087b2-3f51-4978-9cab-aeef12ffe66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f875bac-e478-4450-a9f1-47d565ab070d",
        "cursor": {
          "ref": "3e28f64f-e69b-4c97-8e4b-c851d9598682",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3dde9995-46cd-42e5-b038-ff0b94218f22"
        },
        "item": {
          "id": "6f875bac-e478-4450-a9f1-47d565ab070d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a202d809-cf53-49f8-a80d-b9f9e105cf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb6ee82-4248-4863-be5c-f24feaa6547a",
        "cursor": {
          "ref": "770a494b-32d8-4f18-a529-ebe41058bf6f",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1c9a91e3-2242-4b40-840b-7f993a7e41b4"
        },
        "item": {
          "id": "cfb6ee82-4248-4863-be5c-f24feaa6547a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0a57ee97-7420-43cf-b762-6470b427a447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7693b5d7-c61c-4586-afcc-5f6374acd3aa",
        "cursor": {
          "ref": "8606ed98-dcb0-46fc-98fb-dc4e5e98489e",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a292f238-a754-4875-b4b9-7c0cf09d1450"
        },
        "item": {
          "id": "7693b5d7-c61c-4586-afcc-5f6374acd3aa",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7f243873-5d1a-4de4-9381-537f5491f241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868f578f-7b8d-4429-9ab8-0c9f03803a63",
        "cursor": {
          "ref": "ebac736b-3a2a-4fdb-9b2c-563bf9f1c836",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cf20fab0-6033-4a09-90bb-a21bc67106bc"
        },
        "item": {
          "id": "868f578f-7b8d-4429-9ab8-0c9f03803a63",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "50a4c18b-8b7d-4efc-b4ec-d684e75a3016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c9fa7f-88ee-46af-8265-cb1b591f5c93",
        "cursor": {
          "ref": "92a7f209-079c-4b38-8330-cd7cb771e65e",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e5068ee6-2387-43af-897d-4eaab9197e6e"
        },
        "item": {
          "id": "60c9fa7f-88ee-46af-8265-cb1b591f5c93",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "263a1552-5825-42a6-8af3-824eb1f59413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6cf5aa-56bc-4b67-ba2f-f4d859d2dedf",
        "cursor": {
          "ref": "722aed13-e685-432c-8276-2dca3cb52aec",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3a609ff8-1009-4baf-8065-a0271c82a43c"
        },
        "item": {
          "id": "eb6cf5aa-56bc-4b67-ba2f-f4d859d2dedf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0b3bfc88-330b-49b1-8ad1-2a65c080b5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffc6425-e49e-4c75-85ba-cb3e5d5a27a7",
        "cursor": {
          "ref": "2175d4a8-b434-4678-b72b-e6e072c7546d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "aebbcfb9-6858-4ac0-a6a2-6a822778ba72"
        },
        "item": {
          "id": "bffc6425-e49e-4c75-85ba-cb3e5d5a27a7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0fe4939b-dfcf-44c7-9b4e-263e972bdad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d11cf2-36ad-497e-940d-20a2b7fd5e9c",
        "cursor": {
          "ref": "953e47fd-41a3-4023-99e7-8f147fabc685",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1f3e8ca8-8a62-413d-86eb-14e47641bfd9"
        },
        "item": {
          "id": "a9d11cf2-36ad-497e-940d-20a2b7fd5e9c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e6d202ee-17e7-4f12-990a-9a210129be27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fb0255-1b85-4672-ab7b-392dd1b532f6",
        "cursor": {
          "ref": "7dc2e876-e9b6-4527-9e7a-1ca7cafd1e74",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "579b55c7-485a-4347-824e-d1a50f13726b"
        },
        "item": {
          "id": "12fb0255-1b85-4672-ab7b-392dd1b532f6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fd753026-9280-4469-be1d-6a8da21733b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186b59e5-6bb3-4c79-873a-989084f2fac2",
        "cursor": {
          "ref": "385ea2e3-62bf-44b6-8dae-1677a2692b41",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6ec3adf9-ce25-4b3a-983d-b90aa8fc1489"
        },
        "item": {
          "id": "186b59e5-6bb3-4c79-873a-989084f2fac2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d430a0d9-8e92-48e9-8c9a-20f716f076dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 858,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a6f579-f42e-4f74-a682-74d38bf5e19e",
        "cursor": {
          "ref": "21e87ae3-ebff-4801-81a8-ef50e91a94b9",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "40781b9b-eaa5-4b63-a099-becd769ebf82"
        },
        "item": {
          "id": "66a6f579-f42e-4f74-a682-74d38bf5e19e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b09218d0-08ea-457d-b9de-3275e9d9cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65470f55-0d24-4d5e-8eec-e6fe1a05546e",
        "cursor": {
          "ref": "0ecadda7-706d-4f6c-9753-35bf317e2575",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ee859221-565c-47f7-bdf8-2c90c52cb8e7"
        },
        "item": {
          "id": "65470f55-0d24-4d5e-8eec-e6fe1a05546e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "c516d178-0ba5-4b0a-9250-9e86ff27802c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635c838d-8458-44ee-8678-7dad1487e2a8",
        "cursor": {
          "ref": "ddd03c3f-18dd-4212-b159-42aee9f3f5f3",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0b4c41ce-9dd0-4903-b1c8-413ab23babac"
        },
        "item": {
          "id": "635c838d-8458-44ee-8678-7dad1487e2a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4aeedb54-a1a9-4181-8a16-340b87cc7116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456b680a-d7c7-4d46-8d81-79bfa290e608",
        "cursor": {
          "ref": "0c7c099a-a9d9-4483-96ca-42873eee6d49",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "778d6994-fa56-4ebd-acbf-a0c6fe50a05a"
        },
        "item": {
          "id": "456b680a-d7c7-4d46-8d81-79bfa290e608",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a7e40c5a-54c6-42af-860c-a590998f5c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93486172-89af-4084-8ab7-683839501919",
        "cursor": {
          "ref": "afa53f07-612c-4faa-9d7c-06c380789516",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6311e188-2fac-4683-9a8f-8a65cb89cdd0"
        },
        "item": {
          "id": "93486172-89af-4084-8ab7-683839501919",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "69f9e0e1-b785-4c7c-9db2-08edb13475e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875392dd-46af-4eac-9942-b003daee5d68",
        "cursor": {
          "ref": "43ba875e-6e14-46e8-abf4-639c6ac63198",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "25574df4-74bc-41ca-a795-075a5f11415e"
        },
        "item": {
          "id": "875392dd-46af-4eac-9942-b003daee5d68",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1f83ce96-4bb7-4e7f-b857-bf890729e842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00ac72e-b2d1-4198-883a-7d3532dc2971",
        "cursor": {
          "ref": "16e34d18-2f06-4fcb-87a8-8596eedfe310",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0d283ff8-2900-44a0-b360-b60ef46bf882"
        },
        "item": {
          "id": "d00ac72e-b2d1-4198-883a-7d3532dc2971",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "09e658a1-71bd-4845-9d9c-5aa68007199f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef0eb3e-b9af-4250-a23f-6647f00d087e",
        "cursor": {
          "ref": "e01acafb-18c4-4d79-b348-983e3afb1b04",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "758f8e94-400a-4027-a907-27c59a3df686"
        },
        "item": {
          "id": "bef0eb3e-b9af-4250-a23f-6647f00d087e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "15c8b505-e951-4920-8ad9-7c58b0153c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01771c0-3f4f-4ea6-aaa1-3d5837a88cce",
        "cursor": {
          "ref": "eb4152ea-c262-4fb6-8f2e-a0bbbc72ea21",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b171fc74-f603-4bc5-b177-814bc16a3a04"
        },
        "item": {
          "id": "e01771c0-3f4f-4ea6-aaa1-3d5837a88cce",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9ab597db-89aa-4828-839f-f550fec78d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19db389e-3606-428f-a1e2-79877e6ba191",
        "cursor": {
          "ref": "d9fcfc8f-4ecb-42cd-ba13-7c9ce596a0f6",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e749a71d-d18f-490e-915e-512e8f2019e3"
        },
        "item": {
          "id": "19db389e-3606-428f-a1e2-79877e6ba191",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2741c373-984e-4816-80fd-6c28d21eef09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586a5fc2-3cfa-4b52-89a2-bccd9e71ccf3",
        "cursor": {
          "ref": "c886530b-f827-4f6c-819e-7ac23dc66f06",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "94ed762b-8e8a-4efc-af49-65c515bac3ab"
        },
        "item": {
          "id": "586a5fc2-3cfa-4b52-89a2-bccd9e71ccf3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5b6bd18b-9ddd-4cf0-a77f-bf1a00edb7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94460f7e-d3c8-4b09-be81-d1db4583292a",
        "cursor": {
          "ref": "6cb61bf7-3b55-4434-95e4-4e3a7e9cb7a5",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b7a9eae9-6708-4e19-ab61-5d24e93ae9e5"
        },
        "item": {
          "id": "94460f7e-d3c8-4b09-be81-d1db4583292a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9edbce98-7297-461b-9278-8fef44297428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7161185-0775-4638-bc48-295acf085a9b",
        "cursor": {
          "ref": "889ff908-f97b-4ed6-84fc-8f12eb611247",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "567e2c03-2bee-4977-a6b2-bb3b3ffa8ae2"
        },
        "item": {
          "id": "f7161185-0775-4638-bc48-295acf085a9b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "efc64fa1-5493-46b1-845e-05629e7452b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa8c862-3a61-4f98-8abb-cba6a1ade87f",
        "cursor": {
          "ref": "e297555a-89f6-4894-bf9c-c73e535e2822",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bdb15a43-f7bb-42d2-a736-77bf21addadb"
        },
        "item": {
          "id": "3fa8c862-3a61-4f98-8abb-cba6a1ade87f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "31604dda-d61d-4d2a-9b4c-8c32060a5318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478ce588-da63-4379-a61e-116439e0bbfa",
        "cursor": {
          "ref": "438f8193-a4e7-44f8-b5dc-133eac6df418",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8290feca-45e8-4b72-a0bb-7d61e9365e43"
        },
        "item": {
          "id": "478ce588-da63-4379-a61e-116439e0bbfa",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "72de6a54-f0e7-4b9d-8f7b-7758913c5684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd10f6c-bf34-4f03-b291-6086ff112d92",
        "cursor": {
          "ref": "8204a7b2-d389-4989-9eec-cebc082623fc",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "05c42d5a-825a-4d6b-bfcc-c680a65a9922"
        },
        "item": {
          "id": "ccd10f6c-bf34-4f03-b291-6086ff112d92",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3f6bf177-1477-40c3-8208-9cfeb0bdfea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13ac2ed-9b5f-4c24-8572-58fb3073754b",
        "cursor": {
          "ref": "57219221-a46e-4fee-abb4-476bbc864b26",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d2b4b95e-822b-4d77-ab76-b0f512f3ac08"
        },
        "item": {
          "id": "b13ac2ed-9b5f-4c24-8572-58fb3073754b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c1a9dd95-53a5-420e-a51b-f202262bcc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8ad3cf-df73-40bd-a281-fb0bcd552893",
        "cursor": {
          "ref": "ef51cd23-4806-408e-a9af-539d795f99b0",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "eb0e1487-ecdc-4b60-a8d5-efd72cf06cca"
        },
        "item": {
          "id": "ec8ad3cf-df73-40bd-a281-fb0bcd552893",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "04a7907e-c41b-4051-9a7c-cf949b18f48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e0e4e0-e637-4957-a00b-ecf6c38afad6",
        "cursor": {
          "ref": "64d699a1-4577-4cfe-b304-b8d848852865",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4bf6570f-adce-4566-b65f-0594f32d05fe"
        },
        "item": {
          "id": "64e0e4e0-e637-4957-a00b-ecf6c38afad6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6e97e131-e9d2-46be-b4ae-2ffca6e7bf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666cec5a-cea4-461a-86c7-57527132d2a3",
        "cursor": {
          "ref": "b50ef06b-03d3-4f31-b98c-3cfe860faf43",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "009e5c89-4d47-423b-88aa-97c5c94ec195"
        },
        "item": {
          "id": "666cec5a-cea4-461a-86c7-57527132d2a3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e7b55cf0-7bff-4e9e-bc5a-d0a8dd02a34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367ca0ba-b9ed-4828-ae1f-3b50ae9f8b96",
        "cursor": {
          "ref": "9d175086-d353-4439-92a7-e34d9dd92315",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "47c0f446-c2c7-46e0-a784-f3d56080f5b6"
        },
        "item": {
          "id": "367ca0ba-b9ed-4828-ae1f-3b50ae9f8b96",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "93a06e03-90fc-4da2-b488-193617d1a5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9499f1f-128f-444a-ada4-00f066b1098a",
        "cursor": {
          "ref": "1f2a49cd-e617-4b28-8eff-398d572c8645",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9ef3ea71-0c95-4768-8051-eccbf67b3938"
        },
        "item": {
          "id": "c9499f1f-128f-444a-ada4-00f066b1098a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "761a19ef-1609-4f6f-ac7f-b72fde5fdf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e11695-2bc6-427f-896a-038bc62fc584",
        "cursor": {
          "ref": "d845ffc6-146b-4024-ab4f-db3a72992efd",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a788fd05-20e6-490c-8952-38918590b77f"
        },
        "item": {
          "id": "a1e11695-2bc6-427f-896a-038bc62fc584",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a97d8316-6cde-4f3f-84e7-40a78f095d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e3e15a-84e6-4948-a13b-70c05666d155",
        "cursor": {
          "ref": "26b2ccbe-9203-4104-bc20-4e0a5b72bb18",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "221f7271-bef6-4514-8d53-f5acebee014f"
        },
        "item": {
          "id": "f6e3e15a-84e6-4948-a13b-70c05666d155",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e8309ccd-8b41-42ab-809a-246ba350c5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1393,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb3d1f0-06b6-48c0-9816-d4807fdb4323",
        "cursor": {
          "ref": "0766b921-423c-4f1d-98f2-c1230cf01326",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c7ce7d85-57a4-4101-b3cf-c42dcef43b7a"
        },
        "item": {
          "id": "9cb3d1f0-06b6-48c0-9816-d4807fdb4323",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "df294728-7ab1-4936-8631-f8c6ff54c460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1219,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c56a45b-4f61-4968-9c94-24a0db836114",
        "cursor": {
          "ref": "dbbf70a1-dcde-48fb-bc08-090f9614b174",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "48e8f1c7-5f76-4523-8246-85fc5db581bd"
        },
        "item": {
          "id": "6c56a45b-4f61-4968-9c94-24a0db836114",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5e17c556-7255-45dd-b87d-e2602f1e8782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1484,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac3d626-ed1f-4e96-bc01-8f93a951ed04",
        "cursor": {
          "ref": "1b422306-09bf-4718-b8fd-e2cabf9c9096",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "249e4bc4-428e-4d04-963c-ad262f9b6887"
        },
        "item": {
          "id": "4ac3d626-ed1f-4e96-bc01-8f93a951ed04",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3fd1f787-3af5-4e7b-845d-b74f0d431ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1086,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e3c51f-ac52-47ae-be16-6233f6da09e5",
        "cursor": {
          "ref": "5628c883-1c75-4608-9e35-fe27e9f20029",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "aac21d3e-a3bf-4186-9203-d8057428b179"
        },
        "item": {
          "id": "a7e3c51f-ac52-47ae-be16-6233f6da09e5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1f3965e8-6320-4166-96ee-0e5d69b78e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d64fdaf-2297-403d-aced-62bb367b5dfd",
        "cursor": {
          "ref": "65fe9cf4-c7bf-4162-ba09-b9ca85dde53d",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "239ae23c-1e77-4edc-8c68-b31b2d57a67e"
        },
        "item": {
          "id": "9d64fdaf-2297-403d-aced-62bb367b5dfd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "85859cb1-af3d-4e4b-ac9a-0db92ac0cb54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b135331-45e2-4cfd-ab13-12e75bb5826e",
        "cursor": {
          "ref": "a5b48a51-b310-4a31-bb33-a51c683b583c",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8796160a-c342-4090-bf6b-f3e0c7d1c630"
        },
        "item": {
          "id": "7b135331-45e2-4cfd-ab13-12e75bb5826e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bc4085a7-51f3-4b40-ba03-41680a670197",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c525afc0-7c38-4ae5-a743-6180db2d8300",
        "cursor": {
          "ref": "c84f3d5b-5cf5-4bce-98e4-0c1675f6c1fa",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "63a72257-8d7e-48dc-8dab-eb0c3c03928f"
        },
        "item": {
          "id": "c525afc0-7c38-4ae5-a743-6180db2d8300",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "462b0457-08f2-423c-bacd-c265c4a1439c",
          "status": "OK",
          "code": 200,
          "responseTime": 526,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa13eae-aabb-43dd-81f9-8e10433f531d",
        "cursor": {
          "ref": "e9c113a7-694a-4a82-b0c8-4c9f3ea1698e",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d5f55469-c544-4377-be42-ae007d475a31"
        },
        "item": {
          "id": "6aa13eae-aabb-43dd-81f9-8e10433f531d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ebd46c22-230f-4ecb-ae13-0719b32acc98",
          "status": "OK",
          "code": 200,
          "responseTime": 2222,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8684ed2f-d049-43b9-9175-e54fc8ed1dcf",
        "cursor": {
          "ref": "19cc9c3c-26b7-4d2c-9a64-28bc4311cca4",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "96f1d93a-727c-4ed8-88c7-d871dcf2045d"
        },
        "item": {
          "id": "8684ed2f-d049-43b9-9175-e54fc8ed1dcf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b25c3ccd-cdd0-4dba-a11e-c1f8a9cf2a58",
          "status": "OK",
          "code": 200,
          "responseTime": 1812,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c60e9f6-2e25-471f-a567-bcb009923b37",
        "cursor": {
          "ref": "080bbb92-fc22-4b07-b500-7362bacee755",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "313e7458-0101-4e8d-8e6d-3f6096b164b3"
        },
        "item": {
          "id": "5c60e9f6-2e25-471f-a567-bcb009923b37",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "831166c9-0c43-431e-808b-9a8d870a4eeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c60e9f6-2e25-471f-a567-bcb009923b37",
        "cursor": {
          "ref": "080bbb92-fc22-4b07-b500-7362bacee755",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "313e7458-0101-4e8d-8e6d-3f6096b164b3"
        },
        "item": {
          "id": "5c60e9f6-2e25-471f-a567-bcb009923b37",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "831166c9-0c43-431e-808b-9a8d870a4eeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c60e9f6-2e25-471f-a567-bcb009923b37",
        "cursor": {
          "ref": "080bbb92-fc22-4b07-b500-7362bacee755",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "313e7458-0101-4e8d-8e6d-3f6096b164b3"
        },
        "item": {
          "id": "5c60e9f6-2e25-471f-a567-bcb009923b37",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "831166c9-0c43-431e-808b-9a8d870a4eeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b3636a-1d27-4fca-be0e-86b5579bece9",
        "cursor": {
          "ref": "62e55141-9e6d-44eb-a6c7-83f77022c771",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "73280497-f8ce-4808-a539-206fdbc6dce5"
        },
        "item": {
          "id": "a6b3636a-1d27-4fca-be0e-86b5579bece9",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "8a6c3c80-1a38-4ffd-935b-b487793feceb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 428,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77742a0-669d-4ba5-ba6e-61ff363bc56f",
        "cursor": {
          "ref": "260979da-c621-4178-8168-92dce75f45e8",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "678c04aa-065b-4ac8-8c31-340de4af3c8f"
        },
        "item": {
          "id": "b77742a0-669d-4ba5-ba6e-61ff363bc56f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "077ee274-55f9-4603-b452-22820bdcc4ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77742a0-669d-4ba5-ba6e-61ff363bc56f",
        "cursor": {
          "ref": "260979da-c621-4178-8168-92dce75f45e8",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "678c04aa-065b-4ac8-8c31-340de4af3c8f"
        },
        "item": {
          "id": "b77742a0-669d-4ba5-ba6e-61ff363bc56f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "077ee274-55f9-4603-b452-22820bdcc4ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f170e05-4dca-4906-9bcd-919b258b808a",
        "cursor": {
          "ref": "30132149-9af0-407a-93c8-b0b8a1786884",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "32e7a314-d731-4958-9086-8c9d297fb1d6"
        },
        "item": {
          "id": "5f170e05-4dca-4906-9bcd-919b258b808a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "74f2841a-58d6-416a-ade9-01cf1a77a44d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 665,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca23b31c-135a-4149-89ce-1d39b812df5a",
        "cursor": {
          "ref": "8bb2ba11-8e3d-4a6e-ab36-db2d1f36be9b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9ed6e663-8b11-4a14-bd58-a1f6acde96e2"
        },
        "item": {
          "id": "ca23b31c-135a-4149-89ce-1d39b812df5a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "db088ea1-db85-4e8c-a87f-51dbe70e28ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca23b31c-135a-4149-89ce-1d39b812df5a",
        "cursor": {
          "ref": "8bb2ba11-8e3d-4a6e-ab36-db2d1f36be9b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9ed6e663-8b11-4a14-bd58-a1f6acde96e2"
        },
        "item": {
          "id": "ca23b31c-135a-4149-89ce-1d39b812df5a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "db088ea1-db85-4e8c-a87f-51dbe70e28ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a2985a-c886-4caf-b126-07c2c9163ca2",
        "cursor": {
          "ref": "8b669d12-0348-492f-8f41-53f64363b998",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d3b5e636-5477-4ad7-8841-ce82aeaa0717"
        },
        "item": {
          "id": "e5a2985a-c886-4caf-b126-07c2c9163ca2",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "629dca66-2059-4d26-adad-93dd3b878fa8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 685,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}