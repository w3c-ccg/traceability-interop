{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b9708a8d-a825-437e-930b-0a8feb964371",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d463bb4c-ce0b-4612-972e-1607c761ebef",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7dfeb25-5526-4bf2-ad86-976c65bf23e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "66fd79df-9d97-48bd-a34f-113352431ad7"
                }
              }
            ]
          },
          {
            "id": "1912b284-4574-4848-a91b-0b847cd01b0d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91a0925a-1990-4cc2-92a1-b54c7986af3a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b0b174e1-018e-40c7-bba3-ecc3a34aa7d6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9e6d8ae3-7abd-4b3c-a471-42b255d7c987",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5c91987d-ee63-4f7e-8cfa-e6a558a3ae72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d5ed8d63-c568-4a4f-9628-11f1fd1d91d5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b93f3c3-b07b-45d2-b549-2cf19edb8ea6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b40e5018-1a3e-4fb2-a668-dfa5287f9041"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "161505a0-8bc5-41db-bb8c-b0a25ab150e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af9f2393-550d-4c9f-8fb5-7a3b3ae49dd3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9c488149-0adb-4744-839b-19bbb8bfbef8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "892480a7-99ad-4e24-a2d2-d984d0491cbf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be69faad-89e1-4518-8c63-54c9f1e4444a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ed388fe5-fd6f-4d6f-b324-66736ba40905"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b8b084b-965d-409f-a59e-c210654adb37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d8ad31c-d3f3-46e4-9b01-9211a0e9e6ff"
            }
          }
        ]
      },
      {
        "id": "52059dbd-de05-44db-8851-0e9646b8124a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d4b0caf2-6b8a-4a1d-a734-1a8d01855ea2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c111b66-2514-4b2b-9054-828466f7a18a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7246f4b1-f780-4e08-9990-dae4f208c161",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2f6990-ab4a-43a7-a380-5ccb922be7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "138a8758-7be0-4bc7-a575-835214f8e7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fee6946-6377-41ff-92f7-cdce62d38f98",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebc1366-b036-446c-85f7-d31c57ef4397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "575eb4ca-1a02-4a76-aacd-2d3b95bee862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8973a72c-1a22-4810-b9f0-e3ded3b60cd4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb76864a-dc1a-4475-8de5-d760f8a4fe47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06756580-7270-40d4-87e7-7d0665eb4c7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5617df51-0632-4662-aa46-35853c2ddb46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eaa13bff-8e19-4abb-902f-df5add93cf25",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb13f20-f8f1-4d3d-8a79-1e4ec41e3b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ad57891-0d5c-4aab-be8b-5e9e551e75fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e854e311-f026-48b6-9b12-3899995c8f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59510722-c831-40ee-b44a-b34d46421fe0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eb1209b7-5f97-4ecc-9aa3-3c8be64bdbc1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "607e3694-eb5f-434a-85d9-5344ebb3c113",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e76e69a6-7bd1-4d12-a15f-95cb51a498ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c0263a64-91ee-4dd0-acd0-457376470a34"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11fff888-7a81-4c3b-bbab-dc7426efa49d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "24361940-e5da-400d-a00a-7db4a2cc572b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e297be5-b76b-4d81-9a0b-2d304b27f7fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4547f7fd-48f5-4f36-9789-559ed074878b"
            }
          }
        ]
      },
      {
        "id": "12898daa-59b2-49eb-bcd7-dfe7e0e388f2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7c342b02-9148-4328-a8a1-7accd1aff7ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44b2ec77-914b-49d5-a43a-661a81afefa8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a45be1d4-83cd-469d-b362-c87cd003b153",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43c9eec-221f-4218-a065-309ab5d50493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072e96f4-e8ab-4257-af64-0d14707cfe14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45919b8-f43d-4be6-abc7-6e22fa92f1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04095858-b1d7-4b47-9eca-625bc8ae6400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b49c56a-4b05-453a-acdb-bce68515ec03",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af535ab6-52aa-45a3-9328-25215d684ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1b9531-b02a-4c7c-8acb-af3013556c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968dd361-f0b5-4066-a270-a80a1a690f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9f3e727-b027-4a08-868b-555a01553423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9ede57-32cb-40ba-972f-c222f7025958",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591bfc71-b59a-4287-a674-5318cc53d00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a023393b-1845-4525-8ffb-d427df186301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e136cb24-5209-4dcc-a9ec-8e446c4d336d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "064fa5db-db6b-4732-ab2f-40ee2e78984b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bd0b75-05c3-4e9e-8dba-48a6255e869f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75af11fc-97b4-4499-8432-0be814bd7ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24688564-09e5-447f-a9f0-4b1e884fa4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b199e730-cf79-459c-b991-d64561c4c1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b68d2e1-a28f-4f04-b4dc-26d1eabbca57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883a7492-8ee9-4dcf-97eb-70c4216041e9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92b5928-0619-4b5e-9f7e-509e5a763737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff85f44-d475-4a64-ae14-e3918827b948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67b79d3-fcd7-4529-b657-f2e468164300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf2db0c1-ece6-4870-a608-c13eb0bbe61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa04847-3a11-4307-ad9b-2fe19adee797",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6720344-9fee-4b17-bed3-aa67a6558782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0466f94-2a36-4411-87b9-1500cf909285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b417e-aecd-457d-81c7-6fc443fcf1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d0030ef-b76b-45a3-9dba-fa8eafe262e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341a280f-292a-4973-9277-ec8ace7e8f71",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53a2358-4756-44f2-84eb-b2fce85dfe1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979a011c-e36d-48f9-9667-e5df63976b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0661fb19-1c2e-4b9a-9d0e-98720f7eb06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d45ac4c9-9404-406c-b04e-076741398651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323ade7b-6573-43ff-8a69-82774211b9bd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf1d5a3-e385-44d8-a901-c8b9b87be59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36278295-101d-4e1d-82a9-f026b7d133c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54526b7d-7c13-4755-9a4f-db7c4d9fd41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7c495ca-153f-4c9f-9706-8608b1d263ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630b1efb-a47f-42e1-9f63-a56d4fc00a29",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9180450-78be-4710-bcf7-02a790709ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcea826-b1b9-43b1-ac4f-352dc25bb495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4ad3e9-3a43-492b-ac40-06ccd09e9f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bf7b4fd-4945-4b7a-8318-116ef2a34980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3c14bc-185c-44d9-9f33-b9f857b5201d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21e16ef-d766-4f64-8dad-fd65de340b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8cb936-3881-4eec-b120-7efd8344c2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6307487d-c592-48fa-ab0b-8c1a3b46eb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9df5a042-218c-4700-9f84-a05b5666192b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f3a3a5-19a5-4634-9c82-7c0749d3c798",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5724cd64-3e5b-4e40-8e3d-ca47f56a63d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd235a8-33d3-4412-baa9-1ae91dee16b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0d401a-5e5c-4911-92a2-ba3438028d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34c06ffd-4b64-4da7-b0a7-7b36f6bfdda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be3c51e-1df4-497b-91b7-9c28e205ba06",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643375a4-c25c-4c7e-b053-cdf76e6a629d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b9daae-7730-4633-b784-2bf48614684b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3a295a-b928-4cdc-ad5b-5eefb317d6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "671ec261-7522-4dc7-8080-8eb96eb0210f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c865ac2a-ef6f-4cf2-9914-69ffcd6716f2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f60a7f2-ccb5-48bb-95b4-f81ea817b27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b15415-5a85-4d96-b32c-8762dbfa0740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6262479-5729-4e9b-8bdd-e174c82725b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe964f71-db01-4140-9735-b8c19d3ab5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556399a9-b286-4aa0-a5ef-cc0db770a7b7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f5901a-cc61-454d-9e3e-d8f9d78d55cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d723a49-2eed-4e12-82cb-e41488175a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b58eb6-21e9-497f-946f-b4a4f5e490ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09c0c2ba-c642-49b5-b11d-78d352c82564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79451e98-e6ad-45b7-bb89-48e6ff967160",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf845e4-10de-4d09-8411-e4b41c0b879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28b3247-6ba0-414e-8ee8-1bafb60f2366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91990d2d-f89e-484e-83f6-6fe5920cb9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5001f325-b2bc-44b8-862f-e9e6e6b08c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4450db4c-d118-4cd9-977f-09ebebf49fe7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcc90f2-3f93-4fa1-9080-5952a2607c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d3db7c-416e-4270-b06b-9f7377cd64c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f30cfd-f839-44d9-857e-c5e8b9ba06b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e4684bb-c81d-4013-8ebc-76266030222b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0806b1a9-fa40-4332-92ac-199308b92945",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b7b22f-47cf-4940-99b2-f4c2210a1555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517e367a-6d43-4224-970a-931179de6768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984fc5ba-c48c-42b2-875e-c50786832b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9db14e95-d4d5-4209-97e4-9335cc9aae91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c78f559-597a-45da-a989-9c1f006b0900",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f8a7e0-9923-405a-97fc-65b8ac5c978a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c384fbf-2dee-48d7-aed2-211750e3b9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9726ae-c49c-4e95-b84b-c1cd5adf913c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d554674-76a4-4f61-8574-98acb7ee5e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3f64bf-2651-4f4e-a50b-ecf52df4ddd0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43439de-1c97-4e7f-9dec-ec0ae1f74999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fb6330-ce42-440d-b322-2d70a8df6d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3055c34e-56ec-4b67-8c55-3ef18c7e0f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48063666-1917-4902-83d9-8b33462d67a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ca9d4b-92ca-4fa8-8b16-e2e9206615ce",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf8fc46-fa2e-4b31-b436-b6b86c7d67e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5607a96-d724-4234-90b1-565ea01bdfa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168edb5c-2019-4138-b6bf-89a9cd0a42ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc5ac0d-9345-40f6-afb9-5df00a809625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e076e6b4-70dc-4702-afbb-bf8fbe40945e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddb3112-1bc1-4d11-b161-b6673f46f8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7e3709-87d7-497f-92d2-12d938e5c81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dc27e2-357b-45a0-b042-108cac2af940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ab186e-7744-4351-aa8e-350194c3b6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c3995b-46ed-49c9-b53c-a61a90f70bbf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7962d148-5f1f-489a-940d-a9b19857bc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2931297a-a849-4e7e-bad8-007b0c3d29ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549c845b-8c7a-42da-969a-a9cd7f9e57f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46369945-63ca-4e86-b3e6-acd30d2d82be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90786e4-f2f5-4328-af36-759786443eb4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909f2a54-1bb4-46b9-a78a-951ccc3c05cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd76275-d5d1-4add-b6e1-2b0d77811c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a104475-2f61-4495-ad6c-022beb4f082f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a360118e-666d-46ed-82ea-aa9be2095e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a3c0a1-e9e2-4ee4-a44d-c00fdb3649e2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24117d60-08c5-4613-8c45-c28cb13ae430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c6ed5e-476f-4fc4-bcbe-8b82a84e3f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72131dcc-04d4-41f9-a487-c368195a6fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e7a2c7-3730-4dbc-9dfe-55edb53c70d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f8ae97-8a8e-4368-bbcd-9e1ff693de12",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df6095a-e817-4cfb-81e2-faf4e0055108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a24de411-f9a4-4831-bb4d-54ecfeeaf4de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e5915c-fbfb-46b4-9967-f28991c17139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f653c599-cd36-47a5-b11c-1da5f53c2f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985248ab-108f-4f4b-914f-0f88599ecc4f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e7deca-9218-4e36-89dd-03b7540268ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f8df50-9cb4-4afa-995a-501a613c8099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac3ad52-ceec-47ca-804d-8d0c0811ffda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7108ce-970b-4b9a-baa4-934233e22025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6202f094-975a-4573-b989-7c19b0bbf890",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0864f110-b335-4a7f-a414-b69805cb2622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f437f7-ab23-4d9c-942a-3d669751dce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ca7322-2f48-4bfa-a461-10929418ae5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a53de5-b2e2-4c92-a0d4-d622a567611b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0c19fc-e5cd-4cee-8bd9-76d9edd4d485",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0441e5a-5fd5-40db-9a74-83a02b0f7d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94593542-c0b0-4ac2-b378-d9bec5793f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6032890-7785-43d4-bee1-713a01e85386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14e9304-017c-4d92-97fe-d4757abba6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "833eef2a-e143-4303-b9b9-4c2954f94b2b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dc9f62-256c-4824-b679-6000e1fd1a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca80122-d944-4962-9d87-80f7b7ae7499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1ba13a-5f8c-47d7-ba59-a24a189667f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b52f1d1-2c42-4510-8c9e-4aa07d1096df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8dd6a0-0151-42c3-992f-b0c398fa09f6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ed2e35-2ea9-4b66-930e-7c778e2a07da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a440ee-899a-4291-aee4-a88690c85fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e009be2-d5e5-4a3d-a60e-4b8526c0ef26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca12ad8-bd74-4b2d-a025-daf8e4f9e874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae986ae-1cc3-4c89-87f6-5cf269dae2ec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b278bb-72db-4d21-badc-176678681f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1843915d-9cad-4a9b-ac1c-f6a97ce6de4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789e4d8c-d937-48ca-9cf7-40cceaff7c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb62a68b-e663-47e5-baad-9f4c09807c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bec50e-7c46-4e0a-bf88-53fab8b2c735",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865eedbe-8d73-4fae-882c-d93555c9553d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3522f96e-e29c-411b-a4bd-4fac0eeb7f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01e0f21-33a7-4d71-b83d-1ffbf803f8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "766351e4-fd0f-40d5-8175-f516eea9ae45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd472d96-0972-435b-83a0-2a0976dd6553",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba271c7-5d2e-49cd-8802-8b53bc516e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b60c0f-d850-4fca-9e68-1ee96319ef48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac49c6c4-27d7-4402-8213-d7beabd41a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "011d0493-4bd2-4d1d-a5fe-0a613f8c0a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ea7a53-0838-412a-8394-6d8d443d8e34",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6a364a-6656-4539-a233-26f672beaa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8e1c50-37cd-44fd-b277-1a4b293acf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c936943-ae5c-4dc1-8e68-bce1d3db35e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b04a1f-2392-4d86-8f63-efb89f9916d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efa892e-a2df-43a4-ae3a-8148d25201a1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9565a6-e643-47d5-b8dc-71b30f0da0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8604e103-5eb0-427b-9cfa-142f22a20527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e402928-b467-459e-a74a-5ad26ae1647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "df7f062f-1fac-4a1a-a48b-94df9c3b5be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fedf375-f40c-4be0-989c-f70b8136b3c0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6aaa669-292e-4bb9-b3ff-771832013798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eada9fa1-28d0-46eb-a6ed-c16e1e83e618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ccb8cd-482e-4ccd-a4d6-f780ae5c17cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78dad173-1f70-4527-84bb-c84df23ce34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0528ee-d47b-44ba-9f9f-3124407f7fab",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56fbb88-8ca4-4782-83cb-59c9dfa695d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b73bc13-feb7-4ade-9521-5eda86a69164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa180ad-a1cf-4cce-bf36-52613eee1e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a38fdacc-4d96-48db-8984-2407da4e3720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7085749d-15b4-4282-8611-96635aaaed10",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09dac775-1201-47b4-9868-5b3d2f05f0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9800dd1c-72c6-468f-b152-dc3a09f38a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7e9913-f3ed-4989-b374-3ce9b1d997cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db874b8d-d42e-472c-9b91-8835d4241164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0eb337-542a-4e83-b288-1e43c46d395a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b9d011-21a6-4531-91ff-a6bacdf22f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b63820a-a01c-4f12-808c-dbfe81138e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ca4448-c47f-4aa4-9712-08a27dc0beea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad871ab-106a-4638-b2a4-f9221402a458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0022777-34c4-4590-ac41-d049315f90f5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0667e3-a8aa-4bed-b024-4a30a0549a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b48ab7e-f92c-4e8c-9f2d-1462f3066649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afac8166-f1db-4041-8c5d-ab622de6e527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee114bc1-f449-4ab0-8f3c-d379cc3b70fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1b6657-b4a3-4692-acad-612889b3eb4e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bddee1b-e45d-4763-8fe5-a40cbe858789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236964bc-9cc6-4a39-a6b6-51624a078286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bda8f20-c990-41e6-acfb-0ea9d1e35287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f985e0-3f4d-4f06-adce-7fcb3b351dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac108a5-754b-41c9-8256-fb8fe853f292",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2141ce91-c03f-474e-b5cf-e2406915d42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d106912-6662-432e-b6e9-dababb3875a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a19133-eaaf-4a52-81d7-c26735630d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee82029-b836-487a-93db-d53210a1bd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c929a88-1299-4c75-b4fc-daa79a7bf15b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473a28a4-5675-4045-bb9d-bbfff5542f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc07fdb1-bca0-4998-a4e2-bb849863e447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91222aea-f70f-487f-b64c-877b4db628da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5a2bbb-a22a-4237-bfa2-c31292a7d809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad0ed55-a83e-415b-b990-1247c6414ed9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d3a747-bf5e-475e-9b0c-651d3c96db25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b2234c-e06e-41ac-b820-efee03cdc21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbbce41-a396-488c-8e36-e05540f77450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0359d98-b71d-40e4-9b6c-f7a98fb09820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe87706-a613-46c3-bffd-557119d8bd97",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5adcb5f-569d-4da3-8284-7f103035eba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7cdde7-199c-4f19-9ece-ec20d2d5e05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b356eb-9199-4c7d-8dae-434558718a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ea8d2c-80e1-4f3d-83dc-1e4d2fb98416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa684bc8-69c1-46f1-877a-fbdb5fbfd734",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b7cdba-58c6-4217-9de8-86e9d1fba0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f2ba41-56b4-4b72-be32-babb7b2b8c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e634956-85c0-4662-85cc-c26a23a116d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0eb4da2-6836-4c73-861b-e9d7c65bed3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4885afa-116c-4bbc-9a0a-b4e59b44ad97",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65f688d-7b6e-4b7c-bc57-5377c3ccef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f2bab7-edc3-4351-9684-40822bfaacdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727896fd-afee-4758-97ca-122bd34a10d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eee7192-611d-4340-ba04-c4cbbf645df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9259e7d4-f649-4208-8b77-8355e773b528",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf83e29-2d43-428d-b32e-cd113a1f3a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ef71a3-10fb-41c5-93de-019a5a5758df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4c6ec0-438e-4fc8-9093-f172cc9e860a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "360763aa-64ea-4354-aa54-a98ade6b6bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f821cbf0-73e4-49c4-a2c2-beb3af7fda72",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a77511-51ca-45ac-8f96-f5183818660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e802c9db-9a87-4d49-a38f-773fa76096ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a79c4a-a1c4-44f5-abdd-42324df97630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "789d2d18-6231-434f-9833-262562aafafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1518135-2a58-4ba1-95ab-8d4b5047ffe8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b651169-8fb1-44d7-980f-230daea59710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c2749f-d65a-469d-99e6-b24674261f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c527f7cc-7fd2-4b11-aea0-96543f9ae59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d53dabcb-b142-4482-bbed-3da01ef91ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4212a2fa-2f53-4ad4-aae1-f6d49832df89",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962f3d45-a718-4dc4-a4d1-19a9160bfa2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52188953-e6ab-4dde-b79e-2348eb12b72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0a6534-e07d-4301-abe3-bb65a80c0c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df1f59c-aebd-4adb-9831-b0938e882bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240854cc-bbf2-4a45-a1ea-dbc67a1efa76",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6d950c-e527-4c23-a901-f865906962c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0306a612-e16e-425a-85ff-281dc5a89960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ee05a2-1718-47f9-92ab-fa8d19595418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2546cb7-78da-427f-8da8-904398640936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63da6b23-2638-42b0-b681-6122a6ad338a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a02c88-27f8-4b3b-8b44-e7da18e45931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b1923a-efbd-4bb3-b5d8-ceef7207b51a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327fe3e7-bc88-412f-bbd6-49d1b1162779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1495889-d71e-436c-a46a-937c76c188d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3644f5e6-752d-428b-ba6b-17ee191830a1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289b7761-9faa-4fe9-bf01-7da9584ea855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40241cdf-0e1d-4dcc-acc0-f3309f19673b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598c3769-4e6d-420b-891c-3a1a42e89032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97de55e1-8727-4863-87d7-2977792b4544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2789b52f-f89b-45fb-a674-4c576ab3918a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dbe101-284a-4ec8-86f7-b130a92cf0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda27a4d-dda7-4f7f-83d7-427a6a5a84ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc58ec4-bfbb-424c-b5a9-f75b4500ebce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f759be-3a97-48ff-94b0-a0948990d9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11362d74-fe1d-4b6e-ac8e-5b9f907cc9ff",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2507030-ab44-444a-9f56-a8ef100fca85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497f23f7-361b-456f-a828-1f65b56e04d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf11bee-c4cf-4748-8a5a-67527518c183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "81470c15-96ee-48bc-8dc5-ec4860546bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4533d3b0-2f90-4c1c-9efb-4e866d589b47",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50192ae5-2a23-455f-b25b-ee46ea8f87a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad11720-0544-4fdb-9be9-10ead1aab935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1121133-3e62-4a46-94e9-157078932ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c00264a7-5ffb-4fb6-8717-4fe1a8dc12b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f754dc03-b903-41b4-bda0-927575a174ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1956ca37-adcf-4a9c-9c96-8d506eed6191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f8edfd-c61f-49b5-a561-687de6767d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e5ce89-b0cf-4ece-821f-fc72cb962461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f69f4c7-1c44-43f7-be72-748a1620a321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6229bc31-2756-4293-990d-c9e4509ebfc4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23b76f3-38d0-4f71-a7d6-62508276ffbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da556b68-a054-4480-8138-9c11609b81bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594e7b96-6d80-4ef9-a7d0-b6065c189a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "20659458-122d-4fca-88e2-fd78b46f77b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98614a55-021d-4fe7-8ed7-0203e92cc1b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521bcd9f-2ba5-492b-91bb-a95638c607fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbbf83a-daa9-48fd-a0e5-70e2a805f2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b243eea-f8c1-4f77-8397-518baaa5d113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01a42479-685a-461e-9fc0-14172de36b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dde7f5-27a2-4162-9226-49205243c9c8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d627c8bf-b6bb-49b7-b4f6-732451c990dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3b14b1-b299-4ae5-9720-ac8f10a847b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dd91bd-97f0-4159-a6f8-929397f273fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "309ccba4-fbc2-47db-a1d1-330e709c3f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4684eca4-3895-4a4a-a0aa-b8f5037ff01e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cf639a-7874-4040-a255-66d425fb86aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c00cf30-16bd-442a-a07f-e855ca527a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96603d9a-7a40-465d-b4bd-1aad7ece3caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e288f9d-1fc5-4786-8455-7cb929e74e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63a4db9-aaca-4114-9c7d-78cee6fc5b4d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801f360e-b698-4e27-87dd-2f0c167936d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b95ea79-b31c-4890-9045-df3c4d28a276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5591a17-5abe-45f5-83c9-cecb41e5c4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f998e1af-5986-42a7-8063-cb110fe6a0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5792ffa6-5979-42d5-93f3-0294035cb42c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8202de1-9921-4b00-8334-5b246c401d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a9aad5-15a9-4ae4-944f-633bdc6218c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5cb449-3eb7-4c18-9122-e18f939ca5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c19a42-16aa-4340-bff6-c2f644259f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7439690c-10b0-4f04-8715-d55b0d39210e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d37324e-2c92-4757-8a97-729a1584ca12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0ecd32-522b-4c07-a6b2-ec136e9f15f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ecede6-5263-44bb-be4a-3a5c001f0fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b53bbd0-7dd8-4c0d-8544-ab9fa43fadb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb354dd-850e-491d-86df-448e709df3b0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e032a573-7a89-4841-8248-cb8dde5bdc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186af193-9c63-4819-b966-eafdac3c7508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320e7682-370d-4417-a280-24a6ada93fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "095209ef-b0aa-4789-9fd7-2cd53716108a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07884eb8-3eae-4b81-b6bb-6c5f10c3c38c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce0f2fb-667b-4525-ace9-94bd04343821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a3de68-f477-4ba7-a246-c24c3e25c820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ada19e-3d8e-465a-b8cf-dac96e5f9dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "730295ee-9a5d-46be-bf68-9b4e6ecfbe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7545213-5137-423a-b510-fb3f10b95bc5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ad9772-dbde-405a-83c2-a240815368d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec121958-390a-4b13-bbf3-7010eef4ffc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0b25b1-127f-4f70-afa2-09a914dba5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c0c8c0-9196-428f-9ac3-6dee8f9ec0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bc539c-8082-4d00-9e67-2650a83f0955",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af625903-807d-4676-bebc-ccb464cf5e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c04cf5-1b34-4bbe-82ee-7b38ce7ac954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb701ec-d43a-4206-92b8-93c5eb004cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08cb77a-97a9-4908-83cc-b1529962dc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5657197-ff93-41b0-a98d-c337396a2b45",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24615fb8-deaf-4413-9d7b-3d73404b669b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47870beb-496b-4556-89db-b185ea3dd16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80309341-e62e-4381-b012-66d2613368fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b903a22-806e-4f5a-8eff-eea0bc3d1860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7d9bd1-2cf8-4d4a-8cf5-d2de9460c19d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b210d9e6-c77d-4dfd-8590-476d400d987d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bba689c-b950-43cd-bb76-b42e5c413ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9d8894-b15e-44f2-923f-be869f5bbc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dacaebb-debc-43d8-b6d5-02c2ed7ae1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9df21ee-0317-43d2-81e0-4615faae5b00",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d37aac-377f-4a06-a02d-97ff8c3cc975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a940fa-bb29-46e2-b2ae-3ad7339afb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f9e0e0-cd38-418f-a63f-89465f22ed75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9667294-a621-46db-b1a4-0eefb52c085e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1ced1b-650e-45a6-b6cd-f67102bceed5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc9a5c6-d2dc-4824-b8e9-bb5c20a41d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac521ee-623c-499f-9d50-c14a80a7c6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5320b2c-52fe-4e44-b7e7-d5a83b6d830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fe2751-99db-4818-b16e-3957aa57a906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a752e11c-9586-4c67-8eb5-1a03e6ebe1cd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd594a-6374-42f6-aeca-da580e96834e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c7f544-e80e-401c-9611-dd779a836321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6e63b8-87aa-4524-9621-42acf1e1ef8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d235a417-0862-41e8-9cc1-7f01d01f5476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f31ceb-b3f2-485c-90bb-d17b29c22f9b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48942aba-11f3-40b3-9c84-7d51fb4d30bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6052abd-fdd5-4f73-86e9-91dce564766e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7710c64-97dd-4679-883d-4b9a2e233f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80d91adc-ae42-40bc-a07f-96653b3b6bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0537e8ca-213f-4b01-a981-e325c739cf77",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ba237a-48fb-4181-9532-1b50ccaf1bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04dead41-d129-4e07-9779-7e2f6d768b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc2ec14-4261-4b9e-bada-3bcec164cb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32ff329e-ee1f-4170-a0b9-206ce2ade319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0461f5a3-0967-4a5c-8b69-3d3e10842a8e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fed1e19-01c1-4369-b0df-32d75cb3f362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8970f3f-bc07-4413-99ba-6e1202f0a5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c083aa2b-cd83-4a59-a228-2a0de681239f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7a8f9f-cd0d-4715-8e50-05a98c7d1c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375856ba-a1ab-4173-83ea-8c0a4ba10e25",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b339eb6-88df-4119-b719-266e94d60106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96772739-e2ab-479e-b856-67f126aec559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63959e2-7c90-4b47-86c0-86532a92da05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37f82e5-5d35-44b1-b995-57c9d991021f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f0d4bf-f9aa-4f47-aefe-ed0624f8ba41",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d25109f-2a9a-4804-b54f-3316dea4bc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4347660-0648-45f9-b240-c79961377212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e83d60-6dff-4e49-835b-581788c10e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fe7436-91f4-492f-85d1-1f046d1587ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc65e972-e40d-486d-9316-0620092c4a76",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc851b9-3c79-4de8-9c79-d11046671d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68b334b2-ddd3-4b53-aa5a-2eb9c38e07b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17fce0f-a601-40e1-8119-7066b9165088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e654adf-ec98-43eb-b92f-e79e582e1ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baf1037-f2ee-4170-ad87-9ff35c4cf572",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d00f8fc-4568-4154-bc03-d27a70d7a763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab978075-7df8-43df-803c-6de6f652fe8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86fcd44-2861-421e-9437-f32ee25973af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "222de01b-afa8-4251-8017-928388e05c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbf03b3-001b-4107-9bef-84c6796dbbdd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3c50a7-4e90-41f1-a667-a3f73952ab4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3369d3f-50c0-470c-af6e-761048bbfaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc397b7-9f26-435f-81ae-725fb0e9af23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf396ce5-4dce-476a-a88e-910a32da0674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1123177-04a8-4b0c-af85-4fd6bda2b080",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33bdd07-db11-486f-a412-eb5151b87cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fcdbae-175a-493f-bf01-e959dc1e1572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cdcd13-b359-4e3d-92b7-32d18be0f9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8921107-91aa-48fd-8b84-4af638fc0b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb9545b-54d1-457f-953d-27e3de2753f4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d913b5b4-ce54-46c5-88e1-ab53e16d7cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a522873-ebeb-4397-9ed6-584fc9548c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32440107-61da-4494-a702-fdae70618025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83e51f4a-117a-4314-a5a1-4a0af5f234bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9644a6-9df7-4258-b103-96953aa95f79",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14a20e4-59a7-4c0f-b044-337338f6410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9236ab40-26e3-4587-9304-e2ecce4138ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf450ae-c465-4e8a-8e46-c1188438f2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96b5cf48-bb95-4247-aacb-3ce8e03024c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a96cc61-0425-4baa-9f54-da288bf4af46",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e66bea-4e5c-4afe-9992-7d3ac412aca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5edcb1-4be3-4e0c-bb8c-61e957bdbd9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887e06c5-3218-4f63-a231-2df24abe0f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09c5bd4c-fda3-498f-ba2e-dd753d4f15de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d464d25-762f-4a15-a90f-3c1f420280ba",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e79e4e-b5cb-413f-8b2f-f53c231cdff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5df0c692-3397-45bf-b12e-95db03c69371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f97ed5-cbf9-4a7c-9ca2-2a7135238876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "786241e2-31b4-4d8b-a696-cacb84efcc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25339bec-9e96-4257-8a33-80b20cfc32b4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e69e2a-a58b-4d7f-a1c1-a4615e5f4407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692149d1-5ed1-4c69-8cd4-f7f6248847e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1deed5d9-c504-4088-bdd4-6bbb45b41340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b34cfbea-244e-41b7-bed6-43ee5c65261b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7c4132-22d0-4973-b6dc-d91cf90ef232",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f562ba3-5326-4285-bd42-4354da109411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adab6b50-b083-449d-9e26-ee580310a822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230b2736-7a84-4fe3-8ff6-030dc7a0b7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "62eb0950-4808-4b6b-ba77-dc8551e0062f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8622bb-e300-431f-bdaf-18de42c05629",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e27b47c-8b8b-411a-9b9d-8dd93ff982f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c602eb0f-c924-47c3-8de6-96a9bd8df0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1320071-179b-4af2-bddf-41e88a5152d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a265e0a3-69d0-45e2-9d06-084f305c4f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2767e0f2-39e0-48f2-a358-b2854542a56b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4710f9e3-143e-41e5-ba17-b87fff9096f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac1019e-c08b-4427-8f09-9e3367b8e365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed3655d-a365-463f-9755-92f8c0752a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "70b5c3d8-df7f-415a-a076-10ba7f6c1717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08bb96d-e2aa-46ba-bf77-acbef16cf956",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77af1786-dc1f-4e2a-b356-fdab8dd4cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "570e503b-3953-4bbb-a6a7-7a9b1b5ac9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bcdaeb-a101-4adf-8e32-3af499232bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "08d76b22-e4e3-4026-9bac-f86f4ec561f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d13880ff-7ea3-48c2-8c62-2428cebd983f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28068fcb-f5a5-4c03-95f6-5d0968a56bb5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6c1f23-0fe9-482b-af14-0a0be71be2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d61b62d-1154-4288-975e-c3eaac91a009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be86ca7-2c10-4342-983e-ec9200039705",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cd00010-72b9-48ee-95d6-46dc5cb6e6cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8af17272-3b67-4d7a-8295-799af505fe63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e8852e3-4bd2-4ee8-be75-a6591212b963"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b09e790-9d70-450c-98c3-6713bf8b99b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f4d5d69-c842-4175-9510-52261dc84ee9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b9a2e4e-0f76-450a-86bb-3f30e0aa8b46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c7551f3-91a8-4eb4-9341-d4f8f57b2da4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "092d3c62-cc76-475d-9a6a-17af39f09f47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4cc34653-c51c-4865-b35e-21a59f42cd74"
                }
              }
            ]
          },
          {
            "id": "3e62e123-b68d-4ffe-91f8-34e739f78849",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2247bbe6-4871-4fd6-b244-dec0cda0bbac",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d7783171-78dc-46fb-8928-c92dacd98e1b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd8050c-8c86-4df8-8414-660349ff3e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d3d93eaa-dbbf-4333-920f-40d5ffec0b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c48ae-20da-44ad-ba66-bc75ddc5c2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db40b363-00b1-4e56-8fb2-b3cc4cb4bfda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd2a9260-0a28-4909-b06e-1cf1e9192f93",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f829eaf4-a196-465e-8d6c-482eca1cbb40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1966bab0-71ca-4211-bab3-1db2d62ff02e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7c49bf5-e174-474d-aae3-0dce0dd002b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1882174-204f-4b65-975e-84f93ddfef04"
                    }
                  }
                ]
              },
              {
                "id": "ca0fcf9a-7f5a-4cfb-86c1-b93942875fe3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d6bfbb0-780c-4010-b6ce-4dfc176325c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41eb71ae-ac37-4db4-97ec-94aff92d6038"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d28d420-6861-4502-a8b9-582740d7c2c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a0f762c-7175-4801-8d72-954ee835c50d"
                    }
                  }
                ]
              },
              {
                "id": "4c8d48a1-e91f-4893-b3c5-4eee573f90bf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10965d3c-0154-447e-89cd-0026a8a9a6f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8c15e13-d63a-4424-b42b-472cd54fdbd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5f17456-3f7d-4a44-a5d4-01f73fecae29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1c703c2-446a-4278-af43-3ccb387043d9"
                    }
                  }
                ]
              },
              {
                "id": "51927c57-d28b-4616-a530-c6c338d531cc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6de6b99c-7a81-4070-a7c5-c113327d0544",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fadaafe7-619b-4d13-a67d-427c72022509"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc035432-8dcf-4c9e-87d4-9f0ce1f0fe9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "843fb0d0-13bd-4d2b-a78d-3d0ead1e9fde"
                    }
                  }
                ]
              },
              {
                "id": "2b6da45e-90a0-4fd3-a1e3-96ebef2d5bd9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2869d23-aadc-417f-8ef5-b2016ce6bb19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6a632fc-da56-4008-a603-ff21a808b551"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fce1d8e5-bcb0-4c58-8438-3810b0af9085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ec7bc3e2-ca01-48ac-ae01-30aa364bf52b"
                    }
                  }
                ]
              },
              {
                "id": "bb749725-69d4-4e3f-963a-3e657910866e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29f8ea2f-5894-40a3-9db9-694ac9bd3c7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa234046-fe1f-4c6f-b6f1-a0efaa7fd89b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d60a665-4a29-4ba6-b2c6-e97a5ccd7b2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46785f36-1655-4bd8-a7c7-12e576942b70"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ad9edf5-b0b1-4527-bb55-3f4cfedca2bb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94da2841-84f8-4210-9f15-f685aefba6c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6b7a3e54-bd8f-4a88-969a-b5e6a3d9a9d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d63b1d9-5171-4c6e-8309-02e3ed9ac3ea"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f4e1339-b7a2-468e-823b-a1ffec3e90de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3301fd6a-1a4f-4aca-982a-980864450fc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14df73a4-7fad-4438-a70a-12e69c7d1ed6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "430d7084-6e3b-48a4-b1a5-ac2704ff1ac5"
            }
          }
        ]
      },
      {
        "id": "f43e304e-704c-4c5a-8313-e39f7c708308",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e98de308-f666-491d-afa7-7b247a81badf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "292a61c5-bb15-4e18-be0a-9b9bb162498a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "666c790d-bad4-4e11-9a55-2f37712d9931",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10934cdb-f6fb-4635-acd7-3f7f5d82bcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3452695-4560-499c-9096-246eb19f3e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cfd94a-80a1-4f5f-96cc-25ceabc00851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a207c2-e018-442d-b53f-c1c3ef33e544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40fe892-1203-4ff6-80d1-cf16cff24ad5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969c340f-84a9-4a62-873a-9051326d62ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f172893c-f965-48b8-9986-f78ae9257053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6149484f-1354-49c4-9037-7eac7683aa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ab10da-9b0f-45c9-a8cf-1fd6c5ff1f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcd8def-0765-4554-8f50-ea138f527fce",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938bfeec-9854-4612-a410-4ad6827f4d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a84959-2d07-4b39-b36d-472d8f4cdbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75264bf5-ab1b-4530-bb99-3565161c3fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf0be85-d7ee-4563-9c97-a77f04b982bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d3a796-8025-4b6e-97f0-9cd1c6a46435",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda7fc9d-faca-483e-ab37-082f657f2e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ddaeee-4a6a-40a9-a44f-5c8c54e086d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cce2cc-6a54-4cfb-9886-29b0a0ca3bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "073dc252-0094-4ce0-9b5b-e24a57d70058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6f6241-f602-4ba2-87e8-1eba66165a48",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de11cbfe-d427-4d92-a362-b2a90eab15d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b997f4b7-91cd-4bbf-82be-5bca8cee274d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de542f22-d3cc-4afa-814e-fb77c47db8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f37d0e-bf7e-400e-941f-7d1b141b398b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fe03c8-082d-46c1-97c4-ef01b62e7f7c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931a83be-2dd0-40c5-b3bb-f4a6638ac6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88513e65-09af-4a8a-bfa8-6a0c9bf9551c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b42a66-8bbf-4fab-a6f6-f9ccde669006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7ceb09-7286-460d-9005-63a2e00f0d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f69e87-e620-4d03-8906-25abd3f2f99a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f7015d-a771-43ef-a2b4-d6e84777f461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c93224-80ee-4292-ac77-9c6c90eecf28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea13549d-035e-409d-92df-8f4522d3db49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "2312b77b-7479-4eac-b60c-a1f68fc9b2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64ef9eb-485a-46f6-bf95-88a0792e44bd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26a80c0-b778-4fa3-ba02-b31d80fa9f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98cabcc8-342f-4ba9-ac31-514888b4ef05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a73a05c-4b22-40a5-bfa9-53058d6f175b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac4ffb7-7cc1-47a5-9083-95a761ad6389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe55e19-6694-4998-8ef0-4d2cadbe54c3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80b2b37-cdc2-4ce5-a8cc-db88c9f9452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebe5599-4f5a-4ab5-a90a-5aff23806fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b449d1-9b4c-414a-baf7-0f180d560e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc310d5-e336-43e0-8b99-5fc5aaa3ccc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06cd8c8-0cc3-4f71-bb0a-7b5a3e7148cb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1a3fd3-6230-42a9-a100-50daa02b61e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0785b19-b655-4512-8d49-99dcb6f1d0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d288436d-1494-4d34-85ba-7b1faf5a20f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72a671c9-010d-4c0e-9ece-00459515f592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6da6b7e-d9d8-45dd-8898-3aa86975896a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a65b1a-f12a-444a-b691-fa5218d88760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2183818-bf7c-4c92-a7e6-d520bcbc6ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceadf456-d516-44d1-b232-19d5a6e1cf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9a270d32-9d1c-4aed-80a8-ae68ee27588a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0503cac-454a-46e7-9e69-ad9bc34512a2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ad6fe3-d2dd-490e-af78-56cd36a8c60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f95cca-0370-47f1-a099-edb4990f1bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f225b43-7526-4df4-b7e7-edc05408fb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "edf26d55-22bd-4575-a68c-c336c240b39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c648ac-e8f2-438b-96d0-c42508993655",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa03518-4f4a-40ee-a961-b70cdb43d83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1bafbc-4220-44dd-933c-1fa51205792c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9084cee0-9d68-49f3-a696-e21d4c147f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1454237-47d7-4722-9f1c-9a1237d7a311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b803464-d116-4307-85d7-838d2f737380",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a7756e-9dca-4595-acc9-b573d46d9ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a244981e-80d4-47f8-8f53-3dc246952d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e8f4e3-1e5c-4086-b3c7-cb7c12170bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc00d30-a29f-4b11-997a-8b0b1fbc68cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501b8aa0-49f5-45fd-878a-e8df948ff1cb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a25f02f-b4ca-4b0c-aa1c-98f346a763a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38ec06f-c409-4cb7-82dd-1b8e6ac7b9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925a4c0c-5298-4a59-a61a-bc2153bbf249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "590eab29-e04e-4a34-ad58-e2d26565e599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63190422-2e51-4e73-97f3-6e3c24634293",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5f0a92-4416-4787-a12a-2573143abc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d34101d-6d23-4007-be8e-21b8927544bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a87992-e089-48e0-abaa-37452271eb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bd9165-34d7-4747-a491-938a2bbb7a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe56a59-97d1-4189-a802-901761c21035",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dac462-4553-449d-a60c-b24ccb0623cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5bcc8b-0387-460d-825c-8dd63ed2b099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7f92b7-8d10-475e-aacb-17245800cb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9ab4a1-9d9b-45b0-8fdf-bbc737a3ab7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30105b37-3c83-41e1-a1bd-af33fdc5fc8d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b0606e-6fe9-4daa-aebd-3a092f7006d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b74b29-8d18-412a-8119-55c73e4d0064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6521ba3-d075-4337-a8a4-ba1b4ad69f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "70e3efe2-8927-456e-9ed5-74c9feabd75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfc2c25-ae6a-4aae-881a-8959c88bde36",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa09159b-1fe8-4995-b2f7-c466fc79302a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78884119-db85-4927-a45e-d1253c5ad3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388abdee-9f19-4e6a-876e-1409ede47aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0900ba6e-aa3c-4b9e-9196-18f7083ea5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245705d3-9de1-4f69-855c-78f9448dca80",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c41c64-ad23-4679-8d24-c50cb9cfc5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe12556a-eb99-4869-87b8-6ec15047456f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb918917-b31b-45da-9fed-a3b8f4295347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a390b6a4-fbf3-4986-8339-fbbacd118e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeaae3cc-5af8-4774-864e-584b3c4e07f0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd80e31-fbfd-405d-9874-8f1f7c25faff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332e51b7-1eef-4c46-a5ac-3ef06fb732da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71adc581-1cf2-4dc6-8ec7-9c4baa3d1fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5248a3c2-5487-49c7-9c70-eb7b179342b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b0fedd-9846-4ca6-b904-03f274fd79ad",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d965230c-5d64-4ffa-a446-064684624f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce8358f-d448-4973-a772-c54ad92a10bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4d846c-d6e9-4a8a-a1c9-443bcec29b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd2f756-edf2-4a69-ab38-ce582e9a9995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07fb6d7-7928-4e92-a3f8-b67c2dc5afff",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92186ca-bf9b-478a-95d1-1a1d87028cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc70507-3b5e-4c25-9a0f-6c24a4506a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de84578-74af-41b3-abdb-be5c3849442c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ec8851-6722-4a8c-8cc4-105c0eae41db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87893b4c-4f28-4888-9073-2f4255a4dcdf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473b7d70-c1eb-4df1-9124-5fc15f036967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93136799-b0e2-49aa-ae04-431c5c9e0d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763d7001-7e34-4cf0-a4b8-6b9fa8c08631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e746f3-bfae-4ea8-8ae0-9d225ca7c410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9c68f2-e571-4214-b6c2-e1ac58770478",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bc9524-8299-484d-9706-e37b95cef84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7230e07b-ba51-4fac-8cbf-ba6031615cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784193e9-19fb-4fb2-9381-c28c077b0e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d7b339-39ac-4432-894f-195f0653dcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d162ff-6e1c-4ce7-8360-618d966269a4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce42081-06d7-4966-860c-ed4a79458451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90cf55f5-e980-4cda-9ee4-fc7f02b12648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cf4b51-bc61-403e-824b-94114462e1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3a25f6-f4e1-470c-a507-f49d692b108e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c0a4fa-7fd1-47ed-8e80-5f797955f799",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fec9af3-cf1c-43c5-a35e-92f2ee1d768b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e165af7-cdb8-4df8-a5b0-12b24dc5be75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44b9580-d1d5-462f-8490-023505fbbdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "240943d3-1327-4095-be80-cfa45b8f595f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69001b6-461d-4466-96bc-ad85f9004f46",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febaa63b-38d9-4000-ac6e-02559ceb9feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f385cc-d198-4c18-be4e-2ff91087bdfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b98d269-cff2-46d2-ae54-884ac869eccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364ac147-32c9-4255-b61e-6569376fb099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e0db91-e51d-4571-972f-5627297a125b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04792a49-9aa5-461e-b552-1d361b34c501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958bac4e-f1cb-49ad-8a78-64469868bf2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5b9124-3054-460e-9ba6-0dfdd1f6784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ce5717-55b9-4bc5-958e-4b86ce3f283f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9c8c1d-d8e1-4019-86c5-8c5545779da9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901513b5-9406-4134-be52-fac7fe4ff7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a665fa-aff5-44dc-bf99-10ff86a8be0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc071c8-ea7f-4c80-8522-1ab6be1863e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc37d10e-e607-4c6e-b774-ddb187d7a0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6d215f-cee7-47ad-828d-1db93d7d6014",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018ee6a0-b0d2-47e0-8a34-9233ac4eb727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ac34f4-848a-4392-9afb-05d1d42f409a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abedaf1-c607-4883-b3c5-e4041c5f3fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ab2406-c3c5-4b76-9d1c-60b85d37e495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753c95a9-0399-478f-b029-8c9bc9199542",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dd794b-bd9e-4f73-918e-20a1552a3152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95aa417d-1a6c-47d2-9f7b-582af7006675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3aa2a7-43a5-4013-a172-40fb2e2a9e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6acb6c0-73c9-4cd0-be3d-66c44f1e0448"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42cce897-c776-45ec-98b5-7528c537ce84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59c661b0-905e-48bc-9744-e7d33c508797",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ace8a6-62b5-465a-900b-7964ec87c334",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1af4fc-85e8-4933-babd-ce8035f26d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f2939c-4a19-48ce-a846-85a36a68d8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cefc0cd-249b-4614-ae25-8158c16cda70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0a6f8c8-fb95-42ef-b67c-0d5bb7812711",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5323ad1f-d3d9-4d85-9d15-029ae8655d42"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25d32562-ba4c-4fa0-a62e-2c4e450edf3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8df52d3f-9961-4972-84d0-56c1830c3f26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd4fcf9b-527d-4e71-9050-b6ebbcb67153",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3dbf124d-0d20-408b-9427-4f8f818af77d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac55e897-9af7-4754-9cad-b96a2823271a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8185be48-6614-4210-a574-2f95b7a78a1d"
            }
          }
        ]
      },
      {
        "id": "766ee2bf-b94f-466f-ab23-fe82d687af91",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2985e783-e5b5-4980-886d-290a182b5ace",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51ea5855-a099-4baf-bb68-4a3ad6b9b51f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c757b10a-af75-4fc1-bdd1-e5169442f6f5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ba132f-e83f-416c-a7ee-ebc6e337dd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4ba9dd-7669-4c52-a48f-b650f428ae23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fd25c8-3313-469a-88a5-59fff7767c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b00fae-4783-489b-b70a-cc63fa6677cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacca589-1207-4936-8660-9445942e37be",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf9c5e4-2932-40bf-aaa4-a7af69d825d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5442bcd9-0daf-4c3e-ba29-a217d338e923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a49030b-d6b4-4777-afeb-1d618d5c901a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "729085a1-1b28-4be0-99bf-a3b22a519a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12eee21-0787-4a26-9ec1-4eb9b8e8dc4e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3413adbb-1bb9-4dfd-baaa-bffe64f0327e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb987e6-89b7-47e0-b227-a68c505470cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa45bc4-e623-41fb-b127-0cadcad7562a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbc0bf6-aa01-4bff-a615-6f9e6a6187d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd00e620-9b3a-4be8-92b1-4d51f5a3e6eb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d35a49-17ef-4fce-bba5-06ce298f8c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731c6716-8691-406f-bb2d-c4c4b895330b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69e767b-ac22-4c4b-a01f-940b4ffc3686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6805707c-3941-435e-b022-ea4e393024cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d9a72b-2a57-4cba-a2d4-2b7ee6e1ceb1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a0253b-1645-4b30-aa1a-1753d0728602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3443fc9-aaec-4e73-a1d6-367d5e015824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d761fee-7c1c-4d6f-826b-bb916a55d982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2843e6b6-255d-4d14-8210-657d8eac45f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196264c3-5b5d-4573-aa11-6ff38fc0c44d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d022631-f98f-49ca-b065-1671673be239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822242c1-ef4b-494d-b707-b1df1346048b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e768a7cf-38ba-4204-a33f-73f735362119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0eacb6a-7ad3-4554-ae42-1fa884b28078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88848f51-8dc5-4894-907b-1141d4a4c1a6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2545a296-266f-411f-99a9-45361be4ee8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2dbe4de-1c10-429a-aae5-36a7cf003354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b94719f-2f39-49f5-844c-3aea6babe1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "94895544-c5e3-483d-930f-cb24ca88e4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82915d9-9567-4400-8fe6-d33c1b6e7e2c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56390edf-3b8f-4600-88a9-3ad71e333f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c41b92-ff93-42f9-83cb-189a0395714b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b733a922-d5c1-4688-9b0e-ada70dca8d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f374d203-b9c2-4bc8-97c3-08ac62da2639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa4855e-67ab-4233-a6c2-d06a83ad332e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25c55cd-3666-4413-b79a-c687aa708781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1805f111-827c-4e10-8494-8e44a72d5efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d977fa1d-ab78-4499-aad5-e157ca08dbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28b5e618-69b5-41a2-be5d-b6bd31509bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575dca2e-bfe8-429b-914e-5ec8e46bcc9b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8650e9b-5857-4198-b6e7-92e0ae8c0d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dee646-3e48-4c5f-b9af-e1a47b4744a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a7adb8-f17d-40a5-bafa-2b8af886b89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4046ee2d-60ff-4708-8ba8-02517c18ead9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b0c0b2-0687-42a9-bcd5-0c983cd1f188",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e47701f-822a-47f7-b320-f3aa59f2d205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d51cf8-5fca-498f-b165-533b227e60b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee29201-6650-4a8f-a88e-5bfa50116e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38ed30b6-ee4c-4550-b62a-7d2032954b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2326850c-98a0-4d95-bd6f-4a58a48c0f70",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51395b37-c788-4593-8fc4-a8acf59590d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd86060-2cf9-44fa-a002-67400e0c1835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6898e688-cc13-4745-8465-7530fad2aac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa00af55-4855-4206-951c-84667595ec3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc6851b-8e26-4700-b90f-87b7a19f3d13",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c78fee2-ed93-410b-bf42-c231b20a53be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639ab621-bbb5-40aa-bca3-c9a72a798581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2943844a-0419-4494-a3b8-63ad94e3b6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0231d137-a618-4acb-8ee4-df775c4d7f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf787bb-3c87-4aed-8499-16729528e409",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b32f2f-732e-4ee5-86e2-b33c17d7eaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bd87d1-7954-4773-895b-3db0b9260e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f33605-7e7d-49ff-9a91-0f700ec1f50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e6f2b2-2391-49b3-a424-263b079de95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4c38df-7c46-4d1c-a6c8-c1a93736f3cf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3404578-b424-4372-a055-6e19748661ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d195234c-1d0e-4ade-b87f-bb03a5581592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6105e6ca-caf5-4893-9478-f24375a71e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d311304-5611-418e-8ecf-5aa4641a9744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b74f3c-2348-4a99-ae08-d79deef2bc2f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f3ad55-cd38-4233-a4e5-278230db8121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7da8757-eb9f-4cdb-971d-939341b389b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5831a8d4-21ef-4976-8634-163351108a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8109c479-a1cf-4de4-927c-f90655a83da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7197fba6-1912-48b8-aa55-d5ba5fcc667a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee02fb36-fecb-4a7f-85b6-a9b89f33acf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d20c60c-f1f7-4b42-b8ad-af55041224b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbb961f-e2c8-4538-b6ae-760c78a3ec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4f84d3-beff-4e3e-b73c-69b979b02544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbaaa87e-bf42-498b-a887-2978a2b6981a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae75822-18d5-45a1-9bfa-6edc7c3605cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065f72e8-80ec-46df-ad43-8557b020c96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856fc1f4-a51c-47d5-87ae-9cae10f1f746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "836de628-eaa7-41c4-8e74-b3d19eac62b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acbe180-4c03-4bf7-94ee-11aaa3edd079",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b83d145-e330-43f7-acde-6122cb5e4598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1305631-f698-4fb8-800a-339650fa21d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c70075-9440-4f78-9f49-347c0d530fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a92ec7-d0e1-4c2d-9657-b463070b8614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eea43db-1adf-48c7-a6cb-e2f2efae84a7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549973c3-5354-4b1d-92ce-760ba2c936dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcf774b-6d38-42fd-9139-51dbed2851ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1b6733-ff3b-4279-8773-429764f10842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de0aee76-f96f-4e54-bd01-14caa7b455b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5b1e42-2dc9-4c42-9b2f-7bdd06338dd8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b383284c-eb22-4690-ad23-0399fa7a94d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4488db-5dc6-4630-b6dd-f7b7a0b0e247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecafcd5-e712-4109-8f1d-e7f44d2b0dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "728fb94d-0101-4e36-b60d-4cd771a3d2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476f3ad8-7aff-4e49-beb0-f81386136f79",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ff3bf3-baad-45d5-aa03-f03ac772b3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b8ed22-bd52-4fa5-ba26-b79d0c5ddb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f60137-ec44-40a4-81e5-10c0eba323f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0af57b8-d915-4aaf-b8e6-ff78bfc02306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef003bf-726a-449e-9ccd-fc39b1f35e61",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731944df-af52-4af9-aa41-97a021019b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2f5e08-3c02-483d-8e5f-2b6c41b19247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9b1b74-c81d-4ba6-a11c-40444c052d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aad5f8e-8bc5-4af0-b84a-b7b4ec64a987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511b993a-6d94-4af7-be33-bd601c2c6f0f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d62a4c-3447-4911-a334-b981346a62e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cece9082-a502-47c7-8c56-32ca769b0bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf19ad1-91c3-48e0-acc7-e040cada6d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36005f02-8b99-4f24-858f-d90a1b8e0d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0590053-f33f-42b0-8256-bf62b70422b6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6959acba-912b-4b3e-953b-38cfc6945eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fb9b9e-4279-4cce-9f8a-df8d3acdd6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c31b472-c9a8-4643-9d2d-2a6506322491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db9dc6b7-c1b4-4a00-8bb5-75fd2fcc2731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859f0ebe-16f2-481c-b36c-9d046a1f77f5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd16ff0-5920-47ec-8e3b-61a21526d16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f14262d-9220-42f7-9c89-53d4efe6ceab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cd011c-1d54-4690-ab78-b2e35bad5b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab61880-bcda-41f2-ad5d-15c04ae2a449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e891b3-b92e-4426-961b-d8e72e221886",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da429d20-e2f3-4795-a289-05556db257d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5bb88d-ea30-418a-a4dd-9c09ed190d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7b2e6f-9fdb-4c3c-9010-a57a524fe131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "836b21bc-6ad5-4e09-9108-a880ad1b87d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a04f94-79a0-473d-9acc-89ee19bdf314",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92525fd-ad21-4901-8c73-c7205a015e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01704389-beea-4fa5-a5e2-a5f73503a3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee5da7c-9097-4fa5-b75b-157b350cffff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33524ded-fb8a-424d-9738-a5835d6e77be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6cec1f-b035-454d-ae94-37dad0c3470a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642de650-76d5-44ee-a958-d91a3e4f7d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ed6548-ea3e-4977-bb87-434725e67747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c45ee2-a43b-44c6-9fcb-b91219e9fb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e85f5e3-d184-4b06-87e9-e0ff47e8b717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942de302-48e1-4b7a-b5e1-534d2478d0b2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a94841-de66-4ca8-ae70-0a96612e7c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b12371-3019-46a8-8726-cbbdef4f3a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e79ddb8-21bb-4c23-9ac2-687e5a1ec3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c64d935-124b-4e9b-a43a-de1b29f1aacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab51f34-8d97-4b58-84dc-356c74cf17c6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c69ba96-45de-429d-a9e4-d5b0c115c760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294bc15b-b14b-43d5-b24d-4938d02a20b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8639a2-72e6-43d1-89f9-8ae51a43373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b57015-dc04-460c-b053-6c8762a90a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75055f3-821d-495c-8c0e-4c3b9cf66bf7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea63e47-e5e2-438e-8d25-365777a9d4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0971b5be-a7af-499b-9aa2-3254f0806cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0712b6-2c85-4f3a-b22a-9efe039610a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60e1fa31-dc4c-4546-b7a0-188a52dd8f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0daa67b1-dd02-4098-90fe-5696a30f2454",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d13ecea-016c-4ebb-93c4-2ac57faff09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfab68e-a8b5-41c1-a147-87d1bdb275b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ad7d0a-ef5d-4637-86af-f34a0a18dbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de252d0-67c8-4643-b460-4137bc2993f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19111f4-c57d-4c2e-9a92-d9bf31b6a4fd",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bb814e-39a2-4a9f-a94b-c982e4dbdd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bb5576-515e-455b-afec-0477043e4f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa87a96-2db1-4ce2-a7cb-ab243f1fec92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab92d59-9341-466c-a9a3-d74aaeee3789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6aa28a-bfba-49c1-b564-b32c1241fc46",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f3b03d-e6de-4893-8830-c20f02bc1566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373aec94-5227-4201-96be-d0345e887968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5465cb-5712-4c4b-b240-6bc1af2f0f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b409b95-ca6f-445b-8058-98fdd4a2755f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc2328b-a0ad-4423-842f-2417a479507a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d99fb36-7577-40a7-967b-2661515f6ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274801e2-808c-4d52-bc64-bd4efc47f76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68e92ce-7c4e-4ebf-992c-896e10f590c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0893ffd-9f29-4106-b95f-7f6f71df66a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d09705-03a6-4e1a-a8e9-f72453283251",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8157c539-319a-40f8-9082-52d3829b0977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f018fa-6104-4828-ac5d-10b1bc19b5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbaf47e-ab58-4ae7-ad2b-8c3c77416e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "392fdce2-fece-4d34-a713-40be3e7830b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d91e6a7a-f1f0-43a0-89ca-541db51aaa3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4493fab1-e83a-426e-8753-88bd7656ec7f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e921a8-7049-4dfd-8334-16d622cd54a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4bafcb-d44f-458b-9a48-3ba9678dde16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e14900a-8046-4f70-809b-ae3eec6fc68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64d5cd67-321c-4987-adae-c8e3cc9bfd2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59ede50a-f8f4-44f9-9447-da08fa5e3aa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7177103-0cdc-47d9-b4f9-48ea154253cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5caa95c-b2f3-47b5-af26-1c0675d9d452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1ddae74-eb1a-4890-9385-dcfc8bada028"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46a29eb2-eaea-4432-9f25-faa8bd828ac7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b9a5be9-409e-4917-b29d-398790c05976"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c068e8c9-432f-4068-a271-10da088b1ffb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03f3f1e6-e363-40ae-8a9c-603f61df4cfa"
            }
          }
        ]
      },
      {
        "id": "7e3202b8-38b3-4b83-afc1-28a028880ab1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "703b8cf6-9c8e-417f-9c50-07bd8702c165",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4b3304c-f235-4c5d-acbc-03bd2d2312fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "75cb48eb-b2b2-4af5-96fe-d458a62b7152",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71782129-9296-4e32-ae80-3fd65a916d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b762e3-c6d7-4180-b3f9-5b09b5ddf0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccf8a8c-478e-4535-8050-7fb1dd24c634",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fdd349-94e8-4a7b-a62b-86640cbb6676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db09195-a4f6-444b-b783-b1e55a2e0285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d140855-a8e6-4520-b734-13ae9d57eefe",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a55e51-d9c7-4a40-a816-b4d8ae04c18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019516dd-a93d-4c36-813e-58703f95eea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8477793-3386-4514-a91b-cb36a3c8973e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642dca52-b159-42bb-965c-55ad4830dc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39e29c9-d5a5-4bfe-a874-71569365b368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0939944a-9630-4d11-a288-3cf3e7653b72",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762db832-5b1e-434d-b580-b4203debf2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97868e36-aa5a-42b9-a8a2-7cce82e5033a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e22059b-5ec6-418a-9820-460a90c36047",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ea3e73-39ea-452b-95ff-4f2beb80efa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ca5399-f032-49f1-89c4-196ac217caa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6030638d-bba4-40a3-8881-706872a788cb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803b3c69-9637-4a43-8445-972ea78fb6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e4fe5e-602d-4745-84f4-bc88eb67f649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb5dcb6-148a-4565-ad85-823edd03fa74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a59f78-0b85-45a5-acd2-cbb46816bcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2384e814-8924-4d5e-b63a-33c4dc857278",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10451d7-d392-4756-b195-786e1fe7dada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "235dff45-4ae4-4f00-8901-219ea92fd2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7349eb90-682f-4fa8-9362-6ac89d423eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ff022d-19e3-46d3-91bc-7788e2d59f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc7bfa6-d76c-4b0b-87ba-5a71ffc8873d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beb27c0-a6b6-413d-8249-f1e861ff11d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "932dbdcf-63b3-4f31-81d5-fa1a4d06fff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efb00cc-007b-4493-a906-e08e45190a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54834494-4ff7-44db-92a2-a9be35fffffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ca0630-56ce-476a-b70e-e2b3b23c5d9d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139e9200-9da8-4ced-86b8-280ecfbda93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2d13c9-5223-4d14-86bf-d1d9e3b826a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc58bed-f52a-4fac-aaa2-89fba7ab145c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed96471a-8354-4a99-a540-2de843b892ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cd94da-450b-42d5-ac98-2d8bdd236428",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a82367-cca2-48ae-8274-46fd13d56df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e345f6-5939-40af-a94d-1171eae5b2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921fb952-d827-4ace-b657-272878a0b60f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e345c43c-723c-4c81-95e4-8bab2485a4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b89c04-ca4a-4b9e-82b0-3270e6641a95",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10155033-1d74-48b5-91da-67c5401dad43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02500375-e582-4ac2-be4d-0ef4ed70f8d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155bba65-0b93-42f5-b9d4-2c775301d054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a531e5-138c-4d4e-9dfd-1d669de8a3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db630dc4-87c0-4df0-a835-cb3930ad54bc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82123bac-e0a0-48c8-ba91-f7f3ac99aa92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bc0a2f8-8098-4114-b774-ffecc5591aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f03e23-470f-4281-b5d6-0ea9f22ede02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a74e84-3d28-4643-995d-80cd48b52f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec32e775-2754-4a3d-b7f2-4a9572bd1ffd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc48c930-6936-499e-baf1-90e6ed62be31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e949c8-21ba-418b-9b37-eeb1bf455d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29aa66b-0644-42d5-a2ef-e1a864aceab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce65d377-717a-4a25-aea6-9f937a9f1b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee9962a-3b8c-4bd3-9f5b-fde206dae073",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0ae0b7-b1bf-4f5e-9281-619e6596dac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c222b360-08c0-4a56-82c6-8c525c3528b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e3b8bb-f611-43dd-a6c3-0d72d7a4b10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee2db5c-8ab4-4dbf-830e-173c125b6696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3808c70b-f652-4c86-a609-3799334aebf7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85f07da-42d9-4f0c-a66e-387aefddaccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c92d3f-4873-477b-92e2-b07264cdbc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b019d4a-fb90-4f48-bab7-14196c7916ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70c7822-7045-4529-8335-44f5c497eb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb72afc8-1f28-41ed-8277-a0a49149d9e8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66e5bfe-2f44-47db-9079-65b0098d2ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2db66c-10ab-451c-9904-febe855cbbcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aed2c6-c2f8-45c0-8eef-b820fb135b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4018170-9c76-4d01-bbe3-59b94194be97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f866c1cb-d7a8-43aa-a709-efe609b2dd9a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c426729-c5fc-4b3b-9479-10bde3c65f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0572a97f-8745-4c9a-b357-842951f020aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c4e55e-ac6c-45a6-bde3-8d3f9bde384a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae9dd3d-ef18-4e0b-a6cf-45ea24b8c099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fc2045-acf3-404b-a656-05ac1b4853f7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1f5c2c-29ae-4c6c-8d1d-f7d383d2eb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef95d5ca-97f4-4bb6-949f-42277527af00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe6e45f-c79e-4593-b74f-d1c14799afaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205379fa-3086-42f0-8501-89e1e291c7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1f0761-9278-4cc2-99dd-d33d064ac7ca",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99796c4e-4556-48d4-b663-b1b3e10a864a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f63c912-4291-4576-911e-cab667f6c40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4415a6c0-840a-4e04-b49c-eeb9b55d66e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd60173-9521-4648-ab0b-b7186e66039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21490e4-2217-4766-850c-0d9c019bb9d2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e45e167-df69-4c01-b51b-ceae7ecdee83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d705b6f-dee9-43d4-a454-32d53734e8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd786486-df75-45e1-872c-142854277ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2d5dab-a86c-4fd5-b87f-15e74e2018f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41f745c-61c7-420a-a78d-f9b426e2e2a8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc77e48-6395-4fca-9059-216c473175c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4947f3-588f-4afd-b373-3c1e9c43daa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24a5379-68fd-4042-8414-ec6648de74e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6091309-ae8b-404b-aa8a-5e971eedda31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fa85d2-922c-4780-af58-3e8289155110",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2085ae6b-46bb-44f8-bbf4-0624e1fb4b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306cc02a-dc35-440f-96de-e05bc71c7443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7df18bc-ab9d-4740-bc0d-c14817e0e6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0caf06-b159-46a5-a303-c44c3cf1a03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03965485-6153-498e-b4e5-d4ce77d05400",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f3754a-73ab-46ee-8a14-c5ec63cea32c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2cf507a-4fd8-4ed5-9949-eabf53cefabb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50d9d86-3a6b-4a55-9b49-6294c3dced51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f58cdbb-0870-4558-b97e-5a1708b1272a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2aad1c-f245-402a-8c4a-273ac0bf99d9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3968904-f1cb-4002-acc7-e13a19805393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6f6ea4-822e-4cfc-afb2-17040dfbd12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41adc3a-bea0-4af2-81d1-a819c2b6aa0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ce51a3-1f6f-4b79-a432-cf176166c2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48199f07-c8cf-4f42-abdb-9145c4d96062",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7efa337-9bc6-482a-9df8-8645ebe9d251",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1777274c-bcea-44e1-a821-86502691d9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a0d6c4-0dde-4fbe-941f-365a3d6b5ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbb65fa-f80e-4ed5-8803-bf4872717721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5f3335-32fc-4aa2-ba2c-f5c97285e6e1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134f210f-18ab-4370-bf74-c98ad0f6e2ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db5a68b-0e6e-4eb4-b07e-b8766ff8aa22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e879a518-f64e-41b5-85cc-717a06701d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf07cae-1708-44b2-83f7-ea8964b6a53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f314a3-8a85-4a30-a5f1-eebbd9b4e3f8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46b49f4-25a7-4083-97d7-0a0b12c4271c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcfabdc-141c-4acf-ba93-f4dde970f7f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b998b67f-7a8d-4c69-a0e1-4812233480eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa72d88-8b63-425c-953b-43173d231a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a24f64-99fc-4d96-be7d-1b68e7d1beb7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f424c589-6382-4da1-ba16-1accb5eb68d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5252a762-72e7-4ebb-a86b-ba773a2a9a85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37897e7-2408-4e76-a200-d81948ef3290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abab686-499b-47b3-9b7d-8971583e6bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0825c1f-4aad-457b-a44f-97366b697bc9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663c6377-98cb-4aa3-8ada-dc4313b5240d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d94087f1-9c23-427f-bc58-90bd6ab52df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe1ad73-3e6c-4721-8a42-b8e8f97d6334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702a3c4d-bdc4-4f10-9bde-0e02f1401d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a199a68-0f71-4e5a-9247-1997ce7ef63e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c56d14-cfeb-4887-953d-7809992abf14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9878fafc-9f66-4591-8119-2099c7ea8d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ca6e2f-ec64-4cbb-84a0-77f005d23b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25219c0b-5b98-4577-807e-f24fda8e9074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f5286f-81d7-491b-847e-b351903eeec1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da6e98b-5cdd-4b86-9fd4-04f62a34ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb6ec16-69b3-461c-881d-b1b054a7d50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d17afef-6bd5-4d3e-8efa-7266dd6de587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7412b1aa-935c-4c45-8df3-2ea5b50cea3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385d506b-a954-48d4-b37d-36cdcf5a024f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291d2c28-b073-4514-ad36-632d62e253cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c23a2fa9-e3d8-45dc-b73e-f654bb2c43ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e38dec4-8356-467c-a665-177032bc2af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fdb714-4f89-4220-9dbd-6a428f5a0061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc8dd1f-45b9-4657-9407-92be81f3f4a9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff5ffd8-26eb-494b-b818-2a7b29c65a34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb89b599-2d7c-4f8c-8c48-55311ea135c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c60a759-e56a-427f-92c7-0adbe455462b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c4541e-4f9d-4842-b0bf-0cb619ed6c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46aad233-ac61-4a04-a7f4-f94921d7ce37",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0139aedf-e7d3-40f6-b4ba-c481e24ec8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd058d5-d1c8-493e-824d-4a7fa3fc66c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86594324-6175-40eb-87b3-a09737415d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d236e72-10e2-4947-8018-4ecc3d5ce265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fcc22b-eab9-4e11-a828-3192a0e5414b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d7550b-089b-46c2-b8bf-a37eb30d6fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b54bc6a-2740-4003-95e9-0d13f42f066f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65da1e8-df67-488a-ac1f-b837dbdc5ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338b7c13-759d-4331-9068-9087748adf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41754cea-a5bb-4d43-a55a-f7ef65f17431",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ea0fdb-a80c-4bb8-baf4-b2d860777118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e810cbd-69da-4353-bf0d-54603cc2ad58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515e679f-28c2-4364-99d3-98e85b9a11ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2717912e-bcd6-42e4-b2d9-5e536946f44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c53799e-1677-4335-876a-d45052fab72c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef964ef6-15a0-4697-b71b-7918c417262a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a5b291-5466-4b46-b3f2-9da63f9cc279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b1b61e-fa3f-4457-8844-46d9a7e292d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8253bd-13bb-48f3-a919-5299589cbc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f274d167-ea2d-4092-abbf-3b72909f3554",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bd3183-2db6-4d69-acce-848c24f57604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b56a07-d5eb-48bc-8ab0-30ebf5a24abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9f45e3-72ae-4388-b4d3-d3a7cb7af06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6e8747-511a-4091-8bc2-2dd07ac8cafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5d6c0f-75eb-430f-ac3d-ac6f8269c906",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b98a015-7bd6-4639-894e-38ac4288ea58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1baf8fce-afd7-4d77-9a48-95feffec3836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4690a89-1fec-4255-9e66-f4de5315bb61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce08050c-1018-432f-965e-34253d2196c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7090a3fa-6d04-4ecd-bd90-51113dcee9b9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71630a2-6234-4d2a-933f-669267b142b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61dc449-892d-4857-918c-08da8ae90091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbced65-2c22-4229-8eea-0a5f4fc9d2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fbd114-aa80-41a5-b46c-f9e427ec7dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e12d69-d4e0-4c24-9f60-2fcae4f0d142",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601d1f7d-fb6e-4dc9-86d1-5104f899a456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d51a0d6-e2e3-4113-abfe-d558d8d80680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23124fd7-09dd-407f-a9c8-55a5eb7f5295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af44129c-6f25-4631-903e-df27cddc6e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8d349c-0ac1-4bf9-bff7-7c51a9c7ef06",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7a4325-008f-43c3-993a-a88ee03adc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0d8a0a-705d-4700-8e94-a983af23cfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23468432-fc61-4e92-b8ce-0a35d16d82e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1258ec0f-68dd-4947-afd4-776817087bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029f31cb-8c79-48c4-958a-1706f2eb1d22",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf72ee2b-49f9-49ed-9c44-9a9d6649e8fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81b3b0c-0dbc-4357-b7be-c49d445daca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeabb7f-1ec0-4642-a689-1f8ee0cabad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d90a7d0-bde8-4aab-953c-b05d6fda5d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9628e96c-f9f1-4955-87f3-0414d52fdcdc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885d16ea-4ba3-4ad0-b212-952fc17603dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4468d23-1e69-47c8-9bd7-bbf533754439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "874d1e79-b4f4-4030-93af-be83ec548c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d4ba50-5fdb-49de-ab54-c94eb3e5c067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50221204-ee77-48e5-b73f-d77e355f82e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77b267a-957a-4ecd-9a89-90c8d701f016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db70ba3-e354-46bb-b150-cb6869d1fa79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1927dba4-9f38-49d3-9b6b-009277a7600c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952618bb-9fdc-41ca-8feb-6f0b9342b669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb62aef0-b677-4830-9388-70e5124439a1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a58459-d2c3-4864-a329-f22131bf6a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ea5a42-d1b6-401f-87c8-35529bed479f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "400c1a83-e087-4140-b7bf-287c07cb1317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f067056e-6060-493f-9567-93d2074a8310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d55518-bab1-4f44-a4cd-c8a9594f3532",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c21ac7d-f0cf-438f-9bdf-52542cf76ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0cea18-6320-4dd3-a3ef-ed8778142b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c896594d-626e-4718-aea9-d7db641f656b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabbe5d4-ee1e-4558-a883-bbfca7f7fa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e35838-00f3-4d40-b3ef-73f91429ed24",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9544e6c-530a-4851-8959-ec7b62627981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7157faaa-22cc-4d64-b5d0-280cfeebcba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e36c29-f52a-431b-84c9-2ac501075160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011f2a91-62de-4aa2-9656-5bcffe82d8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101c2881-2fd7-452d-bf3d-a527520d061c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90323ebf-9845-4dac-bb4b-393267182178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd3a87f-bf45-4c5f-adbf-a9cb0f4ba1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1464f9f6-0b58-4c44-9ed5-e304034e4231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb221a4-4aec-40e4-b41f-d09d42e5ce42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059c061f-b714-447a-9e14-f40a1beabdcf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11452535-7d2c-4d8c-b680-e89736d9feaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7473c178-c24d-4677-b31c-314cb2b8cb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a14d0b9-dfbc-4fbc-b535-7fd7ac1a60fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35cd6b7-52eb-4822-8abe-7fb87552d77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa9877a-5b0a-4ac3-9494-34a0a48f91c5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765fff6f-788b-4419-bb0e-261ef1c73a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94680f6-ff74-4987-a23d-aa62f2e20510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb011512-1634-46f1-8748-aef5b8514307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032356a7-1148-4dd9-b47b-036e01cc3543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8da8ae3-7bcc-430e-95d1-b4c30129efd6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40626a79-07f8-4e77-bec8-2048a242a807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1536bb5e-f403-419a-96a6-13969af06214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019741c2-45f8-4759-a651-9281e0d910c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a3f9bd-17f6-499a-a30b-530ac51c6604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3306a51-51be-4fbb-84a1-183498a53fd8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a75c26-b70f-4530-b510-ea08a9940b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a846a03b-edaa-46fe-8b82-a48155c96433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb66dae-41dd-44bd-8081-4aedf514269d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4532ee0e-ecf7-4090-a60b-4661d88ce16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67fe306-67f4-4982-87bd-8e6b1fdb9213",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942b290e-799c-46ff-9c56-a70a0e5f1988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dee1034-f55a-4405-95df-80674d2632eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43bad51a-3a43-4030-ba96-bea8386a2d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039bbf7e-12fd-4bbe-922f-04f5dc579373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a503110e-f158-4d08-a599-69c1dd5d3a11",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95897ea4-5b89-4d5e-a469-ae46e73c77ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182286ac-494e-4eef-bb78-d1b8f13ec56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53c4175-2cbc-477f-95ca-139322592efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af24403d-2b11-4492-a208-f9b9d3a357bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3c447f-b582-4c64-a98f-66f81737d0d9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eb1ff9-0f73-4283-b6ad-301a1e1c1844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8951c007-bd1e-4844-9819-3ee5406e592a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637957eb-f897-4563-80e4-8909d6c7eed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b624cc-1a83-44b4-9727-61ea4d2b7bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f093c6d-ec4f-49e4-9373-e1cf43f423ac",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b9dc9a-5100-42da-9081-e60346301966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ecbab9-cfe5-4a95-b8e4-b802dd7daa89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209f2330-78ba-47fa-80ef-09d9fecf62ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ac4fd3-b2c1-48b8-883d-dfe44f4a03df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eac7089-8862-49f1-b96a-4f2082547971",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc85e1cf-b635-4839-a984-fd140a4e29d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40c24dd-c31a-4bca-8a2c-f980a726306d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c3c4d-803c-47be-8962-50ebfb85f4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f10ee40-7d8f-4924-b1b5-7880c7ca2115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dacab97-7e9a-4868-836a-e09615898296",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94e89b2-cc06-48a6-a61f-b140c9c791e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2abd8f-9a11-4a2d-9000-840b13ee21b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac567e49-bf18-4d08-901c-a331a97b0be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32c6703-beaf-4bfe-ab94-acea7135bb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9674e48c-017c-4bdc-93db-5ffb9f325aad",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda5a0a0-452d-4b8e-856c-81b1e7cdf757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afde1449-051f-44ca-ac54-d41902aa8c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894c79ae-a367-4f26-b93b-d40294ab2236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2c2c1d-9cc1-4b15-b4fd-7a887536de6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3bb0be-a053-4baf-980c-5655b3e883b9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269218f5-32d1-4219-9be1-76a94847d11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21575cb1-eb91-4bf2-a236-8719f0592a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555fc90c-ca8d-4ce0-812e-380b4694d56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502baa82-29ec-4203-a88d-404309b3aa92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dfb797-5cc3-495a-908b-3f6f3e823c1e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea38cc9-7375-43e9-b819-aa3359d60acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dffcf6c-e7aa-4b4e-a10f-6609c8839a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c5d5e4-2e12-4c0b-9d04-8bd977b7df25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ce74b0-a3bb-44f8-b802-52a0e03192ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d729661-fc0e-4e83-9d9d-3a66a66b1adc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf28f93-8bc1-433b-a624-4c0fcc174b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f819ed63-5e60-4983-8b5a-93f6df48e191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbab0df-44b5-425f-a770-bc3f51777d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895bffad-d5d7-4ec1-8db7-baca7efb2e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2031bfaf-318f-471a-afb0-8df57c075472",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e8117c-3ec6-42ac-b7ed-f511f97f2c1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bcd09b9-09b0-49db-9bc5-aa442ef3f19a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7d387f-6eed-4902-940f-dc52c7f4d14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed97bb68-ffa5-4f55-b4fb-d6693956307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3000cad0-4841-4559-80a8-6caa3f5972f9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f077ef5d-45f2-43da-a2e9-c6ce99b3fb06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bae1f471-6a8d-4815-abcf-4419f0e2d29f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae380aaf-946d-42fe-afb5-8ad38caa6df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166f91d5-3940-46ba-9ee7-70573f9231d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff6838e-fb80-48b3-a358-cc9d984ac3d5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712082d0-3cf1-40b6-a96c-9fcda3a670d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77c764b9-f018-41ba-8dea-587d52641029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b7e47b-02e8-41b2-b520-661deb1ca060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ceeafb-a157-4de8-85a9-28646c6c8e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608129d8-0637-456a-bd79-70b3bd565189",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e68bb1-f4a2-4f83-a6d6-305d993b9ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56931fa-1bca-4283-a609-d51ac5d41aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988837b3-e9b2-4628-8350-fdd133e52bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfb74ed-e153-463b-95d9-cb49ccd88197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f525cd5-4dab-4310-a5c1-05b490b52d7b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9012799c-6d7e-4206-9a97-267fada4bbcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf3ef1d-3895-490e-a638-e74df3f6291c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23ec5b8-6e6a-4f84-8756-8e1eac7f11fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756d83c6-e81c-43c0-a5e0-9e8661f2113f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35071e6-fb91-4cad-ba84-8b5907cd99dd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109eac8f-4cad-4f1a-ba1b-bb5a30e4ec69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "544cb517-ac7b-42dd-aadb-229ab3fdd8d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531598e4-6e18-4bee-a109-cfa9d1aba0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbab0e7-e074-455b-ae4d-fec1aee850b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23424ee5-eb2f-43c4-bbe1-850e1ee8e088",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6967247f-32a5-4936-9915-d3185df0aca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e8a0bcc-c7da-4abb-9c42-08153dcd23ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15992b9-0ccb-46e8-a6e0-2ebdde2bb743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab2cad1-3824-42db-8cdf-b7a7a5b668fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206497d0-23f8-40a3-bff1-e81eee366492",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee90dae-d356-4f9d-8c56-1175e0ff05af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb8450a-78b0-4d98-8ade-5ae4e53aed36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1298597-2257-4f02-9eee-7090ef057cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ff7f7d-6128-41bd-ba98-b9966eb9a38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737dbe38-134f-438f-a5d7-a5567df09de5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d2514e-7584-4edf-a890-817d4b59bbe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6a013b-1b62-44ca-a477-64d20448c5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334800b4-4a16-4e0b-8367-7ccb0008b8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2a94bd-7358-43e4-91e0-daffe6b324f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00718c5c-c030-4b0b-bd36-50371a00fbc0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22ce5c3-38cd-4b7c-b047-64405edb044b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc76eeb7-54d1-48d4-b9e4-ab8ea5ca26a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1307bbee-b853-4170-96f2-8e234252f527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0598cb9-8496-4a98-ae73-a0ffff252411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8d421e-5325-428c-a487-b23329d72cfd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6fe79c-efd7-48de-afa7-46e1784cc255",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8227e7a-7469-4044-ba4b-4a03b3899985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7664d60-bda2-445e-bed6-9e950f899659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcb17e0-0073-4afc-929e-c68fd13f8b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10acef2c-7b7c-4003-8f36-71a3bc4407a8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c80a4a-be52-4d4a-b798-761c885d9319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e152242-c5db-4dbc-9284-67839fa2f1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb26996f-072d-4e1e-a184-12bbd418d8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a066779c-df6b-4160-9d5c-61a2ddffea8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c206cf6-6949-420a-b91e-9020f47baaa7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18e231a-eb17-4166-be60-74c6afae9099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "837e6e95-f181-43f9-87fa-fc826afdb2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b59a3b-1c8e-401e-88c2-02aeb120132c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fd6724-3f81-432a-9e0f-aa3eb73cb627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637fe7ac-840e-4fbc-a25b-4cb419dda3b8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f583fc9-07de-4081-a285-4bb2abd1c1a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086e552b-b880-4567-9484-a81ed570185e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3ac8e7-c396-4612-b7c8-001d7d98f8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2bcf5ef-b393-46b6-b7fd-b41ac8af7310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccef476-ffaa-42ed-9470-068b811cec58",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f9ead7-0b8b-47fa-bd66-53fcfa5942c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e5787cc-0b15-44af-9967-1f3789c0ca3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1915b21-5591-4a1d-913e-b41f5e1e4894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e508fdd-0182-45e8-b7eb-5fd281c8e03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a38c50d-8505-4bf6-bd6a-7ae81e7bdd2c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5d2905-7593-422b-8880-a88d9e11a743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01698c4-d02f-411c-a451-b09bd6f01a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d73c31f-5114-4853-8fcf-dfc4bb6b57da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bdd77c-4e9c-4067-a1a7-8ad3e0af3237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415fa567-09da-4c60-a747-a2bcc73f7893",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1f238d-ea88-4c2f-bc35-30709cd761e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b07b5ae4-5a23-40ab-9fa2-d57f94214094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fe1cad-f720-4203-8fba-8c8887865bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aac69d6-5bc6-4420-9c33-ff9d5ee9388f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9993f4b7-b67c-4560-a20b-983ad19be717",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2b95ed-d477-4cb5-9bef-ccf522b9fadd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4032bb80-e781-49cf-b13c-c497299f43c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e60b514-f4a6-4b11-b9d7-7ad46d36b965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8522572c-9fc1-4e53-bfda-34c35d43734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26709e3-f10a-46a1-ae91-c861c7f415ee",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c9f31c-cab7-48fe-af38-ab7aa57b0c2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436b0480-95f9-4828-855e-1dac5dd9d449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcdf83e-69ff-43f3-9965-ff29d2ffc14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf4248c-7e00-4ec9-854e-76124f55ffab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151c2e2e-4a2f-4c82-a01a-0820d3b10f37",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf682e27-e4f8-48c8-8485-6fb2e7b17276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "355808aa-5820-493c-b81a-e14a0ee1be4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ba3fd3-4ec8-4944-928a-baece06bc62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f56d91-78df-433c-8c86-250b629b7e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b6a72e-444e-4d50-9954-a0ee6ddb8e97",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726f8c25-f2b3-4cef-b13a-a5ff7ce6df1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce467f6-215a-4446-836c-3332d6165518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26ac441-e6e2-4263-af3d-4840e141c074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13911be3-989f-40d4-b50d-c8498c635c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be572b09-b93a-45d1-9a8f-5f09b3304532",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151f7edd-d143-45ec-837c-99a797b2aa97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cba13b97-57c8-49be-8049-1675c448e9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2919bf-3748-4a0d-83fe-11b4b9ba4b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8766075-7bec-4b60-ad96-2f4e32b20b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4153fe-392a-4aac-a979-5e9ac3369e88",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec5b451-6260-4647-9e18-6ddcefddc5a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b0ece6-efc2-450a-9dc7-3f2e7ae0ece0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7292607f-2745-4b2f-86cd-bc02b2ec3400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984716c2-8196-4755-8212-23ce1da4fc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262447b9-c892-4dc3-b00d-6f8ebebf65d7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feed794-d099-4289-977b-b08096726cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fdd8488-6bc9-46c3-b670-138e32390f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ae6101-3cd3-4e28-925f-272ce6c94a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a10fe437-5312-4b5f-b769-c5364b4bb35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d3dc89-642f-4697-8b4d-a499d0fa36ab",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f97636c-567a-4585-b524-d70fbe05b002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a28a60cf-0e48-43a6-92b8-23234e34eaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a5e313-7c32-4302-bf44-7a764af1a3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e30c39f-2347-4c20-9bff-c8f2c752d5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccd64a5-220e-4e0c-b8ba-e073ce79dce5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05f6fc4-105a-4cc2-93d0-5f43526f1719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496d3f87-ef41-4660-8b06-86e7b1b74976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c3e61d-4496-4f68-8a5f-e99afe393e21",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7799e592-caa0-4abc-b625-e8301004f4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7b6f6f-936c-4a08-b07e-ed903340093f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b79844-a006-44aa-bd6a-298cc9d9e998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da885ea-e85c-45a9-84e5-9e2c7e99adc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544be21e-9e90-4a19-82af-d69d2f4f7ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8c44c4-8e85-430d-9396-e05759798090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59c82e0-c434-4dc0-be12-71f5d87245b3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fed588-a6de-4375-89ea-03111d70be38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f954cb5-a46a-4ef6-b5e5-b361973e3e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08c12a9-8ee5-4c1d-8575-c2b7462d8ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fef304-e5c2-4820-babf-3d24a2e3f1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d96c17-218c-4df4-ba1e-1dc0e085a2dc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cef5ff9-7611-4893-a163-2e2b4b9fe078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6910f687-0b3b-4727-9eb2-39cac84e880b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b65015-4aee-4fd6-8ae1-0efee598baeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2063056a-23f0-461b-919c-bd6e73ab8e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e91e104-f8a2-4fb0-9f79-e77883c080d7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4e57bf-b7d4-42b5-a27a-56c4ffab181a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a92c57e4-fe52-47bc-9650-43b29f4ce05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6345bb53-0f03-49b5-8c81-c6b3dfb782ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43950e8-8ad3-4532-97d4-d4047d8d30d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93683eb2-ab40-4998-9345-e6550c2e0e43",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418e3c57-335f-4586-8ada-d3a64dee67ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd76a7b5-096b-4547-aed6-b603c0db37dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd235a69-f4a3-4b5d-9b23-f5350be3654d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca08832-fb8f-4d81-b712-08df55de1120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010327c7-2460-466c-a1dd-93d330a8a88e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c237c8-ae27-44c1-b145-78e330fa2a03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f344c31d-e13c-4849-8401-a849c3d43f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae05c2c-14c5-42ae-8b4b-4ce768a7e6d7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7473d17e-4715-46e7-b131-d4c4f89fa274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed2fbde-0a13-4158-9560-3280f222e069",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1754cd75-d372-4759-a406-f5c9d5ca19cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97176450-5928-49a7-9a51-f699d1488f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcd4a24-9f5a-4c60-8927-9da15b104cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5350b502-9eb6-43b7-92d2-aaba9942cdb6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d6aca7d-883e-447b-bcdd-9a32918ea5b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7a7484c-9a39-46ba-9590-8f2f69730de6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b73c2e4b-a0f5-4878-93ea-00a4d3212d85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41ab703e-f632-4e10-832f-2cf1b12002fa"
                    }
                  }
                ]
              },
              {
                "id": "28d7cef3-bcd0-4b27-8800-4e157d006682",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc60ef0f-792a-4ddc-bf9d-4d7150dabf84",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104bb425-637b-4886-8770-0b5e4fedab1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9154a2cb-1958-4d50-9fe2-323095bd5575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a227ea-90cd-434e-b605-f148b53e0838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1caaf962-8efc-4f9f-81dd-578387408c15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08e84bab-1640-4840-80b0-cea1d1f4bf9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d88ccf9-7dd8-48e3-8d68-5b548d2aacaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bd78248-86db-4299-94ea-62e0db2b28be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28f25189-74a5-44af-bcc7-b473bc8872f7"
                    }
                  }
                ]
              },
              {
                "id": "b005a551-59d8-4504-bdbd-ceec3f5a301a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "848ce2fe-28b6-4a9f-9baf-cfbf29f68bd6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1168b3b9-8f03-423d-816d-32898ed94c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2738fb03-45de-4fb1-8568-2828a33672b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5eacb0-322a-4ab5-bf6b-e5b487b8660d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe88a8d-179d-4803-8076-d39bec99fbb4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8780d3df-7d13-42d5-aa1d-d81204797c72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab8f01d4-97eb-41ed-8b33-c4884b6af131",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff5cbcbb-19b5-4e7b-aaf6-deba5ff4e9a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30496a3d-92aa-4cac-acf7-faaf2676a2cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce94537b-54ac-4fcf-8d02-d340113d891f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef5ba42a-78b1-4912-b633-3287d852841d"
                    }
                  }
                ]
              },
              {
                "id": "680b5719-0e04-4c7a-903e-6497f6fe8bcd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7db0abf1-9ba0-4028-944f-9357240df8f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "82919bae-dcf1-4ddf-824d-3277ee0bdc9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ca9f2ab-fe09-46e2-a97a-1b7733e37ebf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "350dfa87-e4af-4d7a-a49b-3f1a103408ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77e00c96-6055-4ad6-aee9-aa6b770bd830",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "72cf9984-a308-48f0-926c-f9071432697e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16eff07f-76d8-4cb1-8934-beb032dcf72f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18f5161b-3c8b-4644-8146-188aa70b8b3d"
            }
          }
        ]
      },
      {
        "id": "7edd0173-61b1-44ea-9a4a-2b882d156b43",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "43cf6b14-f9e6-4291-baa2-0acb733c4ab0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "325020a5-46f7-47b9-9b52-02a46c6fd4f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62796ff2-4246-4dbc-9772-780335432bf0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d9b1f4-f35b-44e5-bea3-7c84fd96bca7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "19e72ed4-b99f-4f1b-98d0-fc7092e11abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2909298-c28e-4d1c-a2b3-66b11a5305b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31eff9f8-eab8-4135-a946-c6787dc25d5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef4616ed-6508-4ded-be82-b155eae3bb0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b5731eb-b138-42a4-925a-eb5d327f252b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb60de70-3864-497a-8383-2ea9f4deada2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3477120e-4106-4328-952e-4f96a47561c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cddedea0-a9b4-4b3e-8afb-15b20edd7f4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c6c71e2e-8199-4671-aaf1-c5ff924364f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94e9ff4a-fe3b-46fa-94ab-aea40c19a525",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a952b25-12ce-4a7c-88d5-421e6ca205e7"
            }
          }
        ]
      },
      {
        "id": "5a79aca6-f985-4ebe-8033-1bc281516d3f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a8291aa9-b6c6-4113-bda7-ea0a815579e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1dc1773f-39b1-4909-b3c0-55dda7461e38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cafd647e-01b8-4d70-bcd7-42286cfa6430",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34ec33d-04f9-4b9c-b69f-522b03eadec3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c64110f0-4f9a-482f-81b2-0d83da249816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ee3872-a780-4dcc-9c9d-bd6252d2b23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63b6cc1c-efbe-4612-8bd0-42a326d080da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9732888e-6e4e-493e-af87-e4f7e5e789f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b104bde6-80cf-45a5-8ad5-cc033916ae23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "968c8c8a-a69c-40bc-80af-eaab40155037",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "442532f0-ae2e-48f1-a819-8f12495164ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ca46e19-77f1-4ebf-8da1-dcaa9d34e98e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3af372b9-f62e-4132-bfee-3a5f594624b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a1f26a1-76a3-4a4c-9267-34c10719bf76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddc008ad-1b76-4a43-aa96-a968f2dba181"
            }
          }
        ]
      },
      {
        "id": "8fcc5cfe-b607-4999-8b62-16e1838866c8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "78feefa7-101f-4751-993b-a1cb1aafb856",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5d9f0f8-c132-49fd-a528-c76da9a98c7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1808d19b-56d6-42eb-8cee-35074c1af938",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149d047e-f924-45f0-a053-2678c71f9482",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25ccdd45-5816-40c9-816e-56146b0d6f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606a8479-add7-4675-b9a0-85d921ea6f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2bba0d3-2429-4eaa-b35a-8607c521eaeb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f0fc806-dca3-4375-bf2c-5869c3d2bc4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc68601c-a121-4f78-ad5e-c45a4a125a90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "699eab46-16bd-496d-904b-d5c6e6d63e4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dc11386-96fc-4a65-9d96-1104ed3abb0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9098a754-d558-451f-85fa-e355f5872b09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3a75049-9f6e-4fcc-a08d-ce3ac38f3f11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "373673a3-3d20-4395-9099-68e5cec02cf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fc772e5-f19c-4894-b8a5-05d1f4fb27ad"
            }
          }
        ]
      },
      {
        "id": "f0e9a9b0-970d-4599-9265-b69af59f13b5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1f75ab2-fea1-4079-b3ce-767c023bf3e8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a494b51-62be-47ee-9b2b-98b7724d8ec7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e089cefc-adeb-43be-99a8-c4a2cd401ccb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57264d18-baec-4680-8a09-2e472952f4b7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95031797-40e8-474a-9b95-748cc6e7a31e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 149.56491228070192,
      "responseMin": 11,
      "responseMax": 8931,
      "responseSd": 719.7385881416113,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709426167407,
      "completed": 1709426219182
    },
    "executions": [
      {
        "id": "d463bb4c-ce0b-4612-972e-1607c761ebef",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cf49e224-1593-471d-b965-6d04633ed32b",
          "httpRequestId": "dc56674e-a40c-427a-842e-621ee790d222"
        },
        "item": {
          "id": "d463bb4c-ce0b-4612-972e-1607c761ebef",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9b92b884-f2db-48c5-bafc-2a44686a10af",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "1912b284-4574-4848-a91b-0b847cd01b0d",
        "cursor": {
          "ref": "b775a828-6fe1-4f3a-8fbf-ffb455f4c27c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "806be261-4ee7-4a24-bce9-394e5147498a"
        },
        "item": {
          "id": "1912b284-4574-4848-a91b-0b847cd01b0d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e91f1c8c-eb66-4f7f-ac19-99d33d1f8300",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "d5ed8d63-c568-4a4f-9628-11f1fd1d91d5",
        "cursor": {
          "ref": "349c2abd-daf8-43a1-b180-95cb9eb0c04a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "43d242e2-9ded-41bd-8090-4f0728cc9fdb"
        },
        "item": {
          "id": "d5ed8d63-c568-4a4f-9628-11f1fd1d91d5",
          "name": "did_json"
        },
        "response": {
          "id": "b1afb239-42d7-41fb-bdbb-cbde31254fda",
          "status": "OK",
          "code": 200,
          "responseTime": 279,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7246f4b1-f780-4e08-9990-dae4f208c161",
        "cursor": {
          "ref": "63e1d1d8-0b60-4072-918e-6db5c57809da",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "924dd88e-63c3-46d7-bca8-a2bcdf92ee7f"
        },
        "item": {
          "id": "7246f4b1-f780-4e08-9990-dae4f208c161",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ce0bd19-4012-4328-aca5-164cf23d1568",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2398,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7246f4b1-f780-4e08-9990-dae4f208c161",
        "cursor": {
          "ref": "63e1d1d8-0b60-4072-918e-6db5c57809da",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "924dd88e-63c3-46d7-bca8-a2bcdf92ee7f"
        },
        "item": {
          "id": "7246f4b1-f780-4e08-9990-dae4f208c161",
          "name": "did:invalid"
        },
        "response": {
          "id": "3ce0bd19-4012-4328-aca5-164cf23d1568",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2398,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fee6946-6377-41ff-92f7-cdce62d38f98",
        "cursor": {
          "ref": "30a4d789-5516-4723-8c27-a3c8f2ca588a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "81e30cec-9183-4e29-ace0-8b113ddcc4cf"
        },
        "item": {
          "id": "2fee6946-6377-41ff-92f7-cdce62d38f98",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eb31a41e-d848-4e93-bdbc-98ea90c4a8cb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8973a72c-1a22-4810-b9f0-e3ded3b60cd4",
        "cursor": {
          "ref": "5af987f8-1711-4ade-9afb-e0fd30836554",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "24f73dcc-9e28-45dc-a477-f8bbacf4609f"
        },
        "item": {
          "id": "8973a72c-1a22-4810-b9f0-e3ded3b60cd4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7db0f88c-a57c-4176-8d66-ce1691940100",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa13bff-8e19-4abb-902f-df5add93cf25",
        "cursor": {
          "ref": "c81e301a-ac6e-41fa-b9f6-42355fd614c2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7dd4256a-1985-40bd-93ce-1ecd4b04afa0"
        },
        "item": {
          "id": "eaa13bff-8e19-4abb-902f-df5add93cf25",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b6102499-1577-48c8-bba7-ef043c28dbda",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607e3694-eb5f-434a-85d9-5344ebb3c113",
        "cursor": {
          "ref": "a70489a9-f822-4fa3-aba3-45d5c86ac5c6",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "521727fc-24a0-4e11-9997-e29494d523f6"
        },
        "item": {
          "id": "607e3694-eb5f-434a-85d9-5344ebb3c113",
          "name": "identifiers"
        },
        "response": {
          "id": "74d08090-42de-45ef-8b03-7a931737c35f",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45be1d4-83cd-469d-b362-c87cd003b153",
        "cursor": {
          "ref": "d13a6211-149a-4ff2-9c54-07ae2a32ed58",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "33d53000-a9e4-4575-a8bc-2d8b266ad64a"
        },
        "item": {
          "id": "a45be1d4-83cd-469d-b362-c87cd003b153",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4e60110d-dfca-439d-93c3-5187704db91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b49c56a-4b05-453a-acdb-bce68515ec03",
        "cursor": {
          "ref": "e2a5ae80-56d6-463e-b747-5a7700b47d3d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "25cb61ec-3362-4968-893a-10428975967a"
        },
        "item": {
          "id": "2b49c56a-4b05-453a-acdb-bce68515ec03",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e89695c8-1b83-40eb-b09c-9a0d22d5b92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9ede57-32cb-40ba-972f-c222f7025958",
        "cursor": {
          "ref": "64b1c00b-7661-44a1-9d98-535b33ec0641",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "085ec71e-f743-4520-bce0-426ee5c8e49c"
        },
        "item": {
          "id": "0a9ede57-32cb-40ba-972f-c222f7025958",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d7d45c10-b823-43e3-b16a-5246c7874e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bd0b75-05c3-4e9e-8dba-48a6255e869f",
        "cursor": {
          "ref": "7b9bd0c8-3d9b-49e0-8601-743c30e320f6",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "70919dff-0e9f-4d72-a8c3-569c73cc5f41"
        },
        "item": {
          "id": "72bd0b75-05c3-4e9e-8dba-48a6255e869f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "802e4ecb-d473-4b3a-a16f-1320f47262da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883a7492-8ee9-4dcf-97eb-70c4216041e9",
        "cursor": {
          "ref": "d983fca6-e250-4117-ab4d-b9be6d111934",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b83ce249-af73-4b93-8aa8-91fe11ade18d"
        },
        "item": {
          "id": "883a7492-8ee9-4dcf-97eb-70c4216041e9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "977c022e-3459-4cfb-9b90-9bca53c4c605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa04847-3a11-4307-ad9b-2fe19adee797",
        "cursor": {
          "ref": "ae92f95e-326b-4109-8734-21cbac556b50",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "829b81c9-fc79-4521-86a0-c36d5826fe55"
        },
        "item": {
          "id": "aaa04847-3a11-4307-ad9b-2fe19adee797",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "339bab84-01f0-4947-88d0-967795ad91e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341a280f-292a-4973-9277-ec8ace7e8f71",
        "cursor": {
          "ref": "1980c668-2bb7-4b8c-b39a-4b1b62ee0a66",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4b6fecf3-c909-44ff-a0cd-9557e421a7ec"
        },
        "item": {
          "id": "341a280f-292a-4973-9277-ec8ace7e8f71",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "19c04afa-9696-4b05-b2e0-4e15320cbea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323ade7b-6573-43ff-8a69-82774211b9bd",
        "cursor": {
          "ref": "f785602b-f60c-4b61-a8b5-313745ec9fd4",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f3102785-d4bb-46bb-9c65-e24d4a9fbcea"
        },
        "item": {
          "id": "323ade7b-6573-43ff-8a69-82774211b9bd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a19f015f-c643-42f3-be6a-76755fd0c2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630b1efb-a47f-42e1-9f63-a56d4fc00a29",
        "cursor": {
          "ref": "40b9c34c-79fc-403e-a257-420ef7631a36",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "824fbf57-d335-4ff6-887b-f03c82f212e2"
        },
        "item": {
          "id": "630b1efb-a47f-42e1-9f63-a56d4fc00a29",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2f61d002-5c31-42a6-85a7-6e09ac923f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3c14bc-185c-44d9-9f33-b9f857b5201d",
        "cursor": {
          "ref": "157221f3-2707-4311-b05e-3b676640d1c0",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0837f39b-27ea-46d4-b865-e62284fc1385"
        },
        "item": {
          "id": "8b3c14bc-185c-44d9-9f33-b9f857b5201d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ded7ffa0-b11e-4c82-83f3-0a5b2924b054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f3a3a5-19a5-4634-9c82-7c0749d3c798",
        "cursor": {
          "ref": "fe14eacb-eb3b-4e03-8554-f73718d394e6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d24e40d3-0489-4a75-88a7-7f8b24dbe6a3"
        },
        "item": {
          "id": "84f3a3a5-19a5-4634-9c82-7c0749d3c798",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4aea3d5d-6d3e-496c-bc57-54bbe53d009c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be3c51e-1df4-497b-91b7-9c28e205ba06",
        "cursor": {
          "ref": "ac2cb038-32b0-48e6-95e1-36dc628e2881",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "79c55872-5a8f-41be-a7b0-881aa491d85e"
        },
        "item": {
          "id": "2be3c51e-1df4-497b-91b7-9c28e205ba06",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "daa4e915-d97b-4230-9737-cd4d43f1139d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c865ac2a-ef6f-4cf2-9914-69ffcd6716f2",
        "cursor": {
          "ref": "16585dd2-6d9e-40d1-9fcd-e5e524f7174d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9170412b-9308-432f-80e1-4b2a664a3400"
        },
        "item": {
          "id": "c865ac2a-ef6f-4cf2-9914-69ffcd6716f2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2bd968eb-778b-4222-bf1c-bca1933a16c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556399a9-b286-4aa0-a5ef-cc0db770a7b7",
        "cursor": {
          "ref": "affa72db-cdb7-4527-990c-5b4389761020",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f90f162a-b577-4a5b-92e7-b949d0b82a48"
        },
        "item": {
          "id": "556399a9-b286-4aa0-a5ef-cc0db770a7b7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9d3269ad-93d2-4a8f-9936-5f6af6006143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79451e98-e6ad-45b7-bb89-48e6ff967160",
        "cursor": {
          "ref": "121b70ea-f9e3-4deb-bdc1-776690592c1a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3ba6dead-b4ca-4b0b-b9e2-9527e9c99abd"
        },
        "item": {
          "id": "79451e98-e6ad-45b7-bb89-48e6ff967160",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2c8e43f0-3e1a-4be8-a703-0802229823c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4450db4c-d118-4cd9-977f-09ebebf49fe7",
        "cursor": {
          "ref": "723e558e-ed54-49eb-bc50-a11498b85ffc",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "94fa7fc7-4caf-462a-a1cc-7dc7a90c3ca8"
        },
        "item": {
          "id": "4450db4c-d118-4cd9-977f-09ebebf49fe7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "97176a20-d70e-478e-9ce6-1ccc9bdb8bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0806b1a9-fa40-4332-92ac-199308b92945",
        "cursor": {
          "ref": "a6250c22-0d6e-4c69-acde-1256b6705d1d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cbb6a375-25aa-4567-a093-ac501130621e"
        },
        "item": {
          "id": "0806b1a9-fa40-4332-92ac-199308b92945",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a0f92122-cfcb-4584-936a-fe9d80410c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c78f559-597a-45da-a989-9c1f006b0900",
        "cursor": {
          "ref": "38ae85bd-a91a-41c3-bf1e-fbd41779a6ae",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "571f317a-e227-43e9-a0ad-21fe4245f9ac"
        },
        "item": {
          "id": "1c78f559-597a-45da-a989-9c1f006b0900",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d3e5e996-b474-4af2-9257-39012bb896c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3f64bf-2651-4f4e-a50b-ecf52df4ddd0",
        "cursor": {
          "ref": "fb555f08-7462-445c-9a3f-1e77d58b706b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b803bb72-6b02-4a52-b81e-aca3209ded48"
        },
        "item": {
          "id": "9c3f64bf-2651-4f4e-a50b-ecf52df4ddd0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f40c0ce5-709f-4d9f-b974-1cb5674401c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ca9d4b-92ca-4fa8-8b16-e2e9206615ce",
        "cursor": {
          "ref": "76162c03-5ca6-42ad-940c-fa396d265c8f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9bdca044-b2c0-4208-8135-e5040db9960a"
        },
        "item": {
          "id": "64ca9d4b-92ca-4fa8-8b16-e2e9206615ce",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "aaf37d82-5da6-405a-b144-a4e077b969ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e076e6b4-70dc-4702-afbb-bf8fbe40945e",
        "cursor": {
          "ref": "09af6ba4-70d9-4d7f-a8a8-75b108a769ac",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1184289e-797e-4bc5-b2d7-cfe0bcc5f223"
        },
        "item": {
          "id": "e076e6b4-70dc-4702-afbb-bf8fbe40945e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d09197d4-8ac9-40a8-9a20-71e54ef6be0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c3995b-46ed-49c9-b53c-a61a90f70bbf",
        "cursor": {
          "ref": "82f58fc4-cc36-4915-ba75-6f4b528ee02b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3bd7e642-bc62-46f7-af2a-013eca21217b"
        },
        "item": {
          "id": "77c3995b-46ed-49c9-b53c-a61a90f70bbf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "49064b3a-3e7a-4797-9a7d-eb3582649a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90786e4-f2f5-4328-af36-759786443eb4",
        "cursor": {
          "ref": "f2e69c6c-85bb-4fa7-8748-ab3b40069721",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "196b1377-18e8-4812-8dea-39704a30ef20"
        },
        "item": {
          "id": "c90786e4-f2f5-4328-af36-759786443eb4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9a347320-2652-45d7-ac26-2c0b99893d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a3c0a1-e9e2-4ee4-a44d-c00fdb3649e2",
        "cursor": {
          "ref": "f0df6118-9e11-44dd-928c-ddd956ea7563",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "72acdb14-8927-45f6-baae-ffae032aeb2e"
        },
        "item": {
          "id": "c4a3c0a1-e9e2-4ee4-a44d-c00fdb3649e2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0baeb257-7cf9-4d52-8b19-2291f68ed737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f8ae97-8a8e-4368-bbcd-9e1ff693de12",
        "cursor": {
          "ref": "a0112951-1fa2-42a3-b178-6d1da56371dd",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "01258264-c43d-4576-87c8-faecdc6b9414"
        },
        "item": {
          "id": "97f8ae97-8a8e-4368-bbcd-9e1ff693de12",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "eb7f9af4-594f-42a2-91a2-64a6e915da5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985248ab-108f-4f4b-914f-0f88599ecc4f",
        "cursor": {
          "ref": "4a35bc52-0ee4-4468-8527-88540d9c03e5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c243057a-1151-4055-b13e-77141ab2289d"
        },
        "item": {
          "id": "985248ab-108f-4f4b-914f-0f88599ecc4f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e799da6e-6f83-4bbf-9b7f-c7342d6daa12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6202f094-975a-4573-b989-7c19b0bbf890",
        "cursor": {
          "ref": "34cb6e9b-4199-4b75-95a3-397c9539e6e2",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2cc3da86-53ed-43f0-a239-70f5fb979328"
        },
        "item": {
          "id": "6202f094-975a-4573-b989-7c19b0bbf890",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1fa0c7d8-c02e-4106-a395-1aecd101e4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0c19fc-e5cd-4cee-8bd9-76d9edd4d485",
        "cursor": {
          "ref": "5e966cc0-838c-4b58-a1c9-798defaadfd3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d99a21cf-b238-470a-a7f7-36b2d84be005"
        },
        "item": {
          "id": "5d0c19fc-e5cd-4cee-8bd9-76d9edd4d485",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f21cc823-d1a6-4e35-8a2c-4a2fca2ac8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "833eef2a-e143-4303-b9b9-4c2954f94b2b",
        "cursor": {
          "ref": "50067feb-caa5-4c7a-b3d6-9b1218b9d806",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a5f0023a-0790-44c4-99cd-8d5858a9cc1e"
        },
        "item": {
          "id": "833eef2a-e143-4303-b9b9-4c2954f94b2b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "98742e84-d54b-44d0-a640-497d97d34a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8dd6a0-0151-42c3-992f-b0c398fa09f6",
        "cursor": {
          "ref": "0b9d0b0c-7e16-40dd-8b87-4be1d4d97601",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2e69cf1e-b235-4124-a488-50a0aefa5cbd"
        },
        "item": {
          "id": "bb8dd6a0-0151-42c3-992f-b0c398fa09f6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "90d9f88c-0262-46bf-ac84-f7292fbd3427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae986ae-1cc3-4c89-87f6-5cf269dae2ec",
        "cursor": {
          "ref": "e4483be2-3e30-49bf-a2ae-0dc14bc490f2",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dd1c02c4-22b8-4bea-8fc9-067597d9b52b"
        },
        "item": {
          "id": "4ae986ae-1cc3-4c89-87f6-5cf269dae2ec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cae4a6b9-5e46-48d6-9164-5c4740a9c1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bec50e-7c46-4e0a-bf88-53fab8b2c735",
        "cursor": {
          "ref": "39490ce5-8793-4ada-a6f6-860e753d1a66",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d5fdac67-25e1-4472-a31e-6fbe90cdce19"
        },
        "item": {
          "id": "f4bec50e-7c46-4e0a-bf88-53fab8b2c735",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d54cc7d2-7a06-4f01-b0fe-84f3cbbf2455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd472d96-0972-435b-83a0-2a0976dd6553",
        "cursor": {
          "ref": "311ba3fd-9c97-45f3-b79b-89144a1c760f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7a99982a-3c5a-4f68-8517-fe005c01c7eb"
        },
        "item": {
          "id": "bd472d96-0972-435b-83a0-2a0976dd6553",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3c612444-7626-4c72-ab2b-89fea4301c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ea7a53-0838-412a-8394-6d8d443d8e34",
        "cursor": {
          "ref": "9f1ad1b3-02e8-4937-867b-1a125ac27fdd",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0141e6c9-b3ec-46d5-abd2-d14ce32acff8"
        },
        "item": {
          "id": "e6ea7a53-0838-412a-8394-6d8d443d8e34",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5a81f3fe-b6d4-481b-91a9-459e6d8fd4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efa892e-a2df-43a4-ae3a-8148d25201a1",
        "cursor": {
          "ref": "0cfef88c-4370-431f-bd42-1317502293ef",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "13b9bee4-c2f4-43af-87dc-a6842b5d5585"
        },
        "item": {
          "id": "2efa892e-a2df-43a4-ae3a-8148d25201a1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ee803248-5486-4d4c-ba1c-65181d56deec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fedf375-f40c-4be0-989c-f70b8136b3c0",
        "cursor": {
          "ref": "3f7e3f63-bfa6-4d93-b289-99ebae50ac13",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "873e02f9-927f-4570-8f18-08aba6a7b4ac"
        },
        "item": {
          "id": "7fedf375-f40c-4be0-989c-f70b8136b3c0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6e334510-489d-44a3-9107-16fd4c60899e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0528ee-d47b-44ba-9f9f-3124407f7fab",
        "cursor": {
          "ref": "54cf3755-ff15-4c0b-9b24-d85c5bfe0c00",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c4b78a9d-ad9a-42a1-b109-c3cde15b6a51"
        },
        "item": {
          "id": "ce0528ee-d47b-44ba-9f9f-3124407f7fab",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ff98f17b-4129-4248-89ec-0fccf2fbcf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7085749d-15b4-4282-8611-96635aaaed10",
        "cursor": {
          "ref": "5468e2d8-6fa3-418a-8912-bb8520fcafd9",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3ad77921-0295-420e-b0c6-c54e40a52709"
        },
        "item": {
          "id": "7085749d-15b4-4282-8611-96635aaaed10",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "336dc15d-954b-4b95-8091-3a27b7d7f793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0eb337-542a-4e83-b288-1e43c46d395a",
        "cursor": {
          "ref": "0825c988-5482-4309-a82d-c43ad351968d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "50820616-107b-47eb-8433-16c43f86996a"
        },
        "item": {
          "id": "4b0eb337-542a-4e83-b288-1e43c46d395a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "39afec09-9cd8-4470-a151-72fca05cf2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0022777-34c4-4590-ac41-d049315f90f5",
        "cursor": {
          "ref": "2f383f22-708f-4860-aa0b-2b3d67efb4a7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9adf9704-0762-43c0-8192-094a1faed1dd"
        },
        "item": {
          "id": "b0022777-34c4-4590-ac41-d049315f90f5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1cf57b4f-5b94-4d16-a5cb-ab508fee4102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1b6657-b4a3-4692-acad-612889b3eb4e",
        "cursor": {
          "ref": "b68012ce-7ff2-4881-bcdb-d962b44a63b1",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a9b2e197-53c0-45ac-aac3-3e7729e41638"
        },
        "item": {
          "id": "9e1b6657-b4a3-4692-acad-612889b3eb4e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fcddb14e-0160-408d-a656-7e47102e8ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac108a5-754b-41c9-8256-fb8fe853f292",
        "cursor": {
          "ref": "94334086-62c0-4f12-8b7a-a3e0e90186a3",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7e0ef1db-7421-4f01-b8bc-cb8f4b2e5e94"
        },
        "item": {
          "id": "1ac108a5-754b-41c9-8256-fb8fe853f292",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0b5acda6-2bb1-4b93-a16e-d4d5698c574a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c929a88-1299-4c75-b4fc-daa79a7bf15b",
        "cursor": {
          "ref": "9c4dcb90-f199-48b6-b64e-6e327fd2c46b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56c330c1-0985-49e7-8140-7b7b0f374f03"
        },
        "item": {
          "id": "3c929a88-1299-4c75-b4fc-daa79a7bf15b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c3f5ea35-3b69-4ed6-83b9-bdb9d87c37aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad0ed55-a83e-415b-b990-1247c6414ed9",
        "cursor": {
          "ref": "5306f731-c751-46c5-ac4d-59a1785ca722",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "61216485-fe6b-49ce-9ff7-2eff11bf10b4"
        },
        "item": {
          "id": "6ad0ed55-a83e-415b-b990-1247c6414ed9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3781fc5a-abe0-4b72-8362-59e28502b129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe87706-a613-46c3-bffd-557119d8bd97",
        "cursor": {
          "ref": "d1dd39db-8dcc-40ad-a0ed-9d1843ea6cd4",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "626c475b-34d0-4a2c-a802-fd0757eab1c9"
        },
        "item": {
          "id": "bfe87706-a613-46c3-bffd-557119d8bd97",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c68e465f-98c6-4000-b1f9-e99d75638cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa684bc8-69c1-46f1-877a-fbdb5fbfd734",
        "cursor": {
          "ref": "6191d461-6b5a-4d3d-afbd-89f146655fcc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dca22de7-d2e8-4d83-bf4c-ee138ca4f584"
        },
        "item": {
          "id": "aa684bc8-69c1-46f1-877a-fbdb5fbfd734",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "39d736e5-72bb-4db5-891e-5f9a6b25743e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4885afa-116c-4bbc-9a0a-b4e59b44ad97",
        "cursor": {
          "ref": "8aae0bef-7bfb-4561-824d-51624e5b5f5d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d5787e5a-4b81-4c23-94e3-43cea822a62d"
        },
        "item": {
          "id": "a4885afa-116c-4bbc-9a0a-b4e59b44ad97",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "eb28c953-1e4b-45c8-a212-864e43e2dffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9259e7d4-f649-4208-8b77-8355e773b528",
        "cursor": {
          "ref": "f78d6c9f-143b-4d7e-a1bc-7ebb55c51a53",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3e15f408-7fa2-4c00-8a39-4ed95727c6f3"
        },
        "item": {
          "id": "9259e7d4-f649-4208-8b77-8355e773b528",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "11842695-1c94-45d6-bef4-56d615fbdc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f821cbf0-73e4-49c4-a2c2-beb3af7fda72",
        "cursor": {
          "ref": "1f4cac86-368c-4ccd-b386-396dcd155abf",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "04c8761e-8738-4594-b1a1-bd6cae135d73"
        },
        "item": {
          "id": "f821cbf0-73e4-49c4-a2c2-beb3af7fda72",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b5992216-2057-477b-810c-e3732c02a4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1518135-2a58-4ba1-95ab-8d4b5047ffe8",
        "cursor": {
          "ref": "de8f8554-540a-4eb8-8013-d7fe1d58103e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ad7f3df0-8a41-4164-a6f0-855546559a11"
        },
        "item": {
          "id": "d1518135-2a58-4ba1-95ab-8d4b5047ffe8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "50f65e69-2a10-45a7-9056-6c2cd04d9335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4212a2fa-2f53-4ad4-aae1-f6d49832df89",
        "cursor": {
          "ref": "459d59a6-35cd-4009-b320-74b78e38ead4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "97b952fc-6079-47ce-a695-141ed16def81"
        },
        "item": {
          "id": "4212a2fa-2f53-4ad4-aae1-f6d49832df89",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b841b422-131f-42d5-9d18-1b04a0bac588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240854cc-bbf2-4a45-a1ea-dbc67a1efa76",
        "cursor": {
          "ref": "c5692cfd-1217-4f9b-a0e9-3172edf4b100",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a5c08ab1-c420-4423-aa9e-84b729535dde"
        },
        "item": {
          "id": "240854cc-bbf2-4a45-a1ea-dbc67a1efa76",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f2af770c-148f-402e-9700-ccbabd2795da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63da6b23-2638-42b0-b681-6122a6ad338a",
        "cursor": {
          "ref": "c9b37cd3-7d45-4282-a546-5f708f50da7c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3714d296-0b78-4f3c-99d6-109508506f22"
        },
        "item": {
          "id": "63da6b23-2638-42b0-b681-6122a6ad338a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "86d13d09-fd58-4f9b-8a1c-4118ebd46350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3644f5e6-752d-428b-ba6b-17ee191830a1",
        "cursor": {
          "ref": "ab4daf4e-1674-4cd0-b1ed-16369eab8d49",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "feb04f8a-e436-478b-9d0d-a981bb3ee1b2"
        },
        "item": {
          "id": "3644f5e6-752d-428b-ba6b-17ee191830a1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "99daee5a-41bc-4fdf-ad86-2df410718f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2789b52f-f89b-45fb-a674-4c576ab3918a",
        "cursor": {
          "ref": "5ddb288a-b409-4218-869f-54bdcc12b18e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ebe00aa4-2ed2-4283-8bd0-bb2f3410fe42"
        },
        "item": {
          "id": "2789b52f-f89b-45fb-a674-4c576ab3918a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5b8b78c0-d18b-4703-8c53-aab9abaf8ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11362d74-fe1d-4b6e-ac8e-5b9f907cc9ff",
        "cursor": {
          "ref": "e8db3eac-b6f5-4750-9d65-c6ef0094ffee",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3d3d461d-919a-4bae-9f02-e618c50dc43c"
        },
        "item": {
          "id": "11362d74-fe1d-4b6e-ac8e-5b9f907cc9ff",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4b04b50f-6714-4945-9bea-5d41d2c72350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4533d3b0-2f90-4c1c-9efb-4e866d589b47",
        "cursor": {
          "ref": "db3d3a5c-fdb4-413f-a2da-3975173070cd",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "265f8a51-eab2-46f3-86c3-a7a84590882e"
        },
        "item": {
          "id": "4533d3b0-2f90-4c1c-9efb-4e866d589b47",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "19001e4e-09b5-4acb-9ebd-8d97bbe4211a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f754dc03-b903-41b4-bda0-927575a174ad",
        "cursor": {
          "ref": "9accea64-5fb4-4e0b-80c9-9acf37d918d6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7696143e-0a00-424f-99ac-28736daab460"
        },
        "item": {
          "id": "f754dc03-b903-41b4-bda0-927575a174ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0e64bd6a-fd45-46cc-a44b-6deb1be335d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6229bc31-2756-4293-990d-c9e4509ebfc4",
        "cursor": {
          "ref": "5453cc50-3d53-4b20-b16c-04f520b25817",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ef47e6c9-9d97-4769-b6cb-998973f480d4"
        },
        "item": {
          "id": "6229bc31-2756-4293-990d-c9e4509ebfc4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "40a7f5b0-779e-44da-bcd4-0484ed4112e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98614a55-021d-4fe7-8ed7-0203e92cc1b0",
        "cursor": {
          "ref": "cf7f48a5-5d84-4e40-b765-d864e4a6c2ce",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "65917544-b2db-464f-91bc-61e75c83a088"
        },
        "item": {
          "id": "98614a55-021d-4fe7-8ed7-0203e92cc1b0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fcd3e793-5662-49d7-90f5-de8ac3796191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dde7f5-27a2-4162-9226-49205243c9c8",
        "cursor": {
          "ref": "ac1a2a3a-b0ea-403b-9c1e-ad7ec1975128",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "15760773-c559-4cd7-84cc-f0db2389b2d5"
        },
        "item": {
          "id": "39dde7f5-27a2-4162-9226-49205243c9c8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "117d69b8-b879-4bad-a7e5-016f0aeab44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4684eca4-3895-4a4a-a0aa-b8f5037ff01e",
        "cursor": {
          "ref": "052aeaf6-db08-439b-ad8a-c87007da4b1f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "24223c41-dddd-4a8a-881c-e91e1bb8ee1a"
        },
        "item": {
          "id": "4684eca4-3895-4a4a-a0aa-b8f5037ff01e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f1bf99da-45b6-4156-a4f1-6740ee8ab438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63a4db9-aaca-4114-9c7d-78cee6fc5b4d",
        "cursor": {
          "ref": "a01a3eb3-cc2e-4b33-b5d5-96467ba4f4ed",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ae9c0c88-7826-4b6c-b5d6-7b85dbec55a6"
        },
        "item": {
          "id": "f63a4db9-aaca-4114-9c7d-78cee6fc5b4d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "351c4c45-70e0-4124-afc7-d539567b8826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5792ffa6-5979-42d5-93f3-0294035cb42c",
        "cursor": {
          "ref": "2d76f5e0-6b7f-4f55-af52-ba57fc87a983",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3f3b3a63-af16-4c31-94f5-67bc17479b0c"
        },
        "item": {
          "id": "5792ffa6-5979-42d5-93f3-0294035cb42c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6c040245-040f-4878-bb81-42f793e02517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7439690c-10b0-4f04-8715-d55b0d39210e",
        "cursor": {
          "ref": "418283d7-00cf-47dd-9b35-610aa0f360a6",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4cca324f-6dc2-4e00-b70f-c04df514c947"
        },
        "item": {
          "id": "7439690c-10b0-4f04-8715-d55b0d39210e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "71b3650a-b0b6-416d-8cf5-252b13ed367f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb354dd-850e-491d-86df-448e709df3b0",
        "cursor": {
          "ref": "a7e5829d-43d7-47f6-af01-5fb2386fc86d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8042f221-4f09-4a36-81a0-b8decc401200"
        },
        "item": {
          "id": "9bb354dd-850e-491d-86df-448e709df3b0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "044f0e1d-dd4b-4f06-bb58-f44bf7961d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07884eb8-3eae-4b81-b6bb-6c5f10c3c38c",
        "cursor": {
          "ref": "abaaf057-c7ee-453b-ae6f-868e8c58f6bb",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "de7620f4-45b3-41d9-9d3b-5dbe5096e589"
        },
        "item": {
          "id": "07884eb8-3eae-4b81-b6bb-6c5f10c3c38c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2ce5f668-7673-49f0-8c04-accd08203d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7545213-5137-423a-b510-fb3f10b95bc5",
        "cursor": {
          "ref": "2ae1f32a-3bcf-4823-8014-a4b7ef0c3827",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a22cc85a-23e7-471c-9483-a1b5cde11ddc"
        },
        "item": {
          "id": "d7545213-5137-423a-b510-fb3f10b95bc5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7e98d680-a465-4893-9193-7660dfde6eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bc539c-8082-4d00-9e67-2650a83f0955",
        "cursor": {
          "ref": "3bd1f67e-145b-459b-8012-33d30a88df58",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0179c063-a4d1-4358-a73f-22c82a392e6a"
        },
        "item": {
          "id": "f6bc539c-8082-4d00-9e67-2650a83f0955",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9177b5f0-e1a3-41a7-88de-cfc313d81858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5657197-ff93-41b0-a98d-c337396a2b45",
        "cursor": {
          "ref": "edf6dc5b-3688-427a-9451-21acc43296c3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "97509348-e730-4293-85b0-0ce37352b983"
        },
        "item": {
          "id": "b5657197-ff93-41b0-a98d-c337396a2b45",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "61d754fc-632e-4986-8447-927d52b91981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7d9bd1-2cf8-4d4a-8cf5-d2de9460c19d",
        "cursor": {
          "ref": "36a2babf-0079-4e3b-be90-afc5550ca7b3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "166751cb-3dbb-4ba1-8dea-94880afa9f6a"
        },
        "item": {
          "id": "7c7d9bd1-2cf8-4d4a-8cf5-d2de9460c19d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c970edd2-e257-45e6-ad18-2dfe75b35825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9df21ee-0317-43d2-81e0-4615faae5b00",
        "cursor": {
          "ref": "98984e81-9cfa-407b-a805-404002763bf5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0b1e300d-e375-45e1-bc39-8f541e3e56c8"
        },
        "item": {
          "id": "b9df21ee-0317-43d2-81e0-4615faae5b00",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d514c675-6299-4c47-8182-3f13b069afac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1ced1b-650e-45a6-b6cd-f67102bceed5",
        "cursor": {
          "ref": "e9d4c617-e9ad-43ec-94e8-0cf3602d9935",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "010e8bef-a37d-4e28-a0f4-ab67e0e0f289"
        },
        "item": {
          "id": "fc1ced1b-650e-45a6-b6cd-f67102bceed5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5883fc44-a6ad-4994-9061-41620d1c27dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a752e11c-9586-4c67-8eb5-1a03e6ebe1cd",
        "cursor": {
          "ref": "624e4b48-e085-4ed1-83b1-2393b2402e0d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8e748131-6f7a-4335-9fea-63b1f95203ed"
        },
        "item": {
          "id": "a752e11c-9586-4c67-8eb5-1a03e6ebe1cd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b4915aaf-90ee-43c5-9fec-5f7bdfd07147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f31ceb-b3f2-485c-90bb-d17b29c22f9b",
        "cursor": {
          "ref": "e04774a7-8b50-4d84-85e3-46d438e18d11",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2088ab4f-e741-4621-91f2-2466b5e00d89"
        },
        "item": {
          "id": "e9f31ceb-b3f2-485c-90bb-d17b29c22f9b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3f8c4830-a745-49cf-9946-104983774dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0537e8ca-213f-4b01-a981-e325c739cf77",
        "cursor": {
          "ref": "bbe98372-1851-4ae0-9f44-8032fd5f708f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "60484358-bde9-431c-9a39-e6f2f29d24d4"
        },
        "item": {
          "id": "0537e8ca-213f-4b01-a981-e325c739cf77",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a7fef2bb-47bf-4628-8651-fe260e6deae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0461f5a3-0967-4a5c-8b69-3d3e10842a8e",
        "cursor": {
          "ref": "a4ab35f2-1701-45ef-8884-4a6aedd8d25c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2ff2a9cb-5c69-4e27-b2f7-3203d936f0b0"
        },
        "item": {
          "id": "0461f5a3-0967-4a5c-8b69-3d3e10842a8e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ea621f0b-4f08-41c0-86c5-0654cce79175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375856ba-a1ab-4173-83ea-8c0a4ba10e25",
        "cursor": {
          "ref": "8433c174-af6a-4285-a2a7-8346aae2a879",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "16d21bb5-07f1-459e-8e2e-9af50cfdc2ca"
        },
        "item": {
          "id": "375856ba-a1ab-4173-83ea-8c0a4ba10e25",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "35ef8165-2b0c-4b28-8d5c-029d8450251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f0d4bf-f9aa-4f47-aefe-ed0624f8ba41",
        "cursor": {
          "ref": "e796c6b1-f2c5-4d1a-807e-d10898abee9d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ead26406-5b80-4a76-8351-b3d00de16c4b"
        },
        "item": {
          "id": "89f0d4bf-f9aa-4f47-aefe-ed0624f8ba41",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "81a25e7d-7674-4115-bb10-4893018400c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc65e972-e40d-486d-9316-0620092c4a76",
        "cursor": {
          "ref": "705bd622-73cb-4d94-91e2-7e0a81b5737a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d72dd541-3d5e-4c1a-80fc-4aeb35f452fe"
        },
        "item": {
          "id": "dc65e972-e40d-486d-9316-0620092c4a76",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0313221b-0950-462a-806c-cc2fdf12a2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baf1037-f2ee-4170-ad87-9ff35c4cf572",
        "cursor": {
          "ref": "f4be66a2-68dc-4067-a81b-d4a7f7cdd292",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2106d320-d92a-4f9e-b594-cf42c52870ee"
        },
        "item": {
          "id": "6baf1037-f2ee-4170-ad87-9ff35c4cf572",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3bf7867b-6eaa-4013-8006-1112432428d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbf03b3-001b-4107-9bef-84c6796dbbdd",
        "cursor": {
          "ref": "8302a7cf-27e9-4e60-8cb0-a39577bb0b37",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "be0fdc4d-b727-4a8e-a343-fa1c257e6994"
        },
        "item": {
          "id": "3dbf03b3-001b-4107-9bef-84c6796dbbdd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "47e5c2d0-3e56-44a2-b95b-946cba02f466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1123177-04a8-4b0c-af85-4fd6bda2b080",
        "cursor": {
          "ref": "17def36e-29c5-4779-be5f-b5651eb985b6",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4912ce02-f361-4594-9c49-67efe7a2383c"
        },
        "item": {
          "id": "c1123177-04a8-4b0c-af85-4fd6bda2b080",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8c0eb283-8e49-46b4-9cb7-793d6e8f8f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb9545b-54d1-457f-953d-27e3de2753f4",
        "cursor": {
          "ref": "efe748ae-a092-4a0b-b499-e14c9f5672a4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ad3bf2dd-cab9-48de-8869-cd12026ac721"
        },
        "item": {
          "id": "eeb9545b-54d1-457f-953d-27e3de2753f4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d23fc7c1-ca14-467f-acc9-82be9d8fd20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9644a6-9df7-4258-b103-96953aa95f79",
        "cursor": {
          "ref": "726d9334-6633-4937-8c2e-a7b245b84e26",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cc3bc5b1-5728-46d0-a706-e009ec824fd5"
        },
        "item": {
          "id": "6d9644a6-9df7-4258-b103-96953aa95f79",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8e6f46af-4434-416b-942b-c2e99097b05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a96cc61-0425-4baa-9f54-da288bf4af46",
        "cursor": {
          "ref": "16bdf727-5542-4cf4-8e0e-ad45b77db2db",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d18e1b45-36ee-4698-ba03-c5c98b6195d7"
        },
        "item": {
          "id": "1a96cc61-0425-4baa-9f54-da288bf4af46",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a32682fe-1b80-450f-88aa-445d5c3cbd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d464d25-762f-4a15-a90f-3c1f420280ba",
        "cursor": {
          "ref": "14671ab1-2408-4c15-9a8d-0b5658690b34",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0b2ac06c-6dbe-49a6-bd1d-0cc0f0a184b5"
        },
        "item": {
          "id": "3d464d25-762f-4a15-a90f-3c1f420280ba",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e74598ea-3c04-4155-bf1a-b28cc827c0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25339bec-9e96-4257-8a33-80b20cfc32b4",
        "cursor": {
          "ref": "79cd725c-bea6-4a20-9fb8-9a0c1ff799ba",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "db8046dc-865c-4990-8e89-2697ea8ab0a3"
        },
        "item": {
          "id": "25339bec-9e96-4257-8a33-80b20cfc32b4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "662d8555-561c-4dbc-a79f-85ccca04b345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7c4132-22d0-4973-b6dc-d91cf90ef232",
        "cursor": {
          "ref": "4c6d3579-1413-4880-b99b-864906539aec",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2b933943-97a2-464e-bf40-47bd084b6eee"
        },
        "item": {
          "id": "9f7c4132-22d0-4973-b6dc-d91cf90ef232",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d6a71290-19d6-45e2-9aff-95bd202eca77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8622bb-e300-431f-bdaf-18de42c05629",
        "cursor": {
          "ref": "f5d7b49a-a047-48e8-a268-f1b041f31668",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4d551b8a-290a-4ac1-ab1a-e2d61e107dee"
        },
        "item": {
          "id": "3d8622bb-e300-431f-bdaf-18de42c05629",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e6671687-525d-4737-9cc6-2b9fa6990d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2767e0f2-39e0-48f2-a358-b2854542a56b",
        "cursor": {
          "ref": "48d9eff1-3583-43b2-b99c-f9651147c76c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "00051a86-c0d0-48a2-9a09-3a48ad3672d4"
        },
        "item": {
          "id": "2767e0f2-39e0-48f2-a358-b2854542a56b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8f9a5a4b-7c1e-46a2-bba2-26906dd0c0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08bb96d-e2aa-46ba-bf77-acbef16cf956",
        "cursor": {
          "ref": "c4b4ae60-d141-470a-ae2e-bfac40e59f5d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d7e58bbf-f2e3-4331-9a24-1cfaf4053fdb"
        },
        "item": {
          "id": "e08bb96d-e2aa-46ba-bf77-acbef16cf956",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f55fdf97-c1cd-4716-8477-7e22fa05fe0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28068fcb-f5a5-4c03-95f6-5d0968a56bb5",
        "cursor": {
          "ref": "6948cb87-230f-422e-bc92-947afaab5b09",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4c9b0552-45eb-4afd-b6d7-9a262660a951"
        },
        "item": {
          "id": "28068fcb-f5a5-4c03-95f6-5d0968a56bb5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b9220a94-e67a-42e8-9bae-a841cc96a0b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7783171-78dc-46fb-8928-c92dacd98e1b",
        "cursor": {
          "ref": "25530b1f-c829-402e-be3c-0a17d4241da8",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e43bb24a-8a35-4e86-91b8-5b0ccb5c65b7"
        },
        "item": {
          "id": "d7783171-78dc-46fb-8928-c92dacd98e1b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3db61098-dfae-4cbb-b668-1c3aac4b5ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "fd2a9260-0a28-4909-b06e-1cf1e9192f93",
        "cursor": {
          "ref": "c7367b32-80c2-4edf-963e-bfc5cd097bb3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bbe360ef-725d-4fe6-8b00-0d0e437200da"
        },
        "item": {
          "id": "fd2a9260-0a28-4909-b06e-1cf1e9192f93",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1958d75b-cd31-44ec-93f9-a13b5bf13cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "ca0fcf9a-7f5a-4cfb-86c1-b93942875fe3",
        "cursor": {
          "ref": "23339e96-cad2-4487-ae8a-bb4221c049e5",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "46469f0e-b45a-4d52-a7df-f98e6dae6292"
        },
        "item": {
          "id": "ca0fcf9a-7f5a-4cfb-86c1-b93942875fe3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "34978c8e-e4b2-4c10-af90-37b084e8e75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4c8d48a1-e91f-4893-b3c5-4eee573f90bf",
        "cursor": {
          "ref": "b2b6b920-7e58-4b86-8e6f-297e82aea0e5",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e7eaf96c-7cca-4fa2-9f76-943bbb518513"
        },
        "item": {
          "id": "4c8d48a1-e91f-4893-b3c5-4eee573f90bf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f011832d-1be8-4a12-9005-2adfa541ea7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "51927c57-d28b-4616-a530-c6c338d531cc",
        "cursor": {
          "ref": "b0129fa6-935e-4b88-a771-ad01f1d70e3b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b1170056-3e9f-4a37-b899-a1fbe92149ac"
        },
        "item": {
          "id": "51927c57-d28b-4616-a530-c6c338d531cc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "574eecfa-c713-4ede-8348-af82864b2856",
          "status": "Created",
          "code": 201,
          "responseTime": 8931,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6da45e-90a0-4fd3-a1e3-96ebef2d5bd9",
        "cursor": {
          "ref": "ef848c58-b107-4c2c-b581-ee0785e35fc1",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6e928f42-b946-41eb-99e6-2dae805f3da9"
        },
        "item": {
          "id": "2b6da45e-90a0-4fd3-a1e3-96ebef2d5bd9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8a50c72e-6873-4b73-8d4f-6286e0d78b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "bb749725-69d4-4e3f-963a-3e657910866e",
        "cursor": {
          "ref": "12322b35-8fff-4ef1-b72b-a2c60b8bde45",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "36e0e09c-5633-427c-b146-8d34911a8015"
        },
        "item": {
          "id": "bb749725-69d4-4e3f-963a-3e657910866e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "827a5bf2-e755-4553-ac21-be1a417cc41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "666c790d-bad4-4e11-9a55-2f37712d9931",
        "cursor": {
          "ref": "eda14983-8253-4043-8c6d-569eeb47e795",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "749cf6e1-664d-49c7-a510-bf0efdf79db5"
        },
        "item": {
          "id": "666c790d-bad4-4e11-9a55-2f37712d9931",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a1c91ce1-1c25-473b-9377-f6bcde7c5240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40fe892-1203-4ff6-80d1-cf16cff24ad5",
        "cursor": {
          "ref": "33880ed0-674f-43d6-ad92-49290aba9db8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "df24d528-b794-4f60-b405-12b4b79dd609"
        },
        "item": {
          "id": "c40fe892-1203-4ff6-80d1-cf16cff24ad5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "70fa1cd8-c8ad-4923-a3ca-814ff8a1e5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcd8def-0765-4554-8f50-ea138f527fce",
        "cursor": {
          "ref": "04e27553-c50b-4fff-b02b-42c33426625e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1feb3a46-3394-4bfc-b870-0ec0ed6b1133"
        },
        "item": {
          "id": "abcd8def-0765-4554-8f50-ea138f527fce",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3ae42338-6c07-4ebc-96ad-7961d9fde11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d3a796-8025-4b6e-97f0-9cd1c6a46435",
        "cursor": {
          "ref": "ddeec0ba-d870-4206-a4b9-6dd0dcece921",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4a13f624-80df-4d29-901d-cf6bb6cac841"
        },
        "item": {
          "id": "f7d3a796-8025-4b6e-97f0-9cd1c6a46435",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8606a6f7-b35c-4ccc-9c7c-1dbaf3395208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6f6241-f602-4ba2-87e8-1eba66165a48",
        "cursor": {
          "ref": "d7a24847-a7a3-4e23-8f57-5254e36a7101",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6ccebd1a-f57b-498d-8e02-c7525fce66eb"
        },
        "item": {
          "id": "2c6f6241-f602-4ba2-87e8-1eba66165a48",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6726db3a-3705-415a-86ba-1a65dea360b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fe03c8-082d-46c1-97c4-ef01b62e7f7c",
        "cursor": {
          "ref": "6d615d74-39ad-48b1-a964-35d860f67f5f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "165774d3-88e5-4f32-8390-eccc24fc5825"
        },
        "item": {
          "id": "62fe03c8-082d-46c1-97c4-ef01b62e7f7c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b8c63109-5a83-4daf-aba3-1893adc70479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f69e87-e620-4d03-8906-25abd3f2f99a",
        "cursor": {
          "ref": "6fbe2673-0d67-4e3a-8768-d1397f987fe1",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dc72e42b-50e3-47d5-8ace-84006af4903a"
        },
        "item": {
          "id": "e7f69e87-e620-4d03-8906-25abd3f2f99a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b57fa2e1-4160-4b71-ac8f-4f39b0dbf2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64ef9eb-485a-46f6-bf95-88a0792e44bd",
        "cursor": {
          "ref": "fc6fec95-074d-4088-9bf6-c52748d8d544",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9a019c94-0cde-442e-b6bc-ba7cda702df6"
        },
        "item": {
          "id": "c64ef9eb-485a-46f6-bf95-88a0792e44bd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d752bd69-a98b-4c99-9e41-87370e4d3823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe55e19-6694-4998-8ef0-4d2cadbe54c3",
        "cursor": {
          "ref": "05912f19-bbc3-4e7e-b437-9e0ba31e421c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "46311082-d0d5-4901-90af-f993c971deba"
        },
        "item": {
          "id": "dbe55e19-6694-4998-8ef0-4d2cadbe54c3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dc10d1aa-62e6-46c3-a59b-50c9d4586da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06cd8c8-0cc3-4f71-bb0a-7b5a3e7148cb",
        "cursor": {
          "ref": "8c6b2c92-029b-4a25-89b3-4fa712eb8569",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "59b29039-8775-4b91-816f-ddc1fa9bbd3c"
        },
        "item": {
          "id": "b06cd8c8-0cc3-4f71-bb0a-7b5a3e7148cb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "450e2d3c-2f6f-4237-b337-18208ad5128c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6da6b7e-d9d8-45dd-8898-3aa86975896a",
        "cursor": {
          "ref": "467c73a9-cce7-44bd-aa7b-7fbd55c3b8ab",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3fb7cc5d-db42-4285-94b1-9f2eb540cef8"
        },
        "item": {
          "id": "d6da6b7e-d9d8-45dd-8898-3aa86975896a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "18bf5866-e872-4e9a-8015-30f529c2f463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0503cac-454a-46e7-9e69-ad9bc34512a2",
        "cursor": {
          "ref": "b64a02a7-8368-47f4-ae0e-f36c79a9b779",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f7acbf1d-bbab-404c-ab15-05d0f4cf7580"
        },
        "item": {
          "id": "e0503cac-454a-46e7-9e69-ad9bc34512a2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1895a6a7-5248-4288-b005-b55fd9eafb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c648ac-e8f2-438b-96d0-c42508993655",
        "cursor": {
          "ref": "e79582cc-a6f3-49ee-b3e4-9040e33ff74a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "678d4aa9-1095-47a3-852f-a5842b69c97f"
        },
        "item": {
          "id": "75c648ac-e8f2-438b-96d0-c42508993655",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cfedc55f-28cc-4d15-8070-819b63a789a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b803464-d116-4307-85d7-838d2f737380",
        "cursor": {
          "ref": "c49e222d-282d-492a-ba01-343dd37bd016",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2664d6f4-db5d-4d36-9200-32930d4ec671"
        },
        "item": {
          "id": "7b803464-d116-4307-85d7-838d2f737380",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a34c9085-dd1b-4003-ac8d-3195101adfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501b8aa0-49f5-45fd-878a-e8df948ff1cb",
        "cursor": {
          "ref": "fdf598f1-6d6f-48a4-a69d-03cf03ecefe9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "85ab32ca-2987-4d0d-9f92-213d6b89315a"
        },
        "item": {
          "id": "501b8aa0-49f5-45fd-878a-e8df948ff1cb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b4ad3043-515d-487a-b0ce-29145b71375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63190422-2e51-4e73-97f3-6e3c24634293",
        "cursor": {
          "ref": "844671fb-4a5f-452b-9b15-a7ee6f3a6107",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9d283aa3-fe14-44a9-93d4-093cedfb1ea9"
        },
        "item": {
          "id": "63190422-2e51-4e73-97f3-6e3c24634293",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cd0c6681-300d-4430-956c-e2cbd309ba86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe56a59-97d1-4189-a802-901761c21035",
        "cursor": {
          "ref": "a9f99bdd-051f-446e-9a47-1a0354863002",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e7a1fe8a-0d93-4125-8243-0bc528c5fab0"
        },
        "item": {
          "id": "3fe56a59-97d1-4189-a802-901761c21035",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f1e15aba-2024-4edd-9797-355f5630a392",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 56,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "30105b37-3c83-41e1-a1bd-af33fdc5fc8d",
        "cursor": {
          "ref": "fa43f81e-c139-4ea9-9c94-d38abb088eb2",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e5aaaa13-fd60-4d27-a66d-9ca2df3c04fc"
        },
        "item": {
          "id": "30105b37-3c83-41e1-a1bd-af33fdc5fc8d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "885d785d-c936-4b51-a3a6-a3149c682b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfc2c25-ae6a-4aae-881a-8959c88bde36",
        "cursor": {
          "ref": "967a728f-d51d-44ff-9fec-c0ad5d2d8df2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6d2efca7-1515-4ac7-8034-1d68fa1751d6"
        },
        "item": {
          "id": "5bfc2c25-ae6a-4aae-881a-8959c88bde36",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "96fbcb09-6336-4443-84ac-6d249e4afc22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245705d3-9de1-4f69-855c-78f9448dca80",
        "cursor": {
          "ref": "7523058f-92e3-4a8b-90b8-e9e5c0541822",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "85bb5aee-54f1-424a-ac82-32e0bbc63dd0"
        },
        "item": {
          "id": "245705d3-9de1-4f69-855c-78f9448dca80",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7d8506e5-358d-4d2f-b340-397c373ff490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeaae3cc-5af8-4774-864e-584b3c4e07f0",
        "cursor": {
          "ref": "a9ca4ea7-e80d-4dff-afc0-1338805cfc42",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fb9e7bc5-427f-46db-9840-5acc85363d0b"
        },
        "item": {
          "id": "eeaae3cc-5af8-4774-864e-584b3c4e07f0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "be1f3132-4d21-444a-89f7-678f8261e4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b0fedd-9846-4ca6-b904-03f274fd79ad",
        "cursor": {
          "ref": "805642f0-f415-47a4-ad35-75e82bf8d121",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4ab1dc88-f3dd-4d07-93ae-036aa557be9f"
        },
        "item": {
          "id": "67b0fedd-9846-4ca6-b904-03f274fd79ad",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "54394a35-2747-4add-8fc5-77dbc7e6eab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07fb6d7-7928-4e92-a3f8-b67c2dc5afff",
        "cursor": {
          "ref": "bfb27dd3-db49-48ec-8dd2-574f80f2b9b7",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "315c4562-0278-439f-a389-ad5bcc0a451c"
        },
        "item": {
          "id": "a07fb6d7-7928-4e92-a3f8-b67c2dc5afff",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a1031243-e2a6-4a73-9113-d0eaae578722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87893b4c-4f28-4888-9073-2f4255a4dcdf",
        "cursor": {
          "ref": "4e026eea-9ac8-4069-babd-2e48efe03472",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7fe698ba-9b74-4738-b8b0-b8eeacb61a6c"
        },
        "item": {
          "id": "87893b4c-4f28-4888-9073-2f4255a4dcdf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9768dd5d-d0f1-439f-bc71-a3c83c4c1e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9c68f2-e571-4214-b6c2-e1ac58770478",
        "cursor": {
          "ref": "e0842103-0fdf-45b2-a7b3-82bd30d0323e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d1d11186-f3c9-4b08-8e33-1e2cd28428dc"
        },
        "item": {
          "id": "bf9c68f2-e571-4214-b6c2-e1ac58770478",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cf7643ca-faf7-40f3-afd5-a2293a9c65ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "45d162ff-6e1c-4ce7-8360-618d966269a4",
        "cursor": {
          "ref": "d846fab4-b9e8-4f39-9140-ac7470af4927",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "412a3ae4-a1c0-4c68-bbb7-e4787d22e4ed"
        },
        "item": {
          "id": "45d162ff-6e1c-4ce7-8360-618d966269a4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f9cc4edb-5d01-43cd-b3df-ebc2876e6749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c0a4fa-7fd1-47ed-8e80-5f797955f799",
        "cursor": {
          "ref": "1ac6de72-b64d-4608-9c1c-54e606f91b71",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bb8dd94b-4977-4e1c-a7af-138a24f7f04f"
        },
        "item": {
          "id": "d6c0a4fa-7fd1-47ed-8e80-5f797955f799",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8228fda2-98c2-4602-b8e0-96ca7a9d661a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69001b6-461d-4466-96bc-ad85f9004f46",
        "cursor": {
          "ref": "32eb8acc-9533-4394-87a9-1c79616491fb",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d8510f9b-4aa6-43cc-9c5d-71130b108cf0"
        },
        "item": {
          "id": "e69001b6-461d-4466-96bc-ad85f9004f46",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "da020106-39c2-4e7a-ade6-514722ae09dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e0db91-e51d-4571-972f-5627297a125b",
        "cursor": {
          "ref": "7445dedd-3bec-4366-9fac-2053274c6bc1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "24228a43-62d9-4a22-925e-62cc1b6ba41b"
        },
        "item": {
          "id": "53e0db91-e51d-4571-972f-5627297a125b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0979fb22-236f-4fa3-8de9-facaaece481f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9c8c1d-d8e1-4019-86c5-8c5545779da9",
        "cursor": {
          "ref": "f2c66108-3c77-427a-9d27-85f8f5b5276f",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "59b2422b-000d-4ab3-838c-3b71b62b371b"
        },
        "item": {
          "id": "9c9c8c1d-d8e1-4019-86c5-8c5545779da9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "05e57c73-f5ce-4502-a77e-5d0fc1f497c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6d215f-cee7-47ad-828d-1db93d7d6014",
        "cursor": {
          "ref": "117d6677-1d8c-4ba7-bf77-f78e8f319bd6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f1a29d84-e3fd-46a4-8185-50426e060fa4"
        },
        "item": {
          "id": "cf6d215f-cee7-47ad-828d-1db93d7d6014",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c9180058-f106-4dca-bbf5-bb86a1e89493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753c95a9-0399-478f-b029-8c9bc9199542",
        "cursor": {
          "ref": "76b95e3f-0438-4c81-ba3d-0fb052d6ca6a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "218cdc0a-2af6-4501-a30a-1d2570686314"
        },
        "item": {
          "id": "753c95a9-0399-478f-b029-8c9bc9199542",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d83815e0-a44d-43f2-8a05-2f65d23f7142",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "59c661b0-905e-48bc-9744-e7d33c508797",
        "cursor": {
          "ref": "edd78c19-fa0c-4aa6-9f12-41b19f49bc0e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b5b30909-b3dc-4cc6-8d8b-a1612dff1624"
        },
        "item": {
          "id": "59c661b0-905e-48bc-9744-e7d33c508797",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cde491ae-3f45-4fcd-83f7-5de8dc188435",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c757b10a-af75-4fc1-bdd1-e5169442f6f5",
        "cursor": {
          "ref": "6b7f9541-7767-4829-998f-246cd216095c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c41c09c7-8da8-4c17-ad09-28faeed7f374"
        },
        "item": {
          "id": "c757b10a-af75-4fc1-bdd1-e5169442f6f5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "10c91eab-bb7f-4f6f-b21d-a0b7b91a01a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacca589-1207-4936-8660-9445942e37be",
        "cursor": {
          "ref": "21e86dd9-39c0-401f-b7ce-8ac6e939af51",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c61dcaf8-c50c-4e9a-9f50-3102968a0df3"
        },
        "item": {
          "id": "aacca589-1207-4936-8660-9445942e37be",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83aac2f3-c800-40b1-adbe-30da24831758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12eee21-0787-4a26-9ec1-4eb9b8e8dc4e",
        "cursor": {
          "ref": "3fb2a665-f307-4f46-97f3-266cf350c182",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e9c3cea9-d94c-45c3-b82a-1a98056c985d"
        },
        "item": {
          "id": "f12eee21-0787-4a26-9ec1-4eb9b8e8dc4e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "428dfb2d-0ce3-4857-b6bf-b6738830ebfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd00e620-9b3a-4be8-92b1-4d51f5a3e6eb",
        "cursor": {
          "ref": "7c6410c4-cfbe-4a5a-82da-5c453d2acabb",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "73cca1cb-d938-4eea-b978-f198c1f90d98"
        },
        "item": {
          "id": "cd00e620-9b3a-4be8-92b1-4d51f5a3e6eb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2946fb80-e9da-4152-aaeb-90c43ab65272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 904,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d9a72b-2a57-4cba-a2d4-2b7ee6e1ceb1",
        "cursor": {
          "ref": "259dd12d-59bf-4d23-bf4c-d191e5654287",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3dfed7da-02f9-4dcc-81e8-f7157b33ef8e"
        },
        "item": {
          "id": "e1d9a72b-2a57-4cba-a2d4-2b7ee6e1ceb1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e280b2c0-2180-4c46-9dcf-82c0794de17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196264c3-5b5d-4573-aa11-6ff38fc0c44d",
        "cursor": {
          "ref": "37e4fede-f375-4fca-a948-495c8a122dab",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6bebfb9d-ea22-4ba9-930f-93a843f799fc"
        },
        "item": {
          "id": "196264c3-5b5d-4573-aa11-6ff38fc0c44d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bf473718-b044-4b48-8a7b-80675d1694e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88848f51-8dc5-4894-907b-1141d4a4c1a6",
        "cursor": {
          "ref": "d3414a4f-4fb1-46ea-b8b8-2233d81216a2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e8064993-4edf-4dd2-af10-f4e0231fdea2"
        },
        "item": {
          "id": "88848f51-8dc5-4894-907b-1141d4a4c1a6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a2c22848-9b16-41eb-b618-7709dad48940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82915d9-9567-4400-8fe6-d33c1b6e7e2c",
        "cursor": {
          "ref": "67599026-4016-40ed-aa74-ad6558c8aa11",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3dfba7d5-3ea6-4d47-a56a-c81ec9721f6a"
        },
        "item": {
          "id": "a82915d9-9567-4400-8fe6-d33c1b6e7e2c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8198011d-858a-4802-9570-a70307f0af14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa4855e-67ab-4233-a6c2-d06a83ad332e",
        "cursor": {
          "ref": "f615ee89-57e7-4e58-b77a-57c830d6c278",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c05f2169-6ba6-44a6-919d-278426868cc5"
        },
        "item": {
          "id": "dfa4855e-67ab-4233-a6c2-d06a83ad332e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5180ee8f-5afc-414c-8fc3-9d176194cb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575dca2e-bfe8-429b-914e-5ec8e46bcc9b",
        "cursor": {
          "ref": "4e3d9be0-2ca5-4d0e-88b9-920ad39d1a73",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a9484c8c-9e7e-4800-884a-3d0537651537"
        },
        "item": {
          "id": "575dca2e-bfe8-429b-914e-5ec8e46bcc9b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c61d41c8-49cc-4bd3-8934-12e5e3dda782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b0c0b2-0687-42a9-bcd5-0c983cd1f188",
        "cursor": {
          "ref": "26ceb3fa-8cf7-48c7-9dbb-a8b95d4f2489",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1465ae47-f47f-4772-bb32-3d6a2cf64653"
        },
        "item": {
          "id": "b3b0c0b2-0687-42a9-bcd5-0c983cd1f188",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ba2b93e6-26b2-4239-9d3d-b9bfece6b555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2326850c-98a0-4d95-bd6f-4a58a48c0f70",
        "cursor": {
          "ref": "7691ca98-f775-4193-b31a-748c8b84df8b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c9683864-49e8-4870-a92d-3b7f7431bf34"
        },
        "item": {
          "id": "2326850c-98a0-4d95-bd6f-4a58a48c0f70",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7285bd99-eec7-4300-92d9-06ea9b562bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc6851b-8e26-4700-b90f-87b7a19f3d13",
        "cursor": {
          "ref": "008920b0-d1ba-48d0-848c-37133a0db43e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7d07c522-78bd-4d90-a79d-4bc3600f465b"
        },
        "item": {
          "id": "0cc6851b-8e26-4700-b90f-87b7a19f3d13",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "756b1ea2-0551-42e7-8269-ddb4c2e1b093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf787bb-3c87-4aed-8499-16729528e409",
        "cursor": {
          "ref": "d3ea7d9d-bbe2-445b-9e96-f4d7ec558873",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f171196a-956c-44bc-8b75-02bb6a9e627b"
        },
        "item": {
          "id": "0cf787bb-3c87-4aed-8499-16729528e409",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e2074fd7-4370-419d-b833-4891832a7073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4c38df-7c46-4d1c-a6c8-c1a93736f3cf",
        "cursor": {
          "ref": "806b0b7c-ab35-4a74-aaa2-d4a3112d4317",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3304924c-2d77-464a-b848-6f59d2c82bc6"
        },
        "item": {
          "id": "5c4c38df-7c46-4d1c-a6c8-c1a93736f3cf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6d8facd7-b1ee-47a7-9412-44f13ce26842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b74f3c-2348-4a99-ae08-d79deef2bc2f",
        "cursor": {
          "ref": "43acfc36-40e6-474c-8b9b-03061fcf920e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "288849c0-93df-47c4-9c8a-049ecb364431"
        },
        "item": {
          "id": "29b74f3c-2348-4a99-ae08-d79deef2bc2f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ec3b7f3f-a643-4558-88d1-2655b5064fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7197fba6-1912-48b8-aa55-d5ba5fcc667a",
        "cursor": {
          "ref": "4e8d2b8a-3a2e-47db-836e-b1809debf809",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "53627a53-4534-40be-9672-be99ebba46f8"
        },
        "item": {
          "id": "7197fba6-1912-48b8-aa55-d5ba5fcc667a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9e93b191-8a4b-4007-b4cc-661bac425d9b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "bbaaa87e-bf42-498b-a887-2978a2b6981a",
        "cursor": {
          "ref": "c00e57f6-f943-42f3-bd5c-c5e0d7cb8320",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3ccd4515-cf17-4dae-8572-4fb6fa84ab6b"
        },
        "item": {
          "id": "bbaaa87e-bf42-498b-a887-2978a2b6981a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3acd1d1e-18ac-4e80-85be-aef5a2f43741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acbe180-4c03-4bf7-94ee-11aaa3edd079",
        "cursor": {
          "ref": "dedbe9e0-7334-4297-ab08-b3a695b43af6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ecae0064-7a0d-4475-a3c3-a79d88fb9f5a"
        },
        "item": {
          "id": "3acbe180-4c03-4bf7-94ee-11aaa3edd079",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f7c62376-2fbb-4c35-9419-b59f39dfaad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eea43db-1adf-48c7-a6cb-e2f2efae84a7",
        "cursor": {
          "ref": "e048cac0-81cc-40bc-a8a3-236b30830133",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f8c3d653-df60-4f50-93d6-36bdce033384"
        },
        "item": {
          "id": "3eea43db-1adf-48c7-a6cb-e2f2efae84a7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e4460aca-86a9-4c28-b919-906e939cc1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5b1e42-2dc9-4c42-9b2f-7bdd06338dd8",
        "cursor": {
          "ref": "0bc02e6c-ffd0-42e5-8f12-f25f6b64024e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3c9b9d32-646b-4e92-831f-f34974f69016"
        },
        "item": {
          "id": "8e5b1e42-2dc9-4c42-9b2f-7bdd06338dd8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "97c4a99c-eb8b-4154-8611-592f1ab9fe64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476f3ad8-7aff-4e49-beb0-f81386136f79",
        "cursor": {
          "ref": "d3d18233-b924-4b4f-9b8f-ea57b66776b5",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bd1bbe22-79dd-4645-bb9f-1f99eff933bf"
        },
        "item": {
          "id": "476f3ad8-7aff-4e49-beb0-f81386136f79",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "776f22ae-905e-4679-b70d-4857ea8e2022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef003bf-726a-449e-9ccd-fc39b1f35e61",
        "cursor": {
          "ref": "bc08abdf-6823-461d-810c-08cc88dd35c9",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e18a2d8e-2635-46bb-89d5-069665d7fc90"
        },
        "item": {
          "id": "8ef003bf-726a-449e-9ccd-fc39b1f35e61",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d6006139-f467-42ab-ac07-9b98bce05105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511b993a-6d94-4af7-be33-bd601c2c6f0f",
        "cursor": {
          "ref": "9070b980-29ba-4da8-9942-559b08dd8383",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2a6a8743-01e5-4734-8535-7782aebcc2f9"
        },
        "item": {
          "id": "511b993a-6d94-4af7-be33-bd601c2c6f0f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2e067fba-d199-47ee-b903-6b26aa18971b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0590053-f33f-42b0-8256-bf62b70422b6",
        "cursor": {
          "ref": "c1cedd96-ed32-43c8-b2af-37cc8487785b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "173b5efe-0ec0-41bf-a04b-1068e0a2e1a6"
        },
        "item": {
          "id": "c0590053-f33f-42b0-8256-bf62b70422b6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0a082127-3417-4607-9998-d0964cf9833f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "859f0ebe-16f2-481c-b36c-9d046a1f77f5",
        "cursor": {
          "ref": "b46c4d18-fb01-4a1d-ac70-3d9db46bb222",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4ceb320f-7782-4d53-9bf9-3fedc3587d6a"
        },
        "item": {
          "id": "859f0ebe-16f2-481c-b36c-9d046a1f77f5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "374c4aee-a64f-450a-b159-2b04010b541c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e891b3-b92e-4426-961b-d8e72e221886",
        "cursor": {
          "ref": "71251214-612e-4af4-928f-8386af618134",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "42aec581-2f1a-4d25-a25f-6c78d7aacbad"
        },
        "item": {
          "id": "a4e891b3-b92e-4426-961b-d8e72e221886",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7b636ae9-812e-4c8b-a07c-46de8b4c6a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a04f94-79a0-473d-9acc-89ee19bdf314",
        "cursor": {
          "ref": "7383145c-a010-476f-864a-fd3dd15170ea",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d073234d-b67b-45db-8108-9a9f0d908abd"
        },
        "item": {
          "id": "98a04f94-79a0-473d-9acc-89ee19bdf314",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cc3ec6d5-dc0a-4b18-abac-e35f9396b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6cec1f-b035-454d-ae94-37dad0c3470a",
        "cursor": {
          "ref": "31036e31-6d11-4106-82eb-130c58647737",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eafdf980-187d-4046-af59-9af0fbe1bb49"
        },
        "item": {
          "id": "7b6cec1f-b035-454d-ae94-37dad0c3470a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2ff2d724-5dfe-406a-af04-eaa256582106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942de302-48e1-4b7a-b5e1-534d2478d0b2",
        "cursor": {
          "ref": "ba1e946c-1506-4aae-8dbe-2238d23988c6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "23ba5e0e-50ca-4de5-9e8d-28f04a2b38b6"
        },
        "item": {
          "id": "942de302-48e1-4b7a-b5e1-534d2478d0b2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3c4494e4-3cec-4b8a-b4bc-4d7140b32a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab51f34-8d97-4b58-84dc-356c74cf17c6",
        "cursor": {
          "ref": "41b02a76-8c6a-4621-bba3-5e3fe7fa922a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "097b70bd-04be-43a2-b41c-ce6246563df1"
        },
        "item": {
          "id": "fab51f34-8d97-4b58-84dc-356c74cf17c6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "72f559a2-b257-4438-9e97-a643ff434f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75055f3-821d-495c-8c0e-4c3b9cf66bf7",
        "cursor": {
          "ref": "dcc25218-ff2b-4337-b393-041ab0074bd9",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5109e205-32a5-4c7a-9d34-67e9f958fc11"
        },
        "item": {
          "id": "a75055f3-821d-495c-8c0e-4c3b9cf66bf7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "767e65e0-3dfe-45e8-bf9b-c0ed2d2a1a69",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "0daa67b1-dd02-4098-90fe-5696a30f2454",
        "cursor": {
          "ref": "db104187-ec8d-49b8-b127-b9d0b0576c74",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "73e31f09-d6a7-4b9b-adbc-00ca75f61780"
        },
        "item": {
          "id": "0daa67b1-dd02-4098-90fe-5696a30f2454",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4d985cd2-0aeb-4151-9a84-d5e1dd77ad18",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "b19111f4-c57d-4c2e-9a92-d9bf31b6a4fd",
        "cursor": {
          "ref": "3f6c3b3a-bf57-4731-a9df-7e4595e4795c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b32a5b2e-f9d4-47b6-99bb-495073934d91"
        },
        "item": {
          "id": "b19111f4-c57d-4c2e-9a92-d9bf31b6a4fd",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a9ce5971-6649-44ec-bbec-b679cdab7061",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "5b6aa28a-bfba-49c1-b564-b32c1241fc46",
        "cursor": {
          "ref": "e939d2c9-b86e-4456-a0da-1e194b5ec751",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1510d434-fa32-4693-91e3-b0b337e862e9"
        },
        "item": {
          "id": "5b6aa28a-bfba-49c1-b564-b32c1241fc46",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7ebf40fd-4db9-4f88-b7a4-03526ccd9cf9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "4bc2328b-a0ad-4423-842f-2417a479507a",
        "cursor": {
          "ref": "668285e2-02f2-445f-b7d8-758ec291e22b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7f32880c-461e-45d6-a5b9-a0f7d56cddef"
        },
        "item": {
          "id": "4bc2328b-a0ad-4423-842f-2417a479507a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d3bf3c21-139d-4b1b-a0ed-aaf0ebb55c6a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "53d09705-03a6-4e1a-a8e9-f72453283251",
        "cursor": {
          "ref": "ec4268d8-26ef-4f0d-a9a0-492b77ebbb61",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "91e50050-6b5d-435d-bec6-92aaef45a93c"
        },
        "item": {
          "id": "53d09705-03a6-4e1a-a8e9-f72453283251",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c4463101-b4c7-4b6a-831b-c69e423351a5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "4493fab1-e83a-426e-8753-88bd7656ec7f",
        "cursor": {
          "ref": "a40bdcfd-20bb-4c64-8e30-f308368f2b61",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9064d1f1-c749-455f-affd-c6b0dd864ab4"
        },
        "item": {
          "id": "4493fab1-e83a-426e-8753-88bd7656ec7f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f61520ef-04a2-42d0-89d8-b58943fc4480",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cb48eb-b2b2-4af5-96fe-d458a62b7152",
        "cursor": {
          "ref": "7ac552c5-36dd-4fc5-a62e-1706a394af06",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "61be41f3-1753-4651-bcc6-6a917b432a58"
        },
        "item": {
          "id": "75cb48eb-b2b2-4af5-96fe-d458a62b7152",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5953e4a4-e6fe-4d3a-ae36-64c773dde263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf8a8c-478e-4535-8050-7fb1dd24c634",
        "cursor": {
          "ref": "dd8cb8e4-9925-4da2-a8e1-df78996ce178",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "152a6b53-fb15-4894-86d1-f04a2497ce6c"
        },
        "item": {
          "id": "5ccf8a8c-478e-4535-8050-7fb1dd24c634",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5a5bf7a7-bc6f-454f-b6d3-ac06561d6acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d140855-a8e6-4520-b734-13ae9d57eefe",
        "cursor": {
          "ref": "37625a3e-47d7-4296-923a-809ad0589a8b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "47aef036-2f57-4c7f-900d-95251c1b4057"
        },
        "item": {
          "id": "3d140855-a8e6-4520-b734-13ae9d57eefe",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "838dece6-f904-4375-a66f-f76a3196d34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8477793-3386-4514-a91b-cb36a3c8973e",
        "cursor": {
          "ref": "e0a9e2ed-f50b-44e7-b363-eaa3b0320ea6",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "32eb903b-65c2-44d8-8eef-1ff3a631b11a"
        },
        "item": {
          "id": "a8477793-3386-4514-a91b-cb36a3c8973e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c7ef09d6-634c-410a-98ac-88f4d6493b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0939944a-9630-4d11-a288-3cf3e7653b72",
        "cursor": {
          "ref": "ff8a359a-832a-426f-a699-63662392518b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0aa4f2d7-1407-463f-a736-ada9a19c1f24"
        },
        "item": {
          "id": "0939944a-9630-4d11-a288-3cf3e7653b72",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "43cc4a17-9e83-4d85-b7e6-075637e7662e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e22059b-5ec6-418a-9820-460a90c36047",
        "cursor": {
          "ref": "2fbf050b-d5af-4a13-a4d3-47f070971267",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ac5cccf2-cb9f-4d66-b26d-87776e040f43"
        },
        "item": {
          "id": "5e22059b-5ec6-418a-9820-460a90c36047",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dd44bda4-c985-4094-a782-a698c2c552e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6030638d-bba4-40a3-8881-706872a788cb",
        "cursor": {
          "ref": "9d4aa4b1-257e-426b-91b6-f531b18f184d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ad23a381-849f-4fb0-a14f-3ef796d08105"
        },
        "item": {
          "id": "6030638d-bba4-40a3-8881-706872a788cb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ba2192a6-5e28-4110-bfbe-00d974964388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2384e814-8924-4d5e-b63a-33c4dc857278",
        "cursor": {
          "ref": "ba40d616-6cb2-4260-b29d-fb8a69a0bba2",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "197fcb93-bbec-4f9e-8212-f76aba605d4a"
        },
        "item": {
          "id": "2384e814-8924-4d5e-b63a-33c4dc857278",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0b958825-5c07-405a-8526-d0ff100a57dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc7bfa6-d76c-4b0b-87ba-5a71ffc8873d",
        "cursor": {
          "ref": "69fec33a-a13c-460e-861f-54773104813d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a7b2ad6c-20da-41b1-ac52-7513eccc55c4"
        },
        "item": {
          "id": "abc7bfa6-d76c-4b0b-87ba-5a71ffc8873d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1a4f4026-a1ac-42de-ad37-635835e90324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ca0630-56ce-476a-b70e-e2b3b23c5d9d",
        "cursor": {
          "ref": "b58d8b60-5da8-497e-a1c1-67225c751b93",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "69ba8b51-6a6b-4a09-9e5e-92db26a2f2e0"
        },
        "item": {
          "id": "55ca0630-56ce-476a-b70e-e2b3b23c5d9d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "efe54753-2cc0-4c11-a680-7f53a46c9494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cd94da-450b-42d5-ac98-2d8bdd236428",
        "cursor": {
          "ref": "d5955e60-369d-41c9-9c86-598b8a5f5491",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1b253308-244e-4735-bbdf-e9a25d73bac5"
        },
        "item": {
          "id": "c3cd94da-450b-42d5-ac98-2d8bdd236428",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a3b26cc7-655b-4713-9f50-c9e3cf508de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b89c04-ca4a-4b9e-82b0-3270e6641a95",
        "cursor": {
          "ref": "8e5e3977-384c-403a-88be-3a9a278d6dd8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a77a0a05-18a8-41a1-ad58-d471cd54b7ca"
        },
        "item": {
          "id": "34b89c04-ca4a-4b9e-82b0-3270e6641a95",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0897a531-5ac0-48c6-9299-0d2338cbb933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db630dc4-87c0-4df0-a835-cb3930ad54bc",
        "cursor": {
          "ref": "8f839c3f-8f31-4a0a-9e83-91fd0d04e8f5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b88fd0fe-0121-43e3-a39e-1ce87365a5cf"
        },
        "item": {
          "id": "db630dc4-87c0-4df0-a835-cb3930ad54bc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d8ef0768-9f43-422c-949b-b9c7b1bbf969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec32e775-2754-4a3d-b7f2-4a9572bd1ffd",
        "cursor": {
          "ref": "596bc3ee-bf58-4e80-8140-8cbf92457212",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c5506dcd-4862-4898-8d82-5256137df544"
        },
        "item": {
          "id": "ec32e775-2754-4a3d-b7f2-4a9572bd1ffd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "37832443-830f-45de-8a60-d563ab3c9bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee9962a-3b8c-4bd3-9f5b-fde206dae073",
        "cursor": {
          "ref": "5de2ede8-8824-4f3e-8ec7-9a20816e3713",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9bbb0471-7de1-4b09-8ec0-2ef7b8f6487c"
        },
        "item": {
          "id": "6ee9962a-3b8c-4bd3-9f5b-fde206dae073",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c8d236c9-b25d-4c47-8c2f-7c8efa6a20e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3808c70b-f652-4c86-a609-3799334aebf7",
        "cursor": {
          "ref": "a74dd4e8-3d7e-4ace-a12e-9bff2b5514fd",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cf298dba-8ff1-4362-8f12-42b35fc9d760"
        },
        "item": {
          "id": "3808c70b-f652-4c86-a609-3799334aebf7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8760f4c0-4bbe-493a-b86f-d02c22e1ae7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb72afc8-1f28-41ed-8277-a0a49149d9e8",
        "cursor": {
          "ref": "f41403b6-7c1a-4eda-a4b8-b0c19f5b7318",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "22ba86bc-0ff8-4721-af8c-46fc224fdccd"
        },
        "item": {
          "id": "eb72afc8-1f28-41ed-8277-a0a49149d9e8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "15ef0c04-1e77-4362-b558-6467f7869aa7",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "f866c1cb-d7a8-43aa-a709-efe609b2dd9a",
        "cursor": {
          "ref": "49dd1fd9-e596-49f0-bd57-c7c944fb218d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3ec8bd6d-ed9e-41ac-94e3-1dbf38292a2b"
        },
        "item": {
          "id": "f866c1cb-d7a8-43aa-a709-efe609b2dd9a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "99967e11-8152-4561-a939-d68b480b1528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fc2045-acf3-404b-a656-05ac1b4853f7",
        "cursor": {
          "ref": "bdfc2462-09e7-4a10-8e28-c0cf00e68492",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f7501545-bd24-4251-8bec-bc37621a01c4"
        },
        "item": {
          "id": "19fc2045-acf3-404b-a656-05ac1b4853f7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3f41940b-d7cb-40a5-9c67-c5eef5a9f5fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1f0761-9278-4cc2-99dd-d33d064ac7ca",
        "cursor": {
          "ref": "cb3f4052-e388-4702-b33c-64f987e66ef1",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5f105988-928a-4a7d-a5fd-3b7b453b6158"
        },
        "item": {
          "id": "da1f0761-9278-4cc2-99dd-d33d064ac7ca",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f333d2f5-b99b-4333-8843-97abcfc95d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21490e4-2217-4766-850c-0d9c019bb9d2",
        "cursor": {
          "ref": "c5af93fe-ebba-413f-89b3-bc461d485338",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7fce4aae-d544-4ec9-a456-2ddeb55ee41c"
        },
        "item": {
          "id": "b21490e4-2217-4766-850c-0d9c019bb9d2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d4f5a2e0-2d3d-428b-b7ad-03c8c3c4d67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41f745c-61c7-420a-a78d-f9b426e2e2a8",
        "cursor": {
          "ref": "d8ccb591-8702-47d5-9a57-b06fc7247313",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1cc73baa-1093-41cc-9af2-3f274bae9b7a"
        },
        "item": {
          "id": "c41f745c-61c7-420a-a78d-f9b426e2e2a8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ad706637-124d-47b9-8cce-48e64941adf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fa85d2-922c-4780-af58-3e8289155110",
        "cursor": {
          "ref": "ec47515c-8bcd-41c4-a378-808d5f8f9e73",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1f3bf680-bf16-4ba0-b333-1044a8885791"
        },
        "item": {
          "id": "70fa85d2-922c-4780-af58-3e8289155110",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dde8b769-edca-4936-a43c-6d34ff1e7726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03965485-6153-498e-b4e5-d4ce77d05400",
        "cursor": {
          "ref": "02fab814-d714-4c85-ad3d-93b803cf2c6b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e507bee9-364c-44bf-b343-39d5969dd858"
        },
        "item": {
          "id": "03965485-6153-498e-b4e5-d4ce77d05400",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cefce0b5-12fc-4ae3-941c-bf90f84aae26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2aad1c-f245-402a-8c4a-273ac0bf99d9",
        "cursor": {
          "ref": "9fae3dd9-98f5-4166-bd9f-1ab8b4b317a7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cd0905bf-0a16-4e28-96d7-99bea6a55aa4"
        },
        "item": {
          "id": "ae2aad1c-f245-402a-8c4a-273ac0bf99d9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "30ddb701-f215-4477-99b9-cdf122f1a20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48199f07-c8cf-4f42-abdb-9145c4d96062",
        "cursor": {
          "ref": "00b85f9b-b44b-4313-a656-a54ddd01a30d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c00f4f78-f5c5-45bf-9b08-5cc37b63b589"
        },
        "item": {
          "id": "48199f07-c8cf-4f42-abdb-9145c4d96062",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c537187d-8000-4367-9cfd-4d4f610c1b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5f3335-32fc-4aa2-ba2c-f5c97285e6e1",
        "cursor": {
          "ref": "02afc1d3-49c6-45e5-a491-7419b764b001",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "026a1357-1629-4d74-a458-f4131b76fa7e"
        },
        "item": {
          "id": "bd5f3335-32fc-4aa2-ba2c-f5c97285e6e1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "85a83667-8334-4404-bb97-b4db7b5c3f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f314a3-8a85-4a30-a5f1-eebbd9b4e3f8",
        "cursor": {
          "ref": "f09f333b-2372-40dc-b52e-c2f679e9794e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "591aa546-af98-40a4-9407-4357f67dc5ce"
        },
        "item": {
          "id": "41f314a3-8a85-4a30-a5f1-eebbd9b4e3f8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "55b0781f-ac85-4344-a1c3-b8e5488e856d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a24f64-99fc-4d96-be7d-1b68e7d1beb7",
        "cursor": {
          "ref": "d2333eab-177b-49f2-9d91-f10cffd83868",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fb3f4b22-f7c3-40c9-9463-d3b291834943"
        },
        "item": {
          "id": "19a24f64-99fc-4d96-be7d-1b68e7d1beb7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ea72a115-5830-4b66-83bd-7ca9fe2c8d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0825c1f-4aad-457b-a44f-97366b697bc9",
        "cursor": {
          "ref": "93b27f5b-295c-4e9e-89e2-d41b77bf238c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a0ddd2f2-3561-428d-bb1d-4e88092676bb"
        },
        "item": {
          "id": "a0825c1f-4aad-457b-a44f-97366b697bc9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "01938120-2488-4e8b-ac87-7438ffcecea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a199a68-0f71-4e5a-9247-1997ce7ef63e",
        "cursor": {
          "ref": "6e77bb3f-0ec5-4c9b-abf3-5ed9d41f862e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e66309f5-fe90-4bd3-b44e-27b6497fc1f7"
        },
        "item": {
          "id": "7a199a68-0f71-4e5a-9247-1997ce7ef63e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6a3a5a30-c419-48bd-8475-64ca668700bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f5286f-81d7-491b-847e-b351903eeec1",
        "cursor": {
          "ref": "ef27fe6d-ab93-4481-842d-ccd6cc4b87c3",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c916e132-c438-4d2a-a574-257c0eaa6363"
        },
        "item": {
          "id": "d5f5286f-81d7-491b-847e-b351903eeec1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d6b1bab4-58f1-4b7b-9f8a-395bff84624b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385d506b-a954-48d4-b37d-36cdcf5a024f",
        "cursor": {
          "ref": "6fb88286-7356-4474-8e86-af1d688b7ef7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3cdc325b-18cc-4c71-b3cf-f05271bc9eb8"
        },
        "item": {
          "id": "385d506b-a954-48d4-b37d-36cdcf5a024f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3cc204a6-d988-42ef-8286-52c9b8fcd7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc8dd1f-45b9-4657-9407-92be81f3f4a9",
        "cursor": {
          "ref": "50f765d0-4fe3-4860-8e89-a2083961f7e8",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "80de56cd-8249-4422-a7b4-519529aed16b"
        },
        "item": {
          "id": "ccc8dd1f-45b9-4657-9407-92be81f3f4a9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1129e6a8-8ae8-430d-bda5-99d5d920846f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46aad233-ac61-4a04-a7f4-f94921d7ce37",
        "cursor": {
          "ref": "0086cd0e-4b96-4a34-a059-2ce7ea7e7025",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "37e12da5-4d1b-46ca-a5c3-dd21f515a1e9"
        },
        "item": {
          "id": "46aad233-ac61-4a04-a7f4-f94921d7ce37",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e40ccfa3-5a3c-40f9-bda3-0c6c324040a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fcc22b-eab9-4e11-a828-3192a0e5414b",
        "cursor": {
          "ref": "c947edb2-5ca9-4acd-a7e2-872901cd6cf0",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1172fb19-488b-4f39-a47e-c1d86eeb966a"
        },
        "item": {
          "id": "d1fcc22b-eab9-4e11-a828-3192a0e5414b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "99a39101-1585-44e1-bd1b-10ade247067f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41754cea-a5bb-4d43-a55a-f7ef65f17431",
        "cursor": {
          "ref": "ed4a2c56-0022-41e6-995e-88b1fb57231d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "33183c65-c92d-490a-a399-576c68402ef7"
        },
        "item": {
          "id": "41754cea-a5bb-4d43-a55a-f7ef65f17431",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d4416824-4214-4a5f-a5a5-e47bbd9902fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c53799e-1677-4335-876a-d45052fab72c",
        "cursor": {
          "ref": "dbd97a3d-c5a7-4077-8fa7-0a2d578cf42b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a5e11ecd-577d-4c77-8f48-147e706102f0"
        },
        "item": {
          "id": "2c53799e-1677-4335-876a-d45052fab72c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ad64e8d1-a51f-4037-a6ee-9a87a33f3d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f274d167-ea2d-4092-abbf-3b72909f3554",
        "cursor": {
          "ref": "35f67cd0-9a06-40cc-a1ef-232d5c9bbfaf",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "326354e6-691b-4ffe-b888-dc297d2e1a60"
        },
        "item": {
          "id": "f274d167-ea2d-4092-abbf-3b72909f3554",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "84c8206e-573d-49fd-8f15-73518d23dc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5d6c0f-75eb-430f-ac3d-ac6f8269c906",
        "cursor": {
          "ref": "8357dbb1-b81b-4fd1-a6a5-869c4b1eeda3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "584b3ba0-d021-4c50-88f3-d4a0e9ef500c"
        },
        "item": {
          "id": "0a5d6c0f-75eb-430f-ac3d-ac6f8269c906",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "55bfa6df-80ac-4bae-b6d1-2d4c3585e09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7090a3fa-6d04-4ecd-bd90-51113dcee9b9",
        "cursor": {
          "ref": "0382f44c-684f-403c-ab35-d371cea7b721",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5a4bd6ea-2f7f-4508-89e1-9f38194b2faf"
        },
        "item": {
          "id": "7090a3fa-6d04-4ecd-bd90-51113dcee9b9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "35edeea9-88ca-4f04-80d1-51c6c9608424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e12d69-d4e0-4c24-9f60-2fcae4f0d142",
        "cursor": {
          "ref": "444b3de1-65ed-4b31-8354-e1117867f240",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b408c1ee-5ef2-4f77-ae9b-caaca33b0a25"
        },
        "item": {
          "id": "f3e12d69-d4e0-4c24-9f60-2fcae4f0d142",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b690a63a-ee2a-43fb-a556-468b3828218a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8d349c-0ac1-4bf9-bff7-7c51a9c7ef06",
        "cursor": {
          "ref": "4003183f-3d6d-475e-b6a5-841b379a81d2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fa09784a-abcb-4a72-9669-cc1bfe13d94b"
        },
        "item": {
          "id": "1d8d349c-0ac1-4bf9-bff7-7c51a9c7ef06",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "30e5b74f-aa90-4bc5-8447-d62d1a83176b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029f31cb-8c79-48c4-958a-1706f2eb1d22",
        "cursor": {
          "ref": "9b156b8f-451d-4ae7-ad63-147a5973122a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "da7765a2-288d-44ad-8d39-307c31d708c2"
        },
        "item": {
          "id": "029f31cb-8c79-48c4-958a-1706f2eb1d22",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d30d0b4e-15cf-408c-99da-aa8c2b503bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9628e96c-f9f1-4955-87f3-0414d52fdcdc",
        "cursor": {
          "ref": "7b3edc00-dab8-4e78-8fec-2733e19e4230",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ef493e9d-e5bc-439a-ac41-cf37730dd699"
        },
        "item": {
          "id": "9628e96c-f9f1-4955-87f3-0414d52fdcdc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "be258df2-cd9d-4cd4-b771-2f919a29d73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50221204-ee77-48e5-b73f-d77e355f82e0",
        "cursor": {
          "ref": "6b6bff82-3118-4ce2-8181-0b70e2945a6e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cb29bb8a-1343-426c-b629-39eef1218186"
        },
        "item": {
          "id": "50221204-ee77-48e5-b73f-d77e355f82e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7ff26b49-b9eb-4f7f-a5f5-1427e64242a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb62aef0-b677-4830-9388-70e5124439a1",
        "cursor": {
          "ref": "8b4b45a9-a69e-4aae-a669-00bef592b636",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "48202b83-0a42-4a13-9f02-0c933078db97"
        },
        "item": {
          "id": "cb62aef0-b677-4830-9388-70e5124439a1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3b464eeb-b537-4c42-8133-a773952919d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d55518-bab1-4f44-a4cd-c8a9594f3532",
        "cursor": {
          "ref": "b48212a7-ee9b-498e-8c18-7647fdad2c26",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2fe0993b-cecd-4943-9be2-6acb2b24b0fc"
        },
        "item": {
          "id": "55d55518-bab1-4f44-a4cd-c8a9594f3532",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "88f9c3bd-e8a9-4a6c-b250-21cd65747427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e35838-00f3-4d40-b3ef-73f91429ed24",
        "cursor": {
          "ref": "e2508a80-8f8e-4aac-8a21-875df945ee97",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ba895020-b6cc-4fb9-a025-9f832f1a1ec1"
        },
        "item": {
          "id": "19e35838-00f3-4d40-b3ef-73f91429ed24",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f8266f1d-c64c-437a-89a2-38e8dd0d0ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101c2881-2fd7-452d-bf3d-a527520d061c",
        "cursor": {
          "ref": "4ba1b308-a024-4636-b3f3-10e2b3b79443",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7908513c-3e46-4ee7-9527-d003c1ac3b9f"
        },
        "item": {
          "id": "101c2881-2fd7-452d-bf3d-a527520d061c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5d9288ac-0749-4b80-a6ae-5753094fbff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059c061f-b714-447a-9e14-f40a1beabdcf",
        "cursor": {
          "ref": "2e9d0aa3-deee-4408-b7fa-fd519737e40a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "706b384d-1d83-4e54-88ad-62e7460ea040"
        },
        "item": {
          "id": "059c061f-b714-447a-9e14-f40a1beabdcf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b376f531-ad9c-40bc-8e4b-38bf3cee099c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa9877a-5b0a-4ac3-9494-34a0a48f91c5",
        "cursor": {
          "ref": "c0df10d4-f1a0-401e-a2b1-acc9b0df22bc",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "44299678-a506-4632-8988-334fe7ec3084"
        },
        "item": {
          "id": "caa9877a-5b0a-4ac3-9494-34a0a48f91c5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6d0da6ce-5d33-4a3a-b924-5d06c7779566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8da8ae3-7bcc-430e-95d1-b4c30129efd6",
        "cursor": {
          "ref": "a5ce4e99-380a-4077-825a-b4ac97001fa1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bf8ad188-1bc8-4d84-9989-04d735aee4c2"
        },
        "item": {
          "id": "d8da8ae3-7bcc-430e-95d1-b4c30129efd6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f5f12cf6-2ae1-47d5-a065-3a1f70c9d579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3306a51-51be-4fbb-84a1-183498a53fd8",
        "cursor": {
          "ref": "d3f2117b-869f-4479-b6a0-0f2c8327536b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "83c4e22e-871e-4421-b8a5-00f5df8cf8cd"
        },
        "item": {
          "id": "a3306a51-51be-4fbb-84a1-183498a53fd8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f0a42ce1-7a39-4220-9627-3e625cb50556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67fe306-67f4-4982-87bd-8e6b1fdb9213",
        "cursor": {
          "ref": "d4b0b3b5-cedb-43ed-a31c-f84364c738c0",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "31a54494-9350-4c03-af80-61e9f1706f0d"
        },
        "item": {
          "id": "b67fe306-67f4-4982-87bd-8e6b1fdb9213",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "921079c8-2d9b-4c82-92d2-b3a438d72759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a503110e-f158-4d08-a599-69c1dd5d3a11",
        "cursor": {
          "ref": "19105bb2-2a87-4b57-9199-84f8ba84d05d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2426f153-14e3-42d0-b2ba-347e65767955"
        },
        "item": {
          "id": "a503110e-f158-4d08-a599-69c1dd5d3a11",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "17b7731d-0e52-4970-af66-b9bdfa0baa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3c447f-b582-4c64-a98f-66f81737d0d9",
        "cursor": {
          "ref": "ebe30793-2cc5-4ba3-9a40-a2ec8b73d495",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "729df779-cc33-4169-9e90-f04e25b4cf88"
        },
        "item": {
          "id": "9c3c447f-b582-4c64-a98f-66f81737d0d9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "949c46d8-9fc9-4360-9a1f-e8614cec5096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f093c6d-ec4f-49e4-9373-e1cf43f423ac",
        "cursor": {
          "ref": "b55b8fb5-f078-411d-84ed-8d97561c2b95",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "023cb6c5-1ee9-40fb-97fe-9f067b712154"
        },
        "item": {
          "id": "7f093c6d-ec4f-49e4-9373-e1cf43f423ac",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "65a5a2a2-462d-49fe-aec6-239914a76df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eac7089-8862-49f1-b96a-4f2082547971",
        "cursor": {
          "ref": "71c695b4-44ac-4182-a716-d1b937282bbe",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "57180878-364e-4385-a78f-60ee4bcc6d4b"
        },
        "item": {
          "id": "9eac7089-8862-49f1-b96a-4f2082547971",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d03308e4-dda1-420c-a249-a312fe4a6e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dacab97-7e9a-4868-836a-e09615898296",
        "cursor": {
          "ref": "8fbe6a7b-4386-4882-9ca1-402b6fed1755",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ccbc78f4-1770-42ea-8d8e-33eabb52c73c"
        },
        "item": {
          "id": "6dacab97-7e9a-4868-836a-e09615898296",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a2fea466-9623-441d-8de4-2443586dfd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9674e48c-017c-4bdc-93db-5ffb9f325aad",
        "cursor": {
          "ref": "3e6f211d-f581-499f-b185-23846f4a4f50",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3d517693-611a-45b2-8a43-d3609f4d4f99"
        },
        "item": {
          "id": "9674e48c-017c-4bdc-93db-5ffb9f325aad",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1ff515a9-43e1-4bc3-9871-8739c43eecc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3bb0be-a053-4baf-980c-5655b3e883b9",
        "cursor": {
          "ref": "39285a99-7fc0-4aab-a3ae-7376a9f97b62",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "58b1d639-0720-49db-901d-9f1e56944fdd"
        },
        "item": {
          "id": "aa3bb0be-a053-4baf-980c-5655b3e883b9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bcb3b9e5-a5ae-4a2b-9853-f51c9db5617d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dfb797-5cc3-495a-908b-3f6f3e823c1e",
        "cursor": {
          "ref": "e9294416-50ba-4319-b4d1-7f3c37c88c61",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "dbdc5be1-cdc9-47f0-be38-6dc984b2a7aa"
        },
        "item": {
          "id": "90dfb797-5cc3-495a-908b-3f6f3e823c1e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1afa548c-6413-4d24-a914-9cf1d69e983a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d729661-fc0e-4e83-9d9d-3a66a66b1adc",
        "cursor": {
          "ref": "e6dd5454-bcce-4cef-84f8-a94f902a5fdc",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "35460da1-920a-4f70-baff-0e876e6d461c"
        },
        "item": {
          "id": "8d729661-fc0e-4e83-9d9d-3a66a66b1adc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f9b5a8a0-c8e4-4f96-8161-8050ac0b5b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2031bfaf-318f-471a-afb0-8df57c075472",
        "cursor": {
          "ref": "d3ad3102-9dd6-4fc2-a7bd-48c393338829",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "13b4bc8d-c4ef-41a2-aee8-5d258bd58ced"
        },
        "item": {
          "id": "2031bfaf-318f-471a-afb0-8df57c075472",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0ab4d8d6-087d-4a69-8461-5850d16d698f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3000cad0-4841-4559-80a8-6caa3f5972f9",
        "cursor": {
          "ref": "83c69f9f-5fd0-4340-8b6e-9277d939e528",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "032e9343-8502-4ce9-82b5-c74c4897c921"
        },
        "item": {
          "id": "3000cad0-4841-4559-80a8-6caa3f5972f9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "327224a7-85c4-4eda-81ff-017b1d220efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff6838e-fb80-48b3-a358-cc9d984ac3d5",
        "cursor": {
          "ref": "645491a6-ae6b-44e1-aea3-24bebd2dc9ed",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bd1d32fe-ecd6-4b92-b0d1-b75c93f34ffe"
        },
        "item": {
          "id": "6ff6838e-fb80-48b3-a358-cc9d984ac3d5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "529e5e05-f18f-4a0f-a1a2-28cd089c0e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608129d8-0637-456a-bd79-70b3bd565189",
        "cursor": {
          "ref": "a0bad8c3-8f65-44a4-8082-f8e4079ed79b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "62377c28-c83c-456b-a4f9-a7f8fe032859"
        },
        "item": {
          "id": "608129d8-0637-456a-bd79-70b3bd565189",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d18de81b-d6dd-49d7-8263-7668a0e45116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f525cd5-4dab-4310-a5c1-05b490b52d7b",
        "cursor": {
          "ref": "21675e67-c316-4405-a2d6-aca4b1fd21a7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97120aeb-cbc5-418b-8dd5-731c9fdb476a"
        },
        "item": {
          "id": "0f525cd5-4dab-4310-a5c1-05b490b52d7b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e609d7fe-7e03-41a6-86a7-2e769e5419ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35071e6-fb91-4cad-ba84-8b5907cd99dd",
        "cursor": {
          "ref": "eb170642-fc5a-41df-ae9c-6efec86cdfa6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2ed5c4c0-9e40-44c6-9a50-fedbe9de77d6"
        },
        "item": {
          "id": "d35071e6-fb91-4cad-ba84-8b5907cd99dd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "79ab3a16-9f65-4cc6-aba5-e83157f8e09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23424ee5-eb2f-43c4-bbe1-850e1ee8e088",
        "cursor": {
          "ref": "f56c6ba7-e05c-4d93-bc15-d9f81419fea3",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "241c1678-d84d-43a6-9eb5-c1b91e964964"
        },
        "item": {
          "id": "23424ee5-eb2f-43c4-bbe1-850e1ee8e088",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7aa7d93d-6237-4e7d-b240-6e27780c05ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206497d0-23f8-40a3-bff1-e81eee366492",
        "cursor": {
          "ref": "8d639ea2-234a-4e12-9d89-9f38bd7446ef",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6b38f07c-fa17-4ae8-aba2-b94eca09e89c"
        },
        "item": {
          "id": "206497d0-23f8-40a3-bff1-e81eee366492",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0a498901-f01e-4969-b38e-14d6574f5106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737dbe38-134f-438f-a5d7-a5567df09de5",
        "cursor": {
          "ref": "93585c25-1df4-4fda-9520-bc41233dd8e0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b2cc33f8-3e34-4206-810d-7821c8858313"
        },
        "item": {
          "id": "737dbe38-134f-438f-a5d7-a5567df09de5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4db77000-4dc2-4a41-8ee2-6de66928abb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00718c5c-c030-4b0b-bd36-50371a00fbc0",
        "cursor": {
          "ref": "a33646de-8ab2-4e7e-acc1-2164af77f499",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b95374d9-2a05-46b8-8bf3-866c79f85a17"
        },
        "item": {
          "id": "00718c5c-c030-4b0b-bd36-50371a00fbc0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "09e97858-f144-4fda-8fd2-454a4b1f2e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8d421e-5325-428c-a487-b23329d72cfd",
        "cursor": {
          "ref": "d2286916-04b7-4389-b046-36ff37810c6f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "11a1e504-7d67-4be1-945f-3c6f94b17aaa"
        },
        "item": {
          "id": "8c8d421e-5325-428c-a487-b23329d72cfd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2ea4d79e-4201-4fee-813a-9124dad0299d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10acef2c-7b7c-4003-8f36-71a3bc4407a8",
        "cursor": {
          "ref": "e1c1b230-e31b-447f-8e38-67a7524ec832",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d5733ee6-1077-415d-b2ac-619d14737beb"
        },
        "item": {
          "id": "10acef2c-7b7c-4003-8f36-71a3bc4407a8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b5f0042f-8f0c-4a1d-8218-09e979310e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c206cf6-6949-420a-b91e-9020f47baaa7",
        "cursor": {
          "ref": "3f87644b-ff3b-4cb8-b3af-a90ba8bf05a8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "63be2ce3-dea2-496a-90bd-c7ad66c8f8e7"
        },
        "item": {
          "id": "6c206cf6-6949-420a-b91e-9020f47baaa7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0443f9ad-b3a0-48ac-83a2-336408511ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637fe7ac-840e-4fbc-a25b-4cb419dda3b8",
        "cursor": {
          "ref": "757a41b9-b378-4ced-ac69-e2eb2502e571",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c3b988bc-ab6d-4067-b5b6-d026bd46be63"
        },
        "item": {
          "id": "637fe7ac-840e-4fbc-a25b-4cb419dda3b8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7c1b179f-6382-4ff2-ac84-4fbb207362ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccef476-ffaa-42ed-9470-068b811cec58",
        "cursor": {
          "ref": "03d7fe86-fc56-4879-a2d7-4a1ef753bc4f",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d4c0c051-a051-4120-ba13-9a4f33dd0c51"
        },
        "item": {
          "id": "4ccef476-ffaa-42ed-9470-068b811cec58",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "880786a6-def6-4034-b6af-25a1f5830924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a38c50d-8505-4bf6-bd6a-7ae81e7bdd2c",
        "cursor": {
          "ref": "2e9a3856-a470-44f0-a943-8e532805b774",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4b7e3ada-6635-42bf-9bb8-0028236e9340"
        },
        "item": {
          "id": "6a38c50d-8505-4bf6-bd6a-7ae81e7bdd2c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c0a154e5-d804-4435-9afa-d92161a23f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415fa567-09da-4c60-a747-a2bcc73f7893",
        "cursor": {
          "ref": "a350a0d1-eb08-4aca-bc2a-f4aa60324501",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0f90cb3f-be1e-4a43-918b-03fbeca4bd23"
        },
        "item": {
          "id": "415fa567-09da-4c60-a747-a2bcc73f7893",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "98605883-2b49-437e-9b3e-e0558bc6f2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9993f4b7-b67c-4560-a20b-983ad19be717",
        "cursor": {
          "ref": "ad2c9dc8-d8fe-42f8-8175-12e20ab960ff",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "121aa29f-79b4-440b-9e20-5f51acbe471f"
        },
        "item": {
          "id": "9993f4b7-b67c-4560-a20b-983ad19be717",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "09090096-75f9-449e-b547-0f245c522a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26709e3-f10a-46a1-ae91-c861c7f415ee",
        "cursor": {
          "ref": "613ed380-222e-4e8c-a30c-f9caae4482aa",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3bb18614-1597-4d57-806d-fa16ad2d8852"
        },
        "item": {
          "id": "b26709e3-f10a-46a1-ae91-c861c7f415ee",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5491bf0d-6f6d-4693-bd83-3c35fd6134bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151c2e2e-4a2f-4c82-a01a-0820d3b10f37",
        "cursor": {
          "ref": "29d43ca3-5931-426d-9361-a345071396ff",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bcb0a3cd-531c-4f70-a5de-0c257b613c80"
        },
        "item": {
          "id": "151c2e2e-4a2f-4c82-a01a-0820d3b10f37",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6aefbb60-b993-4490-94e6-f9078e3e866a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b6a72e-444e-4d50-9954-a0ee6ddb8e97",
        "cursor": {
          "ref": "3264352c-5ef3-4464-87ac-de328d9ee58f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "0dd4e47d-d1e9-496c-b384-7db5ee9c07a9"
        },
        "item": {
          "id": "d2b6a72e-444e-4d50-9954-a0ee6ddb8e97",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b8d67c25-83b9-442f-9cd1-3ed3ce77cd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be572b09-b93a-45d1-9a8f-5f09b3304532",
        "cursor": {
          "ref": "27975289-c290-451f-86d5-45d13b353f04",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0ac710cb-9da1-439c-93df-7ffce08b9140"
        },
        "item": {
          "id": "be572b09-b93a-45d1-9a8f-5f09b3304532",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6c78097e-5ec7-4d35-943d-b0ecec7a8955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4153fe-392a-4aac-a979-5e9ac3369e88",
        "cursor": {
          "ref": "4de23312-8b5d-4d18-befa-557e1bf452c5",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "d72a65d5-83d9-4faa-9cba-bebe961b0ac4"
        },
        "item": {
          "id": "4b4153fe-392a-4aac-a979-5e9ac3369e88",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b5180e2d-cac5-4962-bc37-45263ddf41bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262447b9-c892-4dc3-b00d-6f8ebebf65d7",
        "cursor": {
          "ref": "fc794b61-c67b-4224-bffd-b8f9984a7b8b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "883c6623-3b67-43bf-8ed2-2cc1e298aa87"
        },
        "item": {
          "id": "262447b9-c892-4dc3-b00d-6f8ebebf65d7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d244403c-179f-4721-aceb-5fa5c348140d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d3dc89-642f-4697-8b4d-a499d0fa36ab",
        "cursor": {
          "ref": "06b0a0e1-a66f-46a3-b137-50ed3fb78b8f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a8179f7a-9885-4010-b358-d277466dd12f"
        },
        "item": {
          "id": "e9d3dc89-642f-4697-8b4d-a499d0fa36ab",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d6d564b0-148b-4c8f-9c19-3136448e08d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccd64a5-220e-4e0c-b8ba-e073ce79dce5",
        "cursor": {
          "ref": "d808a0f8-d509-4cb7-a804-45a917108422",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a3ef4913-32b8-4756-b5ac-1038f790ab77"
        },
        "item": {
          "id": "dccd64a5-220e-4e0c-b8ba-e073ce79dce5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "75e851c6-e09a-4d04-852d-68d61efadb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7b6f6f-936c-4a08-b07e-ed903340093f",
        "cursor": {
          "ref": "9b5a1788-cc12-449a-82c5-7b1940202551",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5877b788-a3c5-45e9-bb72-afe7424be664"
        },
        "item": {
          "id": "bb7b6f6f-936c-4a08-b07e-ed903340093f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8299a707-e4b3-42cc-965e-e342f6b2b5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59c82e0-c434-4dc0-be12-71f5d87245b3",
        "cursor": {
          "ref": "c13ec5f2-04f3-4b80-92c9-a70711865c6c",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6697db02-2888-4456-bcbd-4a27a15f8d8e"
        },
        "item": {
          "id": "a59c82e0-c434-4dc0-be12-71f5d87245b3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "90916b7c-3ca2-434a-8296-2e67606f10b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d96c17-218c-4df4-ba1e-1dc0e085a2dc",
        "cursor": {
          "ref": "80c2b174-a815-4237-876f-0bd8294b2d3d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "552ae5e2-cf93-4536-9c37-37a3cef20369"
        },
        "item": {
          "id": "60d96c17-218c-4df4-ba1e-1dc0e085a2dc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0caa1411-3c45-4bad-a0d8-d052e8acacd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e91e104-f8a2-4fb0-9f79-e77883c080d7",
        "cursor": {
          "ref": "2733fb9e-52ff-49d8-b59d-70f8a2b82006",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0f9fecdb-6db2-4a21-894a-0ecf66759385"
        },
        "item": {
          "id": "3e91e104-f8a2-4fb0-9f79-e77883c080d7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "042fb55e-bd2f-4584-bfb5-0e51599bae29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93683eb2-ab40-4998-9345-e6550c2e0e43",
        "cursor": {
          "ref": "80fa207e-b231-490c-862a-5333d1b1e88f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4a288724-6ca0-4bc5-af94-f7aefe89cd21"
        },
        "item": {
          "id": "93683eb2-ab40-4998-9345-e6550c2e0e43",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "59cc3189-0d88-4de8-afe0-81634282b3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010327c7-2460-466c-a1dd-93d330a8a88e",
        "cursor": {
          "ref": "70031ea3-c4de-4fc7-afc7-8856e9545e9f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2ba856ee-1188-4435-aade-327cd5b30378"
        },
        "item": {
          "id": "010327c7-2460-466c-a1dd-93d330a8a88e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "67935123-3c3b-41ce-ba67-27ea91f21013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed2fbde-0a13-4158-9560-3280f222e069",
        "cursor": {
          "ref": "ce245cb2-e38b-4800-9429-f74738c4b0bf",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "195b46c8-e9b0-4d23-951f-3c16f0e6a603"
        },
        "item": {
          "id": "fed2fbde-0a13-4158-9560-3280f222e069",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3ea882ea-502e-4e47-a820-264d750d7855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc60ef0f-792a-4ddc-bf9d-4d7150dabf84",
        "cursor": {
          "ref": "0c3e5a93-71a5-4843-b3d2-40c4308bda18",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7007d7dd-a480-4bcf-af03-d9c764339b89"
        },
        "item": {
          "id": "dc60ef0f-792a-4ddc-bf9d-4d7150dabf84",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "af727ead-630b-4778-a542-b75d00cfbb9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848ce2fe-28b6-4a9f-9baf-cfbf29f68bd6",
        "cursor": {
          "ref": "bc5b0d79-40de-43c8-b2c0-1e2b2d5bf9eb",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "61b1701b-1dbd-4502-a2a6-3e0f36e4f3ec"
        },
        "item": {
          "id": "848ce2fe-28b6-4a9f-9baf-cfbf29f68bd6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "427268eb-ac41-4d06-98f0-da6b222e095c",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8f01d4-97eb-41ed-8b33-c4884b6af131",
        "cursor": {
          "ref": "fd94094c-aa46-4a3e-a84b-602e7062ae30",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d60c9b8b-33c4-494f-b481-5820f211e886"
        },
        "item": {
          "id": "ab8f01d4-97eb-41ed-8b33-c4884b6af131",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f60f958c-f03b-471c-ad6c-b31c078300f4",
          "status": "OK",
          "code": 200,
          "responseTime": 4615,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "680b5719-0e04-4c7a-903e-6497f6fe8bcd",
        "cursor": {
          "ref": "e8425b82-d8d7-415b-8b89-ce00a3336088",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2be16ce0-02b1-4772-8c6c-7ad88ad736ad"
        },
        "item": {
          "id": "680b5719-0e04-4c7a-903e-6497f6fe8bcd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7adb3954-c537-477b-8d37-f8e8f317be67",
          "status": "OK",
          "code": 200,
          "responseTime": 3778,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "62796ff2-4246-4dbc-9772-780335432bf0",
        "cursor": {
          "ref": "f6d942cf-9151-44a5-ac48-0d2d790226e1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1df02f5e-e0b3-41c9-9fbc-381f9142de60"
        },
        "item": {
          "id": "62796ff2-4246-4dbc-9772-780335432bf0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "92e9a5d3-0b8c-4fd7-b1f8-2f7c4b99a119",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62796ff2-4246-4dbc-9772-780335432bf0",
        "cursor": {
          "ref": "f6d942cf-9151-44a5-ac48-0d2d790226e1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1df02f5e-e0b3-41c9-9fbc-381f9142de60"
        },
        "item": {
          "id": "62796ff2-4246-4dbc-9772-780335432bf0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "92e9a5d3-0b8c-4fd7-b1f8-2f7c4b99a119",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafd647e-01b8-4d70-bcd7-42286cfa6430",
        "cursor": {
          "ref": "31061b74-8a6c-4eaf-9ca7-7eac9d93a063",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "07b5faa1-1811-49b7-bb9b-5d75b9f05f3a"
        },
        "item": {
          "id": "cafd647e-01b8-4d70-bcd7-42286cfa6430",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b56882eb-86d1-4093-b8f1-3755cbc83a56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1808d19b-56d6-42eb-8cee-35074c1af938",
        "cursor": {
          "ref": "496eaac9-33a2-4c35-83c3-f39d2403adc8",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "c4e44718-174a-4241-8d72-40145df476cc"
        },
        "item": {
          "id": "1808d19b-56d6-42eb-8cee-35074c1af938",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "924f4498-df8b-4616-be01-939e699a8c1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}