{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "15addbe6-a85d-4b84-983b-d109450b5217",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5d2ff047-c80f-4d88-932d-a6875923ac71",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e08339cf-c5af-4063-bdee-23c6d70b7ef6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7c251de5-905b-4bc0-8355-d73f19447f66"
                }
              }
            ]
          },
          {
            "id": "ec446569-2a3b-43f2-b7bb-4666188bf28f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de6f3c4c-ce21-4dd0-969b-924b74bfc057",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "887ad5b8-8b5e-415e-a3c8-9f4d87922954"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e57c045d-967d-4789-b02e-27828bbd46a4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0fbc3173-2df3-4116-96a6-f196c5416a15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "41927b79-0c7c-48e5-9e21-b5946724e9f7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7969b91-06a4-46f7-879b-91772a111aef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94f113ce-79b4-44e2-ae59-c91b32503dab"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a638d36-cc17-4096-a6ca-c3fd58f79a4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e64d3d5c-220a-460e-99c2-09a49ae97f79"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "112f4aa9-2c0f-4447-8082-753c4be45ba2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5e4a140-4d1b-454f-a03c-2f9890ed3d12"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b52ca7dd-629b-4265-ad47-b5a717fca7b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "086792ea-0cb5-4e9c-ae4d-10aee16c87c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2e9fc94-13d8-4efb-b54e-f4c8acd61adc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46318fad-9de0-44f7-ad8c-92fbe91604b2"
            }
          }
        ]
      },
      {
        "id": "e99309a9-54e9-48a3-a869-21b2cccb4689",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6c79d395-c29d-4703-a327-85c3cee92389",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c59f023c-360b-45b2-a5a5-888fc60334e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f86e3c40-72f6-4bac-b145-3466f7cb82ab",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d221c9de-96dd-47d5-a44e-5861e0e164c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "780cad95-e7f7-4efd-9386-7b63aa038ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f369ec78-ad79-4af5-97cf-ce8828924532",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a9bce3-de83-460d-8d81-75a86ba418c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7efd00ec-e6a7-4c1f-ad7d-7014b650e5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daba324-f5ce-4362-94aa-deed201cc2eb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "754fcc2b-89bd-4da5-ad80-fb5fb4311887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78844748-fa29-4f42-ac82-e38231d8eae8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b628240c-0dc2-4b14-88c0-d7c9a0de7552",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2984d610-e90a-40ad-877a-8721acc017b6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0c4966-7255-4961-b9ff-7d4602927ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7abee120-58bf-41b6-ac98-6c9f089a4906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb2e0d6-fe6f-4a79-ad4d-c8519a2707ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b0f634-27d5-43dc-81d4-adc9bcd4e169"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9fc0812e-b823-4737-8eb5-76d3050417d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "09ddd300-e182-4a17-bdad-d79e523b8caa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36e8f678-4e79-44c3-93f8-7116f2f2808e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cb783ffd-f2dc-421b-8982-304c37ccab0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da347c17-0df4-44fb-92a7-3bc6ae998f1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0005d672-82f0-4a47-8e30-6912f953db07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14ff19e5-422a-46bc-be7e-b27b918c8865",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "113c3e15-22bc-402f-a0d7-670d98812155"
            }
          }
        ]
      },
      {
        "id": "5435f8c6-4c01-43e0-bc24-c8eaa8522528",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "06529f37-c3e2-4d7e-a1ba-aaa3e7ecda2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6fdef6db-25c5-42ad-a80e-040622e5b22f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "46afe9f2-2d48-43c5-8ec5-8d1dcccf7ca8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfa8c6b-ae91-482a-8303-b569283becec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6eee04-8254-42cf-a4dd-da180b631b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d4419f-fd7f-4a2e-ac7b-295ace08f886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7635844-35ae-44af-abf4-2e0d370d348a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c89a5a0-404e-498f-98c0-3ea2db0934e5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbc6cd9-3799-472d-a55b-9cd01060f9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290ee2b0-ef81-4030-bc9d-9d0f181eee8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78560fd-e655-4158-bc56-7ecdff405a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd765f4b-c563-403b-be4d-9aab29b7f6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a924fc1-5eca-481d-882e-7c80f0e50ea4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f299300c-dbed-46c7-b409-fde01b0af674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03edb5cd-8b6d-4fbd-85b4-604415a0a804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c74df4-cf20-4de3-87a5-06e59c2e170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9db4e43f-47cf-4ac3-9570-22953e6ddc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec21adb-b839-4625-9ce9-64c7a455c291",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0074b09-2a55-42b4-ab81-c22cf0aa94cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ed81b9-15ce-4770-a497-8cde3904f690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619d42fc-3cdc-4f80-92ad-6daf67066898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b726171-a5e4-4bcc-9b52-0c1e9255b90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea76cc10-22f0-4a95-9eac-49280f889a7a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e777f2-bd45-4842-8013-011830d6d29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c097c588-0ca2-4f55-9124-4581da8d6d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9c351c-4145-4070-b8a8-555053a1957b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28ee0fce-b49a-4e08-8d2a-c29178d957d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4145bb-8b10-45c6-8fd8-ccbe021146bb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0850540-d1fc-4f31-903c-6993cbe2736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b365d0-d8d0-4448-bd26-b9fa3c62185c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e388779-c12b-4078-b179-949145e42578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83ba2696-a534-4207-b958-58950f25d07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c317df-6ec1-4b24-a952-daa267e5d6ad",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5291056-14d0-4c3a-9d89-dcffc3890b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b0c012-1bc7-4a99-bd07-b73fd54caebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47e4bc8-972c-4891-a41d-376d39ff0d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c553202b-aa4b-40e5-8a09-cd0369ecf714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6094a0-7ada-46fb-a5f5-5e03109f624b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bf1e10-dfe0-4362-888e-ac532b09e9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf2d2c9-7cb0-4e93-b964-18aefc9fce81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be67109a-ff56-4f5f-8420-b286efd0bbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "210b6fdf-c4cc-4233-8c2a-ce03a4999b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3a1cad-6151-4a05-85c0-014c7a3f7893",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f35978-0856-46b5-97de-26d230b81f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db38637-f91d-49d4-9ac8-4ad8db4963e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e59063-b9ed-452d-9814-138bebb1814e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53c029e4-e13c-43e4-ac7f-5213e8dd1635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c348ff08-921e-4d1c-82c4-6f3f27c6e227",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f03aec-1337-4309-ad1c-f5a641101589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6880c49b-3bc0-41e9-99ff-fc72287fde9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017a2576-9e62-4328-ae91-96b9ae49d43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e3c21b2-2ab6-4ec5-818c-8c3c89f22e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660c4aa8-eab8-42f0-a547-0cd8486be512",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1fd1d2-3427-4687-b9a9-cba2d68055b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f35de16-5430-4e87-988c-7957ef208485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b2ee1-18c3-4368-951f-557f19a04ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76e46367-3d50-4243-bcdd-f01956bf4582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0113864-021f-43b2-b46c-206c09230cae",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f51415-f7e0-49e3-9761-b0236a4255a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe74a6f6-5791-498a-8fba-73de51e525c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce95333-5fb6-4f78-99d2-eb02a502ae32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94117629-3144-4a27-aaa8-0d33dd898da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e079544f-414d-43d8-879b-b9b5af14b7a9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fec256-550e-48ae-a2b5-4343588e5f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1909ab9-0b9c-4404-9258-73f44b98d1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12a1e1d-16d8-415f-9a22-d34cc36c0461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de660aab-56df-44a1-a8e4-37f8e115bdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07221fd6-6e23-4e41-a878-9cc4d7371d1a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a12784-0dc1-41b1-83ce-5d4effd87d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e51c800-c1bf-4934-9928-685439d0671c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fff047f-4009-4ce5-8ecb-729b1c295fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c2564c9-a90b-4892-9d24-956168718acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb9f0bd-d8af-4fdc-9aae-1354099cc6dc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1f266d-a6ec-43b6-92cb-9dee09145fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab650afc-a0ee-41fb-a1a0-0ac47d04c69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac70a0f5-4ead-4f3f-ae32-cfb54d95b9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7077686a-a234-4bcc-82b7-aa4dbbc5cb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74018716-4d1a-49f5-91d0-4efe230e60ee",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce47177-e600-4b84-a7ef-d8c272a43629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c05715-8cbf-4e9a-898c-c55ff1ad8619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccabb8d4-0c48-4256-b5d6-391d4565c18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edee61a9-e820-4c3c-8016-0f7e4bea4d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df598834-bab3-4738-9d19-2556057bf7f4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d70bc6-ef21-45d7-a678-91c8e619266b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3fc200-7be8-4341-8ffc-bf2963b7e05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeec85b4-9bcc-4666-93a1-1d10ca5a729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c412fdf1-d009-432c-9b64-2b710331b578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f5b991-cb5b-4c02-ac5f-8e748b8b2fb0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1963bf43-cb72-4f72-be08-6f2aa78960a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3df4b5-7868-4862-9165-a93d2b12fe4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c43f19-0189-4c71-8988-2aaf82eb748a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea06b815-6b86-4216-a9de-bb5166ad2bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903d4ae6-0895-487d-bd09-8749f7a1049e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d2cf67-452d-4da7-8957-8aaad9e08d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cb942a-65e7-41f6-9c6e-029a01ca4841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a8b3ce-8baf-486b-b754-d7332c4bafe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61fd4e8b-0b16-40ac-9818-71f5592e8b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4414db-c511-4097-b699-445f4566e6da",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e211399-8442-4d38-b018-35ccbfff9a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251b5978-2bac-4dc6-91f6-871c39f8141e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433ff085-b1e8-47df-aa12-19f78d767c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "332bc51a-71f5-4c05-ab77-2c3174a21760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52c08ac-7bdd-496f-88fa-b67d1afeeb6f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9040075b-4032-4b8a-aa96-911ab13436c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d839eab-58fd-4c1e-adcc-441f9f208428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266fbfb4-0447-44c0-9a56-eb403c1a720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89a85fc5-5c6a-4efb-a8ad-909ae89d73a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925a2974-8e74-480f-95ff-4d4f16331040",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4c7412-bd25-4e3c-b104-ea8bedc2b930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35275e78-5319-4950-b091-fe44ea1841a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcd48eb-841f-469c-bd43-c24524f1f1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "166de5b4-857b-4f6b-bae0-4de1a212f87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d60dd7-1bb5-4693-a01c-e05d8494ef51",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a354417-d5fb-4cdf-8d80-4a5f59f38850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354cb322-5a96-4d1a-96aa-9cb3cd067251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0347eff-7de4-4c60-8559-2a406c9b7233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed133279-234b-46e2-a066-206e89b64b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac28aac2-c689-449c-995b-577292999795",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abc91d3-789e-4c5f-84c8-775156956261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2691a0f-8451-472e-a81e-87108344a4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31172bb-44e0-4f73-97b1-9714237d20d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bf509c-b808-4ff0-8ff8-b923583cc89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f18d779-d202-4956-8439-3c8f1d48c97f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f77c9d-165f-47c9-9c3a-cf2eb350284f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1723ccef-c05f-42b4-b0e4-eddcba9e3d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf4989f-06bd-4cc1-8434-07b71486f32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b16068e7-e9f8-4dcb-b867-9c61ab9ac4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba46208-070b-4aea-8d1e-df03beea050e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bbd911-17f2-41e2-be35-68ae469e89f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85fb52b-8446-47d3-87cb-8860f54bb665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a630524c-ba00-4e65-a6ca-19d2f42400e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "852508fc-8e5a-4270-b093-e847f682b320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954ef376-7d88-4593-b081-e735325366eb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55216381-92bc-4b0c-9ac2-c63ab684926c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ff5446-cc4c-4eb7-9bfe-c19fdbbe8509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8bac52-5f29-445a-9595-45b3484f62e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0f195f-b685-40c5-99ab-31457fdbfd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c268f6-dca5-46a2-baf9-16802dc7e10b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b181c4e3-1b32-4085-a58e-e360f0fa81a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e3f20e-b359-4f44-95e9-b4660622fca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6040cf2b-fb43-4968-b8a5-f1b35eefc3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f668c7c-8a82-4ede-8ebb-cb89a74bf36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72895ba-de4a-4d75-9d25-060cb575c6c9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf408f30-6805-4c0e-9740-6283bb009912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6732107-18eb-46fc-8481-5d863fbca6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec75bb52-8a05-44a5-ab83-a6a8a8157ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4774e60-56da-43b4-9645-06039c3ccd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165e2460-bd4f-4cd1-a1c2-9ff1d5d58d58",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d78a59-d608-4960-98fb-256027345681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ed8b63-ecf0-40a7-80f4-21f7776b1543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b237ccce-5a76-4897-b6c6-4d25cb58bb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbb7a6c-b3e7-4b1c-bad2-d075232e6678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff5bf42-dad2-4a36-a333-191982823e35",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2991d78-651e-4d38-a709-04b5742fa39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adf52b1-6887-43ea-bf9d-d879c6e582d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d010320e-b0ec-45d3-9ab1-075ef7239d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e45eb5-141f-4a2e-b37f-9de9310619fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63587745-6fa8-4b10-a515-02986f14e2eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd1a54c-48b4-4c4d-8436-56d316bd1bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a055e4-0ede-4a6e-8547-9d2201898373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8387dc8d-50fd-4949-9d30-0d93f04b6b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba70fb31-00a5-412e-a6ef-6a9bab6575dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a18d9f-b5e0-4505-9ae7-ec7925bd5abc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe08d5f-c230-45bc-8eb2-20bb0d156a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56f208b-8c50-441f-9fbd-903c07a602fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30628f18-8f6e-413a-97d1-390eb2e2f7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d29e722a-d98e-433d-9e6c-966e5c432119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c3bfd6-b85e-4e58-ad40-d3f7f654880d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a875d591-547f-4a9f-879d-f5805cc07a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb73e0b7-05be-4f33-8ad5-9c7d0d32f1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90454635-8606-40a3-8c35-b55927c8b4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8acf09bb-12f3-4b68-b7fe-7148687cdda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f45f0df-e46d-4a0b-99e7-51bbed3847d8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0910cc-4c4f-4787-8ae8-dda709bae552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f429400-85a9-447f-b34a-0cb0cf92f866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3954d7e4-6535-4782-86f1-42faa2f6338e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5e4d56e0-3d95-472f-9433-c217ca459128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8675c4bc-ba77-46a8-a3dc-825a69120b24",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9044ac9b-2d2b-4a5c-b28f-d1024d654d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c831fa8e-ef16-4186-adc3-96ef9469a0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c803dad9-d894-442e-9823-deff422d1a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8785e24c-1285-4a36-89f0-ab501ef1bf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383d0c1a-e961-4ce4-a84a-3aff26c0eb8e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a42139-a367-4b92-878e-fb50bcb2685f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6774977-e245-47c3-89c8-b14778fb05fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad906a5-f92f-422c-b8c0-4418f98ef218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa1485c-5a2c-4f85-8a55-e3525dbd60aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c60d95-4ee4-4082-9e44-87a77a8a2896",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e429bf4-edf6-464a-b943-793da79ffe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0656e6-af9f-40c7-97b1-24428543e1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce66669-d01d-4335-911a-db8effeba865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c16491b-0d35-4f90-ac89-9e64d29a45c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2114cf-a346-45e5-ab72-2407bca6a5e0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c2ed21-f59a-4dba-9b36-761226177342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29d199c-256b-4c1f-b530-41cd0e436ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af795de-3ab7-484a-86fd-582758b8b5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a156b37-4b61-4b31-ac78-f452cce0860f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eab053e-3ce1-4703-ac3d-6070b7678d2e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae26528-6990-4a2b-b627-5a8d8e1b9d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00607c79-3abd-4338-92c1-aed4625cafa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4dbf65-0391-4bdc-b8ba-1e41aa3d91b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9a94cc-8ae3-4c29-a566-80a94f031ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae2b7c9-128f-4f0c-a23e-4d2d5ae86a6d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f956c5-a1e7-4b69-be0b-5148a1c7ec8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4935e740-7eb2-4e01-b337-9f36c49fde84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635cc250-e763-4554-838b-2775e855ed14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "007e8d30-47d8-4ec0-be94-6e499050ddfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c9ee39-8e6e-4b01-9922-0d87697eaf79",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac72c63e-8b19-4cf1-adff-282c9f178010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd41ffc0-da59-46af-a3e9-e58f89744839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c668873-f43f-4861-91b9-ff56fc418c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "53a19252-4d4a-480b-9a20-6fea09a1b5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724a838f-cf79-488e-a28b-f1554862dc4c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc289744-238e-4a68-bf5f-8e82208843bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328728a7-77ea-4173-a817-74551470d04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f9f90f-422f-4608-bdb1-de90fb5f82d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c52529-0bc0-4c82-9100-24f7645dc556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8601e3-f0f0-4a23-83ee-d5509de5722d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8837993-602e-4b1e-8ce6-eec796036df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22b2743-7215-4c68-a801-6c97c1bff348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e601fc9c-cfaa-4e21-a947-c23333b85f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcff6c41-9234-4ab0-a9cf-6a2dbe649b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0510af-8eb6-4132-969a-8efb419baae1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a707d3cf-fcf1-43d2-9406-9ba95c3b8d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d18c36-f475-4693-b49f-97336b550fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5045b0-b619-4aa6-9864-ecdc8a49a8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27608c3-6424-409e-a25b-f26587d71e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b19f67-ac61-4537-8b1e-4e036ee36e80",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66075203-2607-4dfd-8b06-77bc9ef4a610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d592b7e-c653-4b0f-8782-7b6f09c10edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8665e2c-93ba-4214-a092-ece88b65cdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9903c69-9942-4dbc-a557-1117e0fd9e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c36738-ae2a-493b-8cad-cf546a14666d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d9b420-769c-45f8-934e-b38028064b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75090be3-9e75-4116-b412-b363b6296607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c577f814-892d-4e5c-a931-2a39a7e8455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30b930ab-20e8-4d85-9106-c906d00b188a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13848601-a6c4-44b9-8f35-88487e648675",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381f91a5-16f2-4fad-9f58-33fa8414664a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dd2db7-13fa-4f8c-8b43-dd62d358cd73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5de2fbb-18f6-4563-9d31-bbd234cdf772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "272fc052-35e6-4aad-a329-30b6b7752473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221863aa-4d73-4ae2-b197-c1ca84634783",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beabf92-2427-4def-8448-266628a47a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beca4028-40bd-45c2-b720-5cc4dbed736f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583d57c2-6976-4229-bc39-6b40f07e01f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eee4080a-b5e5-4e44-a287-2bc1ed2e8d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414edd16-2fd4-4a3b-8f94-7521e690d44c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ad559d-e9cd-456f-9663-fa918cdcbfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce536e6-8859-4bdb-b505-b55446177d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ad1f23-e7bf-4cf2-bd7c-18a65b84442f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7be9ebaf-7ced-4a91-bc02-635c362a450a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0a73f3-ad57-47dd-aadd-966c769f085b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560b72f4-535e-450f-bfab-945fd4a45a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1d768e-d201-47cb-a964-11b6d10f34ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b7f3f2-814c-468b-a952-f7c67292c08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c56214a8-78af-48fe-8da7-ef0b713f0451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957ed5b6-ff91-4ed7-bde7-5ec00b6c5a00",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b9c9d-e32e-44b4-9681-0a74d83c5bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff1db92-741d-4747-b02f-5dbd24075707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e3d42a-6401-4c9a-b7b6-fef7de7ac1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4853ec83-4756-4a50-9e9c-6c75716653bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c344fb65-e5b1-49f8-86ef-6fcd6eda43d6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c758089f-22a4-4e2a-a221-72bcf9baf810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c56453-59cc-4f94-a34a-c7e95504ee7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5433bc-0e06-4a78-9436-0df33c192f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ba5d16-08a5-4942-b398-261ac5354133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bbe696-abad-432e-994d-ddfc723288b1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7d3711-6cd1-4852-b85b-62c7affcbc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a33fcf-ed80-40db-a59b-9ad6c3570f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfee210-b4be-434a-a234-7dfe2f26e3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92e8ba3-b0d1-4770-b731-a9ae2624825e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafb09e7-399f-42f4-8d2c-77600a22856e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1387fbdc-2913-44b5-b93f-7ffbac0ca780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c336df-e360-49b8-83e0-f2287633c5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3045cd-74fe-4f08-a632-4b2e0becdcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1a0d90-672a-47ac-8f06-d12cac52e8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a95c30b-0ddf-40b8-ae17-25b14c0b6112",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae055b0c-dd8e-4ef7-b6c3-1662e9ca23bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd798d3a-67be-42d0-a9bb-667c0db028a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5760c3-fd4e-4d31-bc1d-cd904dffb95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d742b1ad-47e2-4163-93af-dd6642ec8692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310737e2-25ed-411f-aac5-0f3b0c3f2974",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606fe6c1-2ce1-4e69-895d-42264f18134e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68901888-f383-47bf-9066-666a911a826e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cad393f-f98c-448e-bb3a-7725e69282d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec780e1-bf5f-4b2b-8eb2-54e4b185b173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b148611f-db64-4312-ac35-292091ce4d0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdddbb9-8281-4720-9e84-3254f7d5fc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d27f54-51f4-4641-88ed-a195e128af45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed65d1a2-0d8d-41f7-be36-233e844557ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35c18ede-8b1b-4637-b126-5d8aef410a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fc720c-7535-4fe1-9664-a2b4eff3ae67",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6c397d-91da-4806-8fc5-95299789012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18eb35a-1bb5-4883-b892-7eda9144d01f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2550a2b-9e9c-429a-a129-9620081081d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e876677-f6ba-47cd-93b4-cb95558e0913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68fa213-44bf-47cc-b4fb-7a1683fa6c1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417decf3-ef0d-4ed2-8b82-85c45d681b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5aeb5a5-cb80-4017-bb6e-78304f20c5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4185bdf6-b963-4ae4-9a01-053a94eee867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a106fa-507c-44ea-83c6-45d4a89f610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4999d33-1815-4f38-b0ac-60bdeb790344",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8665eb6e-36fa-4f1e-bb9f-2c9021b0e85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06dca720-9cc1-45ea-a5a2-bea72acf4217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29606aea-4956-4f9a-85bb-20dc1a830e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "160ba79f-725e-4a18-9de6-6a2e48e979ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c133cf-1eb3-4bb5-bf3c-dd2c7a47af87",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd140d1-5346-4973-ae4f-fedc8048e6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9f082e-eb69-49fc-8a1e-cbcbd48b6ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b65c67-9ede-45f3-9393-2694176f2332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a16653-b884-4319-a342-2b633fb19e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de98f8fa-d98a-4354-b25b-eb325143c8eb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08f719f-8b19-4110-a654-8d869f7408e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d7e06c-5963-40cd-9140-e4decc000dd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f705efc2-a488-4224-a39f-4e477dfbe3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75771e9-8cc8-4bf3-a74a-ed89582b0776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6887e337-1bb7-4aa9-a5d7-b1289ba42aa3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61a94c6-354a-4d83-8acf-e3cc1964c24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8bdb16-88c2-436d-b366-b01a6152b46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad55c70-0438-4471-825d-d42bc314901c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e150234d-22b2-4610-af1f-7bee8a8b543b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170550e4-b16a-4a9b-8b91-e44eb5d83878",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defe4efb-5f12-41d3-b845-14c67adfb0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c4b7c6-f0c2-4c76-81ed-d4b025d92a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f8e32c-e3b4-419e-b406-1cda82186812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05fd6bcb-754a-4efe-ac79-3387324370a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7908341c-5d4f-491e-a17d-0db218eeaec8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb773ac-b5ec-4da8-84f9-32fdda68c18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21c9a7b-660d-4437-8aa4-fce29b7a6468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9955621-6e4a-43d3-ac5a-5d92facdd6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6901dd9-d65c-43ea-b6da-c3852251b29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e88c59-e2dc-4ddf-8865-b5b5a1539ed2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b5c08d-5b75-473f-b240-243ae10dbf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb2a986-9a5b-4fb0-9201-cac68910e4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be50e82-5439-4f60-9ad8-20ad8f3aab08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8dfa7c-4219-4d68-a997-7b7efe5be8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e7e9b8-c268-461e-b97e-e247c4c807ad",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65c2d37-2e71-4a3f-ad93-7233aba6ad87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40689147-032f-468b-bc3c-902b1b7058c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984d1fb4-5ca8-4364-b563-98dabd558c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7c748b-2c7f-4fa8-b9a1-10930cbbd3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb87a156-95b0-4729-b31f-9fd23b95a728",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6fa8f1-1ad7-4610-a095-f352b7a0afae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90939c6-410b-42f8-9e33-11dcb71954d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1247d90-32e2-45bb-bed1-3b6d81c6d97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c97e745-2465-450e-a650-fb7c23977926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e730f0-f168-40e6-858b-abb6bce5aa8e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b13f4f-ca2f-494d-b14f-564250103767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c8295d-fd0b-4925-9183-a0b50d02d0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aecaf55-4444-48a3-8dbf-c5a749daf401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adcd9933-76b4-492d-bebe-19d1d1844c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ef2687-a0e8-4df4-91a2-baf2a07e0864",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6275d7cb-0fe9-4813-8204-76ae49daade6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dadb30d-bf33-4d00-bf34-4a23a0079c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7440f4-74b6-4220-ac27-c1898e0163ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "278f87ff-7d7b-4ac4-8cd4-a5bc7ab0e1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cede43d-64ca-4f68-a976-564aaeec91d9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96608772-42b6-43db-904f-51c821b4e09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0c7828-fc7e-4211-bef0-85c6d6e12a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db927859-0af9-42f6-9d1e-deac2ee6df29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0823ec13-e689-418e-a3d6-ec7ccac0bc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a931ace3-4198-4573-809a-f1b6f9836d56",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582208b2-dfdc-4eda-b436-6b3fac4dba83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c651e267-867d-4090-9884-d19d6b305fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299630d5-f33e-466c-8266-daaddc861e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76e33d85-68ee-4785-81f8-5de87f6bb8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8046bf06-5ad9-4ca5-a4c5-d8b35b3dd964",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c378f6f7-3146-4729-9a2e-f13b21a4e103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82046195-7fa3-4a16-91b6-a226f940bb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc7b867-5a6c-49cb-938c-c9752015e880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d20419-c3d3-4655-b9e3-bb5b5afa7c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29ca624-a35d-475b-93b8-b0da0c130629",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959b9981-ed8c-4947-9662-b66069330984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12027f71-c073-4f21-a49d-00fbace55640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cd5b2c-cfb0-4892-b7ae-dcd3c06503d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a2928a-00ca-4664-992d-899861eaeffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d119d00f-ed80-41a3-b51f-afb8debfb29f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1c5b86-8fda-45d9-b815-6583f35403d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daab9fa9-6eb2-46b9-9ed6-31436f2baeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df854bb-0002-4e20-ad52-4c7f1911abc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "803a184f-f50e-480c-8442-e4d609ea8662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9c68c8-6ea1-44c4-b755-92c2e4347464",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c42ef1-d4cf-4f1c-95fc-2e7ae5534c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8d789d3-60bb-44f8-9fb1-0a3a8ad029d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55f258e-0999-4e57-afc3-3a4cf88cc274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41efeed7-eec9-4920-b390-c4131147fc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37e77e1-17e3-48f4-a25f-9791da1f4eb6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978856f1-4d91-4b59-9fa2-cd1137c534ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836df807-b9c6-4f1e-a184-e283d50159f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a78aac6-09ec-4ce5-a084-1f46f8acea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ebdaf5-fd09-4d3e-bd2f-b94274e457af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb7af51-2fb7-4c1a-8956-56495d19e15b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fdb2e5-d19c-4e03-a5a4-62c8b703e1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87957d0-8ceb-455d-97d1-9a29fa897cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17766f7d-89f5-404a-affd-30c80917e69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c6777d-752e-49d2-987d-5c9743da492d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3244f61-70ce-4e06-9700-d88609d2290c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18bae9d-b1b6-4bd9-8338-ee57f82703e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253ef9dd-e14f-4cd1-9b59-860aa4606cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd6dbcd-5ccf-468c-9cb4-d30677a02cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb10a15-e093-4137-9799-2bb280098af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5363abd6-90c4-4374-86c8-96d9434854c6",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd5c479-7167-4f5f-b506-42b954613fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c85fd50-7bb0-4051-9390-7a2f74768173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8856c4b3-bc89-4a55-98aa-b7ead7487d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd1b9f1-1f19-4716-b01d-5ff475927bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cb9c51-17a3-404a-ae04-1d2a1f3560fd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6948ec2e-c8fb-4466-883b-d649edf54091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11e6304-6a58-440d-a946-822c4b258c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfc08d7-fb66-428a-9e63-fad29a437ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d054b22b-d24a-4439-b479-b5e26d454952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26575c11-51ad-482e-a074-bc5c8e002098",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc63035-2a45-441f-89b2-1121cfa1ee25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42cbb002-34c4-4f98-aebf-f0760c2b72aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441aaf99-322f-44a7-8ce3-bd66680414b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0bb8e1-c348-47d4-a950-15532039f730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f64cf2-9dc6-4e75-bc08-4bea01a54f65",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd772067-5c28-409b-a2b3-a60043a982e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fa761e-e27f-4992-adac-b5d1394cf018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089ac297-55ae-4455-8927-2c2f83b15160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59ef4f54-ae82-42e0-90a4-b3ea2f3d3b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cee6dc-ff77-4ae9-87dc-0e2101d11a48",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102aa167-bae3-4e6f-880e-935aa8cf038e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cc015a-c2bf-4a40-8bc1-b8b97731bbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcc0a56-da84-49fa-ab28-8e5c87851fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c91f2e52-9f14-4ffd-a3ab-72ee297d6241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605aa93b-18c5-4396-a4e4-4ff3650552cb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ab1385-6b13-446d-811b-797d61728f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76ccd44-15ce-4fb6-addd-1aad17921d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327448c8-7269-4cac-bcac-6840778315b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "724ef7f5-b826-40da-bc12-b5b5d5aa10f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e06980-370f-4e81-9f1f-10989b8a6528",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b50e2e-b788-46e0-8e82-0cc20c64c6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50522dbb-d530-4c90-a02c-e5933a94da38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbb4f34-34ac-493d-8d1a-17c7f74d8d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b60091e8-38c8-46e1-a6ee-1e10a2fffc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d86806-18d6-47c9-9a72-ab17ff35214a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03720d0-90ad-4c57-831f-b04ce643d0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc246b9a-4476-4072-9fcd-d0e79b049b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fc310c-9f34-49b9-b40d-2bf97834c7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a515bd6-01f4-43bc-9a9e-ce2948d030ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686fc85f-4839-46b5-9154-caa10d34c2f0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577e6641-ff4d-49a1-a384-4b8d9f3264d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a98d2125-7227-42f9-a3df-b0e8d554c0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd69680d-0c8b-4db6-8a54-bf2a78057760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc379c5a-2309-4240-8219-3eda5aab31fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee4225b-47e1-42d6-88db-c7f82aae39c9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56202477-bdcf-43e7-a364-da9b6eee1404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "addde8cb-f4d0-4bcc-85ec-6f3ea6c4e13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b63d570-7946-4845-bf56-1b4a4293c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5885eff0-412e-444e-b252-81b9a4bb0b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32bc0fa-25c9-4ab7-a23e-e7c5870c827d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c29de4-dbe7-43e6-a2fb-33b068a7d25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfd21e6-9927-411f-8e60-078ec3fe8244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6669810a-c076-4754-b5a3-4781dccafb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a30ae87c-1ccb-4728-b6fc-2a280d8d94e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d357326b-e97a-493c-8c57-65f463eeeadf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea287d0e-05a3-412d-99f3-f3345fb94a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "577925e8-2aad-4efb-ab62-78f1a76cabbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd734de9-c983-4790-bd6e-b5d4f90f7c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0357dcfb-d581-41e6-9a08-e0570f72b5ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14b71564-00d8-48df-a2c5-353714e8ea47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2157e05b-d5ee-45c6-9fe3-e2161650baed",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c453b6-5e2b-4976-9e77-4385a1417aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3ef8147-76f2-4772-9afd-25c8592e02c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848d3604-1f87-44ed-820b-14806ec65b6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f796efe1-b721-4e6e-b84e-f7282f2c23a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ed7dbe8-31c2-4faa-bd0c-b8213c2c462f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e84e4179-5486-44d2-abab-a099a5afed6b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70429ae4-e732-49ca-ac15-38361c834105",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddf26c4c-edf3-495e-bd7a-673d354c5081"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0bb99e18-9601-4cfe-9f20-99364cf129d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f599da9-388f-4b1d-8bb7-4ef39b0d6e98"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e558b7b0-9faf-4309-b6bf-cabde0c45b1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5eb73ba9-5c0d-4617-a4c3-1a14410406e9"
                }
              }
            ]
          },
          {
            "id": "61fe6e7d-2b83-4baa-9a33-c80a105ac2c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6fea4de-7183-4061-a29c-56eac1210655",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "72305c92-91f6-4163-88c5-6e46a2fb6eea",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7256c953-0afb-4866-abb7-7c4574fa3cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "52a87b47-da41-4b53-b327-966355a3a3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca4e9a5-ee73-4447-a965-792411200621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cc0531-bb19-4740-91a1-a5bbe8dfaa4b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43e2407f-f73a-4523-94a3-99fb614b9da3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14ee2c1e-3c94-4c55-8fe4-1f967d563cc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66f3cd1e-2506-4d8f-97d6-f95fc945557b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3dbfe6e9-61d9-4f71-9407-37d9b110c6fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "003179f5-c718-4d47-84e2-72ba08f58c0a"
                    }
                  }
                ]
              },
              {
                "id": "abebb2b2-0155-4791-91fb-1d075ab48e63",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bc85d26-d384-4cd2-b824-64eb94ea2070",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "413d6f6d-9deb-42f3-b7c2-308f1e76b691"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65e06216-2705-4eab-b077-5e3611e322d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e981808-31b6-44a6-a632-1ce809f1b898"
                    }
                  }
                ]
              },
              {
                "id": "01571b56-fe81-450c-afca-07dacc1ae8de",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0633d653-0d3f-4a3a-a9c7-8c15c514bb28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbd02db5-20b5-4c36-a427-3246d26bbd31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b206cd0b-72c7-459d-9498-7ed7ca28bf54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4c2388b4-1b60-4db1-9c8a-7dc04737553b"
                    }
                  }
                ]
              },
              {
                "id": "f584f54d-8125-4494-b193-5b51b87bca93",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f74a82c-a52d-4e12-9208-2532039925e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1b96240-f60c-44b6-8577-28cb115cb1fc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40700f79-2ed7-4a77-ba64-9bbeea98e49c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "145b86bc-c259-4f24-b13a-75e9958d6f2e"
                    }
                  }
                ]
              },
              {
                "id": "63688ded-bdd3-44b1-a85e-dbd91cd52392",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc52b7b9-1ad1-4f35-9a7f-0c5032426327",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a422a26-f096-4359-82bb-2b16717a50f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6410b97-7018-4b60-89c5-6f6c140cee44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "29efa956-e5f8-48c8-a893-86147d558e1c"
                    }
                  }
                ]
              },
              {
                "id": "03adafd8-0bdf-4855-9b7c-65c29c2690f8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "833856ef-c086-4ada-81ac-bea31044e2f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7ee9021-499c-4691-9ab0-f5e2b961560f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bae83a8-ee56-4a53-a88d-ca739ae714ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a9bd8e1-6cf9-4be0-9e25-109baa8b4693"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a60f331-8069-40ee-ba9f-9d023cd83dad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78bff927-3b39-4a9d-b863-0747f15f779e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e5f42815-3711-429c-953b-63378d64b9ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8c07843-94f2-4686-a554-5a12ef75c762"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6973ab5-0f9a-4ae6-8b49-63f3ff403ea7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "54afdbc6-d386-491b-a2a8-a86f6620d069"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf781f91-2db3-4223-87a0-5c0a5539745c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7389e7fd-6043-4cf1-b572-2c5caeae9bff"
            }
          }
        ]
      },
      {
        "id": "90d39ad9-ce29-4ca8-a26b-a4dda08cdb84",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "481d3442-ec43-48be-a512-78a8995ef2a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a974e32-0ba5-4a79-8f64-7a2059c727b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14633054-befb-406c-ba24-f805954cd0a6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "862c0b40-3e55-4f51-8da9-e6e0a1b6560d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0474ce13-baab-491c-b243-fd0cb4251f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b231432-6174-466a-a7d0-7609374f9f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "337b0cb6-17be-4e09-8dab-c3b4098061ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4a80c0-6237-4b93-813d-0929c1a865eb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce5856d-df4e-46c4-a5ae-b4af1bd88ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9b8eb7-4ed9-481b-b49d-49efafb762fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15e03e2-fe45-48a4-bf1f-0d6c95009733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60daf947-0da9-4541-b6e3-836a14ca666f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcafb9b0-346f-4f10-8442-fbae977518c3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b827307-bac4-4c55-8a05-826a303b9076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62dc2074-0531-4f38-83cd-499e9617f46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe75bcf4-37a7-432f-8ac9-8e5d67037b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f19dfb-e3d7-464b-a9a1-2c6a916463bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bc1444-fd05-4be0-a29d-c75f4c35fa57",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5914d8-7d57-458a-a785-cfda479fc0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f961c89b-bc2f-435a-a084-2bc637343ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d4291b-f62d-4820-8914-96814dd184d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2c22be-396b-4d6f-a18c-a7da9d01f0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bb9f13-a736-4746-a67e-5b58f458b083",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78b2efe-8c95-4eb7-81ed-12abfb37f009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafa9ac2-8a84-4a5f-b2fd-f5b63a2b0d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63de43fa-94ed-48b9-8a7a-d6329979fce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46c1ad82-fabe-461c-a56b-92e9ba7da8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1ff11f-030e-4b46-b2d5-ca9f27b667d2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ef56a0-e2dd-4a8b-86d0-821be29657c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0907f4b0-7166-4c33-8dba-cc9fb49afda9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654e76c5-6b12-452c-b8c7-ff57346c2aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2733bd-c3ff-4dd8-b538-17949b9870f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7820d5-99eb-4922-abcc-dcb7cce12a67",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c76a507-bf96-49f7-937e-d9fbac6b8355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2009e8b9-0f44-42b3-8524-ec8572b0a709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ab0442-5822-43cd-b9fe-1adbf63a71e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d028df64-018d-4e6b-b2cb-9911f388f839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd38b233-4c0c-47de-8350-6be5fa7c978d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e595c9-4437-48fb-b0aa-510fabcb6e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f151c2-1967-4b9e-ab3d-57ccb5a24df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269c0cc2-1601-4d68-944f-5f49bc426b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f389555f-ed67-411e-aa09-50fdbdfce941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0020770e-df8b-420d-a733-b16556714eb8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca7eac6-f7ad-4498-ba66-f036f86f84fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de319817-5308-4013-8394-9cd9dc9e90cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f963818-8c04-4842-8c8d-6a0b3eab1d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d3a847-1082-41ce-b837-8945b0b8a11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727ea0ac-4a6e-4e56-930c-69e981af6e29",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10480d36-bc31-4508-a7e0-1efa242d5407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3944d5d3-5b92-4183-bdc9-930f53484871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691376da-75ca-4dbb-b0dd-e225afaa5433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05ca6423-3448-4668-ae7e-260121ed9416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb16221-1cb5-497a-abb9-3250e4f505a4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adc3f78-fa2f-40ea-9b4d-e9b8267fb19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0340cf2-9540-47c3-82fe-e345c33ed4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff70ca7a-8e28-4960-a1e9-a2574c0e85fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "14246751-ba15-41ad-a162-f323efd1c56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0d9be4-e600-4ca9-a50b-954d103b065f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445b1994-36f5-4a90-91c0-71e3b9589e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892b9153-b713-4cf8-8a86-6bd9a7554e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830fa170-546d-4f70-a3ea-8828ac437bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe2ac66-ad0e-44cd-80d0-ff3cd70b2c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0f8780-a31c-491a-baee-93a48d27520d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24ca510-f5b3-42c0-ab5f-1e8b01b49125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dddba15-ea3f-43ad-921e-dc1a3e30fdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d88d40f-fb5f-4e8f-ba5c-8ad916c142b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7f6191-979f-4dd8-aa43-c03b7e88c037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c3f2c0-d928-4215-abef-a2d036db213b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d62de4-20ca-4b58-8638-632e589c8036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1923a4ff-19f1-478a-8e8d-fb21e1daeffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5201a7-2e8a-4d0a-9c57-7f35041b3782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd43500-da95-4f91-93db-4c704c93f3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f08632a-d961-4cc0-9ee0-1bbcf60c2ad4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a1ffe4-956d-4cd8-b635-9453cae2adb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2a1dac-e331-4535-af88-2b810bdd5717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fafc704-d313-4dff-a8c1-9d70691d4387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "762f5962-07fb-4e55-8854-6979177eb8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9130c214-5f98-46c2-b0b3-0783e41d5d8c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e807b9d-2370-48c4-9863-6be019d486ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67077c5c-f81b-40ad-ac78-95a754565a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8dc581-1db3-4a10-ab65-06875d643016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2613118-0b6d-4321-b447-7380b86751d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf3f038-7420-4374-8c96-6bb5ae895f6a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78189c3d-4fe5-44a8-b9ba-32aeaf7c3156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa40848f-a757-4222-8b79-a421bb8ce8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ed6ff8-4da2-471b-9fd6-93a461dc0e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "887a3443-cd22-4d4a-a3ff-8e23a82b7f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa9ba4d-53eb-4293-a885-69a94753a448",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b2219d-36e5-4279-9230-0dfb2ab001ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f10be5-9560-4462-995d-dd74d5471cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecf85cb-412f-4633-bacd-f7660cc98897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08903e0-8108-49b7-9c2b-51f25044616f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c198a57e-7710-41a7-9ab3-987e6ab9de05",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63361289-8085-4440-bc24-5f54e8f05c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e911310-7911-431d-8a4b-f6187b406922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37aec26c-6b68-46cd-b4e4-06e55cf17057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f13949bb-10b5-418b-887d-9c3847937967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fba83e-f5f7-4c9a-918b-36c6f3eb9330",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f18f0b-a918-4954-8355-88aed2632fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05fd0135-5331-4e2d-87aa-d1b3a5103e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a3eee1-93f9-4b62-8359-1163e4ccf50a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a14fee-b1b6-4259-abc5-ec510ea64cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4abc63-58e9-462f-a188-fc5c2c0b3c22",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed17dba-ccfb-4006-8390-ebf29ceb6a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd365069-c50b-4551-8ae1-b4c734360d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719f0664-6cc6-4254-9042-24e7278eea52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7b33cc-69c7-4838-bee9-226cd9bc771b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8eeaea-4b7d-4762-9ee9-0591b9326c3c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bd7229-e4c3-42e5-a07e-e1a4516e2f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08bc58ef-f8ae-43ea-b64a-be4b5608c7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396cf58b-3262-4287-82b3-0d89f4c30389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb6f468-7640-40e7-8f56-372c0d09888a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750c7f23-db97-42ec-aa32-391f7a785a0e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7794b3f0-c815-4606-bb69-8c89e8b51532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa58f242-5bcc-4753-bcc4-8e04cc693cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287c0f22-49b6-49d7-8ca2-bf55231e68cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed9c9ed-1e92-4cfb-a170-b4c01e22dedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e353de8-6f31-46e0-a0d2-500ab05aee37",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302a6bb4-fd45-49ae-ada5-abb40086ca28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51a9b44-e653-4dcb-92d0-a02848004d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8a8dd3-ae01-48f0-92b1-00a38e8c5fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f866502d-cdb5-4ed8-b12b-6005bf780366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fd2ba9-fec2-4358-b1c0-ddf2a461c6cc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddbe8da-4516-44c3-a8f0-5c9deff006e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe64c062-c83d-4c5d-821a-db02065819fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0971c572-4d6e-47ca-8957-0845a39a625c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3913395-c1bf-4adb-aef6-53b4b6358e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e9bb6c-4695-4441-9aa0-53b75cf669a8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba63df3-e271-4979-9816-9a6e9f5c5da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22f1d86-ee74-462b-8cf6-791220cc8842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000aa1a7-8b11-47a9-a227-49471352764c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff47951-a96f-47aa-82d1-35c5c6b6c60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9fba95-4f16-4f7b-a743-de70b8de1f49",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371690c4-f5a7-48f6-b3f7-c93e8406d13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf96306-1cdb-40f8-8a28-f78a20642e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc375fb0-03c6-4adc-8e09-1c765ba27304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c69566-ef6b-446f-806d-f206d972c184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1b4003-2e2c-4823-a501-bfa8f9cb33c8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2b7e6f-31fa-4e81-8c39-cf439d106f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b444a8c-8684-4d19-b643-de4b58c4f4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fffdf9d-c4bd-4208-84b2-1eee03058c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1741b86-4fcf-49ad-a2b7-e305a98c80e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcf11c2-e2fd-408d-bfa1-cc777a6c7590",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5f4e80-8b0b-4a0a-869c-dc458583dfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a787c4-8d35-4d78-9fc1-28c31bf96d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d37fd5-80a4-4131-a96a-cae1e39411c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae0e389-8b52-474e-be7d-655d656d7591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c442e131-ee31-4cbc-92da-5bc7eb0cb8e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b776139-7eaf-493a-afa1-839ba6d48183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796af83f-4a5e-4a88-b327-16d32c7a1ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea33869-2c5b-415a-a411-09e5bb82eb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df02f46c-ebda-4cd4-824e-e78eab5183a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123b57da-1caf-4aec-b95e-2e90830937dd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e850710e-6205-4980-8491-830dc7da0021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1f3737-1821-4ba4-b007-e6b392291e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a4d5d1-2742-4a7e-a0ef-462a4a8ba88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb3a828-5091-489b-88ae-85baa082b97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e8c602-f812-4d1a-9dce-da3febdb0e73",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462ec1cf-2055-4524-b631-3219b1a259aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19249346-e7fa-4af1-8f73-512330676cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c1d509-0218-46ee-91af-84412127f479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e624a59a-a6be-4345-b443-21d13c0114e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee328199-1a7f-4436-9139-3df1466037cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40d00a08-10e0-40aa-8f76-285401335583",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62b7c71-15fb-4d6a-af58-786b3ae414ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b89d9fbd-4535-41ca-ab23-9e69a221fc00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea875e2b-486d-4c9e-8601-0de5c76f954e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "998d2720-a1b2-40d6-a962-ad75d1a772c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97966130-fde0-4d81-a956-bf79c7439015",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7929b5bc-c164-4ae9-95f4-c13da5185a6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b15c713-0feb-4693-8305-dbc4559b4e0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1af330f6-9d77-48e7-9666-4141c6a28131"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ffbc3b0-cb42-4b9e-92f1-e2b34c216e51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "912a8b0d-3874-4231-ab03-db404e4420b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd2bd3a4-1c0b-4387-bc12-0353f4979f26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a588857e-a28a-4da2-9546-9969ae4d039a"
            }
          }
        ]
      },
      {
        "id": "82143036-b2f9-4641-b88b-2c6a9a441e43",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "54e0113e-716e-4271-a2d5-077c5487bfac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d0fa04d-ca3d-43ff-8b73-8abf63add049",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce804f31-e2b1-4109-85e5-f07cc3a5fd43",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90020384-43d2-48cf-9333-13a083fe8037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5e1276-fc57-4e88-84f3-44ba326cfc87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391728b5-5bc7-4107-b7a1-ed32ddd4bdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e54851db-4c93-4f91-a434-b28f322952cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef68ab6-3d0f-4b0a-b4b3-146309b8582f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19468bd3-3867-4773-9b89-857e2bb7d5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b3ecbe-b505-47e6-9ae0-cdb638d76f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2145a587-2b3f-4aa5-bebd-bf3a61610240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f7c85c-6a6b-407f-9334-0c87c95ca4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ab6938-cf25-4063-a6aa-65545ea82972",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474d60eb-0f18-4b8b-9f3f-9a96e793a12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae71b41-4a8d-4c20-8f3f-c68ffe1a864a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef587e2-dd51-48d6-b190-d2bb0ac0adaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e6173f-8d45-44c1-970a-97e6278e2ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54aebb11-76cd-4662-b6bc-126a5a7b2c94",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31dbad1-59bd-4b65-b270-b2f0865c569d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989e065a-a519-4af9-8011-4b1666f90128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1853e7f-e20f-4723-9556-ba12d865fde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cc6efa-68ec-4a52-a996-ac73bad8807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e911d3-9e42-4a67-a89c-1b6f757e60f0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec957f8-d50b-45da-a1c7-8073ea108cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d2b734-4522-4075-b397-81ffe2bc4162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df443ec-9870-4a9e-a984-43d0d8083ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0c40af-122e-4301-9efe-47262d188bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf092e9-6f62-4745-b717-62c1a116c0ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a1fedd-e044-4bf2-9af2-5df07f5e9be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0c618d-f022-458b-b2f0-17b922914293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae00e7c-c648-481d-a72a-2651fa3a50f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49b7eee5-0fab-4dab-bea2-05bd02d0bb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d581cf75-a5e5-404e-8a36-a027b187d964",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71694c1d-9381-499d-baa1-09776a63fab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ea0e1a-fd39-46c8-b825-f2aa18991950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777e314d-f8da-464b-8f47-ba1b0efd0f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f73c9989-9966-44e5-ac8e-b3a696b26098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d252f557-1f25-4757-b3de-9b3d157535fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acab089-e37e-4919-aca3-064d653ad78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "089527f1-d0a6-4451-a167-502c597d2ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec2fb34-2b89-4ac1-be6b-e4ec4f38c13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc158b6-2661-4f29-a295-600594c366ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1348b8-14a7-4073-8bd4-f53f9d4d11af",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed94332-b76d-40d8-b9c6-6186c29f0cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634fdc70-d8d8-4d3a-9263-bca51f794c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79857745-c044-494a-a4fa-0ea0203256e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fccea25-8dbb-484c-8a37-deee6214ee86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0cdc00-4c3e-4f1e-8da7-869c8c4cb241",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271615f5-db08-4979-9970-209458cae678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a938741-a76c-4bc5-92d1-0bfd2afbef90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf3e83f-e10a-43df-b9d7-40a4177342d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee88d7c7-ee6f-4e78-86cb-35251fe040ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892ace3b-a527-4058-accf-8668d20f17ce",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8236a827-c50e-453a-a79d-c2801e2a326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98af56ab-2bff-4447-866a-9a30f2b9e307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c1834a-c928-4db4-8721-30de7f3a2d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a39a5bb1-70de-4d4a-9f58-a3bb678a0b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5050eab4-495e-4aa4-bef1-52c3887b824a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f898a3-a66f-457b-a87e-961fdf4cf9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919de26f-60f0-4794-bd8b-f0f6f7f4cdf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3f6f7b-34b9-4706-ab14-3ffa24f288af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec6e9c0-2c35-46f8-adcd-da9e9774c274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43026e42-c9f0-4c8c-bc86-d9c126db9985",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d503eac-2f8c-4f36-bf96-fd1bfa7e246b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c363526-52cd-4a1a-835c-12b8b3cfb12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31829ee9-e205-49d3-bc7f-38c1ba61b30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c2b396-0c3c-40a2-9a7a-4329004ca1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708cec02-f23b-455a-b1ec-2ea70975dce4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae49ca9-51de-4709-baf0-b2dfa4d8ca97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569256c9-7a4e-48c1-9b34-e83dbc449637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7191848-aefb-4f27-a2cd-be96ed8debeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b87a9f1-dfe1-40e2-9549-d24bdfcf55aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b737cbe-a172-4f6e-8f18-7e3ca6039d33",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605f6303-4407-48a3-8cea-0c4f8a41d0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769ddb99-f32f-47c6-9699-1a3c7277c1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b44a0a-fb21-4749-bdc3-f77920dc3113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0139ad2f-4e65-48ff-b2b9-56aeeb64672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d137e809-5ee7-4bfc-b189-2c1e141bf4b9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f979eb37-1e94-4151-aef4-96f135e8fd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b2081a-a7a0-486e-8059-cb886d26e62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfefeff1-0bb9-409d-a27f-90e5f57ccb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb878b6d-43da-4099-8c9c-cc9a4a3f191e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608738d4-9637-4fe4-9182-2e5632c97787",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7ea5e3-1253-4e5b-8805-b5e016105ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c9d1e0-7f22-4797-9fc5-ed8f23bd27d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438a2bda-84c0-4ca3-b202-bfc67bb11bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a07cdd-779b-43e2-a8ec-054eb1abd2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b252f1-30c8-4d70-9f83-f06397f79ea0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fa289e-ada8-4069-abfd-f7cec31856f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff07a057-e9b2-4fb4-956c-02f95eb67c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e3cfdd-d94b-46fe-9716-dd2732348e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9cd597-414f-4f7b-9cef-af10b79538dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d487f812-ff69-437c-b4fd-fc03ab83c6da",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6116d8-37da-4dd6-8b61-de252d57e322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca951e0-b636-4c52-bbe6-52e251ccdda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20628a79-e62a-4c7b-9c1d-8397b4b35587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17695eac-1625-4810-ade0-b11255ec6b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282e6947-338c-4f02-b0f0-ca78a534ac7e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b87d7ec-b56e-45c4-9fc5-c2c1653c30fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c09702d-f78f-4b0b-a24c-e71ad8cf7cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad131a9f-e442-44b9-8d90-cb86420d5586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df0a0dd2-0cbc-4d7a-bcb8-393f0e59bf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406347ce-3167-46f7-861a-fa990219f03d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40e027a-c43f-48ca-909c-e0b95bfc6fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db46ca49-15f8-445d-8620-6e1721e86dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7f9dac-701d-4f2e-8ea7-14fef266c9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf40cb0-eae2-4726-80b5-e689e397fba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5ac251-c97a-4c46-a864-83073376f997",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725bfc0f-1de9-42b0-a0f8-1f052d58294a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1578a6a3-0fdc-47fa-8183-a9ae4bf2f431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cef5a7-714d-40cc-8500-248af84beb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1fd6ad-3590-45ea-bcba-be4db163b0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d473c9-1edf-482f-b6bc-13ddd7a77fb5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9229ea-a563-424e-be06-273690d01aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aec6e00-c188-4e20-b40c-8b61ee579206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df52a888-7a85-485d-a933-9d6793ac8fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7215ff-0627-42b8-aa9d-e434fb7591bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61527bf2-96fe-4d58-8a75-716acaa63587",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721edecd-414a-4b93-986a-ce426507f5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf958f8-6275-4dc7-813b-63cb2edbcf03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea5a519-1fd9-465d-afaf-6879e0d16d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9050f9e0-7c46-4a04-ad20-3b91d7bcb64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1472e460-8635-4119-98d0-0624e346724d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb39674-86ac-4a3a-9805-5ce32019081d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8c9ed8-e908-43c9-9d09-0de9f83ca9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beeda11a-2a13-418c-bdf4-f24acde436f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65abca0b-e2ef-4a19-a673-fe25d96dd934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e9816f-8d1a-4635-8278-7e3f9a06e55b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d263dbf4-435b-48d5-a2cd-9554aeadd0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b4635c-7360-435a-beee-94d4e1416366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc02e096-1c24-4b5f-a725-3a47ffc2f927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "887b053c-d956-41a1-b512-da0515c61003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e73361-7da6-4330-9f4e-057b47ae4290",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f343eb03-01b9-4043-b46b-a7c459f352ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590bbeb6-736e-4fe7-be84-40422e80583b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96cfc0d-6d8b-4d08-be3c-2c81b88da837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e48c9238-ef6c-4a76-b3eb-89be15dca839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723a96a1-c603-44de-b92c-a04f0aed6ba8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b72f42-40b4-487c-887b-7692feb336c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c344707-f588-4c7a-bf5e-260ae7b66d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb1ef2b-796e-4d8b-b9de-31e1a71634a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "089463ca-4ad0-427a-bf61-f8c3df5ff481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457dd95b-4a38-4101-ae60-1930ba37b1f4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986c347c-d024-44e8-81b0-1adc7dc28a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf58e42-b9cf-4a6f-8077-fca136d5089e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4e0b70-242e-423d-be55-ed7a04650c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "180d2a31-c238-4ae0-bc26-561775a605dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cab435-dce2-473b-8424-e3513cc197b2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a2dcbd-015c-4c66-aa2d-cb3bd393bcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a1e338-e23d-4bc4-abfe-75a34623b59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcadc07-09f8-464f-a4f4-e3fd981abab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f55c1055-7cee-42b9-b9dc-440ac0a20abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f435155-e5d2-48de-8210-8e6cced30853",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff644bb-9b95-469e-b657-e336b21c3c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cf33c7-e9e7-47b5-bb06-5269bd4f56fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e2e771-9771-4e5a-bd62-71a7ae0e8d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab99941-0908-425e-8e06-781c4cecfd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a44018c-f107-487d-bb4d-bd0073763c70",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f69efed-a0ff-4e48-bb99-99ee9bbfd490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fa5888-194c-48ca-82c3-cd11739fef67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf605ee4-cf4b-4a60-9e2e-1d78e1e788f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "702a1c3a-4088-4be7-9f1f-6e6996c65871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d7cdef-4615-45c0-ac08-2d7bc9ab86b6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c77ed9f-5b0d-437a-a1f8-b4ce5a79265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2609a4-9c9d-49ec-a2f8-4be55e901010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f88fae-98d6-4d6b-af4a-242132191e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8d5ad8-6ed4-495d-8e93-b745dca3e207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cc2785-bcf7-4077-a4a5-d3d2eaa53523",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ecdae6-164b-40da-9da3-5e58134f3e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d2ac8ea-6939-4abe-9eb5-b818a0f27cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbbdd5d-c507-43ae-8dab-db65441d44c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fdcc2ab-035e-4431-85b5-bd1c232e63f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61782b81-15c3-490b-82e1-3149762c01a4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99c849f-ebea-4fb2-9654-7dc52266f96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92c0615-720d-47c4-9e12-12d27cc09012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d0e764-2de0-4bd7-ba9c-fd3df39f1128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c81a4fd8-2e38-418e-ad0f-da02afccceb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d48422-8449-430b-b4f5-fcf362202592",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2537273f-1895-490d-b9c2-149988f77329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccc70d8-a22e-46d6-b805-9c86cbc559ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16c8ca4-e6c0-4641-9cd4-d07ad200d039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "518e9557-d9e4-4a49-a757-f8953e733554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9769136d-d1e0-4f46-adf5-f85e8f2b4a86",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5144bab4-caba-4765-bc83-a097849cee98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9ac45b-8f8a-4b6f-ab12-bca490de500c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a05ad84-4910-4bd2-b292-3fe8a22dd029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c56bf6-21e5-429a-8ed1-52520c68e510"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7afd8c2d-972b-41c7-966f-97f0dc4b0578",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3cd6f84-4440-462e-8324-82c17cb75a7d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039fb40a-5e19-495a-88f4-12100343becd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4ef403-99d0-4f35-8eb9-1e7b5917ec9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c0eeb7-d420-4ad2-934b-1305c9bf8e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "848b17d4-88d3-4691-a8ad-fe57410d03ac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "707ca16d-0410-44d3-906d-c67b8f8d3df4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8228bfcf-47b8-4d24-98cf-d09328da9fc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e921c50-1ad8-4318-bb5d-93d0b21b86d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7624d2bb-bd53-4a2f-bdc0-550b9fb1d5f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88f0e826-3e35-4c9b-a2bd-f4fca288c614",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "199663ee-d8ee-4b29-a36f-9fca4add51f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6376bd7f-3fd7-4421-b4ba-522a5ba90f34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e381e80c-5ec8-473f-8c5b-191248ad3ee8"
            }
          }
        ]
      },
      {
        "id": "d939b6f8-aa18-4b0d-9bc2-32cb17976df6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cc406f59-32fe-4d77-abac-306c2c517301",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5a7c060-fcdb-4f79-b8db-1dfd0cc6d1cd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c7c3b42-693f-460a-be88-c7d936204046",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baad9605-a19f-46ff-b207-d3f51920166b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc74ef7e-7ae7-4221-9b46-03728083ac41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd73c532-5852-44f2-bdae-7447d03b4b71",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cee793-5804-437a-ab6a-61cd678ecf17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5998499-8e75-4ec9-8e14-4ee01f672f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fabfc7b-f879-429e-a710-fcc8dc87fc32",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9999bcdd-cda8-49a3-875e-beae96cd4cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c75f42-db8f-46c2-a778-f1a72025b4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde9a208-c85e-4466-9d60-781ca91e3d17",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf502694-deae-4734-aed5-401258890504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025098c8-7332-4af3-a2b8-852eaa516530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb58178-e61a-4cb0-859b-9763278de390",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707a7d37-2c12-4530-b5fc-9481a3cca2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2101f602-6cff-428a-8344-33bfa9172158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8245f8b-5d81-48d9-bee5-a2ba884ab729",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ceb6ea5-93d0-45ec-b9e0-0fc06df524f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d2c6cb-44ef-4805-8586-b77a5edcde90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74edf457-cd1a-4493-aa50-aebb9066e4b8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0ad01a-ce03-49e5-a396-de4856c60797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ffc538e-054a-4ad5-9f75-8d3d02d70b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c3e879-1be9-4924-bfc3-3bf3866b7fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf68cd8-d38c-4ef9-b05a-80d5f1c78f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b19e8d1-9970-4337-ba72-713609402c46",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c18f3e0-e8d7-4a72-91af-453f34be69e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e154fa5f-e4d1-4cde-a8df-365bef5720b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a78ff99-054a-4c3e-b97c-44298ba1b37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f5d3e5-34fc-45b4-953c-a0165653d8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ecee28-ba02-4ad8-8faf-006f22fa7415",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a87985b-3478-4e5a-a69b-50c6052284f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd62cf1-7c3c-4229-bc47-097e896965ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f951e49-ec5a-4040-85c6-4de373b3a64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06e895b-6e93-42f2-aefa-bd82737b955a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788e7127-136a-409d-b881-210e8ce68ed5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec452181-ca1d-48ef-9345-5e0776019bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c139bc9c-7518-4776-b023-c0947325fc6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c431c46-7d6a-4018-bca8-f10bfa071185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8a0a10-7518-4242-ab7a-ae36f678a9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926165f6-ff0a-410e-9a6d-d8b830421c1d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0bc7a2-1dfa-4303-92a2-2e44cb127a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f76b2d-eea4-4f9f-964c-e70168fec8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d825807f-a124-4167-a01e-e42106fe6308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85131bd-e8b5-44c1-9379-e695155bf409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0499a3a8-64f3-4965-a97a-2114a72dc553",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36895b4-7ec1-41d4-a9b7-533d6b28091b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4750b2-a173-4847-85e2-70704dd05934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25bc82d-eb72-4fef-8f35-419aa0a80bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12041cd-b251-4a87-8e9e-83f554599a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5236bb3e-39b3-44d4-b9d9-67328e340fec",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f0e85f-13fc-4065-a7cd-bea126c82759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98060140-0cee-48fc-abe5-ca338c8dff23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a22e700-9935-4765-984e-7f453482559d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed03f1d8-6190-41e6-a980-572d97218b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15445cf1-4a55-412f-9d98-611eba2928d9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0623be3-b1bf-40fd-9e65-78c20ee653ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3be60d7-fa8c-43e8-a97e-2262f238a07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567887dc-c5c9-49dd-825c-563adef76182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122e0763-4064-4c23-96ba-89fe969c2f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e109cc7-0a98-4005-8497-4e2cf4b0e9f0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae28ffb2-8d21-4b04-b13f-8f12ed861450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed434518-6272-4963-8773-cd9082ec0af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ca3d92-2f85-4500-a88d-8809dc487bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac89324-0c9c-4554-a5a3-baab1877cad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb78a0cc-7649-47fc-8682-36941979be81",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4707af73-5403-4a31-9625-2e4143677fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c75eec8-390a-48d5-a3a4-06a45ded57f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60276b5b-8384-4f13-acbb-45048997e762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a1b1a6-3731-4879-acd4-111522a8cef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25883ebc-3c4f-4fad-b4a1-58088a4da933",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61df4e11-2cf6-40b4-a899-2bb02d59a305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3bdfb9-7af4-43be-a0a1-270334a5fdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2241f0-e384-4375-b66a-6f5417cbf73e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8393a6e3-d9f3-4409-a306-cd08180c2b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f1cb79-02b0-4e7f-ab92-c22835d3de44",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f443ab44-fd8a-49ff-8bf7-408605fb7202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c60570-3cbd-4d18-8854-8da733bdd02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c079fb8-9ed5-443f-a208-6c2af908a3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c75126-46c9-4903-ba9c-5fa22b5edb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79c501d-fb44-4a17-955a-e11359a8819c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cd4bd1-202e-4f26-bb15-819c98d32ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b88ead1-1f64-4cdd-b01d-7c806cb6e854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7da5fe-e212-4644-b545-c4c24d1a8588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77b9268-686b-4fb6-8b35-dbcb827f0aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143ad63b-9466-4aec-aa87-0c2d3263d4c1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4863e6-8e17-4842-8b15-f29c4b47f012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0fbee1-8915-4b71-8849-26e92990c59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f804d86-a720-4869-9f87-93ef6af20e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1cb504-f90c-433b-8bd3-1d7805da0f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6d5fbc-b288-4736-ab73-f82517485cb3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20b4895-f588-4d9a-b04b-48d39e583832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc541590-bd73-4f05-b790-6b39fb43eee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebb369e-c1a2-4ccb-802e-6835a2d9f123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2dd067a-ac3e-48dc-b8ae-2a4f3c4d8c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545a3656-e914-4964-bf63-6097b0d8d8f9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834e44bc-9190-4de2-9a1a-0227e1ab023d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc7f062-9717-469d-9743-446c3c325881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7afe7d-5f94-4250-98ac-cc07697ae7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231d3a81-5ba1-4a6c-baa7-22fc6e8ca8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31929667-de09-47be-9734-583acbf3cdb7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f086afb-2ba0-4ffa-9535-e640cf06d833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f70e251-2cb3-444d-a2dc-1aa91883d32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c623fac-da56-4d0e-bb44-3589284e3820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb26def-d747-41c5-bef7-24eb8947328f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccf01fe-7031-4c0b-a3c0-46674b0716d6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7d2f29-9814-41f0-86d3-7cafb27a112d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0892742-c465-4661-b1b0-d813b3eecc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea0f6ab-0f54-48f1-9e87-3f205c87c54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed01020-b7f3-43ec-b967-aa9449f4cf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde9aa69-2984-4c58-b91f-409f6113733b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb83aa2-97e5-48cf-aae0-3198d231ac47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770dd1cb-4e46-4839-bd96-7416d8bfac1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d449c1e-b06e-4146-b705-93f01b500d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68fb132-c6d6-42fa-9394-940b9e5730f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197e8635-e5c7-4877-bb68-c9e3863829b3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a198bdba-0ee8-49b2-a116-4e38d376b118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b65c735-d4ac-4f07-a426-1999c70a708c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ad5720-eb95-41b2-b3b6-d0cf776aa2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3633eba0-d1db-4e6c-8a87-e52f0f919fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76838eb9-07c9-4a4f-867c-5afe678bc1d5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7dcb7f8-6303-4d79-9a61-3b3e7947633d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53a9ade7-3932-4f03-942b-8c65e66806ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44047ebb-c949-4f66-9e3e-370072602d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8749c9-b1a8-43fa-af81-f29342f26d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da37af3-60d1-42a2-99fb-4d91e254f51d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f427249-d8e7-4e78-9662-b33aaa687320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bfb5c4d-5a95-4f7b-90c0-6b58bbc63575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813c12f8-e445-48a2-8c97-c20c41d87f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1c2e8b-6dd6-4a7b-ba11-d6c3fa645613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84ad29a-6ebb-41ac-9267-ade0a0de60c7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ad933f-b5a5-4666-b32a-dfcde97daf8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43b80fcd-88bd-4167-b9b9-25868d3272a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5006771b-4208-4144-9238-9cd2b878af84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef00fa67-eb61-4b9c-b0eb-c6ad19db65de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe83c238-d4c6-4493-8b1e-0f0ddcee1a7e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029f04de-d171-4046-a098-ec05fa2b1e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "347fdf03-df92-4abd-a3a3-411f4e78af74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f367c1f-388d-4a35-aa71-3aebda62b5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694789a9-4c97-4fdc-9020-363eb09e1eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7ae4a0-756a-4f9e-b91d-40821c1e9c8a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abb6a3b-919d-43a1-a5ca-0a3e8f819f9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef0d496-fbe6-421d-b863-b5a77a790e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f83224e-a054-48db-a26e-3267c961a8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84dc8aec-ddbb-4394-87f8-18bcafc097ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6bea3b-839c-4b83-8c9d-b27a4d48daa3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7e9626-f330-4fc2-bf6f-d4fdb16a3bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb35212-9b36-4900-a5f7-ec12eea6a030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb1962c-68bf-46d4-a106-c68427b9304c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9915ef0-c5f1-4f7c-830d-79370dfa3739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9621117-df55-43dd-9fc1-c06fadca4d3d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98c253a-3d41-42c0-84db-b2be4c6a0907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84790f75-8d0f-40a4-b00f-793be4de3499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad29c5c-391f-4b15-b65a-98e10b758b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c24453-733b-4529-b9fb-42d98a3b9eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebca948c-6cde-432d-8768-6ed2ae18f428",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd30845-16ba-451b-8267-97efada70926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c904b53-2fb1-45fa-8bd6-5ec50b95350e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b6d1e1-231c-453e-8af8-bbc35d663d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3053a1b-de20-43a6-ac4a-b12e77d826a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2972606b-74a8-4e95-a54e-4c50e5ffdc1c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026402d9-c624-4338-9479-6e2782f83042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d563d717-b46e-44b0-80f2-fa3f1fcf1d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68ec18e-c6f0-4909-aaaf-287972e18540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516a146c-0184-445e-892c-d592f33ca0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992dc183-4bbf-46b5-949f-85519c5829e4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaa6a09-a977-4d68-b61f-fb87b2cbdb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d7430c-d3b6-4830-b525-339b404a6a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e6d72a-4ffc-405c-b73c-a719c5200768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9714e07-b796-4ad0-936c-2dac0aff75c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaec9c6-91b5-435c-ac2f-93caed2201a8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54d99a2-eb76-426b-a9a6-bd4679e99be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddaefcf7-7f26-4f9e-b9f4-c2282187555e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beef91d4-2fac-4f30-b6f1-13b059b5be19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6affa4c6-30fd-41a6-b6bc-d7c01620e7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502d32f1-8820-4ac4-9dfe-0f3fc42217fd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc7f7ed-18b7-47c2-ac0b-7da95f299132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaff316b-35a1-4c44-9ac6-ea6d26c9a8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa4e71c-4537-4a8f-866c-164ef6d29faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c93226-2bfd-48bc-8120-190b4aca1db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020a9072-a1ea-4911-b4b1-15e59fa9f0ac",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a579fef-79fe-4dd6-9263-6f297a0d7ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5cc4c1-b015-474a-939e-7da829f628c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76d401d-4192-4a0f-abac-1439efa0abf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf331aeb-e919-4d77-b9e5-48b72486abaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76353046-081f-46be-9931-d726fce0ba97",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acc35ae-6670-4353-aadb-1257ecdb6361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5039b3c3-1fee-46bf-8ba2-372d95385999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2716ad-b6e6-4644-a6ac-117cf32e62d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36934a4a-6da9-408a-87dd-697e82d3df52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0eb61bc-38c9-4ef7-93bb-65ddc03d8ef0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd9f401-dafd-4376-bf85-f14f60a58099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25918d2f-8113-4c75-a210-f88d06b459f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c1b15b-6be1-45a3-9449-eb8f1f657f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b14aff1-5991-4b67-9ac8-54157a25f1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a18ddf0-1aaa-4e08-a48f-140156af1032",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f96aa7-b4dd-47ce-a5e4-fb4b45a5a104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1f8359-18f5-463d-9832-24475d1ec82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34efa838-de02-42d4-9dd9-4b3098ca894c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642fcfe6-595f-467c-accd-8eb75c9341bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eda92d-6cce-4382-9bec-bfbf770c7a55",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0f7082-6ec9-49d9-b136-72eeb042731a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30b4f7a-c12e-40f3-90f6-3914e07df014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccafe8c-321d-487b-b5bc-47f753ca9069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b14ec0-0e85-4f7b-a766-9c9747d5584d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe7f48a-4017-498d-87e6-15c7db8f5295",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1630b2a0-87aa-4cf2-896a-b0c8c7b5ef5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c4094c-db80-4f60-a66e-35f0af685703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "041b44b4-bffd-4523-a660-ffb82a87f3d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff40451-8809-4ab9-9795-47e26f615ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11e5250-cd5d-4ded-9234-587bcd80cdab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1c46bc-9075-40e9-8019-7003be2e6c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a005343e-f1d9-4dcd-afa0-d5f6c4bdaeab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd11846b-e7a8-4b4f-bb7c-b6c1b53682a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a7300f-6544-4d21-968f-6d4281a4df28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68d77c5-4618-4dc3-87f5-064899c825ec",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d985fce-79dd-45ca-bd45-992c4c3d2ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce767859-7148-47ec-8aa4-4ee6f49f59c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054d962e-28b8-472c-86d6-3a098e36ea6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e10c161-1454-47ae-981b-037362dab088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71d4bae-a628-4fab-8773-334d0c535d60",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42052030-ab3d-41fa-a856-edca8ca42eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba1711d-4a5d-4f1a-b831-7d67ccb1cf1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cf78fc-c248-42b5-9717-6511a5ebd839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ecf8a3-534b-47c2-80c4-9fc6f238e37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c46bfc-1baf-43f6-bcd1-1f376cda0e66",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d838198-5d11-485f-9613-5c1480e0272d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53e2903-8bee-4535-88ce-b1115ceb333d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40293e3d-9c36-4cb5-875d-8f9b3a8556ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a90f837-b3c6-4039-9049-f17e0d2ca6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8e3039-0d16-4fc8-bb75-18ff96d96b13",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b244ec56-af2b-4c24-9e5f-4d4fbe5e77e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d38e456-f028-4ff1-918f-1567bc655afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378810fd-a4ad-48f4-9a16-c95d14c70dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d219df14-245a-4fe2-98bd-6bf44d0273a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929e3339-6b9a-40b1-b48d-e9365d28b182",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5de226-9e3f-420d-9481-f3c964357903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb7a0db-881e-49e2-906c-5456b3b7f9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45d18dd-4c64-45d4-802d-53809bd6ea1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186000cb-7575-4f74-bf32-511ac11d154b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deec21c-8afb-409a-9a86-28073fe196c7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3f4409-76e5-4c0a-b7a5-ea1486280347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01967bc1-bd4e-4bff-a8d9-bae5905c58dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b39d55d-ffb8-421b-b7cf-fad44b0d6ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6853dc92-b534-4063-a162-a17b937ce92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c84925b-5e0d-4566-b52b-8f2459bc8da7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d175cda-6374-405d-aa75-11d260f512ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc460b7-8a2c-45c1-84fb-960422aaff5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84573085-9678-4407-b9bf-13a6166cbb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ad438b-f88f-49b8-9ab0-19821a796732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db5a713-d93b-4cc9-8764-e0600d0e93fe",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d272c30f-2a5d-4d1b-8621-7ccd9e3ac027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1d5b60-846c-4dca-ace1-fae7e50b58e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6214e340-cc4b-4caf-aa9b-9fbad2d13deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63445df-a735-4116-8e50-3a1f705ecb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1499a04-aac5-4b15-befb-8a93013415e2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c77b91-f3d5-407f-99ef-45717e8247d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2374e08e-b87b-456a-b1b7-e4117f336e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1040a4fd-776f-4e7d-8b23-05adb9a28b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3b050c-6479-48a2-8070-327de1b78313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654d2c3e-40ab-40f2-bae8-845db5561c10",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f7f372-e3bc-4e3e-b4f1-f7b30f58a587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf12ad1-4849-44ed-ae3c-094604a8c2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18961489-71a4-49be-9db1-0fb30b431120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4961b75-9836-41df-aeda-024e0148fe61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a58fa6-5268-4519-8cda-53ac4b3df44d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f19a0f1-371a-4841-be53-6255637224ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c71946-6e52-4b15-88b9-4f0c76b03fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d636f60f-31fd-4e55-ab3a-4b58c4ce9de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d21a511-3a31-452d-94f7-2c4f502b846b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e79740-d301-4586-b178-4bffd7dcb1a3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c18f77-a877-469f-863e-e05738cc0914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b622a82-e123-4893-b965-539c64880d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07057ca4-cf18-477b-8787-f79b11f7694a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217e414b-2b33-4472-9ff8-c136fd7c8571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c3fc34-eea3-43f1-858c-72e27fe22117",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0d4933-4805-427e-9920-249ffe0d83b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070bf6c9-8234-49dd-b130-24cf81bcd7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b602b88-ab29-496d-bedc-a9bcc1b953fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d8d28b-8f50-4395-85ec-ffad5ea43441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f830994e-115e-4c6e-b824-09737493a7c4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c09751-4f3f-4527-b47b-7faa159cdf58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5319f0-4949-42ed-a979-817967f2e49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7476444b-ea6e-459c-8871-bce1f1dec22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6195521f-cf92-4f8b-9eaf-952bfec88bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cd8000-0753-407b-9aec-acfba8136367",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea97a3b-57a9-4e17-a116-aefb9c9ba497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662def61-54e6-4675-85ce-e5623ab34cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a300c51-7018-4986-81e0-d7bdfda03ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5c7a3b-049f-4d47-be80-a9b6bbd913e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0e4c60-fc51-4740-b5c5-4fd17b5a8081",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e626b648-82c0-458e-9eb8-724c1aee470c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7dedb9-4b0d-41d6-a899-d9d8157840a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b720088-d0b9-420e-9bb0-c523c7939413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3965ef66-1299-4c02-96e3-355ddcac67c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e894bb-14d4-4811-80a3-3c631ec5dad4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3b122b-4e18-4d81-bd3f-9ec24b2c2d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b69a9fb-3cf6-4eab-8bbf-7e1fd734f0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12674c0a-89d8-48da-b76c-4ed460aed80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1921acf-d662-443a-8fa7-6b0952f6cc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61248a3b-e1ad-4a0c-9193-d1fe594ebe1e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd17b2ec-806a-4b24-82eb-5a03e6f80d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32db5088-2d27-4757-b233-41964dca1da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545dc9ea-c4bc-4c4e-abaa-4c1e417ebf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b160f83-e187-4bfb-bcc7-d452ca816ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3451e4a0-ea76-432a-b1ad-d0bc726c75d4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8236084-c8c0-48a3-b374-8e798efed9ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc9e364b-a321-4bba-96d1-f7852cb75a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4b6014-b624-49d4-bfc4-cc3d6b9c715e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0799a55-06c8-44df-93e2-23b794f639b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b345e53-4124-4a8d-b6f3-c46300ef2bba",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67a8341-291c-4520-8d74-1119e7bf42a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17f42d2a-8000-4c55-adf4-a4e497a9a6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cebdc4-f00a-483c-93aa-2572b67d6616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b3da22-0187-42e7-91b7-5fa176015ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be59e119-acba-4dd4-a57f-81c2f1f342fa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093c51d2-ff68-417b-ab6f-ec2369740321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19937563-faba-40dc-95b6-4681e23918f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7aa046-738b-4b7b-8662-c6c8f2c0975b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7caff3-fd87-458a-8832-9316a878c77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0b8abd-1051-4d51-92ea-a21d34a9cb49",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ea110b-7cc9-4271-9920-4845ee247ad9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adeb8afe-12cc-4ebc-a61f-2e199b603c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213669ba-a186-43a0-9583-c8a7949a3da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbceb40b-1da4-4bd8-83da-effde8a23df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28695f6f-41bf-4b56-9f41-9bf4afe394fc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c197770-4a82-45a3-b66f-e036ff9b000e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3bfccea-0a9b-447c-ae5a-3f311cbef0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8740d08-a95b-41ee-9ff1-e8a48703a19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a774f5b-8030-46c3-b171-71d1ae6f0afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574b4c28-ec10-420c-974b-1410d3f810fa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e4f047-7e4a-4a72-a2db-400e203c665b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50ba4ac4-0b22-4ee1-8a90-ca66f570e4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c62085-99e6-46af-a5e0-05311335bd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68930eba-9976-4ca7-b2de-b02d6d3672e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c94781-f053-4614-9b0b-fe4214a22152",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8629b45-fcda-4509-9063-08a449f6c8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "258aed65-d7d9-40df-89b7-c57b783e6962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cfa0f2-588c-44cd-8338-40153042513e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac58a647-a778-49a7-b9a9-221cae550289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93d853f-3b3a-4c9c-a2c4-750ad65c5765",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93939d90-34c3-4c62-8b4c-d35174125e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c9462b8-b928-415b-8adf-1c4131b613bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e461e60b-fbf4-4b3b-9842-d86bea1f5f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2e26a3-15b7-4fdb-af12-0e1fa36faa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d022cf9-9729-4536-bad2-30e53e30cf86",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9e4149-4ef3-4a7e-98df-e0ec49094191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f278986f-094e-4195-b220-24aebd23dc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b1462d-71b4-4222-a114-ce881b1a53f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39170f1d-729a-4fa9-9f40-fc2a172b68a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8693ff19-40e0-4e14-ac20-ce3e87009fa0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1383ce-2ce4-42c9-8632-62aed476032c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf41fc6-699b-4213-970b-4a61c46f937a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f41ff44-b076-4356-b104-06fc425750a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e3a31d-94a5-43e8-9e5a-c42c4e7cce20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61957830-5a93-49c3-a347-dfc51cbf4d3c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e513a2-9050-47f6-8df6-5f43c24dbc4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b0feaf-1931-408e-800c-ac8a99272d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d9d544-d6b7-4f2f-a9c3-63ee5f4c0769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9dde81c-726a-4172-bf58-f9e8e42130e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc276cbc-da6f-4449-a2a0-990af5b9ce32",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0870824d-fb94-45c5-835d-5238cc5857d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c07c417-71cc-48e3-8aaa-231746c284a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffd0a5b-d8d5-4f06-b136-abfbcad6070f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74670775-424b-4aba-845b-72c88bef4f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bfaf0d-eaa5-45d2-94d6-5d59a3dfac48",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3955b49c-2ccb-4dee-9bb9-f4636b4726f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8762332-8085-4e2a-a5e4-f90a40959e00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d825b5-4297-45b0-9782-deb89693c567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d4c82d-43ce-47de-b44d-72c65a73c215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c59578c-740d-4f86-8fc1-f805e19dec1f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f319a9-be00-42a6-acb1-edd59b9dff21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff4f83c-0b28-44a6-8d67-8e808ca5607d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efa113a-9b30-453a-94e4-3b3d2a62b394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a96b2f7-fe0e-47f4-a366-381ef4645747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adba8a55-081e-4077-8487-754b0f7233cb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edb49d3-f4b5-4230-bba2-e637c0489ede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0d461dd-81c1-40f6-86fe-9514e3e1b549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f647b7f-cfe8-4209-ab12-05c644821763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adec34b4-003a-49bf-97a8-044e04789389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18fea63-07fc-4c87-9ac3-c317293d8138",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28f330c-8772-49dc-8352-2b61b951563e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f09599e-7a73-41e7-942c-d6ff756e16ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbf447a-9c34-4fd9-bc42-37ed92f99c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba922cf-0784-45b7-a080-add2321f911f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f90a46e-60b3-4bc3-8fe4-9edf31e0700b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683c8d24-0f9b-4d92-b5df-11f985d61b82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc0af2f3-5d9b-4c82-a9ee-51b69b52f292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ad4b58-0c2a-4436-9dd4-15cbef7bd84b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18576eb7-aaee-4711-a2af-246e2d915dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ba55fa-75f1-49af-9de3-2589d8e2ef83",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430fb31c-d896-420e-bfa9-e87a7cc99f3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85dfee73-08cf-4e49-b412-986f52b7f78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef18804-3a77-4607-9efb-a6e1b41bcc22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d40cc48-381e-4bdb-8100-943102bcbf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af2372b-1b56-4776-a649-10ad5980c51f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ead5707-92cf-4e80-a0cd-328d8c4ec820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5cbc6f-8229-43de-a1a4-cc10738870c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f54a13-ecf9-4666-a254-071c97d4d33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c326c04-a891-455b-9fea-328ed1a67af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289482c8-848c-4784-93c3-89f9a7659104",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e97382e-9a3d-49d5-b2bd-2776d3fc766b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c32e5536-598f-433b-a3da-d74b400bda13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9085d1-8a98-4742-ba17-b1e2dbf265fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bb577e-726f-410f-bd5a-06886040c692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93434b34-6c92-4b80-a0cd-4ab2dcb2970d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47567098-d51e-41ea-85dc-9d0c546137b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed49eab6-d76a-4e60-b7a8-83b9e249e26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d811cf94-7002-4926-b9d7-5f329cf7a50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88c2e66-7188-4c95-82ef-835f63fcc3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15da848-249f-4d0d-a935-e57fd5478a4c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5219d7a6-02a2-49c3-af14-4a9dd8965f57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d3c835-1137-4cc1-b140-2ed384be7590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45debb48-452c-4146-ad67-05449ff5af3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529747c3-a0ff-40c0-97f6-2bb0cfaa39fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a1739b-5258-47e6-b563-493b4148c8fa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d5c75f-2275-4578-bdb5-27656aee6150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e30bc3d-3372-47a4-9e4f-0af27dccac6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc04a27d-6eea-4691-8adc-7f82edb1bbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508b0f26-9b5e-41dc-94a8-ead27c47c1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811b38d6-613f-4c1a-99f6-11c40fb39269",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad46562-df8e-416b-bf77-ee4ff1b90e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b69bea-11cf-4582-abb6-376772482e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f675f7-d951-44eb-96f2-6edc47639490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8982f7-d7bc-41f1-91bc-65c926bffbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b910a0e-8b20-4969-b7ca-100e9fa9a44a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1a9557-77d7-4be1-839c-6c4c2571d1ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469314ac-05d0-4722-b1f4-e1e1a01c3878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b3f573-7225-4901-8d7a-b17a98422476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7cb567-c116-47bc-85a0-030a19d3d347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50625038-49d1-4e13-a6ee-dfa53e4f4dda",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb56202-0696-4831-ad03-a89cf45dc698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95ee59d8-9a52-4ba6-84e1-1feab4b311ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f836ff76-1990-49a5-8f17-7cd1b3c2029d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10183310-175e-4c92-b907-749663429f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96686cad-ca48-4c05-817d-3f0d2292796d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf45afbc-eb6f-4836-90bc-1a5e94ec2ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82c9b94-980f-4417-9a6a-a29f685aad2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8ccb4e-d9a1-49e5-a84a-f0e52d61905c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5363858f-48f6-4fa2-ad02-4c087b63283f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e346dbf-fc38-42d9-aacd-69009644df1e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84652d58-2f88-4edb-9e27-70cce339c055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90d09c87-f415-42fd-a197-ddbf6284583b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9956ee33-c85f-4360-8657-1da08f5a9f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17710545-fe9d-4f93-893a-c5167b923877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3ca540-4b00-4140-b237-8b5bd8d3decd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c8f981-f302-4e0f-bb00-4e3deda8b06c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b5d3e43-5856-4536-9175-ae7e3ad0a404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530684e5-3215-4651-8a87-712d83fe43f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b526b85c-3f5f-45a2-886a-a74acefd14d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc988d3-2e3c-40f7-ba9d-4d320512b591",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbebb389-2481-4819-860f-0e84aa79664e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b44a63-f981-4a79-a594-86c739135754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58511c2a-047b-4be9-80e4-ebaa4a7d439f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1aa1529-71e9-4efd-a9e4-1cf748887285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b16134c-f8c1-4058-b982-28acf6305b8a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cb5fdf-34fc-4956-8dc0-5850020e17ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c3cfbc-0894-4de7-ad2a-240e763bcbbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97487e74-01b7-44ca-9895-7ede8816a90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ebb538-29ca-440e-9313-ed8c9a59ca2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47395cbf-b352-44df-aaf3-e99369889f28",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cebb6c7-2488-4cb8-8cab-ec62af990b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10908811-a4df-4ecc-a61c-7f5eca0036aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c5e594-8682-412b-944b-bc90cb5e972b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d456b0a-77a8-422e-8519-6c9be33d4e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ece756-813c-44e0-80b3-b57e087c04fc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b54d6c-ef98-4631-aeae-85e62619a275",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e759944-3c06-4f52-bfe1-1153b45efd83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccde220b-b4d2-43e1-a3ea-320013e1b3ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d55f048-fedb-4ea2-ae56-97e871a6649c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaadc6bd-1663-4754-988a-876df6049e7a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234cf6e7-adf0-4b29-af1b-55bb21d05f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a012a567-a042-4c6c-ab05-0fe10cdb8023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0be92c8-8403-439c-8650-5e2edf77c255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23cf3e0-ee51-4f9d-8fc1-a3fe6a56162f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebfd8d93-02d0-4ad9-947d-385244f7f0a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1819603-475b-4a42-a3fd-fec041004b95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "198e364c-e8b4-4165-897f-6e1caf7e222d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03e073d7-b1fd-48ac-982e-8763f04466b5"
                    }
                  }
                ]
              },
              {
                "id": "42feb984-d473-4792-8568-b8267a499701",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a38b5fd-2ecd-4d0e-9777-be0aaa8f731e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44283117-bdf4-4db7-a563-2efc8aba96fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "261cd8f8-2fe8-4e8c-9d72-876b623650bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2989be6e-974f-416a-a2d0-b13962a00098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71f9536b-0136-4d1e-bd4a-ab6142ae339b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f07f6d2-5f90-40c9-842a-10baf4316f99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91feef22-a29a-482b-b17a-87df9f25bd24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "222274f1-aa64-4154-808a-cca597bab187",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67ed2988-1d52-4b97-a0a6-c334cfbe624e"
                    }
                  }
                ]
              },
              {
                "id": "3d72fa7d-a8f6-42bc-8bb4-97c77cb1dc62",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "abe0ebbb-18c4-4f22-b12f-f184fea70fe6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cff2df-d18a-4c1c-9ec2-51f1ca0980de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "46c2b8e9-a9b0-4a70-8986-42d7681c296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bc07c8-9389-450f-b7d8-00bdbf6c94d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef01837-c4a3-4667-b351-c9bb7b618a8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81cf2666-74fa-47d2-bb26-090f09a6694e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9299924-d319-4fec-8086-b78242c2189e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfec27f5-eb8c-4676-8726-525ee7d773fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cfaa24be-319d-4226-b706-06d5dec52fb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d996bd99-3ac4-46c1-8902-4a758cc152e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d19965e-fb65-40f8-8df2-08a693d0e241"
                    }
                  }
                ]
              },
              {
                "id": "f5404fe8-70a2-43f6-b7d7-97f84986d2dd",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec555a05-57eb-4771-9af4-8009f890073a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bc05737e-6f28-44cb-b941-1b4e810781a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7a7adfa-873d-4e78-bad4-0feea14fd430",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07eabc68-b6e3-4fa4-b47e-33502a15d9d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "400974be-0ed7-4433-b9bd-19f5936607f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "eb8ace34-34e7-4ac9-9a34-d5d53a7a6523"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a0398b-facc-4007-af05-ffddb52718c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79d28420-6816-4ecc-bb1d-fbb724f707bd"
            }
          }
        ]
      },
      {
        "id": "17e3f5ac-ad67-4054-9359-183f662f5091",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7b148043-3d58-42ca-a54d-41d500d667d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "347e6c06-f35a-4311-bd40-06872932cf29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "043407aa-d895-44c7-9968-51373772c06a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37c59f9-10e7-49f9-9f86-43a7e02667b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f27d7109-3a0f-400a-8cef-61e1bf0cca50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b092e4c1-64b1-47ce-ae43-e79bf5aecdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c26c513b-ef93-4e64-9397-e269b202612c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c2a4889-2db6-4382-a4ee-46a3fc0da6e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0751e43c-8859-4dd7-8a16-c696a5efcaf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca761ec9-8811-4e4b-a503-8c10f8bfd931",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f252f875-6402-4231-b8ab-691f73e27dfa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "289c440d-d1b3-4619-82b1-f32b3c7fd6d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d9a11471-a005-4f5e-82ea-a64979d10133"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "730250ba-2562-4b27-b8a0-173ba4b3c1e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "731c41cf-4dd0-4727-b3be-f9cd1031061c"
            }
          }
        ]
      },
      {
        "id": "5fd9a1a2-d4b0-4fd0-8fbe-4583ce4749ab",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0ee98c4e-135b-45ea-b518-0742e861637e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6b5961e-7402-438a-ae4a-fb398e509751",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35443abd-ccd0-43d7-9f25-856e402dd54c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55512f5-3ab6-4e54-911f-113deb00b72d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88b80f12-ae0a-4e05-9933-9a1368cba21c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2c5af0-d700-4633-9df9-87b390b9301f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3bf92f1-7315-42ea-99b8-47bcdc209b5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "289c4811-d53c-4184-aa5f-b0a2c63a949b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b163445-3d4b-4ca0-847f-78fb92be1542"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21f0b8e8-f143-42a3-b3f0-0dbf10b13d1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6171289f-bd96-4a3f-a040-71167f6339fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51dfd88d-a64e-44b2-ac36-bfc88924ca9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2a66a66-a06e-4fb2-bc5b-e331fce54d48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f29dc79d-a9bd-46c0-a23e-0213d627e6d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46a7468a-b841-45ba-a4a1-18e88bedb3e8"
            }
          }
        ]
      },
      {
        "id": "3d729345-1ab3-4217-a17c-2939e2153c84",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7ab7b18f-1b61-4682-b104-8ba5e99075e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f9f185b-72c0-4a0a-bd72-1a9ea0cba4c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc3539d4-86e1-4d3d-b054-6ca997d1b2b2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb57bce4-489b-4314-89d8-d22ba08f9e6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b3be911-7075-4ee8-9f19-dba86f83d3f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8c70df-82d3-4e29-9b67-aa2fd6849a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b287248d-5e59-4144-beb0-201ef144f585"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e51b6665-8a36-4978-813b-ebe9061fa45a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d74b20e5-0990-479f-a0d5-f204ac8640e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1add9468-e11b-496c-9f98-ac37bde4cb2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a10612af-9aaa-4e3e-9900-b85f36e4daea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5af04c18-2b23-4744-a71b-32a5ccff134a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8560ee00-0b36-416a-8715-b5f47b240ffb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "402e0364-5724-4ab6-a735-92d6d1076d08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f32a8b6-e90e-4fd2-a2c3-4d9edf7b0999"
            }
          }
        ]
      },
      {
        "id": "710808b8-345b-4108-89ec-f3534ebeb255",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc59d838-a0c9-44fc-b67c-08bc604e1994",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fe703b1-c11f-4512-8ade-11a0d661b00d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6e2c42fb-ef48-499a-97f5-8219919fe235",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30b8bede-c41a-4323-917a-1c9c93f614f2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c95aa9d3-0fc9-4145-a6f6-b1b8d4cf2cb6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.77543859649124,
      "responseMin": 5,
      "responseMax": 217,
      "responseSd": 19.703916083310965,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709426172051,
      "completed": 1709426199784
    },
    "executions": [
      {
        "id": "5d2ff047-c80f-4d88-932d-a6875923ac71",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "26d3b802-c888-4307-aeb1-dc08f55ab81f",
          "httpRequestId": "a0f114dd-e4d7-498f-ba06-ac994d5c9f31"
        },
        "item": {
          "id": "5d2ff047-c80f-4d88-932d-a6875923ac71",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "64fdd8ca-b606-4289-a2cd-befef10f1a4f",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "ec446569-2a3b-43f2-b7bb-4666188bf28f",
        "cursor": {
          "ref": "74830d8c-44e9-430d-8775-e30d701915c8",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8c471777-15fd-4b35-9270-ce417fa41a13"
        },
        "item": {
          "id": "ec446569-2a3b-43f2-b7bb-4666188bf28f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f0a23c27-a171-46b4-8060-44e8dbb76203",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "41927b79-0c7c-48e5-9e21-b5946724e9f7",
        "cursor": {
          "ref": "8eb68baf-ab24-498a-b208-4799f2b1fc2e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2381b3b4-2ea7-4de9-9706-a5b185d05684"
        },
        "item": {
          "id": "41927b79-0c7c-48e5-9e21-b5946724e9f7",
          "name": "did_json"
        },
        "response": {
          "id": "1c618ca1-54ee-4585-83f4-8646f69ea1ce",
          "status": "OK",
          "code": 200,
          "responseTime": 202,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86e3c40-72f6-4bac-b145-3466f7cb82ab",
        "cursor": {
          "ref": "e2891d54-537b-472a-822f-de4cca4b3348",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa49e342-2b89-4181-8182-766fab5af575"
        },
        "item": {
          "id": "f86e3c40-72f6-4bac-b145-3466f7cb82ab",
          "name": "did:invalid"
        },
        "response": {
          "id": "e910cee6-8ced-4f87-94be-de56eb09a2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86e3c40-72f6-4bac-b145-3466f7cb82ab",
        "cursor": {
          "ref": "e2891d54-537b-472a-822f-de4cca4b3348",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa49e342-2b89-4181-8182-766fab5af575"
        },
        "item": {
          "id": "f86e3c40-72f6-4bac-b145-3466f7cb82ab",
          "name": "did:invalid"
        },
        "response": {
          "id": "e910cee6-8ced-4f87-94be-de56eb09a2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f369ec78-ad79-4af5-97cf-ce8828924532",
        "cursor": {
          "ref": "9ff7f364-2918-4e46-b987-968c47b7073f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f4f9a6d8-398d-402d-a062-1abbf5014659"
        },
        "item": {
          "id": "f369ec78-ad79-4af5-97cf-ce8828924532",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "191999ac-7db0-4ee4-a595-3ceec9aabd50",
          "status": "Not Found",
          "code": 404,
          "responseTime": 139,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daba324-f5ce-4362-94aa-deed201cc2eb",
        "cursor": {
          "ref": "561a28dd-6961-4695-a25d-ae9c64783ec2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ca856b71-588e-4c9b-80cf-3fc402d0adb5"
        },
        "item": {
          "id": "6daba324-f5ce-4362-94aa-deed201cc2eb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "720c1512-102f-42ce-b7f6-d3190007a2db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2984d610-e90a-40ad-877a-8721acc017b6",
        "cursor": {
          "ref": "1db3486c-0a1d-4c72-9300-199df62eac6e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d2131279-6124-424a-b83d-40cf68f796a9"
        },
        "item": {
          "id": "2984d610-e90a-40ad-877a-8721acc017b6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "62ed3eb1-e14e-4a3f-8166-630cc8ab74a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ddd300-e182-4a17-bdad-d79e523b8caa",
        "cursor": {
          "ref": "cca1d36c-6691-48cf-b52f-72a0bbb4bc53",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c138db65-e542-488a-967c-55e8fdfc9129"
        },
        "item": {
          "id": "09ddd300-e182-4a17-bdad-d79e523b8caa",
          "name": "identifiers"
        },
        "response": {
          "id": "0954612b-de81-4a5f-bf84-452b5a9ebca7",
          "status": "OK",
          "code": 200,
          "responseTime": 145,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46afe9f2-2d48-43c5-8ec5-8d1dcccf7ca8",
        "cursor": {
          "ref": "56a04d10-1feb-4785-9a83-6bc4e670d616",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa00fed8-a88c-4613-ba25-4778462e5d28"
        },
        "item": {
          "id": "46afe9f2-2d48-43c5-8ec5-8d1dcccf7ca8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a8cab0f8-f9ce-46c9-a93e-0e6bde3aa44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c89a5a0-404e-498f-98c0-3ea2db0934e5",
        "cursor": {
          "ref": "a07445f9-1160-4c17-9a3f-68b5c067f697",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d051db83-d0d2-4c8c-ae38-720c14449a10"
        },
        "item": {
          "id": "9c89a5a0-404e-498f-98c0-3ea2db0934e5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "12ec0142-32ef-4adf-8e05-cdbb6ef557a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a924fc1-5eca-481d-882e-7c80f0e50ea4",
        "cursor": {
          "ref": "6e44fc92-3dbd-4f19-bcde-6bb590d0eaa1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ba8432d1-d469-49fb-aa23-2d5a360b22b9"
        },
        "item": {
          "id": "9a924fc1-5eca-481d-882e-7c80f0e50ea4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3c5db192-a091-4d7d-8505-b7f39234edd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec21adb-b839-4625-9ce9-64c7a455c291",
        "cursor": {
          "ref": "53b7658c-c43c-4cd4-bf62-8213c5517f2e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af24eb0b-b4d3-42cd-a143-a3b9e93a69bb"
        },
        "item": {
          "id": "7ec21adb-b839-4625-9ce9-64c7a455c291",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "58cc9f0e-f7f7-43e4-bfc9-3957e7579b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea76cc10-22f0-4a95-9eac-49280f889a7a",
        "cursor": {
          "ref": "7b3d2e80-0b8d-4b4e-ba1f-558b00509c8a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3dafc150-dd73-416b-a5ed-f2c49204207d"
        },
        "item": {
          "id": "ea76cc10-22f0-4a95-9eac-49280f889a7a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1a035167-b7df-4df9-bce5-49ce7413a32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4145bb-8b10-45c6-8fd8-ccbe021146bb",
        "cursor": {
          "ref": "81f56fb4-e0cc-4c90-a83c-1abe35a51001",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8a5d5600-5067-474d-b6cf-cc40e31708b8"
        },
        "item": {
          "id": "5e4145bb-8b10-45c6-8fd8-ccbe021146bb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ec6a82f6-8376-4af7-95ef-adbf297c13a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c317df-6ec1-4b24-a952-daa267e5d6ad",
        "cursor": {
          "ref": "632cce9c-e4ba-4ebe-8f55-ea1738c24b6f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "922ddf83-f835-4e27-a0e7-e725c4924cc6"
        },
        "item": {
          "id": "07c317df-6ec1-4b24-a952-daa267e5d6ad",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0e75a347-2882-4cac-a5e6-f67e0761fbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6094a0-7ada-46fb-a5f5-5e03109f624b",
        "cursor": {
          "ref": "ec318469-94ec-4023-b52e-5407a7221e65",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "65a51be1-d2aa-4fd8-a880-2dcb2015c194"
        },
        "item": {
          "id": "3b6094a0-7ada-46fb-a5f5-5e03109f624b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e23b1f1a-405a-4de0-9ac1-4992d2c89d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3a1cad-6151-4a05-85c0-014c7a3f7893",
        "cursor": {
          "ref": "77a4a3cd-df1c-40b4-ad3a-67dabad052a8",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a621fb09-5d7b-4b7c-b69c-5b45e50f8b11"
        },
        "item": {
          "id": "cb3a1cad-6151-4a05-85c0-014c7a3f7893",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "67a9d1ef-7461-40be-8a5e-dce4bc6bb0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c348ff08-921e-4d1c-82c4-6f3f27c6e227",
        "cursor": {
          "ref": "ae1c27d6-0e85-43ab-8aee-d216c5c96f89",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1c6cce7e-101c-4031-9759-142a84dfe041"
        },
        "item": {
          "id": "c348ff08-921e-4d1c-82c4-6f3f27c6e227",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "39b18848-6d6f-4f72-97fd-6b8dfac88748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660c4aa8-eab8-42f0-a547-0cd8486be512",
        "cursor": {
          "ref": "1da29e12-c681-45ab-bb51-4faa3d67ca30",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "92b2b175-c2a4-49ec-8bbd-2f9ff0b0125a"
        },
        "item": {
          "id": "660c4aa8-eab8-42f0-a547-0cd8486be512",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1ef8a5a0-4de3-4632-ba6f-eb60837e478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0113864-021f-43b2-b46c-206c09230cae",
        "cursor": {
          "ref": "20450a28-f7a4-4613-91aa-9b933d9e6e31",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2708ca55-3367-4aff-805d-6b8f55b8d79f"
        },
        "item": {
          "id": "e0113864-021f-43b2-b46c-206c09230cae",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "86615d9c-6d1b-43a7-b8c3-c197ac363804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e079544f-414d-43d8-879b-b9b5af14b7a9",
        "cursor": {
          "ref": "ab96096d-9948-48e0-a77c-27ea4e3a9e63",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4a9aca4e-906c-4c09-962c-4ac94846f31a"
        },
        "item": {
          "id": "e079544f-414d-43d8-879b-b9b5af14b7a9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "80e782ac-4aed-47a0-938a-69f1538c79c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07221fd6-6e23-4e41-a878-9cc4d7371d1a",
        "cursor": {
          "ref": "56886773-1709-4a4b-b3a6-0df917ef4d6a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fb4ca566-038a-4bb6-b80c-0b338412ba8e"
        },
        "item": {
          "id": "07221fd6-6e23-4e41-a878-9cc4d7371d1a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "011b6016-f233-4593-aad1-321177bef1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb9f0bd-d8af-4fdc-9aae-1354099cc6dc",
        "cursor": {
          "ref": "9228a361-64fd-4f72-808d-0ef54dc72aac",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fed27694-598f-4220-95a2-a7ddb5870aa3"
        },
        "item": {
          "id": "8bb9f0bd-d8af-4fdc-9aae-1354099cc6dc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "add1a03e-ab6b-4240-a7f0-cdd9a3397747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74018716-4d1a-49f5-91d0-4efe230e60ee",
        "cursor": {
          "ref": "8211894d-fd2e-4c50-8094-fdbedd05cf44",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "69ade0f7-681c-4882-adc4-6ca6e118d09b"
        },
        "item": {
          "id": "74018716-4d1a-49f5-91d0-4efe230e60ee",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8f2e268e-4100-40e6-a681-89ba18682e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df598834-bab3-4738-9d19-2556057bf7f4",
        "cursor": {
          "ref": "020c074d-71dc-4c4f-a18c-3621134a832b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6a827fc6-e36c-4196-b7c5-10613e3bd903"
        },
        "item": {
          "id": "df598834-bab3-4738-9d19-2556057bf7f4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c343c51f-d1ac-4447-b945-2d3a185f9f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f5b991-cb5b-4c02-ac5f-8e748b8b2fb0",
        "cursor": {
          "ref": "1093ccfe-139a-4823-88d9-4c575f2ada32",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3a006af1-0b45-4d46-acc2-f51805b5343f"
        },
        "item": {
          "id": "e9f5b991-cb5b-4c02-ac5f-8e748b8b2fb0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8eb22ba8-ef83-4f15-b37e-8207fab2e1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903d4ae6-0895-487d-bd09-8749f7a1049e",
        "cursor": {
          "ref": "b3ea606e-c8b7-4d93-8bf9-0853919a25af",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "14cf8b58-de21-427e-bdc6-a0601a271a65"
        },
        "item": {
          "id": "903d4ae6-0895-487d-bd09-8749f7a1049e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e45f6b59-cce8-41db-9f56-79807f55d64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4414db-c511-4097-b699-445f4566e6da",
        "cursor": {
          "ref": "e7570673-2391-4863-a0e9-4c3a8a91fac0",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9bf649c9-3eb6-4592-b9f5-b9646f78c24e"
        },
        "item": {
          "id": "fc4414db-c511-4097-b699-445f4566e6da",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6ae14c78-7435-4cbb-811f-6245034e2cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52c08ac-7bdd-496f-88fa-b67d1afeeb6f",
        "cursor": {
          "ref": "e2c53cf7-6b07-46e7-8d13-39bb376efbf6",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3820aa98-4562-4856-8050-fd7f4c6c6547"
        },
        "item": {
          "id": "e52c08ac-7bdd-496f-88fa-b67d1afeeb6f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ad2c766b-8152-401d-b82d-5286aa43607b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925a2974-8e74-480f-95ff-4d4f16331040",
        "cursor": {
          "ref": "1e4c1d37-f939-4585-a337-dc6e907635de",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4b035ef3-73a7-4e96-80cf-80b496ee9f24"
        },
        "item": {
          "id": "925a2974-8e74-480f-95ff-4d4f16331040",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "87a21163-5907-4988-af98-d46c1cbbfab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d60dd7-1bb5-4693-a01c-e05d8494ef51",
        "cursor": {
          "ref": "b0f34622-d289-4c88-bec7-82a31d5857b5",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "784dc993-f75f-4378-9009-131611dac620"
        },
        "item": {
          "id": "36d60dd7-1bb5-4693-a01c-e05d8494ef51",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2e0c63b2-0a9d-42b7-9734-e4de8ab1193f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac28aac2-c689-449c-995b-577292999795",
        "cursor": {
          "ref": "44c3216e-ed37-4943-9213-6b787cd2448a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fdbe6f9c-e3b3-41e2-b8a8-8a100ee1e37c"
        },
        "item": {
          "id": "ac28aac2-c689-449c-995b-577292999795",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "18079f2c-295a-4617-bcfd-ea97ab95b781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f18d779-d202-4956-8439-3c8f1d48c97f",
        "cursor": {
          "ref": "05063649-90d1-42fc-b4a0-adfecd098c50",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "723504b5-8449-4b47-8f19-182b1703d7ea"
        },
        "item": {
          "id": "5f18d779-d202-4956-8439-3c8f1d48c97f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e232c5df-bd66-44c5-8174-af6931c5ad95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba46208-070b-4aea-8d1e-df03beea050e",
        "cursor": {
          "ref": "bfdbc915-8666-4a0f-b4cd-06e675658b2c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "29d68e75-8c34-4b47-b082-639fd9e52b96"
        },
        "item": {
          "id": "5ba46208-070b-4aea-8d1e-df03beea050e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bf0b346b-c86d-4f7d-96b8-0b93e0512a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954ef376-7d88-4593-b081-e735325366eb",
        "cursor": {
          "ref": "b4779b94-ab08-4228-b4c6-80ea7ff15d6f",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7d6eb5e4-40f8-4754-b36a-3edf95f0fe11"
        },
        "item": {
          "id": "954ef376-7d88-4593-b081-e735325366eb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b50649e0-cc51-44ea-a5ef-4f5181b838df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c268f6-dca5-46a2-baf9-16802dc7e10b",
        "cursor": {
          "ref": "c7febb85-f9ee-46c3-a56e-deea1080411c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d18f5d9d-d103-469e-95dc-5ad79997874f"
        },
        "item": {
          "id": "d8c268f6-dca5-46a2-baf9-16802dc7e10b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "19788254-38d1-4c3b-bab5-f849b4367cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72895ba-de4a-4d75-9d25-060cb575c6c9",
        "cursor": {
          "ref": "4a3b378a-aec9-4e6a-bbf2-e4f3af0f81b0",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c865ff40-92ae-495f-ad74-b4ddee82e198"
        },
        "item": {
          "id": "c72895ba-de4a-4d75-9d25-060cb575c6c9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6c0f140a-9625-47ef-b8a6-13a435f9faf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165e2460-bd4f-4cd1-a1c2-9ff1d5d58d58",
        "cursor": {
          "ref": "a44ae77a-da44-4036-9752-b64dde590c78",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3abc9e2c-52d2-41a4-b615-63a292cc305b"
        },
        "item": {
          "id": "165e2460-bd4f-4cd1-a1c2-9ff1d5d58d58",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fa03b279-50aa-4e51-b155-aaefa9e4c949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff5bf42-dad2-4a36-a333-191982823e35",
        "cursor": {
          "ref": "a5bea0b4-033a-4c51-b8d9-4f6b05a77f4d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bc972096-7e0d-4bdf-b8e3-54097b038c4b"
        },
        "item": {
          "id": "3ff5bf42-dad2-4a36-a333-191982823e35",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1f50e527-2994-4d6a-9aea-f3a7367644b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63587745-6fa8-4b10-a515-02986f14e2eb",
        "cursor": {
          "ref": "fdccc6c9-682e-4ff1-b7f9-503fa08ab636",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "700e94cb-6234-4612-933f-b82c1bacdbb9"
        },
        "item": {
          "id": "63587745-6fa8-4b10-a515-02986f14e2eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d6f0db6a-4a99-4f78-949c-a1da7536b92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a18d9f-b5e0-4505-9ae7-ec7925bd5abc",
        "cursor": {
          "ref": "a26ce0c9-2888-4c95-a39b-a640db0ba3cb",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5e620c0b-ffdd-4c17-a265-ffb618d77fc1"
        },
        "item": {
          "id": "42a18d9f-b5e0-4505-9ae7-ec7925bd5abc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f1b2d4b8-bfe9-4635-90cc-24e638f34db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c3bfd6-b85e-4e58-ad40-d3f7f654880d",
        "cursor": {
          "ref": "cab9b158-24da-430c-ae18-e6fb18e19bd5",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6d2e366a-a879-4835-b166-1859b03128c6"
        },
        "item": {
          "id": "f4c3bfd6-b85e-4e58-ad40-d3f7f654880d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3b9d0102-895e-4ec9-9e13-a40b717f6a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f45f0df-e46d-4a0b-99e7-51bbed3847d8",
        "cursor": {
          "ref": "54faf819-d126-46f6-8c60-0c224af78b43",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8b2efad4-6bf9-46b4-9d62-25c3e3e3e3bb"
        },
        "item": {
          "id": "7f45f0df-e46d-4a0b-99e7-51bbed3847d8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "842ed158-21f7-4af6-b18f-1b5a38a5ff32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8675c4bc-ba77-46a8-a3dc-825a69120b24",
        "cursor": {
          "ref": "048bb7e9-e94e-45aa-995c-8f4ebed8e108",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0d2e8c61-349b-4175-b804-7379bebad877"
        },
        "item": {
          "id": "8675c4bc-ba77-46a8-a3dc-825a69120b24",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c93f8aa-4584-437f-b5e4-863eb89a5dfb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 87,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383d0c1a-e961-4ce4-a84a-3aff26c0eb8e",
        "cursor": {
          "ref": "27df6c5c-e70a-4a12-9494-e96d293e318a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2fb35a81-2984-43f9-81e6-2bf60205fe0a"
        },
        "item": {
          "id": "383d0c1a-e961-4ce4-a84a-3aff26c0eb8e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e90b002a-9253-49ce-830b-73e7d407e79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c60d95-4ee4-4082-9e44-87a77a8a2896",
        "cursor": {
          "ref": "ef20f7e7-2036-44a1-86b9-3b50b0f1c008",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "df15b812-b6fb-484d-a6ee-9ea9d75772f9"
        },
        "item": {
          "id": "74c60d95-4ee4-4082-9e44-87a77a8a2896",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a4acd7fc-28e1-47f6-a6a9-a5f9530f5a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2114cf-a346-45e5-ab72-2407bca6a5e0",
        "cursor": {
          "ref": "a1ecbd6f-e252-4056-ac04-634936cd4e8d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7a526eb7-454e-414b-aa62-42a98f9aa1a0"
        },
        "item": {
          "id": "1f2114cf-a346-45e5-ab72-2407bca6a5e0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b53b990c-9115-4238-9d35-bb0773425918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eab053e-3ce1-4703-ac3d-6070b7678d2e",
        "cursor": {
          "ref": "c141dafa-bdf0-48c4-87dc-d338377a7ad1",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9dae4da5-89af-4eb0-9279-0d4e72902d11"
        },
        "item": {
          "id": "2eab053e-3ce1-4703-ac3d-6070b7678d2e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b6173fa1-80a1-4f85-9e0c-eecd4ca1351d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae2b7c9-128f-4f0c-a23e-4d2d5ae86a6d",
        "cursor": {
          "ref": "6aebc421-aa21-4d8e-855d-48fff31d9b4d",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9fc057dc-f989-45cb-a78e-c3472abe2d7c"
        },
        "item": {
          "id": "1ae2b7c9-128f-4f0c-a23e-4d2d5ae86a6d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "48bb63dc-497e-406b-af83-49305078dee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c9ee39-8e6e-4b01-9922-0d87697eaf79",
        "cursor": {
          "ref": "1fcf804b-9aa7-4582-b053-1c4a24985d03",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "39336a04-bde7-4603-8e2e-4ba609686a2c"
        },
        "item": {
          "id": "17c9ee39-8e6e-4b01-9922-0d87697eaf79",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "340de934-ef4f-48a3-ad4c-01b9f179baeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724a838f-cf79-488e-a28b-f1554862dc4c",
        "cursor": {
          "ref": "a6328167-a6c1-4960-85f0-8f9432c28767",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "13ea27da-bc22-4f4e-8a1d-1954087de57a"
        },
        "item": {
          "id": "724a838f-cf79-488e-a28b-f1554862dc4c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b30961c2-0df4-4610-8f43-50d11ebf473b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8601e3-f0f0-4a23-83ee-d5509de5722d",
        "cursor": {
          "ref": "c59cf3fe-7c0c-41e8-8f9b-9cfd094d4daa",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2dd8a189-eee8-4ee5-ba31-cfaec0b6b2a1"
        },
        "item": {
          "id": "cb8601e3-f0f0-4a23-83ee-d5509de5722d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e8d7094c-8372-4109-b224-bd51e029f760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0510af-8eb6-4132-969a-8efb419baae1",
        "cursor": {
          "ref": "ab79f12b-5499-4d76-a872-4c89e7b00c51",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "94a9ff27-4680-4d66-9ad4-bb7caed9d3fe"
        },
        "item": {
          "id": "ba0510af-8eb6-4132-969a-8efb419baae1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "abe2b0b4-a95c-46c6-83bb-d3f76e2846a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b19f67-ac61-4537-8b1e-4e036ee36e80",
        "cursor": {
          "ref": "0242734c-a0c1-47f3-adfb-7f977bd5fc6c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "22bdcc62-8768-4957-90b0-e7ff30413e51"
        },
        "item": {
          "id": "45b19f67-ac61-4537-8b1e-4e036ee36e80",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1123eaff-5959-4443-96ae-9ee54d7173a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c36738-ae2a-493b-8cad-cf546a14666d",
        "cursor": {
          "ref": "d2281f5c-f5fa-4294-9ba4-bf5faa7a5f02",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8ed5f780-182e-41b7-8cc6-bd64413d59c0"
        },
        "item": {
          "id": "f5c36738-ae2a-493b-8cad-cf546a14666d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f095c515-b5bd-4156-b497-49e1bc5be816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13848601-a6c4-44b9-8f35-88487e648675",
        "cursor": {
          "ref": "b19caabe-c92c-4dba-9c33-35d200ff22bc",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "63be2d47-1e98-4134-928e-dbf6c22b8d96"
        },
        "item": {
          "id": "13848601-a6c4-44b9-8f35-88487e648675",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f9e1465b-d99b-4458-9e2e-03a4b97a4166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221863aa-4d73-4ae2-b197-c1ca84634783",
        "cursor": {
          "ref": "9ea64151-cb99-441f-b304-6adfb876bb9f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "265156ff-5909-4f4a-96f0-a48fb24eeed9"
        },
        "item": {
          "id": "221863aa-4d73-4ae2-b197-c1ca84634783",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "20bd8713-17c2-40a8-b263-23a234665f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414edd16-2fd4-4a3b-8f94-7521e690d44c",
        "cursor": {
          "ref": "8bef2c02-a421-4958-b5b1-504b7db5c7a3",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "50ef84d0-bc9c-4c29-93a2-9e11749098e9"
        },
        "item": {
          "id": "414edd16-2fd4-4a3b-8f94-7521e690d44c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8874534-4b89-4d20-bb0f-a18c3b56f106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0a73f3-ad57-47dd-aadd-966c769f085b",
        "cursor": {
          "ref": "e627a805-a855-40e4-8c98-c1e4f3cd5823",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a8d5c648-cdfa-4992-bd2c-181c03b26ee6"
        },
        "item": {
          "id": "7c0a73f3-ad57-47dd-aadd-966c769f085b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d931209b-2add-487b-b41a-2aa50a630ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957ed5b6-ff91-4ed7-bde7-5ec00b6c5a00",
        "cursor": {
          "ref": "90098494-e7bc-4bb6-824c-c56cceb6eb57",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "44e09940-2b31-4412-9831-cbb1c26b3889"
        },
        "item": {
          "id": "957ed5b6-ff91-4ed7-bde7-5ec00b6c5a00",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a559c643-19d9-44cf-ac1d-e20735316475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c344fb65-e5b1-49f8-86ef-6fcd6eda43d6",
        "cursor": {
          "ref": "1d6822bf-3409-4f60-b23e-1b65d86c1530",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "49e08f4f-a080-4f09-bcd8-f4be24c507a8"
        },
        "item": {
          "id": "c344fb65-e5b1-49f8-86ef-6fcd6eda43d6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1e844ab7-9836-45c2-a8ee-4c2edb77cf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bbe696-abad-432e-994d-ddfc723288b1",
        "cursor": {
          "ref": "680b170b-c5ba-43e2-a593-0939e91b181b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a8faf1f2-f910-4567-849d-ec06c9c5ff45"
        },
        "item": {
          "id": "65bbe696-abad-432e-994d-ddfc723288b1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "da82c4fa-e010-4218-a891-4bee57a9ce46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafb09e7-399f-42f4-8d2c-77600a22856e",
        "cursor": {
          "ref": "c36a3f26-ee9e-4419-90fd-f6cb08f826e2",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9a20caf0-6c73-4dad-9452-7fde09c48a3d"
        },
        "item": {
          "id": "aafb09e7-399f-42f4-8d2c-77600a22856e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2b8fb023-c5b9-468a-8219-631afeafceba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a95c30b-0ddf-40b8-ae17-25b14c0b6112",
        "cursor": {
          "ref": "aec58175-c1a6-44ac-846f-2831b138609e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d0c0f58f-3c4a-4d3e-a403-d972d8ca39ed"
        },
        "item": {
          "id": "5a95c30b-0ddf-40b8-ae17-25b14c0b6112",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6a2dc5b1-9dfc-4932-b99d-5b98a223c8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310737e2-25ed-411f-aac5-0f3b0c3f2974",
        "cursor": {
          "ref": "424d55d9-17d6-4451-b617-cc882d468af2",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f43c9564-e4db-48bb-b3a1-6582976c1b72"
        },
        "item": {
          "id": "310737e2-25ed-411f-aac5-0f3b0c3f2974",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ffe602c3-7cfb-4a97-98e0-2c16b6b06b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b148611f-db64-4312-ac35-292091ce4d0a",
        "cursor": {
          "ref": "58178da1-aec5-48f8-982d-8a1fae69eb4d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b6ba2bc8-aec6-4ff7-84a0-50024c499f8b"
        },
        "item": {
          "id": "b148611f-db64-4312-ac35-292091ce4d0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "91c02fca-655e-45fe-8165-3805f295aac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fc720c-7535-4fe1-9664-a2b4eff3ae67",
        "cursor": {
          "ref": "33f85733-3b18-4908-a28d-818ca37b8d3a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "15d30155-279c-4955-b13b-0cf826b5c5e8"
        },
        "item": {
          "id": "e2fc720c-7535-4fe1-9664-a2b4eff3ae67",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6cab2566-c659-46bb-b081-ff1704bb0cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68fa213-44bf-47cc-b4fb-7a1683fa6c1a",
        "cursor": {
          "ref": "44393830-ed4b-4e8b-aa3e-71fe351ec619",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fb227867-79e5-4c65-b71b-3ec329644d18"
        },
        "item": {
          "id": "f68fa213-44bf-47cc-b4fb-7a1683fa6c1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "caed0088-f1da-43e5-8c88-067ae871b413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4999d33-1815-4f38-b0ac-60bdeb790344",
        "cursor": {
          "ref": "64d45e24-4cad-48fc-b983-d140385912d6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9665dcf6-6e70-43ff-8258-e57818be5ae3"
        },
        "item": {
          "id": "c4999d33-1815-4f38-b0ac-60bdeb790344",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "04d90b93-fc6b-4b21-aa0c-de6b8e1276fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c133cf-1eb3-4bb5-bf3c-dd2c7a47af87",
        "cursor": {
          "ref": "54dbb08e-cf28-49a3-b57f-4afeaff0f2d4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "81db366b-abf1-4a25-863f-0940e3eb1b35"
        },
        "item": {
          "id": "66c133cf-1eb3-4bb5-bf3c-dd2c7a47af87",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "693d0b54-8ee0-447d-a437-8dd3d6898213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de98f8fa-d98a-4354-b25b-eb325143c8eb",
        "cursor": {
          "ref": "e222467a-4bd7-421f-a795-80f9dd85f517",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5c4381a7-1ce6-44d9-863a-a3df5b7bdd87"
        },
        "item": {
          "id": "de98f8fa-d98a-4354-b25b-eb325143c8eb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "de360f03-d9ba-42fc-aac2-a296a59b8160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6887e337-1bb7-4aa9-a5d7-b1289ba42aa3",
        "cursor": {
          "ref": "fc6961a6-4e68-4eca-91ff-1a429ac20d45",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c94e9bb9-8143-43e0-bc9f-202379431d6b"
        },
        "item": {
          "id": "6887e337-1bb7-4aa9-a5d7-b1289ba42aa3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8f61a2d8-ca30-4fff-8efb-096bba945f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170550e4-b16a-4a9b-8b91-e44eb5d83878",
        "cursor": {
          "ref": "1898cf84-5429-4785-9ead-16872c440ceb",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e3269703-502d-4301-9971-dbc1e43e3e6d"
        },
        "item": {
          "id": "170550e4-b16a-4a9b-8b91-e44eb5d83878",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0ab7eb36-4558-4945-b406-4ac0f0a40f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7908341c-5d4f-491e-a17d-0db218eeaec8",
        "cursor": {
          "ref": "7658e3a1-7b0a-47ed-a674-50e20fc6908e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "203f5795-544f-45c8-ae9a-65d76441ca7e"
        },
        "item": {
          "id": "7908341c-5d4f-491e-a17d-0db218eeaec8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4e521d30-2d37-4ea5-8bca-d4b913830359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e88c59-e2dc-4ddf-8865-b5b5a1539ed2",
        "cursor": {
          "ref": "c4f61b98-51f9-4741-a6e7-85335e10cefe",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aa5d4aa4-42c9-4f5c-afab-de7615e66a1d"
        },
        "item": {
          "id": "48e88c59-e2dc-4ddf-8865-b5b5a1539ed2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3555c5de-36c7-4d20-aa41-4bc9c88b2f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e7e9b8-c268-461e-b97e-e247c4c807ad",
        "cursor": {
          "ref": "0e5031c0-acb2-47f4-8cfe-8aa1eb2df0e8",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "782b0a84-3da1-498a-9d7b-4bc66e68b3a0"
        },
        "item": {
          "id": "92e7e9b8-c268-461e-b97e-e247c4c807ad",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "25fbd5dc-ecd6-4ee3-903a-48536ccd48fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb87a156-95b0-4729-b31f-9fd23b95a728",
        "cursor": {
          "ref": "41b245d3-4803-46a7-8435-f8f5d97c0f17",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2edbcfc2-1a65-401d-bb65-ddc717aa70d8"
        },
        "item": {
          "id": "cb87a156-95b0-4729-b31f-9fd23b95a728",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5f180c4e-eab3-4006-94fe-94df84150df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e730f0-f168-40e6-858b-abb6bce5aa8e",
        "cursor": {
          "ref": "a14e6f6c-3f0a-401a-a74a-01be26e0e93f",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "84434efc-151e-4e4a-a5a1-24014f7e9ce4"
        },
        "item": {
          "id": "f0e730f0-f168-40e6-858b-abb6bce5aa8e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "90e47eba-b630-4f91-879b-d77b83ecd1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ef2687-a0e8-4df4-91a2-baf2a07e0864",
        "cursor": {
          "ref": "9d81271e-1e42-4731-9e20-880a22d852c8",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "22dc93e5-3d32-4ec0-8b2e-84c94ebb205e"
        },
        "item": {
          "id": "d6ef2687-a0e8-4df4-91a2-baf2a07e0864",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "68970685-6e94-4792-b53a-63d63e75a7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cede43d-64ca-4f68-a976-564aaeec91d9",
        "cursor": {
          "ref": "4199ec71-9257-4f56-8012-6a92eee224e6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "706f03c5-b813-4438-b831-ea9ef5b84ec9"
        },
        "item": {
          "id": "9cede43d-64ca-4f68-a976-564aaeec91d9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3c57639d-4445-42f9-8fc0-cd9ba828373d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a931ace3-4198-4573-809a-f1b6f9836d56",
        "cursor": {
          "ref": "64c982fe-2478-4b7d-b59b-b2a4c0a3e0d0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2d00d9c8-b57b-4c68-ac45-c40909ccdac9"
        },
        "item": {
          "id": "a931ace3-4198-4573-809a-f1b6f9836d56",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0bf72322-0072-4124-bc4b-e205b7f08af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8046bf06-5ad9-4ca5-a4c5-d8b35b3dd964",
        "cursor": {
          "ref": "6c0300c0-2603-4634-aa24-3d07fc9e2482",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1d804411-93c1-490d-934b-adc39c4ebdcb"
        },
        "item": {
          "id": "8046bf06-5ad9-4ca5-a4c5-d8b35b3dd964",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ca8e455c-98dd-4cb9-8d9c-bedd0211b92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29ca624-a35d-475b-93b8-b0da0c130629",
        "cursor": {
          "ref": "bf689570-bb66-4671-98e0-47a2b89a3238",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "394842d0-9062-411e-887a-580529f93e1f"
        },
        "item": {
          "id": "a29ca624-a35d-475b-93b8-b0da0c130629",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b74f4b64-92df-488c-9dd8-d2e6d042c356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d119d00f-ed80-41a3-b51f-afb8debfb29f",
        "cursor": {
          "ref": "fe6e5294-a014-4dde-b23b-63a601d79f67",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "90b58b8a-f001-49c3-ae3a-8f77bfb31d9d"
        },
        "item": {
          "id": "d119d00f-ed80-41a3-b51f-afb8debfb29f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5fd8e314-4304-4147-89d5-9103b6f7342a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9c68c8-6ea1-44c4-b755-92c2e4347464",
        "cursor": {
          "ref": "c09177f4-be93-4667-b39b-9a613ff82b03",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "49843114-970e-46e7-88f8-bfd02d0d30c4"
        },
        "item": {
          "id": "ee9c68c8-6ea1-44c4-b755-92c2e4347464",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7b7869f7-ac2c-405d-bd4f-5b08752f4098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37e77e1-17e3-48f4-a25f-9791da1f4eb6",
        "cursor": {
          "ref": "4717de2e-dc1d-4128-8cde-9fc945210ccb",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "02c7bfef-5a7e-4d70-8b32-dc1866f8979f"
        },
        "item": {
          "id": "c37e77e1-17e3-48f4-a25f-9791da1f4eb6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eece757d-4423-4b75-8594-92f59581e7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb7af51-2fb7-4c1a-8956-56495d19e15b",
        "cursor": {
          "ref": "325d188c-df4b-4301-9ba8-5b48d6a167a8",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8511ad1e-602f-48e2-87bc-00ec3979c1d0"
        },
        "item": {
          "id": "adb7af51-2fb7-4c1a-8956-56495d19e15b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "98ffc28e-b030-4c17-b4e3-3b8d82b41c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3244f61-70ce-4e06-9700-d88609d2290c",
        "cursor": {
          "ref": "15811a76-c01f-479a-97e0-9c257a18644a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5c0955e6-30d1-472c-ac87-b2dd41473ebb"
        },
        "item": {
          "id": "c3244f61-70ce-4e06-9700-d88609d2290c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "66729e55-5196-44ef-b684-4c4f42f93636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5363abd6-90c4-4374-86c8-96d9434854c6",
        "cursor": {
          "ref": "f41485fb-63e9-479a-8613-19c8d0d8e009",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "91cccd1e-3088-4aa0-9f40-c189c84a5811"
        },
        "item": {
          "id": "5363abd6-90c4-4374-86c8-96d9434854c6",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8b4b2cc5-0f88-4e05-8725-353671c3be7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cb9c51-17a3-404a-ae04-1d2a1f3560fd",
        "cursor": {
          "ref": "d4b442e1-e71e-45a2-8b45-aeb9e23934f4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d7307ea7-5a32-4908-b513-76c1f93579bc"
        },
        "item": {
          "id": "86cb9c51-17a3-404a-ae04-1d2a1f3560fd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "277afe2b-f479-46f7-93f2-ab723e82e0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26575c11-51ad-482e-a074-bc5c8e002098",
        "cursor": {
          "ref": "40fb0202-fe58-4d97-8910-8cb147a68a4c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4ca3d4de-7879-47c4-9317-5ac7f8c2ec51"
        },
        "item": {
          "id": "26575c11-51ad-482e-a074-bc5c8e002098",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7896f505-ccf8-4edd-b406-a5ea070da022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f64cf2-9dc6-4e75-bc08-4bea01a54f65",
        "cursor": {
          "ref": "d120fff5-4706-46a7-9cdf-2b9d588d0286",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a6a0e278-e6dc-41b3-b479-e05b60fe5652"
        },
        "item": {
          "id": "c5f64cf2-9dc6-4e75-bc08-4bea01a54f65",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8c33565c-992a-4ea7-924b-2b7f3a7b4b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cee6dc-ff77-4ae9-87dc-0e2101d11a48",
        "cursor": {
          "ref": "0b2c09fd-3691-440b-81ed-cf7b386773fe",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cdef2ca6-4200-4ca6-bd87-0b138c838325"
        },
        "item": {
          "id": "b3cee6dc-ff77-4ae9-87dc-0e2101d11a48",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5bab3034-4411-4dd2-8577-8e399ccf9d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605aa93b-18c5-4396-a4e4-4ff3650552cb",
        "cursor": {
          "ref": "b7c25781-9902-4561-8764-8540d79cb260",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3576b802-1a0d-4f64-a523-55f8c36d46f4"
        },
        "item": {
          "id": "605aa93b-18c5-4396-a4e4-4ff3650552cb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c613a8e5-78ef-45cd-b39a-d7510fe65970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e06980-370f-4e81-9f1f-10989b8a6528",
        "cursor": {
          "ref": "f170f208-fa1a-4d1d-875b-e29b3b22f5e3",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f930baae-4b37-4eb0-9711-b050add06101"
        },
        "item": {
          "id": "79e06980-370f-4e81-9f1f-10989b8a6528",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "91801f9a-7132-492e-905b-0d567a82cb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d86806-18d6-47c9-9a72-ab17ff35214a",
        "cursor": {
          "ref": "ae4d6aa4-7ed5-4615-b57d-f8a145e1d369",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b2e890a6-decf-4614-9334-3710a908a960"
        },
        "item": {
          "id": "70d86806-18d6-47c9-9a72-ab17ff35214a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1793153b-d4df-4c2c-9c4d-1c30da12ffaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686fc85f-4839-46b5-9154-caa10d34c2f0",
        "cursor": {
          "ref": "66f042b1-881d-446b-8a16-ff4f54ac5c5e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "edaccc37-7258-439b-9c08-166b4396de18"
        },
        "item": {
          "id": "686fc85f-4839-46b5-9154-caa10d34c2f0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d477439a-fbb2-4ddb-9e5c-c29e8e39c856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee4225b-47e1-42d6-88db-c7f82aae39c9",
        "cursor": {
          "ref": "675fb2ae-4909-4afa-8cd7-b2fb1908b716",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7f9808fc-8a4d-42f5-85c9-4b9c761a168c"
        },
        "item": {
          "id": "7ee4225b-47e1-42d6-88db-c7f82aae39c9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5fe56209-92b4-4aaf-b4b8-388418f5076b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32bc0fa-25c9-4ab7-a23e-e7c5870c827d",
        "cursor": {
          "ref": "2e898951-4398-4b17-8815-bd7a5b51e12e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6fc60571-b1c6-4d5c-a3ba-48ec8da191f5"
        },
        "item": {
          "id": "a32bc0fa-25c9-4ab7-a23e-e7c5870c827d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b3a1709d-7dc3-46e1-a802-c548adc2a2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d357326b-e97a-493c-8c57-65f463eeeadf",
        "cursor": {
          "ref": "4cb9f35d-3f2a-4275-a7e7-1aa832526081",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fb63f3b3-b894-4a49-964c-1e7236325647"
        },
        "item": {
          "id": "d357326b-e97a-493c-8c57-65f463eeeadf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bba96df1-4090-4968-b5ec-a25c42ffc571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2157e05b-d5ee-45c6-9fe3-e2161650baed",
        "cursor": {
          "ref": "8e8ba30b-a538-4f8f-8bbd-49c91611258e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "145c1be5-65e8-42e9-86bc-336ec10f5b41"
        },
        "item": {
          "id": "2157e05b-d5ee-45c6-9fe3-e2161650baed",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "897ad389-dc57-4131-8f43-cc5c3618ba1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72305c92-91f6-4163-88c5-6e46a2fb6eea",
        "cursor": {
          "ref": "c61568d9-8336-4fb8-b0af-9be956407b02",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a15a08b5-e890-4f1b-9585-d8b628c295ca"
        },
        "item": {
          "id": "72305c92-91f6-4163-88c5-6e46a2fb6eea",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "48552281-b483-4fb8-9e6b-d28d4c6be3ed",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e2407f-f73a-4523-94a3-99fb614b9da3",
        "cursor": {
          "ref": "82273fc9-c2a1-47f2-bae8-0c475206bda4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0321f434-8917-478c-9b7d-80fb311c6c66"
        },
        "item": {
          "id": "43e2407f-f73a-4523-94a3-99fb614b9da3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0f273337-aa1f-4122-8b6f-a33cbd34dc47",
          "status": "Created",
          "code": 201,
          "responseTime": 217,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "abebb2b2-0155-4791-91fb-1d075ab48e63",
        "cursor": {
          "ref": "807f7745-2a9e-47eb-ace6-0ac6d5541e63",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "421b5afc-4d1d-4b88-b7f1-2e938f323030"
        },
        "item": {
          "id": "abebb2b2-0155-4791-91fb-1d075ab48e63",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "97e757d8-47d0-41b5-83b8-3a0fa9627b14",
          "status": "Created",
          "code": 201,
          "responseTime": 157,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "01571b56-fe81-450c-afca-07dacc1ae8de",
        "cursor": {
          "ref": "3943d8eb-c470-4c1d-bdee-4c07ffdffd61",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "32a8b2d9-8035-4b66-b4a2-9bf3cfa15984"
        },
        "item": {
          "id": "01571b56-fe81-450c-afca-07dacc1ae8de",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ac8a780d-0684-4fb4-b98f-d691053d32a2",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f584f54d-8125-4494-b193-5b51b87bca93",
        "cursor": {
          "ref": "da5ac6d6-1a7b-46d1-809a-ec882f992ae3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "13a62f82-0f4d-454c-b675-d373e215acb9"
        },
        "item": {
          "id": "f584f54d-8125-4494-b193-5b51b87bca93",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "18df2d16-4d58-4b1d-8090-20c0d6dd9925",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "63688ded-bdd3-44b1-a85e-dbd91cd52392",
        "cursor": {
          "ref": "0f2d99aa-2521-4489-89ef-67f1e7624493",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "135e24b5-ecc6-46cb-a3ba-3638f708feba"
        },
        "item": {
          "id": "63688ded-bdd3-44b1-a85e-dbd91cd52392",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e22c4104-325a-4b46-b52c-838ea05b72f3",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "03adafd8-0bdf-4855-9b7c-65c29c2690f8",
        "cursor": {
          "ref": "fc1c60c7-c447-48ba-874b-28c8a99fb40e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0ff9973e-5d2c-4b8d-86f1-fddf6ace8b0a"
        },
        "item": {
          "id": "03adafd8-0bdf-4855-9b7c-65c29c2690f8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "11c059b8-eda3-42a4-a777-3768becfaa47",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14633054-befb-406c-ba24-f805954cd0a6",
        "cursor": {
          "ref": "9e1c7282-dcb9-441d-9da0-6eb449b3dcd2",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dd8b70ca-bf40-4208-bc0a-f6b20e6048de"
        },
        "item": {
          "id": "14633054-befb-406c-ba24-f805954cd0a6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "405a8de0-2902-48de-9591-17ea2bdcd1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4a80c0-6237-4b93-813d-0929c1a865eb",
        "cursor": {
          "ref": "8b64975f-a1ae-46fd-905d-12fc41886c85",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dd83a662-5646-4c0b-b941-bd3174c65f32"
        },
        "item": {
          "id": "ce4a80c0-6237-4b93-813d-0929c1a865eb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2d6115f7-7f7a-43a7-9e92-178df5e20086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcafb9b0-346f-4f10-8442-fbae977518c3",
        "cursor": {
          "ref": "8107752d-4a03-4e43-ab66-412fa1cabe46",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c2ef0261-e535-4de3-a7cf-013d41d756e0"
        },
        "item": {
          "id": "bcafb9b0-346f-4f10-8442-fbae977518c3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "92cb53bc-952b-4760-9d3c-10b3579e0625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bc1444-fd05-4be0-a29d-c75f4c35fa57",
        "cursor": {
          "ref": "a6c52750-9194-46d8-b5a6-b6a07f0ab2bf",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "91b24917-e181-49bc-bda6-efd8894803b9"
        },
        "item": {
          "id": "37bc1444-fd05-4be0-a29d-c75f4c35fa57",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b1bbb8db-0cc3-4962-a8a5-3c7a19ba1df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bb9f13-a736-4746-a67e-5b58f458b083",
        "cursor": {
          "ref": "1737f32a-f925-4286-865c-b89595adb5ee",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "34c2d427-b9f6-48a5-b5e1-9b96030c9099"
        },
        "item": {
          "id": "b3bb9f13-a736-4746-a67e-5b58f458b083",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "15d30768-ea8d-4e14-9307-f5a8751f56e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1ff11f-030e-4b46-b2d5-ca9f27b667d2",
        "cursor": {
          "ref": "bcec4b63-a754-4157-9084-960d21dfd17e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "77eeae3f-208e-44ff-a9f1-00fa9bc8b95e"
        },
        "item": {
          "id": "9b1ff11f-030e-4b46-b2d5-ca9f27b667d2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7b767938-c657-4aa2-9eeb-0a5f3e047e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7820d5-99eb-4922-abcc-dcb7cce12a67",
        "cursor": {
          "ref": "890b5bdc-8105-4492-8db3-b84c50c6e25f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c79453ef-afb3-4318-b384-ebebd29b17dc"
        },
        "item": {
          "id": "1b7820d5-99eb-4922-abcc-dcb7cce12a67",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2ec57dd8-a84d-4b91-8853-f95c125b11a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd38b233-4c0c-47de-8350-6be5fa7c978d",
        "cursor": {
          "ref": "3ed4743d-1a8c-42f2-9026-0f2840e9fd94",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "38188e9a-b184-4359-82e9-529bbf53a82b"
        },
        "item": {
          "id": "cd38b233-4c0c-47de-8350-6be5fa7c978d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d84d7266-2a79-46aa-ac47-4d1976d5ecb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0020770e-df8b-420d-a733-b16556714eb8",
        "cursor": {
          "ref": "df87f661-badf-40f8-bda5-6adf099a6523",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "64ba9108-bea7-4ff6-8129-3df4d615387d"
        },
        "item": {
          "id": "0020770e-df8b-420d-a733-b16556714eb8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e9d4327f-beaf-4df3-963d-6ef6007edc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727ea0ac-4a6e-4e56-930c-69e981af6e29",
        "cursor": {
          "ref": "d98a8e5c-67ad-4a5f-af95-dc16ea82d6fc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8a3ba040-1b9a-4939-ab25-9c0cfd600fde"
        },
        "item": {
          "id": "727ea0ac-4a6e-4e56-930c-69e981af6e29",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "395c8c44-7961-4869-9fcd-0a43ab78dac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb16221-1cb5-497a-abb9-3250e4f505a4",
        "cursor": {
          "ref": "1774562a-4715-46e7-9ea8-c4a7239b2c04",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e576b105-d262-4626-aab5-197c7c44eac1"
        },
        "item": {
          "id": "adb16221-1cb5-497a-abb9-3250e4f505a4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4b5c002f-64f5-4e78-8359-f637c5927fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0d9be4-e600-4ca9-a50b-954d103b065f",
        "cursor": {
          "ref": "0cb1b0f2-e685-4ec7-820f-b180228cd702",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "12a7284d-e451-4762-bec5-75d8251bf97e"
        },
        "item": {
          "id": "5d0d9be4-e600-4ca9-a50b-954d103b065f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f87a3f0d-83ed-440f-a3ad-be01325312a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0f8780-a31c-491a-baee-93a48d27520d",
        "cursor": {
          "ref": "621a483c-f1a3-44ae-a28f-0ec890eac973",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "911f8b61-0897-490c-b2e8-eea5d744573b"
        },
        "item": {
          "id": "1c0f8780-a31c-491a-baee-93a48d27520d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7fb58d49-1606-4b5f-861e-3cc077adf78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c3f2c0-d928-4215-abef-a2d036db213b",
        "cursor": {
          "ref": "d9575d0e-afea-4f65-9b9e-897f35fe5ab1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "32e1b38e-eabc-43da-8f0b-d994230da925"
        },
        "item": {
          "id": "d7c3f2c0-d928-4215-abef-a2d036db213b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6f26c70a-9d90-4f39-b081-d9e0e3b3313d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f08632a-d961-4cc0-9ee0-1bbcf60c2ad4",
        "cursor": {
          "ref": "1ddb29eb-c784-4029-99e4-3d572dc035fd",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bff05291-c0c1-4e76-92da-09db971c9bf1"
        },
        "item": {
          "id": "4f08632a-d961-4cc0-9ee0-1bbcf60c2ad4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "24b3deca-cd21-4bcc-87d9-5604be1669bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9130c214-5f98-46c2-b0b3-0783e41d5d8c",
        "cursor": {
          "ref": "366b6825-caac-40a4-a7fa-750927c36850",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "61430dd8-f6e7-45d1-bb48-7c88add6e3e9"
        },
        "item": {
          "id": "9130c214-5f98-46c2-b0b3-0783e41d5d8c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a2c20059-dcd8-463c-8ed6-44fdc5eebbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf3f038-7420-4374-8c96-6bb5ae895f6a",
        "cursor": {
          "ref": "65b20149-3bf6-4575-8132-1f4dbb47f56d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c66cbb39-536b-46c5-8b8e-2cfd07c68237"
        },
        "item": {
          "id": "9cf3f038-7420-4374-8c96-6bb5ae895f6a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "81abf9a6-fbe2-4acc-a464-02e9fb4f7060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa9ba4d-53eb-4293-a885-69a94753a448",
        "cursor": {
          "ref": "da5de1b1-8611-4c3d-871c-74b7a40c29d5",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "31a799ec-c987-4c82-883a-9a19e45fa223"
        },
        "item": {
          "id": "efa9ba4d-53eb-4293-a885-69a94753a448",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c48cc8fc-9ef0-4fb3-9fe4-9448aac4b8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c198a57e-7710-41a7-9ab3-987e6ab9de05",
        "cursor": {
          "ref": "9725a1b9-5645-42fa-9b28-4237d8161b10",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f6963ec9-ab0d-4081-ab53-fd91ccec322c"
        },
        "item": {
          "id": "c198a57e-7710-41a7-9ab3-987e6ab9de05",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1748144e-b231-4d3f-b9ca-470da2090153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fba83e-f5f7-4c9a-918b-36c6f3eb9330",
        "cursor": {
          "ref": "c021a504-bda0-496b-a37b-c7544d2bda0e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "77633f63-e489-4f80-8cdf-148583d8fa27"
        },
        "item": {
          "id": "11fba83e-f5f7-4c9a-918b-36c6f3eb9330",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7af37a50-e9d8-444c-b120-68fbba7ccdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4abc63-58e9-462f-a188-fc5c2c0b3c22",
        "cursor": {
          "ref": "be7c572a-51a8-42af-a8c4-6261f44b3eb2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ccc0d68c-03ce-4539-942d-9fe3a81a95ab"
        },
        "item": {
          "id": "aa4abc63-58e9-462f-a188-fc5c2c0b3c22",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a7d9167f-e4b0-40a7-9697-913216c82f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8eeaea-4b7d-4762-9ee9-0591b9326c3c",
        "cursor": {
          "ref": "a129a754-3e39-4fa6-9a81-6c89b313953f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "48b75754-7aab-4853-a467-60f25415d8b3"
        },
        "item": {
          "id": "8c8eeaea-4b7d-4762-9ee9-0591b9326c3c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "72e8bc3c-9419-4eab-8d08-993bf33f913d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750c7f23-db97-42ec-aa32-391f7a785a0e",
        "cursor": {
          "ref": "e322b26c-e406-4c40-89ad-5ebccbd66527",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a3d0ea77-c05c-4be8-92e6-31aec81322a5"
        },
        "item": {
          "id": "750c7f23-db97-42ec-aa32-391f7a785a0e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d01123c4-09a3-4f59-a2ca-5d59976bf15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e353de8-6f31-46e0-a0d2-500ab05aee37",
        "cursor": {
          "ref": "c79545b3-7716-4696-9374-994b94643e13",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3912ab91-84b0-4b73-886d-d67d271bb951"
        },
        "item": {
          "id": "6e353de8-6f31-46e0-a0d2-500ab05aee37",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e3c85ba9-f892-43ca-9708-c0aedc8445a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fd2ba9-fec2-4358-b1c0-ddf2a461c6cc",
        "cursor": {
          "ref": "3e0ac212-0249-411c-90af-9c4d0b009562",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bf637abf-06c6-4296-9167-e1ea1d2082c9"
        },
        "item": {
          "id": "e0fd2ba9-fec2-4358-b1c0-ddf2a461c6cc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cd6b6933-d7cf-4a73-9050-39b449907c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e9bb6c-4695-4441-9aa0-53b75cf669a8",
        "cursor": {
          "ref": "af0e1a82-8805-44e9-bfa5-deba511e0350",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "49fca4ba-2477-4962-9e4e-f7557e42bdf9"
        },
        "item": {
          "id": "b4e9bb6c-4695-4441-9aa0-53b75cf669a8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "17082af3-7e32-4225-850e-250e89b78a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9fba95-4f16-4f7b-a743-de70b8de1f49",
        "cursor": {
          "ref": "dbf69ec4-bb87-4694-9721-1b6da403ff83",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "651f76de-70e2-40c8-a482-63fe42c9bc5f"
        },
        "item": {
          "id": "5a9fba95-4f16-4f7b-a743-de70b8de1f49",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ecc47634-77f0-4541-a9b5-e7c1371ea216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1b4003-2e2c-4823-a501-bfa8f9cb33c8",
        "cursor": {
          "ref": "d642a6f5-1b45-4445-ab58-1c95704b22f2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d3e86f20-9908-4090-9292-a5338de87100"
        },
        "item": {
          "id": "df1b4003-2e2c-4823-a501-bfa8f9cb33c8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "924ef60a-e2cd-4b8c-a25f-ae79a7513c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcf11c2-e2fd-408d-bfa1-cc777a6c7590",
        "cursor": {
          "ref": "796658ac-b3e5-4019-b82d-6b332190c221",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c356c0fb-0264-47e5-858c-db813fcccb67"
        },
        "item": {
          "id": "adcf11c2-e2fd-408d-bfa1-cc777a6c7590",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fc502515-0572-4e1e-bd57-99654169cb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c442e131-ee31-4cbc-92da-5bc7eb0cb8e6",
        "cursor": {
          "ref": "aba75253-246b-49e1-a0cb-2b7a556d8097",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "371a9ec2-27a7-417c-a645-050bbf4380e5"
        },
        "item": {
          "id": "c442e131-ee31-4cbc-92da-5bc7eb0cb8e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "986fb0d6-8493-454d-ba85-62a2332f94e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123b57da-1caf-4aec-b95e-2e90830937dd",
        "cursor": {
          "ref": "3547bba2-dd51-4378-8e87-5696059e9452",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8547ad5c-6760-4203-a95f-73968e0c108a"
        },
        "item": {
          "id": "123b57da-1caf-4aec-b95e-2e90830937dd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "021eb552-be55-4b03-a94f-4d2499aac7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e8c602-f812-4d1a-9dce-da3febdb0e73",
        "cursor": {
          "ref": "9f26aa46-478b-4731-881c-3408653e731d",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b0504e45-7e74-4397-810b-4c8abe81be16"
        },
        "item": {
          "id": "d7e8c602-f812-4d1a-9dce-da3febdb0e73",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bf56ba14-8fd4-48e9-be13-494b14936639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d00a08-10e0-40aa-8f76-285401335583",
        "cursor": {
          "ref": "d1dc7ad2-4290-4b68-ac52-66779f02a981",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "43d9daff-e3cc-4145-8382-ece2f910b890"
        },
        "item": {
          "id": "40d00a08-10e0-40aa-8f76-285401335583",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5293127f-d815-43a0-8d2b-1fae2b740297",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce804f31-e2b1-4109-85e5-f07cc3a5fd43",
        "cursor": {
          "ref": "e960ae09-3712-448c-a838-e122ee3d6d8a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c249adb0-d638-4276-afa1-97b5e849e0c0"
        },
        "item": {
          "id": "ce804f31-e2b1-4109-85e5-f07cc3a5fd43",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b9f3e76b-a449-491f-8b29-4d3a8d064319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef68ab6-3d0f-4b0a-b4b3-146309b8582f",
        "cursor": {
          "ref": "7dba4ef5-5e5e-4fdc-b3ee-c14e7930e9a3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "edeede01-1e65-4563-995f-93fe3715aebf"
        },
        "item": {
          "id": "9ef68ab6-3d0f-4b0a-b4b3-146309b8582f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "39c474e1-239b-4655-b73b-9c6eab229af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ab6938-cf25-4063-a6aa-65545ea82972",
        "cursor": {
          "ref": "904814f3-2b88-461d-a3f0-8fd99776bbd5",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "22a25f1b-c299-403d-b63f-cd5519051f50"
        },
        "item": {
          "id": "76ab6938-cf25-4063-a6aa-65545ea82972",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "91d29988-57d4-4245-9d13-04b1ffbce22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54aebb11-76cd-4662-b6bc-126a5a7b2c94",
        "cursor": {
          "ref": "bc50305a-7f6b-48f3-991f-6948de19ebda",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "023e61c3-e16e-4611-81a9-790c431a6f17"
        },
        "item": {
          "id": "54aebb11-76cd-4662-b6bc-126a5a7b2c94",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d0c3e5b-9e34-4d60-8454-a8b57e7afb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e911d3-9e42-4a67-a89c-1b6f757e60f0",
        "cursor": {
          "ref": "59f6c3f6-0c76-4481-a484-be261f6b27db",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a3e414eb-be0f-4e4d-bb52-341b6af7c948"
        },
        "item": {
          "id": "54e911d3-9e42-4a67-a89c-1b6f757e60f0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0bc40b01-28f4-4587-96bc-dac385e1d112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf092e9-6f62-4745-b717-62c1a116c0ca",
        "cursor": {
          "ref": "74701dc1-0665-4359-bdea-244a33b3a134",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "020cb06a-6548-4246-9683-70d727b505db"
        },
        "item": {
          "id": "cdf092e9-6f62-4745-b717-62c1a116c0ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "db9c6bbb-4555-4207-b537-96af8e259582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d581cf75-a5e5-404e-8a36-a027b187d964",
        "cursor": {
          "ref": "560c0547-7ff3-4447-96ba-8f76b05d8fd5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "50c2a7e6-a7ae-4658-90b0-a7443ff76d90"
        },
        "item": {
          "id": "d581cf75-a5e5-404e-8a36-a027b187d964",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d9fe3cea-9b42-4621-a9f3-f4cfa84e33e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d252f557-1f25-4757-b3de-9b3d157535fa",
        "cursor": {
          "ref": "2067b1c4-431e-4f37-814e-36cc81baee8d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3df74098-7146-4074-bc7f-10d7eb704f46"
        },
        "item": {
          "id": "d252f557-1f25-4757-b3de-9b3d157535fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b4e2c6ae-519d-4e96-8b33-76f7d19acab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1348b8-14a7-4073-8bd4-f53f9d4d11af",
        "cursor": {
          "ref": "483ca0b2-9f15-44f1-a663-c8c0d789e3ce",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8be82aad-a10f-4eb0-a57f-3f71eace3bfb"
        },
        "item": {
          "id": "ef1348b8-14a7-4073-8bd4-f53f9d4d11af",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "01a162f9-2242-4536-9a6c-a0ab7c98ebcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0cdc00-4c3e-4f1e-8da7-869c8c4cb241",
        "cursor": {
          "ref": "a85b5503-ab95-4f45-b88d-af9f331f3b8f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8a4ed97b-0c95-4688-8528-254bc8deb24e"
        },
        "item": {
          "id": "4b0cdc00-4c3e-4f1e-8da7-869c8c4cb241",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "53acb59b-e221-479e-a0fc-dca4cda48be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892ace3b-a527-4058-accf-8668d20f17ce",
        "cursor": {
          "ref": "4d2c936b-7f74-43dc-b535-831c71cad858",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a7fad876-10a6-42e0-8008-ec6f0a2ed962"
        },
        "item": {
          "id": "892ace3b-a527-4058-accf-8668d20f17ce",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "38bb90e7-c33d-4bb5-b910-7e1ab20ae350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5050eab4-495e-4aa4-bef1-52c3887b824a",
        "cursor": {
          "ref": "c70787f0-7e3d-4b1f-b0af-486d419a2928",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2894e100-45d4-474e-bcc2-5a79a50b6837"
        },
        "item": {
          "id": "5050eab4-495e-4aa4-bef1-52c3887b824a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3fe60715-ed75-42f9-b1e2-b12e50f39d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43026e42-c9f0-4c8c-bc86-d9c126db9985",
        "cursor": {
          "ref": "bdffd4fc-8fab-4d93-96e3-240072a9b90f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "55e993de-36ed-4558-bad9-f07b5117b8fd"
        },
        "item": {
          "id": "43026e42-c9f0-4c8c-bc86-d9c126db9985",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ede5d450-4c6a-45f0-88a4-36d788b45716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708cec02-f23b-455a-b1ec-2ea70975dce4",
        "cursor": {
          "ref": "c99a7777-8868-4e28-89b5-182dc8f5ac92",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "51045b7b-8722-47c4-953a-93eece9cdc07"
        },
        "item": {
          "id": "708cec02-f23b-455a-b1ec-2ea70975dce4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0967865c-38aa-47f8-8f34-cc3e139809bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b737cbe-a172-4f6e-8f18-7e3ca6039d33",
        "cursor": {
          "ref": "23c6b9af-7bbd-4e01-a0d1-7e70778eb287",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c0deb8e2-a57a-4d06-9c03-9a7bfce15c31"
        },
        "item": {
          "id": "4b737cbe-a172-4f6e-8f18-7e3ca6039d33",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4fda7863-8f43-4f8c-b683-14b99f7bb9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d137e809-5ee7-4bfc-b189-2c1e141bf4b9",
        "cursor": {
          "ref": "d3be3a79-fb4e-4275-84f5-c7883d2bd5d8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2e5a0d37-1b1f-4ee4-8c11-e74e98b37d7a"
        },
        "item": {
          "id": "d137e809-5ee7-4bfc-b189-2c1e141bf4b9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7ba75358-6dc4-4640-9fe5-706263d77423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608738d4-9637-4fe4-9182-2e5632c97787",
        "cursor": {
          "ref": "140150b9-1344-4548-b611-4478b29f0e9c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5e887674-df8c-4b08-884d-1337c48a938d"
        },
        "item": {
          "id": "608738d4-9637-4fe4-9182-2e5632c97787",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "613b35cb-649f-446a-bc06-820dcc26eaf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b252f1-30c8-4d70-9f83-f06397f79ea0",
        "cursor": {
          "ref": "eefcdc74-66ff-4a9b-9d98-2c2e44f5a2c2",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8e299a79-c575-4e92-b203-07be513a209a"
        },
        "item": {
          "id": "b1b252f1-30c8-4d70-9f83-f06397f79ea0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aa13c133-3750-4555-a44e-0f2f89545a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d487f812-ff69-437c-b4fd-fc03ab83c6da",
        "cursor": {
          "ref": "d5b01173-0a73-4062-91fa-a65117a01e35",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0973fb98-b7c1-451d-bdf8-f3c4da7f9be3"
        },
        "item": {
          "id": "d487f812-ff69-437c-b4fd-fc03ab83c6da",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "26a0f9b9-7312-41a6-82e2-6ee736789517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282e6947-338c-4f02-b0f0-ca78a534ac7e",
        "cursor": {
          "ref": "ff9066e3-ca01-4ea0-9db0-0a26ac27a0a3",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8783bba6-9f8d-42be-b0ff-b21de8400b7c"
        },
        "item": {
          "id": "282e6947-338c-4f02-b0f0-ca78a534ac7e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f6d5f4ed-ea4a-43ee-9117-637cc31f9af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406347ce-3167-46f7-861a-fa990219f03d",
        "cursor": {
          "ref": "2dc98321-0768-485f-9c28-dc3875f75d2e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5e3f0ef9-bc41-450b-b8e7-dff823a4fd26"
        },
        "item": {
          "id": "406347ce-3167-46f7-861a-fa990219f03d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3dc75226-5df5-4048-9f54-fe11bc6626ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5ac251-c97a-4c46-a864-83073376f997",
        "cursor": {
          "ref": "c7efa3fb-fb6f-4038-b363-9e4e758e3ad9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e2ce4910-dfb6-412a-8b07-f977c0af052c"
        },
        "item": {
          "id": "7a5ac251-c97a-4c46-a864-83073376f997",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "207ae0bf-837e-4f86-a3fc-f80c25066a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d473c9-1edf-482f-b6bc-13ddd7a77fb5",
        "cursor": {
          "ref": "7c2dcbf7-835b-449d-b467-72d1829ccec3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0505ab91-c7c8-481f-b1e7-290c6d961d19"
        },
        "item": {
          "id": "23d473c9-1edf-482f-b6bc-13ddd7a77fb5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7179efaa-9039-4198-8f2c-0a616ec37b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61527bf2-96fe-4d58-8a75-716acaa63587",
        "cursor": {
          "ref": "cbb836e5-4a77-4e1c-8c0a-82e1c827bb6e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f85036b8-0370-460d-bee7-62c5bff27ad8"
        },
        "item": {
          "id": "61527bf2-96fe-4d58-8a75-716acaa63587",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "afef2a6c-fa98-4c79-9778-14ce3647913e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1472e460-8635-4119-98d0-0624e346724d",
        "cursor": {
          "ref": "0616d743-3c8b-4432-b577-489a11539764",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fbe2159a-7be9-477f-b6d6-e60e973dc726"
        },
        "item": {
          "id": "1472e460-8635-4119-98d0-0624e346724d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c6b0fe8-8751-4708-a051-86f560856add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e9816f-8d1a-4635-8278-7e3f9a06e55b",
        "cursor": {
          "ref": "88860b04-6e1c-42e2-a829-7ac30474afd9",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "da479631-afb9-45a2-9196-2e438fe79284"
        },
        "item": {
          "id": "e5e9816f-8d1a-4635-8278-7e3f9a06e55b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7170df0f-3a26-469c-9cd7-023c0dbb6742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e73361-7da6-4330-9f4e-057b47ae4290",
        "cursor": {
          "ref": "e0fc68d8-5d5f-4657-8eb4-d8bbe79df79d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "65e48d56-2475-4c8c-82ec-ed80f58e94db"
        },
        "item": {
          "id": "35e73361-7da6-4330-9f4e-057b47ae4290",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bba40582-341a-43e2-b44e-a04cf17e86ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723a96a1-c603-44de-b92c-a04f0aed6ba8",
        "cursor": {
          "ref": "f3af38ae-d953-40bd-b65e-43b644bd3316",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b9afadee-dfcd-42b5-af1e-2b3c56889317"
        },
        "item": {
          "id": "723a96a1-c603-44de-b92c-a04f0aed6ba8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0d201f61-feb3-4c47-aae6-574a6336b753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457dd95b-4a38-4101-ae60-1930ba37b1f4",
        "cursor": {
          "ref": "6f87b6aa-ef5e-4a77-8b54-f336e385f251",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "58b39aa2-022a-4903-9f64-ea51897b34f7"
        },
        "item": {
          "id": "457dd95b-4a38-4101-ae60-1930ba37b1f4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3ce4f4f5-eb01-4a7e-bdf2-4bda3a47cdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cab435-dce2-473b-8424-e3513cc197b2",
        "cursor": {
          "ref": "3b7203ee-9d2e-425f-9b9c-996a6a0476bf",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a018ef65-ff7d-4b2a-9526-24470769dbab"
        },
        "item": {
          "id": "f1cab435-dce2-473b-8424-e3513cc197b2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2ad75c8-937d-4aa1-914a-1efaf56e4aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f435155-e5d2-48de-8210-8e6cced30853",
        "cursor": {
          "ref": "6eafc8b2-df5d-4239-9dc7-157070de5892",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "29a23d10-14e3-4418-921e-fe3f562f238d"
        },
        "item": {
          "id": "1f435155-e5d2-48de-8210-8e6cced30853",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4cec4d96-e137-4d9c-a13b-3b6edb72bb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a44018c-f107-487d-bb4d-bd0073763c70",
        "cursor": {
          "ref": "07a76ed4-a9bf-49ef-8448-5559da53bf7c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "57537c38-8530-400c-a677-d507c132c12c"
        },
        "item": {
          "id": "9a44018c-f107-487d-bb4d-bd0073763c70",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "17946010-c7ee-4fa3-b056-b58851fe6c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d7cdef-4615-45c0-ac08-2d7bc9ab86b6",
        "cursor": {
          "ref": "79f1ae1d-7294-446e-8144-a625484ccad2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "66d64767-ceb7-405f-b06b-db266ae1acd6"
        },
        "item": {
          "id": "e6d7cdef-4615-45c0-ac08-2d7bc9ab86b6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a727191a-b435-40b8-b27a-e926d3e50144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cc2785-bcf7-4077-a4a5-d3d2eaa53523",
        "cursor": {
          "ref": "f4a93315-d574-4c09-a523-cbdd1bfc96bb",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "462a5c41-31fb-4299-ad32-e7bbfec5de90"
        },
        "item": {
          "id": "b4cc2785-bcf7-4077-a4a5-d3d2eaa53523",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fa9850d9-e7d6-4e5c-8d62-58a8e696c3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61782b81-15c3-490b-82e1-3149762c01a4",
        "cursor": {
          "ref": "f71ed052-5f7d-4ffc-8fd2-90141e407101",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e924004e-bab6-4e1c-82ea-7fba3d881e40"
        },
        "item": {
          "id": "61782b81-15c3-490b-82e1-3149762c01a4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0bc04f6f-6b27-496a-9bbc-3f70102733b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d48422-8449-430b-b4f5-fcf362202592",
        "cursor": {
          "ref": "56eaeffd-79f9-4075-82cd-4263139281d8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "37d3ae35-d070-4826-baf8-bfd41f547ec9"
        },
        "item": {
          "id": "30d48422-8449-430b-b4f5-fcf362202592",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bda38107-cfc9-435f-813f-f1b8847c7bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9769136d-d1e0-4f46-adf5-f85e8f2b4a86",
        "cursor": {
          "ref": "9921b73d-3fe2-4610-b44c-84253f772451",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "53ff2c5d-f433-4290-9adf-4c7906a5e948"
        },
        "item": {
          "id": "9769136d-d1e0-4f46-adf5-f85e8f2b4a86",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f1247597-c003-47fb-b5c0-ffbdc6d602cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cd6f84-4440-462e-8324-82c17cb75a7d",
        "cursor": {
          "ref": "3ad19c7d-8fec-40c6-b90c-4439fad74cf6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b7617775-bbc0-4f19-88e0-0e081d868ea2"
        },
        "item": {
          "id": "f3cd6f84-4440-462e-8324-82c17cb75a7d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "120487e3-75ed-40c8-9d78-5ebbf3bc4b93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7c3b42-693f-460a-be88-c7d936204046",
        "cursor": {
          "ref": "1275ada1-ca54-4f64-9209-7f5e036f846d",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "129a607c-d288-421d-afdf-2655c4f746dc"
        },
        "item": {
          "id": "2c7c3b42-693f-460a-be88-c7d936204046",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0a30354b-b39b-482e-9789-8f6aee2757d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd73c532-5852-44f2-bdae-7447d03b4b71",
        "cursor": {
          "ref": "1672588f-5f7f-4331-b9c4-1bd369ff1303",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bb129365-1294-4ca5-ae29-ddd0645bee1b"
        },
        "item": {
          "id": "fd73c532-5852-44f2-bdae-7447d03b4b71",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8567b451-3097-45d0-a14d-1b31ce87a513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fabfc7b-f879-429e-a710-fcc8dc87fc32",
        "cursor": {
          "ref": "532f26c8-62be-4f51-b8d9-b1b39af87754",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "60f1153a-4762-4c62-90d4-4ca23a59e414"
        },
        "item": {
          "id": "8fabfc7b-f879-429e-a710-fcc8dc87fc32",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8793b846-f852-4b88-8fbe-d7a8962a12b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde9a208-c85e-4466-9d60-781ca91e3d17",
        "cursor": {
          "ref": "2a19de63-a78d-423a-a149-b0b9ccffab2c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e7b84543-cef3-48f4-bae0-83ab2d2d6242"
        },
        "item": {
          "id": "cde9a208-c85e-4466-9d60-781ca91e3d17",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a477e2bf-4245-45d3-86d6-61829d0f25a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb58178-e61a-4cb0-859b-9763278de390",
        "cursor": {
          "ref": "877593d7-7d6d-4abc-98e2-ec2b4ccd67d9",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f24306cd-c413-4f1e-a679-e2ec1d1bc8a7"
        },
        "item": {
          "id": "9cb58178-e61a-4cb0-859b-9763278de390",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b4791a5c-f5bb-465d-8f0e-97e8a504bc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8245f8b-5d81-48d9-bee5-a2ba884ab729",
        "cursor": {
          "ref": "c5953a1f-614d-4651-9568-88daa455abc8",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "60fc9277-8769-45e8-89f2-a62e56d964dc"
        },
        "item": {
          "id": "c8245f8b-5d81-48d9-bee5-a2ba884ab729",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3392be7d-03b6-48ce-9b5c-8a1aff20bb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74edf457-cd1a-4493-aa50-aebb9066e4b8",
        "cursor": {
          "ref": "b67dd025-3f56-40d3-a747-a8d7685d5bc3",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7c9823d4-6c2d-4817-8964-8c3e18f1197f"
        },
        "item": {
          "id": "74edf457-cd1a-4493-aa50-aebb9066e4b8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "142284c2-ac11-468b-baf8-a25b5d37e2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b19e8d1-9970-4337-ba72-713609402c46",
        "cursor": {
          "ref": "e93cbc2e-a672-4113-8ddb-ec5ff3f797af",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b7077907-d716-4ff2-a891-af6172490e89"
        },
        "item": {
          "id": "5b19e8d1-9970-4337-ba72-713609402c46",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1bef4253-4fee-4f83-99ea-466aff15dfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ecee28-ba02-4ad8-8faf-006f22fa7415",
        "cursor": {
          "ref": "ee76a365-96aa-4257-94fb-8a5e72afccd0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ed05e628-1eed-4763-b614-238cafb9f488"
        },
        "item": {
          "id": "68ecee28-ba02-4ad8-8faf-006f22fa7415",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "61159c62-d1e6-4f0f-b1a5-f51ff2d3d08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788e7127-136a-409d-b881-210e8ce68ed5",
        "cursor": {
          "ref": "66ff75d1-7f41-4afb-9d8c-6e16921fb8c7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7958114b-c54a-49fc-a389-0eb374a7afb4"
        },
        "item": {
          "id": "788e7127-136a-409d-b881-210e8ce68ed5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1e8680a2-0917-4513-9bfe-30af7a5512a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926165f6-ff0a-410e-9a6d-d8b830421c1d",
        "cursor": {
          "ref": "94189b3b-1fbf-408d-898b-875d00e7a850",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e37f5080-656e-4546-b50d-fec6dcf73057"
        },
        "item": {
          "id": "926165f6-ff0a-410e-9a6d-d8b830421c1d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e690ffd9-b5b7-4907-b494-53e271465987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0499a3a8-64f3-4965-a97a-2114a72dc553",
        "cursor": {
          "ref": "8ace832e-8e36-473e-ad60-43a6d91fb5aa",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0810b871-b43a-44be-bd10-6a66771ce495"
        },
        "item": {
          "id": "0499a3a8-64f3-4965-a97a-2114a72dc553",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "30fd29fa-728f-44c1-9dde-86d8fbfb475b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5236bb3e-39b3-44d4-b9d9-67328e340fec",
        "cursor": {
          "ref": "ede11d15-16d6-4982-aaf7-e88777147d11",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6ca3a37e-ab7c-4d10-91dd-950624cf0124"
        },
        "item": {
          "id": "5236bb3e-39b3-44d4-b9d9-67328e340fec",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eac4bf25-6a0c-49a5-930a-242f8eea1f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15445cf1-4a55-412f-9d98-611eba2928d9",
        "cursor": {
          "ref": "57c2331b-9703-4350-a081-e0c2f8af3777",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1b715ad5-abfe-43c8-a7af-098de33aac8f"
        },
        "item": {
          "id": "15445cf1-4a55-412f-9d98-611eba2928d9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8165c165-6b51-47bc-b4ac-b2e90b961c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e109cc7-0a98-4005-8497-4e2cf4b0e9f0",
        "cursor": {
          "ref": "77e1614a-003c-4e3b-80ef-20851f35dd25",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "365dd66d-f0c3-4578-832c-345c50e50a60"
        },
        "item": {
          "id": "5e109cc7-0a98-4005-8497-4e2cf4b0e9f0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "20cfb15c-b5cb-4cae-bc50-f06dc17587f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb78a0cc-7649-47fc-8682-36941979be81",
        "cursor": {
          "ref": "4cac9925-d7b8-4587-be79-fba5fbeaee05",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "362f22a5-b8f3-4cba-8389-4834404bfddd"
        },
        "item": {
          "id": "bb78a0cc-7649-47fc-8682-36941979be81",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "06adec22-a45a-4ccc-93a6-3e1eebb5cdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25883ebc-3c4f-4fad-b4a1-58088a4da933",
        "cursor": {
          "ref": "bfb9d198-3cb5-45e5-93ae-d9841db43531",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e6938658-cd1f-47c9-aa71-aeae4f93d083"
        },
        "item": {
          "id": "25883ebc-3c4f-4fad-b4a1-58088a4da933",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7d8c54d9-4517-475f-a181-679e5e376eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f1cb79-02b0-4e7f-ab92-c22835d3de44",
        "cursor": {
          "ref": "9ee8585c-6f5f-47fc-a3b6-7b2492a0b7df",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "13801f42-ce2b-400d-9fe2-06203e34e275"
        },
        "item": {
          "id": "87f1cb79-02b0-4e7f-ab92-c22835d3de44",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "81a8aa2a-a7a1-446c-b364-aaafafaf8a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79c501d-fb44-4a17-955a-e11359a8819c",
        "cursor": {
          "ref": "63e37b67-46be-4190-853a-75fc872513cf",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9c681cb3-b65f-4f2d-8593-14e34577c01f"
        },
        "item": {
          "id": "c79c501d-fb44-4a17-955a-e11359a8819c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "41ed8a6c-7588-428f-a4cc-da5d1c7e62ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143ad63b-9466-4aec-aa87-0c2d3263d4c1",
        "cursor": {
          "ref": "f9673507-b109-4d9d-9884-6ace522f81b5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a1ee9a28-9140-46bb-89dd-e3528b38041b"
        },
        "item": {
          "id": "143ad63b-9466-4aec-aa87-0c2d3263d4c1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4cdb381a-9887-46e5-8ff6-333ca7601c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6d5fbc-b288-4736-ab73-f82517485cb3",
        "cursor": {
          "ref": "4a56cfba-01dd-4103-8b1f-827b8cf81e85",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fa5a72c4-db22-4476-a11d-f010778f153d"
        },
        "item": {
          "id": "ff6d5fbc-b288-4736-ab73-f82517485cb3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2cba52bb-1f63-4d7d-9239-fac211ad58fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545a3656-e914-4964-bf63-6097b0d8d8f9",
        "cursor": {
          "ref": "6e828f90-f2ce-4ccc-b4cb-ae025abe2702",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "26677856-70d8-49b7-94c4-bcfecb234535"
        },
        "item": {
          "id": "545a3656-e914-4964-bf63-6097b0d8d8f9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "45af502d-bff3-4a41-9002-aeed22331acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31929667-de09-47be-9734-583acbf3cdb7",
        "cursor": {
          "ref": "ccff09a5-3cc7-4587-b3ce-495e018fac17",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "45d18a8c-e402-462c-90a8-eefbbb2a2dee"
        },
        "item": {
          "id": "31929667-de09-47be-9734-583acbf3cdb7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0a61be35-406c-486a-92a3-03dfc21c0065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccf01fe-7031-4c0b-a3c0-46674b0716d6",
        "cursor": {
          "ref": "bc81ece5-4a1b-4670-94d3-5f55cd357d86",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "24d734f6-5714-4556-9631-e99ef666a698"
        },
        "item": {
          "id": "cccf01fe-7031-4c0b-a3c0-46674b0716d6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dac6ebfd-9826-49bb-ad05-b3d32345742f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde9aa69-2984-4c58-b91f-409f6113733b",
        "cursor": {
          "ref": "44bf9e2e-1dac-402d-bccb-fca6124a9287",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5897f4b2-939b-4248-a967-6ff3e55d0c2b"
        },
        "item": {
          "id": "fde9aa69-2984-4c58-b91f-409f6113733b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "239547bd-be14-47fd-ba00-247697e474f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197e8635-e5c7-4877-bb68-c9e3863829b3",
        "cursor": {
          "ref": "a1e0026a-edf7-4156-961f-b909852cdf6f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9852dbd5-4917-47e5-bf79-30e5134146d0"
        },
        "item": {
          "id": "197e8635-e5c7-4877-bb68-c9e3863829b3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "993d3fbc-c7ef-4194-b809-433b19923172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76838eb9-07c9-4a4f-867c-5afe678bc1d5",
        "cursor": {
          "ref": "c0ef1383-0f29-4f35-9464-ffc36fdd82cc",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0a78eced-af59-4f1f-a567-de182473f200"
        },
        "item": {
          "id": "76838eb9-07c9-4a4f-867c-5afe678bc1d5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "668b08be-2825-445b-a6b3-61cdc638b0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da37af3-60d1-42a2-99fb-4d91e254f51d",
        "cursor": {
          "ref": "ae08c2c6-c22d-4a64-a844-361084e27219",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "58f54241-9c43-41c0-baf1-f0443517d92e"
        },
        "item": {
          "id": "2da37af3-60d1-42a2-99fb-4d91e254f51d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "52d05cec-4d8c-45df-8686-2dcc3d28a880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84ad29a-6ebb-41ac-9267-ade0a0de60c7",
        "cursor": {
          "ref": "45f77f53-5c44-4926-a18a-dc7d1aaf5afa",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "42cb0b95-2ed2-4a4a-a586-54dafe70d7ea"
        },
        "item": {
          "id": "f84ad29a-6ebb-41ac-9267-ade0a0de60c7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3ba3ccac-970c-4555-a167-3faf22db2bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe83c238-d4c6-4493-8b1e-0f0ddcee1a7e",
        "cursor": {
          "ref": "47e1eec7-20b7-4cf5-aacd-2017d005a0e7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0049e755-e03a-4784-b838-c6f1e00125b7"
        },
        "item": {
          "id": "fe83c238-d4c6-4493-8b1e-0f0ddcee1a7e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c1b6cde5-5574-4f8a-a2a5-4747108ac174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7ae4a0-756a-4f9e-b91d-40821c1e9c8a",
        "cursor": {
          "ref": "af95d1c2-14ef-4e21-bb75-ab7a753f25e9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e5aa161-ebb7-43c4-8486-4f825c3b5b51"
        },
        "item": {
          "id": "4f7ae4a0-756a-4f9e-b91d-40821c1e9c8a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4ed82008-7d60-4297-afb0-cc80483ce47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6bea3b-839c-4b83-8c9d-b27a4d48daa3",
        "cursor": {
          "ref": "3d77c443-6a03-411e-9e0c-f56b3eb9be52",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4d87b69c-9527-4931-80d3-6645814cf407"
        },
        "item": {
          "id": "0c6bea3b-839c-4b83-8c9d-b27a4d48daa3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ed9321c8-05af-4f1f-a939-49287e504576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9621117-df55-43dd-9fc1-c06fadca4d3d",
        "cursor": {
          "ref": "0e8d5d54-56c1-4cf0-abec-624ac5f66d51",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a6dab7be-b4b0-4f76-acd4-daa506e078d8"
        },
        "item": {
          "id": "e9621117-df55-43dd-9fc1-c06fadca4d3d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "40e68eb1-8b2d-447a-b658-094d56ed17cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebca948c-6cde-432d-8768-6ed2ae18f428",
        "cursor": {
          "ref": "0ebbcb49-2817-4e01-8188-d2422a06dc09",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fdc24393-815a-44f5-ab62-ae60e80c4da2"
        },
        "item": {
          "id": "ebca948c-6cde-432d-8768-6ed2ae18f428",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e407338f-9c05-49d6-a102-157e562a3e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2972606b-74a8-4e95-a54e-4c50e5ffdc1c",
        "cursor": {
          "ref": "50fd24d4-3780-4e8d-b0af-004d46af032a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f07334aa-b41f-485e-9ef5-932301c450f7"
        },
        "item": {
          "id": "2972606b-74a8-4e95-a54e-4c50e5ffdc1c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "97f1ca90-8b4f-40b2-a544-8d6f334c2982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992dc183-4bbf-46b5-949f-85519c5829e4",
        "cursor": {
          "ref": "98c11ff7-66ff-4e40-ba0d-a40a024e38e8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "026e9d8e-a1a2-4c1a-842b-8c9c023ef66d"
        },
        "item": {
          "id": "992dc183-4bbf-46b5-949f-85519c5829e4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f1f7d8d7-b0bc-4cbd-8dd7-4075baf5e4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaec9c6-91b5-435c-ac2f-93caed2201a8",
        "cursor": {
          "ref": "1265787b-4f7c-47db-b0ff-f943fe45faa6",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "79b8dfd8-3412-4655-8781-15af1d88aff7"
        },
        "item": {
          "id": "6eaec9c6-91b5-435c-ac2f-93caed2201a8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f63a3d53-35c2-4819-bb80-a6e0cff4d09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502d32f1-8820-4ac4-9dfe-0f3fc42217fd",
        "cursor": {
          "ref": "4507d750-b01c-4400-a4ed-3e49f95ebf3c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3a8a5297-243f-46d5-a853-c3f872c732ef"
        },
        "item": {
          "id": "502d32f1-8820-4ac4-9dfe-0f3fc42217fd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3756d544-4de5-435a-9c90-2c9f5a05ea21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020a9072-a1ea-4911-b4b1-15e59fa9f0ac",
        "cursor": {
          "ref": "7c5ee464-b64d-4eec-ad7a-bc3b1c0588b6",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f67e237e-0462-4f6a-a5a0-dc0741d3b4c9"
        },
        "item": {
          "id": "020a9072-a1ea-4911-b4b1-15e59fa9f0ac",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7b0a8560-b778-4cda-b046-a7229232bbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76353046-081f-46be-9931-d726fce0ba97",
        "cursor": {
          "ref": "87836243-4a1f-46e2-9bfd-45a6be51add4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "75a12b13-b590-4919-83be-76ecd4fa2587"
        },
        "item": {
          "id": "76353046-081f-46be-9931-d726fce0ba97",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6c8c03e4-6ee8-4f6d-8638-78a8d4366102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0eb61bc-38c9-4ef7-93bb-65ddc03d8ef0",
        "cursor": {
          "ref": "297c9021-fd26-401a-84d2-cce6f84fa713",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6612b483-cd72-4d9e-85b9-dcdf3fa53c9c"
        },
        "item": {
          "id": "f0eb61bc-38c9-4ef7-93bb-65ddc03d8ef0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "aad3679f-2952-420b-a9e9-4abba871a16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a18ddf0-1aaa-4e08-a48f-140156af1032",
        "cursor": {
          "ref": "284f77e0-8dde-4c8f-8c20-a3e070b9a51c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0bf0346f-5ec9-4ee6-88d1-9cf9eba08584"
        },
        "item": {
          "id": "4a18ddf0-1aaa-4e08-a48f-140156af1032",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "eab7a7ae-80f5-435a-bb02-1b5f15f8d6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eda92d-6cce-4382-9bec-bfbf770c7a55",
        "cursor": {
          "ref": "61f9a699-f350-4735-a3b3-7139f5e8118b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a6c69603-6268-473a-baa4-a20c82a095e0"
        },
        "item": {
          "id": "b1eda92d-6cce-4382-9bec-bfbf770c7a55",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9ca90cb0-0b01-4a90-ad8d-095ee88a8003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe7f48a-4017-498d-87e6-15c7db8f5295",
        "cursor": {
          "ref": "e4a3ebec-08b6-4c25-8e0f-b8904ad19a1d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8cde5bd8-dbae-49b4-a111-c3e9b5cd5644"
        },
        "item": {
          "id": "cfe7f48a-4017-498d-87e6-15c7db8f5295",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "41f473a7-c772-4446-8f86-54944e33ba8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11e5250-cd5d-4ded-9234-587bcd80cdab",
        "cursor": {
          "ref": "9796af7b-56f3-4556-948b-700b191c50f1",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "64b0e97e-9c24-434a-842b-00eedf82fa09"
        },
        "item": {
          "id": "f11e5250-cd5d-4ded-9234-587bcd80cdab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "47277c58-0ebe-47bf-8a09-a09955abbe2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68d77c5-4618-4dc3-87f5-064899c825ec",
        "cursor": {
          "ref": "2fe05d8f-f86d-4e58-9803-d1c20057461c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "68a9ae69-08f1-4048-8c30-68e781732891"
        },
        "item": {
          "id": "f68d77c5-4618-4dc3-87f5-064899c825ec",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f6fd9293-486d-44b7-98b6-36bf687111ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71d4bae-a628-4fab-8773-334d0c535d60",
        "cursor": {
          "ref": "acb0b2de-5401-4183-bb41-b03883ea3ac5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "49eeb762-a044-40fd-bc38-72e0decd00fb"
        },
        "item": {
          "id": "b71d4bae-a628-4fab-8773-334d0c535d60",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6e1b1ba1-3ce6-4662-810c-56adbbac91ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c46bfc-1baf-43f6-bcd1-1f376cda0e66",
        "cursor": {
          "ref": "f0adf189-af50-43c2-818b-1fe204f54e4f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f090605f-3b13-4730-b9f9-35550288dee2"
        },
        "item": {
          "id": "e9c46bfc-1baf-43f6-bcd1-1f376cda0e66",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bb514f92-eb66-4964-954c-c0bbeef578bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8e3039-0d16-4fc8-bb75-18ff96d96b13",
        "cursor": {
          "ref": "14d7e51e-c7c5-4222-a87a-6a24019e82de",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d412e041-abe3-404c-86b3-25b01564bc4d"
        },
        "item": {
          "id": "de8e3039-0d16-4fc8-bb75-18ff96d96b13",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a3426618-5186-4930-8581-d2bcca1ee091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929e3339-6b9a-40b1-b48d-e9365d28b182",
        "cursor": {
          "ref": "6e62e0a6-21f5-446e-8a11-fa3a058855ff",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aa73adc3-5150-45c5-8af6-07275437a333"
        },
        "item": {
          "id": "929e3339-6b9a-40b1-b48d-e9365d28b182",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "65af1ea4-e946-46d2-b3a6-f11a66bef369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deec21c-8afb-409a-9a86-28073fe196c7",
        "cursor": {
          "ref": "303d279d-6672-4af7-b296-e3dfec0f5dc1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "da3f7d4e-579e-48eb-9dec-9733c9efea61"
        },
        "item": {
          "id": "4deec21c-8afb-409a-9a86-28073fe196c7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "346ee115-76a5-4caa-a360-05881938b965",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "2c84925b-5e0d-4566-b52b-8f2459bc8da7",
        "cursor": {
          "ref": "5cebbb0f-00d4-4c3c-9f41-0ceadc1931f9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f404ef27-c2a5-4d61-87bf-27f3c838d79f"
        },
        "item": {
          "id": "2c84925b-5e0d-4566-b52b-8f2459bc8da7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1aa6a9db-458c-4134-9c0d-d4ac07011cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db5a713-d93b-4cc9-8764-e0600d0e93fe",
        "cursor": {
          "ref": "97d20820-9eca-43fe-a610-addb380c214a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cd827ad7-3ce7-4ca2-93c1-36d4ef1b2f6a"
        },
        "item": {
          "id": "7db5a713-d93b-4cc9-8764-e0600d0e93fe",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "606b46af-5d35-496a-8ade-3c3a3fb524ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1499a04-aac5-4b15-befb-8a93013415e2",
        "cursor": {
          "ref": "67f92104-8fb2-421c-ad5e-476bc3689839",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9c245ad7-6d5e-4e2a-ab71-793ff0ba489e"
        },
        "item": {
          "id": "e1499a04-aac5-4b15-befb-8a93013415e2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3b10b383-e989-46be-98c9-3812e5724d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654d2c3e-40ab-40f2-bae8-845db5561c10",
        "cursor": {
          "ref": "cfab86de-7ebf-4e55-ae72-6e9c273552e3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8d265fcd-8142-42e6-9afd-1784ff94617b"
        },
        "item": {
          "id": "654d2c3e-40ab-40f2-bae8-845db5561c10",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7fd8273f-cb72-446d-bac7-a21e524f85f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a58fa6-5268-4519-8cda-53ac4b3df44d",
        "cursor": {
          "ref": "70147181-72f5-43aa-a688-961cce868e40",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d19f1008-e76e-47e4-89b6-c0cfd63ec81c"
        },
        "item": {
          "id": "96a58fa6-5268-4519-8cda-53ac4b3df44d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c1b1dfb3-175f-4afb-9214-c6afe1a1cdd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e79740-d301-4586-b178-4bffd7dcb1a3",
        "cursor": {
          "ref": "13775d21-1f35-40c5-b51c-654d935b772c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fa5147f7-4b12-471a-bb19-a3515bc7e6f2"
        },
        "item": {
          "id": "51e79740-d301-4586-b178-4bffd7dcb1a3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2073444a-1f53-4049-a28d-1bef0dbad639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c3fc34-eea3-43f1-858c-72e27fe22117",
        "cursor": {
          "ref": "71a91df6-72a9-4852-b8f5-702b98879c8a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4664b8d1-b9fd-4acd-84dd-bd2d7e964414"
        },
        "item": {
          "id": "57c3fc34-eea3-43f1-858c-72e27fe22117",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "67b9a5e7-3c62-4c34-8c3e-2a408bf1d3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f830994e-115e-4c6e-b824-09737493a7c4",
        "cursor": {
          "ref": "04c8d29f-4411-468e-badb-0138337b00b9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4c9e939f-36f1-4992-887e-dffd121a7520"
        },
        "item": {
          "id": "f830994e-115e-4c6e-b824-09737493a7c4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ee3e8c91-e013-4623-a31a-b6672085f8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cd8000-0753-407b-9aec-acfba8136367",
        "cursor": {
          "ref": "163bccda-52b9-4288-8107-c9c8b91c4adb",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8023f304-2842-4aee-97ed-c7049d52e990"
        },
        "item": {
          "id": "15cd8000-0753-407b-9aec-acfba8136367",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e8658663-9c66-48a0-8696-fab3556c3486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0e4c60-fc51-4740-b5c5-4fd17b5a8081",
        "cursor": {
          "ref": "cd58d5df-cebd-4724-a7e4-3b1c8ac2c4ab",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "abc96e30-24e7-4998-a034-dc877955d2de"
        },
        "item": {
          "id": "0e0e4c60-fc51-4740-b5c5-4fd17b5a8081",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "beae72c0-8831-4ee8-b40e-fa8b1e0cf017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e894bb-14d4-4811-80a3-3c631ec5dad4",
        "cursor": {
          "ref": "751ac56e-b0be-4b6f-9377-6f3790f2fa79",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c8a9ff82-f471-4441-b5c8-20da0f111b2a"
        },
        "item": {
          "id": "83e894bb-14d4-4811-80a3-3c631ec5dad4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a1c57fda-6078-4ef2-b5e2-7e198a71e800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61248a3b-e1ad-4a0c-9193-d1fe594ebe1e",
        "cursor": {
          "ref": "5555dda9-5c21-4507-ab5b-2ea990560f47",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7f7d1b62-fa85-4ef2-9ba8-c68cabbf50db"
        },
        "item": {
          "id": "61248a3b-e1ad-4a0c-9193-d1fe594ebe1e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6c47da9a-1533-461a-af89-feb3536f9de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3451e4a0-ea76-432a-b1ad-d0bc726c75d4",
        "cursor": {
          "ref": "703c0fae-f014-47ae-9ca2-14c542d89346",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "93fb6c5b-9e26-4efa-ad5b-345010657eef"
        },
        "item": {
          "id": "3451e4a0-ea76-432a-b1ad-d0bc726c75d4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c347bd36-dac0-4a64-8702-b70cd7141dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b345e53-4124-4a8d-b6f3-c46300ef2bba",
        "cursor": {
          "ref": "ed1d347f-10f3-4dc5-b13c-2f6110b29651",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6be16d84-220d-4716-8518-e1312181f775"
        },
        "item": {
          "id": "0b345e53-4124-4a8d-b6f3-c46300ef2bba",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "12685231-5763-422a-8eb6-aae73474366d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be59e119-acba-4dd4-a57f-81c2f1f342fa",
        "cursor": {
          "ref": "b643b639-23eb-4f4c-89f3-dcbfadc3d94f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d19674f0-e3c4-4c0b-9963-41ac39cf8b0e"
        },
        "item": {
          "id": "be59e119-acba-4dd4-a57f-81c2f1f342fa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4e101fbe-d4bd-4ea8-84e1-62d6f8a15930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0b8abd-1051-4d51-92ea-a21d34a9cb49",
        "cursor": {
          "ref": "92b613a6-e0b3-4365-b31a-d5e928a29181",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5c563a9f-7eea-4369-a870-3c55b68724ea"
        },
        "item": {
          "id": "4d0b8abd-1051-4d51-92ea-a21d34a9cb49",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b2ee89ff-b6fa-4b5e-aaaf-189aa54696d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28695f6f-41bf-4b56-9f41-9bf4afe394fc",
        "cursor": {
          "ref": "14ec87a2-754b-4ad0-a129-d141ca2ad2c3",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e013b3f9-e449-4fe2-baff-c933225042af"
        },
        "item": {
          "id": "28695f6f-41bf-4b56-9f41-9bf4afe394fc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "84154568-f54a-4c64-8302-445e8e190eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574b4c28-ec10-420c-974b-1410d3f810fa",
        "cursor": {
          "ref": "ddf41fb5-4c55-4205-9851-d9d29d8cf2e4",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1192e649-8309-475b-87c1-2b6014b1abb8"
        },
        "item": {
          "id": "574b4c28-ec10-420c-974b-1410d3f810fa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "631093d3-e1ee-467f-a879-306d71e062ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c94781-f053-4614-9b0b-fe4214a22152",
        "cursor": {
          "ref": "5ffdb2fc-3717-4b8e-8334-5f39f6d1445e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2eabdbe9-b2f7-4d32-8ad3-3bf2218e0ac9"
        },
        "item": {
          "id": "87c94781-f053-4614-9b0b-fe4214a22152",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "67168ecb-1336-4c4b-ba99-fec09eed789b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93d853f-3b3a-4c9c-a2c4-750ad65c5765",
        "cursor": {
          "ref": "8b974096-599b-44ca-ab5b-f21b221458d8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a627958-1bff-47c4-9978-14a1561cfdfa"
        },
        "item": {
          "id": "e93d853f-3b3a-4c9c-a2c4-750ad65c5765",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d9b1b929-36f7-48ac-89b9-7f8e352df559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d022cf9-9729-4536-bad2-30e53e30cf86",
        "cursor": {
          "ref": "3604a1e0-ae9b-4cf5-a2de-be0b97ce18dc",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "58cbbdca-2caf-43ad-b3aa-8ee608518400"
        },
        "item": {
          "id": "5d022cf9-9729-4536-bad2-30e53e30cf86",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b93280f0-a7fa-49dc-9975-32fefd0cc456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8693ff19-40e0-4e14-ac20-ce3e87009fa0",
        "cursor": {
          "ref": "e2e21455-23ea-4648-96c3-e85c4b8f0ca0",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "97b0eedd-098b-4810-9e2c-9ebd127afc65"
        },
        "item": {
          "id": "8693ff19-40e0-4e14-ac20-ce3e87009fa0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b03a4bbe-7879-4b0b-8092-d87eeb0eb999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61957830-5a93-49c3-a347-dfc51cbf4d3c",
        "cursor": {
          "ref": "d8ebcbea-9e0d-4229-954f-c2c59e1627cc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "accb022d-cedb-4a97-bc05-ed2b16b6ee2e"
        },
        "item": {
          "id": "61957830-5a93-49c3-a347-dfc51cbf4d3c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f3e7cac6-5ba6-481f-8c42-2927cac13580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc276cbc-da6f-4449-a2a0-990af5b9ce32",
        "cursor": {
          "ref": "da99bc93-2c20-4534-b6c0-615c5c3e082d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4eb39eb8-1670-4e7c-939b-dfbd6827135d"
        },
        "item": {
          "id": "bc276cbc-da6f-4449-a2a0-990af5b9ce32",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fd2fef14-12e2-43c2-a023-feebae2cfd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bfaf0d-eaa5-45d2-94d6-5d59a3dfac48",
        "cursor": {
          "ref": "629b5fef-d1fc-45e2-bef2-34252fb41db6",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6a37a4c2-e863-4802-8eb3-44355be43872"
        },
        "item": {
          "id": "33bfaf0d-eaa5-45d2-94d6-5d59a3dfac48",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "07795e91-14ea-47cb-ac54-52fbcb348303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c59578c-740d-4f86-8fc1-f805e19dec1f",
        "cursor": {
          "ref": "c8688bc7-8ee7-4f0a-a046-97891c164e40",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b9420dbd-6704-45ff-a097-537bf4adf8f0"
        },
        "item": {
          "id": "1c59578c-740d-4f86-8fc1-f805e19dec1f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1abf00c3-554b-474b-9f25-2f1100fc582f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adba8a55-081e-4077-8487-754b0f7233cb",
        "cursor": {
          "ref": "09dd3735-030a-47cc-82d9-f4e106b962d4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "11744849-fc90-429d-85cc-73c0bb7f729d"
        },
        "item": {
          "id": "adba8a55-081e-4077-8487-754b0f7233cb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f774e98f-ecd3-42c5-8795-b9d1973637e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18fea63-07fc-4c87-9ac3-c317293d8138",
        "cursor": {
          "ref": "41f48781-3e6c-4336-8fd6-2ac3664d1e68",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d159aa4b-1e52-4743-ae84-1b0a5f01bd25"
        },
        "item": {
          "id": "c18fea63-07fc-4c87-9ac3-c317293d8138",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a87dd02e-09ea-485c-a50f-733330e3a77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f90a46e-60b3-4bc3-8fe4-9edf31e0700b",
        "cursor": {
          "ref": "eef0ab70-f610-477c-9dcb-9fa6f8f733c9",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7fc6a907-14e0-4d06-ab96-f1c83a5b7d42"
        },
        "item": {
          "id": "3f90a46e-60b3-4bc3-8fe4-9edf31e0700b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "935a8964-a58d-4edd-84a7-8ab12d45102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ba55fa-75f1-49af-9de3-2589d8e2ef83",
        "cursor": {
          "ref": "5662d6a8-b594-4091-b293-9ea3f87e90f1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "34b5db72-e0db-47f1-94fb-853faa966cd4"
        },
        "item": {
          "id": "d6ba55fa-75f1-49af-9de3-2589d8e2ef83",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a0b1d03c-88ad-4a7a-80e5-517b71510424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af2372b-1b56-4776-a649-10ad5980c51f",
        "cursor": {
          "ref": "8c5f3620-142e-4972-9e93-0d797aa5d571",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a855f10e-4945-4cf4-8b64-3e32729809c7"
        },
        "item": {
          "id": "3af2372b-1b56-4776-a649-10ad5980c51f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cf41bb34-cf85-48f9-90f6-a647eb033074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289482c8-848c-4784-93c3-89f9a7659104",
        "cursor": {
          "ref": "e7304d32-95ef-437a-881b-c0e3a8b59d20",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "51437368-abe3-4105-883e-ad80ac3ecc10"
        },
        "item": {
          "id": "289482c8-848c-4784-93c3-89f9a7659104",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "06a72730-6579-4a17-8450-ad54ac08ee28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93434b34-6c92-4b80-a0cd-4ab2dcb2970d",
        "cursor": {
          "ref": "b998476c-0adb-48e7-addf-7461a5418bdb",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2e9360e0-21b1-4bac-81ca-9e56a5d7ae8d"
        },
        "item": {
          "id": "93434b34-6c92-4b80-a0cd-4ab2dcb2970d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d4194cdf-f4ac-4303-b692-83aac1660d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15da848-249f-4d0d-a935-e57fd5478a4c",
        "cursor": {
          "ref": "a11bb9c5-a858-4a0e-b41a-e4f792e41673",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "91c62bcf-9ea3-4e7c-a157-79e7fa1f4958"
        },
        "item": {
          "id": "d15da848-249f-4d0d-a935-e57fd5478a4c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6a0bd95c-b7e1-4f0d-ae86-416ec5fbdc11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a1739b-5258-47e6-b563-493b4148c8fa",
        "cursor": {
          "ref": "63d7078c-9a49-4715-a6de-3fd9e114db10",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "49be9a8c-85dc-4934-a24b-847c047be5fb"
        },
        "item": {
          "id": "c3a1739b-5258-47e6-b563-493b4148c8fa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "949033f3-7fd3-45c4-96fb-635b431b7bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811b38d6-613f-4c1a-99f6-11c40fb39269",
        "cursor": {
          "ref": "5b9042ec-faf8-4fcf-96a0-606c05e5ab6a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e5feafb5-28b2-4a95-8351-437d52fafe3c"
        },
        "item": {
          "id": "811b38d6-613f-4c1a-99f6-11c40fb39269",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e2eb8f74-4032-4eeb-bfa3-b632202f0d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b910a0e-8b20-4969-b7ca-100e9fa9a44a",
        "cursor": {
          "ref": "35926289-89d7-4f76-9036-4e49130e670d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "8df61121-0f77-4d33-beaa-268f31ed3631"
        },
        "item": {
          "id": "9b910a0e-8b20-4969-b7ca-100e9fa9a44a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c472b881-bfb2-4285-bd29-4c447d876592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50625038-49d1-4e13-a6ee-dfa53e4f4dda",
        "cursor": {
          "ref": "f95fb4ec-4bb9-4765-8c7e-698b3459ba06",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6c308c32-0b8f-475a-a175-6416c24f514b"
        },
        "item": {
          "id": "50625038-49d1-4e13-a6ee-dfa53e4f4dda",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "aa0be924-a9fc-4eeb-9844-15f16d523f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96686cad-ca48-4c05-817d-3f0d2292796d",
        "cursor": {
          "ref": "f518183a-9422-4e2c-8559-594ffec2f920",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "75cb04d8-01d6-48ed-b3bc-a819cea27191"
        },
        "item": {
          "id": "96686cad-ca48-4c05-817d-3f0d2292796d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "db0d9f67-b21f-46df-83e9-69a90f144370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e346dbf-fc38-42d9-aacd-69009644df1e",
        "cursor": {
          "ref": "dd4edcb0-d473-4af0-8c74-731c5b3ca8ee",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f0a3ced2-2543-40e5-828e-10cc68bd8557"
        },
        "item": {
          "id": "8e346dbf-fc38-42d9-aacd-69009644df1e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4c4ded53-f1d2-430b-9124-efddbead6450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3ca540-4b00-4140-b237-8b5bd8d3decd",
        "cursor": {
          "ref": "de566f25-9194-4fd0-859d-582570018a2f",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "051437af-aeb8-4fed-aaa4-117e5dca3f30"
        },
        "item": {
          "id": "8e3ca540-4b00-4140-b237-8b5bd8d3decd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f9e0ff5a-f68e-4e92-a682-98d2ed087d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc988d3-2e3c-40f7-ba9d-4d320512b591",
        "cursor": {
          "ref": "40fd59d1-4400-4bd3-a3fd-fa82003cd9b2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e98e5166-13c3-48bf-9c67-24786a99f181"
        },
        "item": {
          "id": "ddc988d3-2e3c-40f7-ba9d-4d320512b591",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "150b7f07-980e-489e-9958-481544ab17c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b16134c-f8c1-4058-b982-28acf6305b8a",
        "cursor": {
          "ref": "4e5b7cb4-5468-48b1-a2ae-1d3c4d107bd0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1f8b18d1-2035-414d-bf63-11fd960263af"
        },
        "item": {
          "id": "8b16134c-f8c1-4058-b982-28acf6305b8a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9ccfceed-06ab-4910-9612-b153a5432d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47395cbf-b352-44df-aaf3-e99369889f28",
        "cursor": {
          "ref": "431de41c-1879-45e9-925d-8ab90086b89e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c9e53f6a-70dc-460c-8fd4-64bcbbebf743"
        },
        "item": {
          "id": "47395cbf-b352-44df-aaf3-e99369889f28",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d86bc276-ec68-4925-b4c1-3760bd536e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ece756-813c-44e0-80b3-b57e087c04fc",
        "cursor": {
          "ref": "a9bd55fd-a69c-49f8-8496-240df71cefe4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a0432e05-edaa-40aa-b848-30ea80e1cc0a"
        },
        "item": {
          "id": "52ece756-813c-44e0-80b3-b57e087c04fc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ff679688-a15e-4f19-a27f-6b72d813316d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaadc6bd-1663-4754-988a-876df6049e7a",
        "cursor": {
          "ref": "367b38f3-2574-4675-bb5d-6431c9987df7",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e0a426da-3e88-4787-b6ef-b6e24e18d33e"
        },
        "item": {
          "id": "eaadc6bd-1663-4754-988a-876df6049e7a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "62ad64de-52b1-43bc-bed7-8908edefbb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a38b5fd-2ecd-4d0e-9777-be0aaa8f731e",
        "cursor": {
          "ref": "ba0e1056-11c8-476d-83c7-93e8d7a62789",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "82afe84b-95e7-4d2b-92d9-6e3f9301850f"
        },
        "item": {
          "id": "9a38b5fd-2ecd-4d0e-9777-be0aaa8f731e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7cccbdfd-8aae-4e34-baa0-57676dd77fea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe0ebbb-18c4-4f22-b12f-f184fea70fe6",
        "cursor": {
          "ref": "d6a4fb1a-87c2-4a61-8f86-a7126b11e244",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "92a16db1-1113-4c15-8d60-f5c074c32d80"
        },
        "item": {
          "id": "abe0ebbb-18c4-4f22-b12f-f184fea70fe6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b812c7ce-a1a8-44be-9e2d-0e34e77f45c8",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9299924-d319-4fec-8086-b78242c2189e",
        "cursor": {
          "ref": "722b329a-286d-486f-afd4-483bb2274182",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "0b3d5b45-53e7-4ae5-9073-02a03241eb7b"
        },
        "item": {
          "id": "e9299924-d319-4fec-8086-b78242c2189e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "376fb4aa-f5ee-4fc7-978f-a6d1322bbeea",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5404fe8-70a2-43f6-b7d7-97f84986d2dd",
        "cursor": {
          "ref": "83c180b2-28ec-4153-8453-ee9b2fbe720a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9600e60b-1f61-4215-a1c0-4b4fed7251fa"
        },
        "item": {
          "id": "f5404fe8-70a2-43f6-b7d7-97f84986d2dd",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "94160014-170a-4620-af8e-1f22371ee1e2",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "043407aa-d895-44c7-9968-51373772c06a",
        "cursor": {
          "ref": "2c4ef5d7-3284-4fba-bc92-3792c3a6073b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a8489392-ebf0-4e9d-b1bb-42cec4682ee4"
        },
        "item": {
          "id": "043407aa-d895-44c7-9968-51373772c06a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "43370bf2-32a1-4452-9e66-c02a4dfc29a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043407aa-d895-44c7-9968-51373772c06a",
        "cursor": {
          "ref": "2c4ef5d7-3284-4fba-bc92-3792c3a6073b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a8489392-ebf0-4e9d-b1bb-42cec4682ee4"
        },
        "item": {
          "id": "043407aa-d895-44c7-9968-51373772c06a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "43370bf2-32a1-4452-9e66-c02a4dfc29a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35443abd-ccd0-43d7-9f25-856e402dd54c",
        "cursor": {
          "ref": "bcec3e99-6f42-4703-91bd-c2d66c27b22b",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e5f9aecd-7b96-4307-b713-3f2f3a95bb3e"
        },
        "item": {
          "id": "35443abd-ccd0-43d7-9f25-856e402dd54c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a79b71ae-f573-4a4d-a6a7-fc039c9ef543",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3539d4-86e1-4d3d-b054-6ca997d1b2b2",
        "cursor": {
          "ref": "e6004400-a702-4c31-921f-6807fe6eb3a2",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "abd7ced2-0bc4-4bb3-a78f-764c6f0106f1"
        },
        "item": {
          "id": "dc3539d4-86e1-4d3d-b054-6ca997d1b2b2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dc76b72b-0312-4c55-84a6-94a7523951ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}