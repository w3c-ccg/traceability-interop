{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7cc26bc8-15c1-48a6-b713-c792965f417e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2d328bb9-a9cb-4bc2-89b5-a41b5f6d178b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "092f4604-8f25-4721-b952-1a0d4e212a3b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "742946f1-6219-456a-b8cf-80026f3850fc"
                }
              }
            ]
          },
          {
            "id": "a986a7b8-6135-43d0-bb1a-507fe5460c75",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94f06c30-9d20-4146-83be-d891ebea9b44",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0b6ae935-561b-4c27-aae7-8ac0986c6493"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c52feed5-ec14-4fd4-a15c-f8630a7de5a0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dc50290f-2e38-4b14-b72c-b61618e7489d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "819c7809-8070-4a1c-a438-66df60fba6ad",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dc1a8f0-c707-4548-b4cd-86004460f2ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb611bbc-8653-44ff-8ca6-ccfa5b34acbd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3bf7891-a934-4df1-a5d2-211f1a4b09ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5561b9b1-db27-4cdc-bb37-85882fa52612"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d6cd0deb-79fd-4425-9369-5bfd805ae31d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e63dc13-f77b-4f5a-b494-9aab20377109"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17221aa0-ce18-4463-999f-be9498710169",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "90559925-0499-4235-8553-a5e51a29bef5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28483c70-e189-4890-a500-281cdc7bef9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4139b289-ba6e-47ac-b882-2a2c3eb27489"
            }
          }
        ]
      },
      {
        "id": "6886fa72-409a-4cef-8d79-78d7bd901ece",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0d2727f9-4219-4c46-9d9b-c2a25a5e1adb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "445a82df-e4fb-4d26-aa7d-e3afbbba06b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01b64c98-2615-4818-9888-44d04764ce05",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0132ed-2682-4c79-a1ec-f0af738cfc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d577d4ad-e44c-47ac-84db-a1df66da607d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8267ae-9228-4b9e-b203-3d1d42624e5a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669cb3cf-97f9-4d7c-8a7a-b7eee3a8630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6707d5e-4137-4c3f-9760-9c88c1ba7948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e887c0-a16d-4133-b1da-79ea51b648fe",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288bb49d-8228-4fc7-9357-c94e5dcafc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eccde848-65f5-4a52-9bd2-4d268473dc67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8f497be-8a8d-4806-bcd1-26c7a1c1db8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2c25fae-8f3b-4669-8c30-4487eafdb09f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6018f9a-9198-47b2-b458-18ea0cb25747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a5026c5-385f-4dcd-97bc-60c69321ed5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89afd2e-220b-4213-9a4b-2e288e1d3e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575627bd-72a3-4898-a3d2-34cf2b275ea4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1e947ba5-cb1f-43a5-9114-33765e36d816",
            "name": "Positive Testing",
            "item": [
              {
                "id": "309c6de7-6295-4f1c-b6ce-19d1667013c0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee5487fb-398b-4a22-8703-c2f2e9e798ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "de62b402-15b2-45eb-ab7f-9cf951780da4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c973838f-acf6-4b13-a4b6-da03f6814489",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "34e51109-c147-4807-a561-274031de5ba6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d466c826-10af-4f95-bd42-e0ba87993096",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "737a94fa-e783-4598-b4a2-c3279da12a59"
            }
          }
        ]
      },
      {
        "id": "88f46579-cc6e-4c63-a9a0-f3dace8158ce",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "88a41d39-c703-4993-82a3-793e661a930e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30d043cc-61b3-4847-89a2-1faa012b6cb8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cb07c130-825b-4536-8378-422fc3934578",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0e7797-786b-4909-b391-d58650a3bc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191b5ef4-8add-437b-a8cd-baf36b392206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0665e491-1bd6-4cf5-92c6-55e8cc85af6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5b44e37-e229-449c-97aa-39bd6c7ff284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc22464-1bd6-43e1-87e8-e5fd8d2b6c0f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4987faad-0d9d-4ef2-ac95-f243c2dec336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e293b88-bb0d-431b-8298-6a3510c75aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284f4e4f-08aa-4b25-80c1-ee110e5900dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a187be8-2553-4761-b119-c0ac40cc88fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fd4dae-2cb6-4caa-bb00-e012f9f6b136",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864efb2a-aa06-43ef-89b6-325235ba929b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db95d98-8bf5-4816-b451-acd811b89480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ddd542-8cfc-43d4-9bd7-cb0e8f7265c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f62f2c4-0040-4f0e-ad3e-5f4c40e65e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c157b68-b4f7-4a6a-a43a-a972894d0945",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25914fb4-442d-4fc5-a6ca-c64160836195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379e4da1-5fb6-4cd1-81eb-bd7e6c635f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b2c6d6-5720-4945-80d3-870de7db8cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54d96d3a-3ac0-4381-a74c-c45b09b51a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7259c993-4a67-4ca3-bc98-9d4dbc1c23cb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5adb7f3-d51c-4797-9fdd-76d708276275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65f95e1-6bf6-488a-8481-d5dd6c6f06ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641a1ca4-7e43-43f5-80ec-c67d4800b286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7773635f-21f8-4c92-9958-cd5bcff3a7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651af831-1c7b-40e6-ade1-06d83a84fdda",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305bdee8-e8fb-4f98-9820-b4a3c0da2806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69b7a4a-7ce4-4804-851a-0be4075610a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c79ee2f-4e94-400a-a8e8-317ffa56a0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe7b2a18-e108-448f-891e-ff6a9c6d9346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae62698-6a72-4bed-9330-02a0874ff93e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a97cad-f494-4546-a9ec-c5141cf700b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fb9d75-b3e7-4f1e-8591-6c1040b34498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b76e0ce-3733-4776-9901-158875f9e8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84d1ffb2-ee72-4fa7-9205-fc437df1c7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b904ce-3030-4442-9465-6d435b35258c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5d9868-1ab4-4dc4-82e1-1b1b377c1bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a06740e-06f3-47df-97a9-4e54cd886a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e273a5-2b57-48e2-9577-774478bf7908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02ce369f-ee91-40c9-a7ad-1407bbe8e11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbb01f4-1af3-49b8-8267-ac87658a6e31",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbabdd12-acbd-48b4-a141-e6f8ce949f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425bbf8d-95a3-41ee-a9a7-b2fa45e86d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f81c0f0-34a6-46b3-8173-fd9705e0dba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad40f87b-5edc-43c6-959d-08d9fd3d8a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb44612-acdd-439e-8695-3005ddd4b591",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763adea4-37e6-49c6-90f4-f0ee62446736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74a9c0d-fbe9-47ab-bd15-017f5d1142c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8936284-4f7e-4d53-a2e9-d949832a429d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6028a2e6-4d57-46e7-9a72-c9830e9785eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34a85ce-6f04-4087-a9a2-d186c0650bfe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1d2c79-aca4-4062-8c8a-b6858e636018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de947cf8-3321-410b-a531-1a08059f519f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1917c95c-9802-4c61-bbc5-3adc7c791671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ebd5435-78d8-4671-ac67-c344bf59662d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77a1ffa-4b1b-4149-a959-82b422b52244",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd30d9cf-77bd-4a07-887d-bd6d90718678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389b5643-f79c-46ba-b2f7-b88ad89ed93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d4f85c-7dbc-45da-9325-5e2ee9b25111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac12e460-b4cc-4565-92c7-52af2f808e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8234878-2b4b-493f-98e3-da4c54e9ea4f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af3e684-698a-489a-858a-3898098f2d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc569daf-9310-4719-8158-559785e345ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d0c1cd-2f88-4d94-b210-165cc8ef2949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89a2582c-cb89-4769-9115-18aa74d54375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628cb455-9088-477b-a576-d087a3020d74",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920f8f60-85bf-43ee-ad58-ad0ba613ed51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c919fa4-ddb5-49d4-89fa-e07243f87056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4229dff5-8e61-4112-8d4e-da7587ed339b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc3c1f22-4706-46ec-9699-42789b069a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff33bbf-e7a7-4d29-b71c-1b15a9b3c3ef",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ca612e-371f-4754-8a15-765b72be5010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c6af06-c783-4959-b556-57b37148f5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5933e31a-5f12-46bc-ae87-f242b61fd1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8c3b4fd-0069-495a-a1cd-cfd866256f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912e928c-8860-459d-9d0d-c54e07f859dd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de411a7f-2c6d-47d9-969a-fbe4abe9a450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6192d8c9-abba-4333-9df6-c8454ec6ec88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc75690f-44f5-4333-a9b3-aef39009df10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c3c078c-cbae-4bac-8bd7-5e6d6a2fc091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fe4115-744b-4b95-9d9f-f40a6a5a1eb4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cfa62c-9f89-4dcd-9940-bfdb638517c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6da2ec2-c75c-45c7-8e06-730b5433ff04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6298b4-52e3-440e-b259-366abfef6b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6eb23e48-9a35-463f-892b-6eb55947043b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754766e5-1c72-4e28-8e2d-c8dd6a960029",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196ecad6-5dca-426f-aa48-13e9f2ffdcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a88e8df7-c7d0-4d30-bfe1-f45b8fe67d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289b4c20-9013-41a9-b74a-b5450a0843a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "98febf31-79e1-4b55-9493-db325a209555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd18e247-2e0f-4709-9b27-3ceab50305e9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6c510c-b32b-422f-87c0-f1dd5dff15fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b08154b8-a1c8-4b65-b8ad-a2efc7f83582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc73938-65f8-4ca7-a49d-bf8f2c58e2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d065f1c-4d7f-49c5-9f90-906ca0ca7a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1d0b8f-4153-4f7d-b300-dbea22e747ac",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba772e4b-5224-4f81-b914-d8e6ff834bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b964ab3a-b7d8-4c25-ac62-70d8870b024f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b3ed63-7f11-4a13-b388-a77fb3c5d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "093ea3c7-8aaa-49d5-866a-40b45a535640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5754d583-11e5-446a-aa2d-8d8bebd9b331",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8579414-015d-4fa1-917f-72c2ddb6a178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f45e71d-2998-4fc5-8ddd-a67db546402f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b0bde4-697b-4335-b88c-ecc5c0331c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b852f5fc-0121-4bcd-ad7a-88f9ed1d3a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7bfedf-8eda-45c2-b541-7b5d59bff3e9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e93473-16ad-423d-a700-07ae7bdbc311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c3f733-15d5-40fe-9f65-81d0e559c01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570e9ba6-6057-4ae1-b02f-174ca47c1edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a67bb53-17a6-41f1-9a48-369b631ad070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dcd8d06-e50f-45cf-9384-2af04e9e1ed1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd4168f-4dc6-4d8a-8a6a-2448fa6b7214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a82d779-2687-43ae-ab20-7d566d24d142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0580b4ab-6c39-46a8-888e-53eb38d0f134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2d83f1-3403-4212-b838-e3587b0b283c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9bf552-60e7-4c89-9787-59193a01e9ac",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee80a9a-f2c9-4b7b-86c8-d072c39a2b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a267d6-2134-4195-8a38-725728277f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c285d42-88d6-44f0-a88a-1d4d1be602de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6883667e-670c-4be8-befa-1bc5a9c1dbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5166d31c-f57c-4736-bc28-ee77e1c17dec",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d18b6c3-d5d4-403d-8dff-2cb77ca6e435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff68b64-2134-47e0-be14-8255815c1a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50aff2ca-eceb-4ca2-96bf-a6233eb883fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05cfacf9-1176-46da-8865-d245368f3b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7520e1b3-6e2b-4fba-8d97-c0bb24a7f860",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8913dbf8-f7d5-44f5-ace6-a243fc2a8a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a815a21-30ca-47ea-82f9-63b9bc25f121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875fc210-35cd-4c7e-9ec9-c2bd39aeb7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e991c25b-814d-4c5f-a852-2bfd3294e671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b19a9d4-dc5d-45eb-a9de-d4d80cf277bd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e3c602-e773-4b0a-aa91-35a4d34fc7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05413a51-e7e2-49d5-b743-a2133827426c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce26ff5-0589-42eb-94ab-1b98a9f94cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9a8cf4-9f0a-4c83-a316-3cb8ae3fabfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dd469e-4dd9-4d68-8798-e5e745497a00",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfa2d44-9785-41db-8336-26f79a02cb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168e5b3c-355c-4ca0-a7ca-9b2c2473ea74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef42e3b-f31e-43ef-a203-6647bf1c100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51a8d1f0-f109-47de-adc9-a6376cd413fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2245c5b-71f2-41d3-8893-8223293fc591",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3615b1b2-8280-46cb-9dc0-390ce4ca0d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4882af1f-8a01-4ea9-818a-6888eb0de17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6e34b8-5779-4bbf-aff9-f9d8678e8846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b786ea2-f42e-4ca4-a1bc-de49738c3313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9696205-efa3-468e-916c-ac6cfe9680c3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b7a2d7-5de8-4a45-9e08-dec354d10551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bef1df-458f-4f34-a31f-2290236ff4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2078d2-6d66-49c6-b0e8-34056e269bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae271c4-1d1a-4726-b68c-5164cd1a28b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf5a120-f0eb-414f-83b1-fc7f93c4a13f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6856af-b8d8-45cd-b194-d81669b44472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8843b6-545b-4f5f-a592-2362254882dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f78a88-2d35-4834-9819-6561afb9644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcb0d4e-82b0-4528-8972-d88d541f4eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d0f798-ee77-4f2e-8b3e-dcedb3111c3e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93faefa4-d698-40a9-9b43-3015c26c7292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006ce213-e3c7-42d7-a864-824f40df28e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ca0414-397c-444e-8c00-c25a0a0d0f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82ba211b-48df-4622-839b-5dd0ad4e5a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804877e6-98cc-4855-a67e-e1ab17ad1ebb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3c67af-7b3e-4dc3-b561-404da2f976b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e17f13-9148-497d-9f65-66592200b0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262bdd7c-0136-4f7d-acb0-81d712175f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e56c6e27-ebed-48ea-84a6-09d417c4b2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c91a5c7-37d4-4bca-8ba6-4e5c0a250856",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9d563d-2e80-48c2-8fe5-6566e9df5933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df5d3a5-8b34-4a21-9404-905136a9d066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5636d045-ad23-4ff8-baec-5bbaaf56ae3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c85a10-146c-43a9-b6f6-bcf1b5f73e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faa75a9-8cb7-4417-8c6d-142ff5f58071",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795caec1-bddc-4a66-8841-b6db9ae437a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9623e516-3a74-47d4-8d38-c365af6dbba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2062c790-2539-4cf7-b443-2c868d089a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ed42cea1-b4e5-4907-ba83-48f10551bf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e637ab63-79c0-45f3-90f1-22f1655c6a5a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de201d0c-40ea-4c25-bc3a-fedd818878c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "514c4969-33fc-44dc-8afb-942474e9d910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3170c37e-ffa2-4169-a005-0b3b0b1ff6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd3c455-ba9c-4f8d-9dfa-4ace5eae1c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551597e6-7b58-4ad3-a852-94157e8684b6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce82b48-e050-4ebc-abfe-9ccd2bcc9113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de56c314-2d3f-457d-8eab-95e84da88d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c9340-30ae-44c0-a245-8d587c289b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fe651c-7ac4-4e4c-b8dd-05632078ebaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92099e4-4b65-4945-80dc-53668cca215a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76eccfb7-8fdd-4ef0-9a53-66d6bfbbec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd51cf38-f4e0-4f17-8889-4f5d878b8c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f60c1d-8f63-4e4e-a618-71e3943ae10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "452bd495-7b92-473c-92c1-d76ac76cdb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0ae82e-7062-4da1-874f-e765850a80eb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df73d9f-5e80-441e-a9e5-b72cae27d89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee5f062-b0d0-4d1e-8702-1676312c6156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acffe70-c763-4ae7-8172-9d202122b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dcd11bf-3a2e-4acd-9fcb-8088da96745f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17141ffd-4ae2-4f86-a132-dca3b0373c80",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1f05e8-3757-4f9d-b681-1f01e621fa23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d470ee5a-9423-4eb4-a551-3f6b2c3dc36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536e8017-dc05-48c2-803f-75c46f60b6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f43e162-d296-46aa-b95e-0ca30ecb0f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd8efa8-f0c7-40b0-b766-67f3d4567838",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705c8dcb-7c53-454f-9714-e4e319b33b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5fde4d-ef21-4c6d-96a7-810e6f682692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62226756-27b0-41ce-a13f-5c1ee835563e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "64e9adb9-19c4-40d7-b5bf-537076c3d6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50252328-6cb0-4620-8ced-78a811cd0349",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11f06dc-c8e8-4f1c-ad97-a677403df97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ed3ad4-7dbf-4cfc-b9d4-613030167f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811e4c7a-4ef5-4df1-bcae-f124209466d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "94046ade-ada9-43e2-911d-68bee092e33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b11843-3835-43d3-b80d-00a438c29663",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9ee9f1-6f77-4979-ae42-946ad6aa0289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6970a19-c6e5-4d67-8356-01591721e7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6de6ca-007b-4a26-b603-eb2af3184354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6112533f-ea66-4fd6-ba2f-c8da436ba9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04877d8a-1ade-4251-9167-226bfa5911d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97030567-3433-4fd2-8105-be7f62cdf340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040d1c04-233b-4e3f-935b-c4ba11cdd1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875556cf-1d02-4485-ae6a-8b7617c77f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cecb971-c08a-40d7-b909-105ce504a6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e9bc63-4ded-4abd-9836-cc6984cfe715",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e82d8ff-5cfc-4e75-bcf3-de9e08e16de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec286c18-6930-418c-b30a-ac646927f2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c27b3b-d17a-40f7-bc17-edd550b83600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6252d15e-f91c-42f2-8049-acc1d696062f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09282b53-6a3f-4c1b-ac8f-69dcc5b4e3a9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad63da58-f4bb-4ab2-b2c4-1cb1e25c6f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbddb384-f6e9-4359-aa60-6083906ae948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe7834f-e6f3-467f-ba3f-c1f8e9b5256a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a5fc88-d580-47bc-af03-056d18223af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ca4aea-a07d-44df-a571-e924aa2f84bb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4884c06-2214-477a-95ed-7c7a1e18d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38217954-a5ba-4a5b-be52-3b2ea2caecb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82f1289-8a37-4d24-abc8-15cb03a05162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1e5854-e8f5-4ab9-8811-88d18792a6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c0468c-7502-42cc-bd80-2e7303799eca",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4916bf8e-5a9a-476c-85f4-620d9bd18c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408a54d3-3c62-4db5-a957-d30e8fcca97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc04145e-226d-4a04-a5c6-14ecd6e8d566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be8f8198-73bc-42ed-9d0c-aedc52e05c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb074811-dd0c-425c-beb0-09b434d3f943",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccd2ca1-5441-4bbd-9304-d00acdd64208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1814d2-bb57-4320-82b3-af1b5f68e7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6789d0-5d6c-4433-8cc8-3f6de86a57e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d12f1f4-224b-40bd-87c6-abdee59dd083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0d4c4b-4f9f-4044-84f7-fef695ce7d78",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de5e7ec-be84-4763-8b2d-52015d1653d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30dd11f8-853a-4928-9100-ba7a2515d4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389af3dc-b4c7-406a-aa11-c2ba6dd78a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00226cfb-59cd-4df1-b4f9-e62161cf26c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82cdb348-ca52-4093-9433-e71251a2b696",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c847b6fb-f844-408c-96a6-230bf79253c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb09de5-c937-49bb-be9f-7609d6049d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8dd984-9394-41c1-b5ce-147f66efc930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0259c1f-3ad4-406b-b4d2-b47496b498cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11eced3-d691-4051-9eb9-2b1f22fbd821",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa6fb87-84df-4f9a-8eb3-e805fa636783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773293b8-7c8a-43fd-943f-9a51028e3f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fbf007-7be7-4eab-9c37-7af4e0c2e023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "322b5709-c009-4980-b4a7-a6f7a9327e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee94997-c75a-4656-8f57-c5b7ae0b0afa",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936e38d1-7a7f-4e91-a686-a9860f81c639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b34d3c-8bb3-41a0-ade9-1f74e6c7ef08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bc9178-139e-4d36-bb04-45359e521e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f686e88b-2c19-476e-b70f-a9ae85758b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78136c1-a455-400f-9229-5b7a43b5a73c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aa5c27-6401-4045-aebc-26d89c78fbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d20c3a-23b6-412d-b5ce-60773bc4bd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38687d43-6389-4c7f-87f1-1ec1e4826388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f8f301-82fd-46c2-8665-ca1c629344a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db63973a-d78b-4e61-9449-98b5adb0fd95",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03a61b6-fe20-44a0-a294-1699af20fc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d929bc-7229-48d6-af9f-67affb92cd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f0ea5c-b37b-4117-81d4-2ee6e499f1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08bfbd92-2f0a-4f77-9add-573a14cdd382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afc4459-d586-4f87-8ec6-b0d3c3818d92",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21326329-0091-4a9f-9412-2683f16fae50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d80e4a-e279-4696-97c1-ca0a0b40ac9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3137a1ee-7962-4558-bab1-fd7157dd8bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b7521e5f-a007-4a8c-9dec-2b2e738d1535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eaaec8-da7e-40a8-8d0f-b80d52e75f25",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553ad55c-50dd-4ccd-a9ff-b27d5c8f321e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f253924-061d-414a-8e94-f5e3d4ace0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885d860a-2d75-4ac3-b5be-e406aba043c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0369985e-e947-4f82-9353-1f57d746b3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c11b500-5ff1-4c7f-a7c3-2e5a03bb0159",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f646cf-929f-4122-bbc6-dbc786cbeed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b914e02b-6ca5-4a38-9232-8b9cab07fc0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcadb4fd-c147-45d6-ad63-082850cf3b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a17941e-e12f-4364-9933-a52999b63478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76f80b4-48e2-49cc-9e83-26fe2250454c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1999972d-75a1-41e5-b02e-1f1bdcc5f5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594a549d-638b-417f-98be-ab767aa73677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a00b27-ad67-4805-8b5f-b27099e0af27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d156c455-00ff-4d49-8f3e-8d218e8e9e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac834ce-3ae7-4a64-b7c0-f72ab7785036",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32642676-8f77-423b-b95c-6231aca5d99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9626481d-5ca5-4ebf-895c-412f917b1230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c169436a-c332-477e-a11c-9233a5b0ad47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "43902fa1-3cdd-4725-9a3b-86c7eaecd409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0da653-985f-4e8f-93cc-cb69a84fca55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffe052a-174f-4c1e-832e-16291062f224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f9d2e4-1a14-49c9-a99a-58b05562532c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe08da0-1254-4716-9b04-d37a5849691d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "242aa1b7-dc0a-4000-8d7c-cb08d09e4378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16fa886-cb3c-427b-a5d3-3adf7c7820cf",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa77999c-aefb-4f0c-aa81-c0715976713d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fca0994-7ece-4fd1-baf9-72adc2cd1c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af850eb7-7c2a-440c-ac64-f76d1bfa03fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfebfa13-3f37-4372-bca8-2ac29c314906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2097758-2c4a-4f4e-9a90-90d29772a027",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84d6784-37e7-4b2e-89e9-38298cc76b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc235aa-ad5a-4de3-bdeb-5eb9b19fabc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0d7b2c-ee4e-4e61-96c7-b714c540dee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "59b187bc-d288-453a-bb23-7635ccd29a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cff30a-20c7-4107-a489-97e24dba8e88",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5257e109-d3cd-4dcd-a9fa-3368620d46fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3032307-50ef-49e6-9f35-29617c0b09a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e2bda8-34da-4209-a5e2-567310e7f5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac55f84-4ef4-4a2d-8aab-251f41a4a56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1881f0d6-a0da-4384-a5e5-70e509c2014e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3490f898-a13c-4708-8d3e-1fd2f7d232a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5552b646-7ff4-4ac8-ba47-5aa0e0be8eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c742f30d-6fe2-4a64-a3aa-90ccf409fdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5c6f3e-7e93-4ff1-a5e8-e3e189eea451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4642f996-5923-4f54-90a2-95d19842f621",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906d47b4-000d-4701-8c4a-5072e5a58864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efac0b49-1993-4efc-946e-5842b6d22385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb8ac0d-4fe1-4b70-af36-73f1a0c64e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "202c1a2e-2ea0-4cd3-8c83-f6093a8c173f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ad852a-01df-4f74-aa77-65ed07195e22",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ef961d-2208-496b-a776-d26de2c2d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede935b1-0c0e-46fd-a3ef-b566e679b4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edc7d80-2b17-4e15-8652-5b1142b2c385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca19109-d90b-46c3-a8e2-13a2aba68718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da518b1-98ad-4524-a4e2-3f198a9dcb1e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68504cd-dcc7-42a9-8a07-95e3c3a33d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8e58f7-ecf3-4c8e-b797-a366fc7ca180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e34fb8-0963-4365-89f6-a0a4767caa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b58838e3-8dcd-4426-932b-640042d05cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4e76d8-72db-4c58-b97f-fcaaeb3a0124",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fa5fc2-1758-437f-91cb-546f1fcf7e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfefdfa2-da63-4907-9613-7845f56ac94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0463c2-122d-4833-bb3e-c83f45a35916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "594879f3-4536-463b-82a2-ed3e6d824337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3aa4db2-8bdc-4953-8180-99af927e1231",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6c4c6a-1a85-4e7d-8ada-3d5648b0570b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8495972f-5818-43bf-a3ba-682240d61916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9698e636-bb01-4bd1-8018-358658ab63ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f5a776-1516-4d56-964f-908e9e355b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58399ed6-171f-4673-b708-3c71fb998806",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa37493-5af2-4a14-b71c-0ae91e45c8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4e84d3-2bfb-434a-9d51-ee6842ee8f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27230058-ee91-4a56-aec6-bec40ac7e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff758980-f4b2-4602-95a6-c9374be3160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee231d3d-023b-46cf-b6dd-d29c5200bbf5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073cddc3-0005-4b1a-9bb7-099b7e000235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b22106-e29f-49a9-a87d-0afc231518c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac44abee-702d-4dc5-9950-0fcde7d80eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "227f2df9-e6c2-47f5-87b9-2ec76d58c1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128ad787-11e3-4b98-aaf7-0de0de6416e1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0677cfb6-a782-4e93-8238-3cabd5fc0e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2586b95-48a7-48d7-95f2-d65bb6390d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de4f709-d979-48ea-9132-c3ba30d2fa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "392c0014-bf73-4873-8aa0-1df3a307143e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf4034f-0007-4842-b10c-4d8c4235e3cd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6523633c-eff9-4ee0-bd5d-3e41c430f463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c065dc6-f107-44f6-8fa2-f89bfa98e48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68e4ae4-32c2-4241-8305-3ebeade05da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "018c894a-1bad-4553-981e-60a5109442c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896b5614-7ac3-407a-9098-0908fd36c812",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b57d27a-a580-401c-a41e-9539396a514d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea762ce-0449-4c44-99b3-966c08f48314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5217a41c-9c49-4bd7-935f-5af726e8f966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70cd375c-4768-4df5-858f-54b32be7ebc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdcdf1e-4abf-45ef-9dfe-d1e587f6e39b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd2e7fa-dcae-46f5-bf78-06b01856f184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bed4a6-b0e4-46d7-9936-4d1e2157fcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688f9405-b93a-4123-aa55-afd3fa3e0155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55c0a9aa-eaa3-48ad-9b7c-519e52db5b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4bb2aa-9576-4a0b-ae83-816924925527",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b15ebc8-c9f8-4466-9ddd-64cb40cff230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b0cc96-8b84-42b7-a523-e1b29ee6b993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5461211b-df33-4a67-9b3d-39881c335a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7309e3-06e9-45e7-a629-e339b9716a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332b629b-b9eb-4ad9-9b90-573fb6e45945",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef10b53e-b0c1-454b-826e-163bd3783ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1d0251-0900-4d43-82ca-24c40772ebda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559750f2-f4f1-45da-b10e-764b30cecc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b839894-c62d-417d-9229-9627faa9dc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28581e05-39db-4950-a602-c2023ff9cc2a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c941af-9145-4592-a06c-b83a1f877500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e334b063-d2fa-42c1-a3ed-278e72b09a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786de7c9-51eb-45e9-abba-b4d912514dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58655f44-cd99-49c3-9ee8-1444f80b2efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc5d646-8491-4b89-bf98-3bd88fb4e47c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcf4585-f670-40a4-923b-8f3f4e406092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6895b88d-ee99-4405-aad9-84858c484b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a088fe37-9b10-44f4-898f-e8fad8572adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9fbcf358-0f3f-4a8f-83d6-912574c86f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b05033-ef26-4500-86aa-f7ba47ac87be",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273b9851-2b1f-43c4-8537-3303149e7e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0958b2-20d4-4d3e-bcef-88b0451cb802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b7559e-477d-4c4d-811d-c646838d7811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5616e2f8-5365-4cd3-a7da-9d4ef9e426a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0f4a9e-59ed-476a-82d9-4ec87d59ab36",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90cd427-0134-4ca0-9524-981739502f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af43383-30c5-4176-9e50-d34f7d2f8662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48758fc-2366-4e1f-9248-7e64039fe758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf471c1-a9d5-4947-81a5-8a8b77f304a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09b9937-cc1f-4891-ab9b-b6aabf71e99a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ceceed2-04a0-42ef-8f74-db7999fbb035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff635360-ad3c-4ca7-adf3-894a4e055e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26d5b3c-fb81-49f4-94bc-8f65ea34ff25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf9eb88-9575-49e0-a52c-2d4617d81ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc7f61b-1683-409b-ac1a-c83a189f8cbf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a753f81-c621-49bf-a137-60f34ab05c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa23b497-09d3-4884-a93c-98d160c9969d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45312e28-958b-40da-a67b-cea722a33307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6a5218-8c2a-4ea3-b904-6ddfdec2fa41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d625735-8a66-4435-b28b-29330f5bdcfd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74229755-8569-474f-bce2-6ba7b997d3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0768949a-ee8f-4625-9f0f-7d9763b8bfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fd80b5-eccc-4d3b-b080-b4bca2a39e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4f6166-9226-4f62-88cc-7d86dbda08f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7217d42f-3af6-40ed-acb6-49ae7dfeab4b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46d19c2-224d-4699-86e2-c87105573b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98c04da-076e-4214-8c21-a60dbdd8986b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8df623d-0388-4003-9abe-5d150fb90af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41dc721e-122e-4e07-a993-ff76b4656025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f71620c-c49e-4279-9374-7e95047d2483",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7f6cee-d445-462c-b097-6bfb5e25fc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2d3686-df28-44f5-b818-4b1091a6ee0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ad6c4c-d2ab-406f-b05c-5935a64b0480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bec76e0-fbae-44f1-a323-39ba26580fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76afcc47-7e6c-417c-96b5-b38d523652d7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811b6e38-d474-401c-9057-576539f87cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7633ca99-453c-470e-8a2e-15a1d6417e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a456d578-27bb-4335-9e81-0646e4193b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "44c05307-2bcb-4478-ad16-bcf268698a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae6ca0c-39ed-44f1-9436-4baea2b80365",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5105975-1ace-4e25-9250-531ce2101e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2b0196-c65e-47b3-bdde-364ea36f4a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ebb07c-f9dc-4503-8d9a-542891ac3189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "891aac44-e497-481f-8dce-15da3cacb878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d05972-982e-487c-a5cf-af0133f3c97e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e2cdda-d94d-43d4-adde-a5e0d0fcdd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360a3d8e-edb6-45d5-b70a-155d6da24074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bbe317-f26b-4d6f-9c36-34feaef2d919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "edec17c3-cd32-45ea-89b3-952ca0492a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1996c2c6-6001-4550-8436-fc88860fa1d5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f559a5-c067-4637-89da-5dcb29467479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2790e124-8eb9-4da9-91d3-8822c7449d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd60196-fc1e-4f3b-9059-f37a4bd4bc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "068700cd-651b-42c3-89f3-3b2a78aa1f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f618fbf7-b4e8-4e4e-b16b-d904617b3c1f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2b3900-e261-4622-ad7e-e9f610bc0212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fa511a9e-c578-46ca-97cc-ca490229303c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb07781f-a93e-4e3d-b3c8-7242c1a01d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eddb2642-5bd2-4459-87e2-eff2988fa346"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9fe3e43c-037a-4469-9e5b-c3bc587ca295",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46d1d9d6-28ee-4fd9-8060-e4e46adadb2b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526a1f5f-9de6-4544-b4ea-f92f4dee2d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b018a72f-15f2-467a-911c-1881d31a055b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6269e5b-e8f5-4038-b90f-17a8d0bde372",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e438ba4f-65ad-414d-89eb-46b32bf5d48b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76ca3cb6-37eb-4e66-a172-05869ec91ab3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c610d0b-8209-41a5-b80e-10f0969803b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bdc4295-c5c5-46f6-8669-eaafe89a090e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f6c64a4-adf8-4dd5-ba63-f56d02668e0b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3b13fb2-64a9-42ea-a02a-15546d3a9471",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eeace714-61da-469c-b77f-b5cc5d9abf3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c897c355-1ca3-4fd3-bdc7-d241ad1c932b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4dfbf77-c414-422a-892c-c42f798c0b95"
                }
              }
            ]
          },
          {
            "id": "4298dc51-30fd-4e4a-9222-5ba4a8f5318d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62110366-03ec-4f17-bb96-36d986b4c035",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f3c222f3-304b-4d2a-b377-50f6ba4c3eea",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481a2715-afcf-45c6-aee9-f8e350e0033e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b6d6189a-98ec-465a-a570-73faea22ec98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d244c67d-9850-46b7-846f-5a2d0df49c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef57f7d-469f-49e4-a04b-51673825448d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "132989e7-d434-48c1-ac41-7de5bac8b46d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05465c92-4e45-401d-8d1c-6faff91e1a1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b56c3b85-b92e-40c6-be87-47769bc1d86c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85cbe7ce-17f4-4da8-8033-ecc2ac06e718",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41bfee8e-8233-4524-a454-adda69c90965"
                    }
                  }
                ]
              },
              {
                "id": "a38506ce-0ec4-4a03-9598-73c65c61847f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4daf62a-3f13-4aea-aca5-bd55997e7187",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bbc73d2-4a7b-4c8e-b4f1-8093507ccd29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72d7c14b-5e21-4b86-bbdc-9e0443a0328f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ecfdd00-eb7d-4ba0-8bdd-465000a46298"
                    }
                  }
                ]
              },
              {
                "id": "57ab91c6-1af3-4b25-bec0-26b7c5595f97",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98a1b62a-2ec9-4d0e-80de-57c552463ddb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3dae0324-ac5e-42b2-aad9-25af4fe8de7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ead58b26-b795-4c94-870d-3e6cd93c7083",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "686c31bf-dc41-4a69-a8c4-657119d574db"
                    }
                  }
                ]
              },
              {
                "id": "93709d92-a94d-43f9-ad80-02c79d5d9d58",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ccbef56-5092-44d7-aa70-47e056d592a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54cedb46-ec8e-481a-a411-60dfd7321774"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0721701-7792-46fc-9231-489a54e1ddac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "41459d0d-f11c-4f9a-b4f1-5dfbeb4ae1bc"
                    }
                  }
                ]
              },
              {
                "id": "ebe5c7a0-1424-43c3-bce2-141253a14613",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "893e45bb-d594-4039-b0f0-f3e6390351ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d2eda13-9eb0-49cd-b4a6-582e379c8d83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d1a6826-9853-482e-924e-38a6792527cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "66c16725-a658-4c8d-a70f-4c36463582f0"
                    }
                  }
                ]
              },
              {
                "id": "8e016516-8d50-4548-be2f-14991a5de0ea",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cfea728-b6eb-4a0d-9903-2aa71e9e1de3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e9e5f8d-0d2f-4d12-bb6b-8f27160ea98e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60e3e009-ad75-44fa-808f-a5dbe80b9394",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f85603d8-0ea1-43f3-84a8-901acff3e0f5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e58db692-951c-4a41-90e8-819af55d15a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11f81c11-33f4-449d-ad7f-aec89ba8d610"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c7ced7ba-c108-451b-874f-366d144aaa18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16bf4d8f-0b02-42ad-9ea5-dff6a7f118a4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57840dbd-dc2c-4397-b6a1-e4ccd5950697",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "652e36a7-0e1a-46ef-811d-085003b6186b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92f291f1-7ea2-4096-9c10-8bde5c25895f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f922ef0c-694d-4680-8e24-027cc76bb1ca"
            }
          }
        ]
      },
      {
        "id": "b439abd1-bbf1-41a0-a088-44171e1e3111",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bd0612c8-9137-4b3c-bc43-d14084b18497",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a39cd49-f29e-43ec-91c4-856a68dfe020",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b41bf891-7928-4496-931d-878cf9ed188b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6eeca4-33b6-43f7-bc18-54aa26e6a47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e294f336-fecc-4532-8358-3641da56a0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f42069-2f02-4401-a40c-6e07b5ba2d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47b493b-e88d-4b6b-b1f0-38444f0892e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6fd125-0b81-47e8-9a63-8e6c3ae3cfa4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bfb1b7-b759-4ea5-9316-3fd38eb7c347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ebac40-65aa-4906-af59-a1344dc73082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19aa420-cfc3-44a1-b006-43f16dbcc788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b1ca2b-74a1-4a10-ac52-7d45d961aad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b50b73-051b-4c5e-9be8-fddc22125b7d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a360496-a57b-4f51-9910-9e9de5edf806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1ac932-ee85-40fd-86a0-3e480c702752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f39d9c-1581-464e-86ee-bab13b79caea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40d1de7a-7005-4473-a3b3-c66c2daf27a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d79e687-3129-421a-bcf7-724076d47817",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f449ddd8-34ad-4129-bac8-731dac6fbd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6809771b-7407-44b2-a660-9f1293f00296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f280a0-d746-42d7-a8e5-b55c8faf31ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ce6e6e-767b-4468-a822-d19f7fb0b854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60df4d44-63cf-4179-8c9b-5278943f8b0c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8cc928-56f7-4b6d-a714-cbe845de450d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383d604a-a848-4ce1-8bff-aec10d2eef1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd0a8c2-b7d6-473a-9518-fca98202ecc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdec0cb-8554-4aaa-b9e3-3a7c4e8413e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e358d2-f920-431a-98c0-9ce89d0f7f1e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b8df5b-7b72-452b-9389-09d1d0464f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e714b73-ce48-430f-a7b9-8331d1a21d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0ca0da-6417-4eef-a114-3d4d8bd00e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d078aaf-e2e3-4bcb-b7cd-fe45c7d2aa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1835729b-7033-40bc-a10e-c69c9a95a0ce",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcfbe27-37a4-4c90-bd35-6c44bc226113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ecace8-2437-44b4-9754-72c640fa4feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bd6007-fe05-4c59-ba6d-230eb5c8c615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbb23aa-5634-4ce9-b1bf-f32856efeee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443cb755-1c4a-4306-80d4-05d6ff1a650d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec36a1b7-0f92-4297-b75f-6149ce03000c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83df4e07-b5d2-4a94-bc60-786987c631dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4b974d-deec-43c1-88fe-cf2aaba06ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42620ccc-da8c-473e-9eab-256084b8a2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66b940d-ea5e-42de-a770-03ab5cbbd523",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ed5b22-55dd-4a66-a162-0febf19841cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c15869-f8b7-4982-a02b-d52f3382fab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ba4b10-711b-4512-913b-7402176f7f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df6087cf-5c84-4e43-a8b2-1789be2d807b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0366db4-a846-42a6-b8ea-f4bfa5b27e9b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8523f9-ec55-4369-8799-910ed844a780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01aa3a1f-e1ac-499c-ac98-3d661a5b0ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafd1203-9482-45e7-a414-c9ab2ee51705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6d6bf2-3117-493b-b7ca-f440a2f07ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed7b4a3-1294-4736-b319-e62e4f3e1c84",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cfa96f-32ac-47b6-b0fd-039dc3492d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a110370-60da-4a50-b97c-68d2b217cf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63dab35a-97a9-4a74-b432-b8b2554c5b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c82342-5e3e-4541-b3bf-46f92e0c4652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29f435d-6620-47b6-96d4-2a46c6f74265",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60761a1-3388-4ded-9757-88a79a0f212e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c289a1-9cb2-41c5-a914-3b7a4650c745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f282070-5218-4f34-ba0f-e50cc0c18063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67fc4e0f-1387-4e40-844d-bd6ca80253ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee59698f-eba9-4c54-bf30-46b7b86d1640",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033155e4-12c0-4d11-aa5a-7fb2f3057a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fbbe07-1016-4105-89fc-c44b42b5ed5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83b5fbc-8c6d-45b0-b718-4a2a2013aeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bad85cf8-84f3-42ee-b688-9c06f3052eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9268b4-7b78-4db1-aa12-5c6aff04d844",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f30a7f-c103-40dd-be0a-333f0d93f5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b01e1c1-1495-4978-b7af-edcbf0595b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aae27b8-7e2e-4637-8207-4d2bab941d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3125ec-fa8a-44be-8f41-c46954cd66cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7353f38f-1cd7-441e-b189-d9bf8362bf32",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547c5745-99b6-4d82-942c-88f5a75f4b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaafdf1-029f-4d78-bd42-486267b8697c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e9e788-482f-4a97-b668-ee5d4837ccfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde4c58e-35ea-4151-9b85-b5adb3fbc5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050d028d-2ae5-446f-b831-594f15e4f430",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c9c885-ef3f-4b76-a1b2-daaecfa4ec40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5184d7-ee49-4b67-ab78-5726baa3a1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca42548-c583-4554-9cd8-a7a9c2cec6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc85d00-bf2f-45e0-bbb5-e79facd50567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94997540-f426-45ad-93d0-08c7db2b698e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649fbf5a-d371-4c5f-8cd2-2c74988fcf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff13caf-0f49-4227-9fbf-a80df5616ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afcaa99-b46b-455f-aaa9-27dae2ee30a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e67df0e-c087-40a4-9ab9-3da0e13e422f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725d2b87-b38b-44da-ba41-0fc5763447ce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d60dc22-e5e4-44ac-b197-cc16dce3e671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1fee8c-0f55-4028-86e7-51ff74c6a606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070cc18e-d800-4dbb-a6fa-8ce926b4e78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1eb2865-70f1-490a-b3e5-fbd352723c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae68b8f-8fa3-4721-9c3d-c1cefeb30ee7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e16e0f7-33ab-4bb4-8f6b-7f92c20119af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835daee3-3df0-4a6c-9990-5317a0e78498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f8cda6-4794-42c5-8e33-dbe088952cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38e4b0f-5d34-4ece-8b90-747e491aa8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24bbaae-df36-4afb-920f-caf942e0a72a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7294c76a-6d9f-4e17-8223-c093aa87ad0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cca98f-b082-4fac-b692-f110399c2949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa9f48a-520b-412d-9594-f2877e41e53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0e412e-6b43-4832-8922-70ecc7b693d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898de11f-6517-4bea-9d36-07ada524af18",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a43d52b-1547-4df9-aa04-18442f8af25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf3e55d-57bc-4d2b-a98d-e63cc9435929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a9da0f-9a40-42a5-9d8b-ca20ad536b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeaf8eb-7cec-4dfc-9557-0769d0843ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54ba09f-d960-4afb-8351-5ddd4a1afaef",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2203b750-1fac-45e3-a39f-1362949c6708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626ae0eb-b097-4954-8d0a-36b09ee3df6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036f1955-2bfa-4741-bcd9-08d22f8d0568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce09beae-8f8b-4e22-bcdd-34fdb1efed3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175cca91-64f9-4b42-84d3-01b7dfca27b6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e727275-da53-448c-952f-147dae089baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f11b21a-dce6-4231-bd6e-de26529fd1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b6ce88-ecc8-4112-9eb4-5522bc08df20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97c4e184-f0e6-4755-8613-cd041e194b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccc51ab-e137-4703-a02d-89c35afe30e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1c1ae1-1a4a-46aa-9736-90124b7ce63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1042b0b6-ad2a-4b9c-903d-75706ec07048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68db88f9-bfae-4647-ba9f-b741396778d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "030d2edb-9064-48a0-b5d7-76f9e0daa927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0f76e5-ae21-4645-b60a-6b89136140bf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9dcfff-4879-4a6d-8ef4-74e4c4500a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc1363d-ff74-4c53-9f19-cc1663c8fb86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8492a1b-7bd0-4901-9bf9-a42bb44e3b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c7e768-d0c9-4b17-929f-2a463a51a964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5f8a13-2ac4-4335-8148-c74267a7027a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7974484c-9aaf-4ab4-b39d-35f7550b3e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be46d12-e83a-465c-8ca2-28db009827f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22507efb-81e8-4590-937d-c26bf9f57f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3025105d-0f1b-421c-81ca-52eacbaa1796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faa9c00-cf21-45bf-885c-5731f20f2988",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e50a1c-c3e5-406f-9b8a-c1dab43f2c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f52d323-13cb-4378-9800-002cd84b1d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca88e00-ca56-4bc3-a001-1f93e927faca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "863bfc53-471d-467c-ac4a-8d7a4604744c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b470c95-3233-4684-8e1f-cd8e4b2f928f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a87cbbe-34e8-43c3-992e-201ff8ac1174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c677905-7fa4-4b84-b969-a98d98a6b56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738d58d9-cd11-496e-9da2-9e0097e414bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849bf930-c0a3-4bb1-968e-1a0828178c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4396bbe1-c97c-453e-980a-215473fcb6ff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96857276-81c8-44f9-8dcd-3099fc9a214b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53791328-d35c-442d-9d5b-1affe5ce76ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a18e09f-03a5-4cee-b005-60e484bd0fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "764a54ac-fefe-449f-9947-0364b417ee2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f2135b-b307-484c-b9cf-ac1766da36a8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a6d94f-938a-426a-a70d-c6f8c52117be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e3b596-78a9-43df-b505-921d8f759aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a997ba-c8f4-4062-a245-16f8e5024c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b311129c-6fe0-4f60-8d1e-8776f4f38202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2198057-f350-4ad5-9eaf-41138b5b0e04",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985e77e5-ab36-42b3-839f-46acc8f9d965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170d95bc-22c5-48d7-a7b6-fee6658cd6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fb3246-2f0b-44ba-b49b-0a4a8d64c113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bafe7cb-3df3-43c9-b1ba-64b873037756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8429c8a-0b7a-4877-9862-2dd028baadf4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8bf6ce-a7df-4781-9324-a7348696be8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f317c1f-f7da-427b-8c55-a0b6c59dda1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c4245b-f3b3-4422-a301-b9477ca8a6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1206a1-9f05-4405-85b4-1d95b8279ce4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f0274a8-216b-4e1e-98ad-1052ac7da7be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79ea57f1-5430-41ce-8f5d-276846743e46",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c45041-a1b6-405f-bad6-47deee38db30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "37f4d23d-579b-4356-a4b6-814ef9b87bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448e95a7-828f-4be8-a56d-86824c07fd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "827e6722-7e11-4585-9d87-1a2d3daef60f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc927993-7fd4-41ab-9d64-3cb2f3be7cf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c4343cd-c3df-4ed2-87ec-d6af1dfd1a99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ff110b2-ca42-44ed-996b-8efe7eb14111",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c3c9ecd-458d-4910-9f53-f1cfcce74ff3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b576da5-0c92-4287-8fb4-3dc649e75490",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "96a5ec79-5eb0-41d3-9499-7aef0aaf23f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34a7b5f1-ee3f-4c7b-a884-1b7545de2e9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd083568-3501-47d6-91b4-6407da33b4fa"
            }
          }
        ]
      },
      {
        "id": "a28a0e0a-ab44-4b49-a965-d4c0542ac78c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5b3d84c8-e826-4a12-b8c8-2d1df5308ba8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6439d03-6aaf-4b0a-83be-bc6ce3e3fa5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "585c90dd-f1bb-4038-be2b-abb5323c5dbb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351b036c-891a-40aa-b0ed-c4335bec519d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876ab64b-800a-4e38-b0b3-288778ebd7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd0c1ec-884b-47e1-8d75-e235799ecbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f90a293-16c5-4bc3-88fc-12c369b59653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed52e33-4713-4614-9ad6-e50d32ce2507",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d26664c-5ef6-4f65-a533-823405a0428c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ecf3e3-6f1c-4aec-805a-8e34cb98de0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bedbd2-1ea4-4c26-bcba-9c5b0ff816d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd646b93-a74d-46b6-84d6-68a7e4592bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c36fc7-b1be-4827-9f6e-76293817fe46",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f190fa9-1e66-4c05-9178-f4a46f21d0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6b3dec-36f7-4421-a474-130effe4761a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea61ede2-fb4f-46b5-a7ac-f756900e05b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f66f53-5d3c-4a88-909a-348cbbc6d328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f1c28b-0218-4a32-b746-e22f9a1dd0b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6571988-4954-4f2e-8712-b97129ca1880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ddbe56-8050-43d5-bde1-0d2fad89b992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0991ba12-a4be-4716-a83f-fe72dc383978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f55995e-8de0-4f4d-a42e-2a5d1282bd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb2db01-5958-4c89-a10d-df48d16ab1c6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ddea81-c23c-4700-aa3c-eb9d4e957ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57197ba1-a158-4be7-a798-855ec7acb96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e017c234-781e-4c6d-9543-ed3ad858dd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc64be0-5808-4824-912f-ff23d459959b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaf2364-5bdf-442e-b90c-75801dd2467a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445d00da-5830-446d-a332-ab239dbc99a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a832e34-af3b-453b-afe2-908e0baf2160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0125574-50b3-4aad-bfd5-3ae69fa986a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f841bacf-491f-4e0f-80c8-6d05a13dec7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ef358f-914d-4aac-9c5f-afbdf1b3fbae",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc3b6e1-db63-4ef2-973e-2f4aa143214c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d251e717-eb65-499e-9004-e9a642e1258c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efe102e-cd67-439b-abd8-111d84da4f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "be1fa797-d657-4519-85fe-10f5e63689c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2525ea-bf1d-4c3c-bf98-7047b0fe9703",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cb3771-4fdb-4eda-b749-a7c00d20639c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e06d04b-e02d-49cf-9fb8-4fed4709a2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b431b287-c987-456a-b289-fae8ff207361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d83fc60-8e05-40f8-b250-3f0696d1375e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ffb5f1-3931-40f8-91bb-ff7216f5452f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743b56c7-9686-4f36-96e6-b276bdddee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e1dcbc-29be-4338-a332-e3882bfe9cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5940f85d-462a-4f6e-b395-f99401a4fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "692df15d-f599-4352-9e58-174f7118c53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac671ef-3a53-4b50-9ac3-12a7211eb1fa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb061ab-f4fb-45c9-937e-7066b118e5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f318dab7-04cd-475e-bf51-5e6473721b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be4629d-09dd-4de3-930e-70f4a683d5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a90a2ca-9867-48cf-bfb7-d73b36dc4dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf1c8d9-5228-403a-94ec-108efdb8e958",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195dbcdd-4f5b-4c6a-829b-a230351834e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fbaa89-ffe9-456e-ac7b-35f5b7919d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efd815b-899e-41ab-8560-29be062af29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b6c45401-cb84-4a6e-88c6-0a3f3f28ace2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184cf2ad-8f00-4680-8daa-2728674a3f3c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f148ae45-e59f-4414-8463-7663ec64e2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9187ada-fe6d-4d36-baf5-b31c6f3dee19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b245952-1c67-4174-90a4-5608db251cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd6ea49-ca1d-4858-bd86-d2cc50056605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3799c117-d9df-4163-ae3d-13c5d4209282",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c808d45-71e8-408d-9d99-b8f44b146b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55dbc532-f608-43f2-ac3b-039fdb2ff534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fd8bbb-e2ea-4482-8597-6d184d0bd78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb6b64a-c2bd-4f1a-a763-f5132f491802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ee33f2-0289-477f-9201-5b9df1783ef3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be12f4a0-8ba5-4e83-8bed-a49ab307f8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164efccb-f70c-4a10-8785-8d2f57f02ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39924e12-36f7-4ee4-97a7-5ae961e0c3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6059eb43-783e-4c6d-a2d5-b0a642b2cc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9282a519-114a-41cc-b5ba-24bc71f94ad4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477f7f0a-919d-4c49-988f-084437c0fe25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940a10f4-1b1c-44ed-b15f-1ce5458a6b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f3c76c-9409-492b-9bf4-91cb21795ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e80ad5-2b16-42f7-8277-f3dfe6d791b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d63ea6-c886-40ab-9b38-0a07e5d166ad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a317612-fb7b-421a-9952-39df2b28a7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86db3d7f-1f87-49ec-a615-e1b3f9c930ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8486b08-476e-407c-90ee-dad12bf991f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "98bad7bc-9159-4cbf-8b83-a0b52090fe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb84c89-61df-474d-8272-183374a92e94",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493b59c9-4da9-46bb-9e7c-37c9efc124d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcbb314-5933-4881-ad1b-3e0e6e09e4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e5b004-caa2-401a-a7dc-3e3241d75949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc70ee4-5d78-4358-9858-02499b157991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a0de94-68b4-4397-95a6-815f3498ea03",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd3e699-e4c5-4b18-b059-6a27a1d4499a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0917c6-1a0d-4f5b-a7ac-6b065e0e2cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e10187a-bc1a-4857-b059-5f3c90b32934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "743e0f83-d774-4419-bee6-77fe0a4f7f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80fcc1a-e9f8-4636-8e65-4a2ad7793f85",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ac3018-59ac-44a1-a67f-b403e41f6955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0aea2fb-ce68-4e92-83ea-fcc21620b9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee34bcd-bd33-4e97-9c0d-3cba129cf2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a03912-fcc6-435c-90dd-75e215a96468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef2b9a2-9824-4831-9577-f292418acc34",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da07eeb1-fa1b-45d3-83f5-173f234f819b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f731a0a3-166d-4663-9c36-4eb28179bef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093e69d1-7921-41ea-971d-5e82ac08e3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25df9c6c-fa46-47d5-9443-0dcb5f1d912b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7850e19a-2fe4-49e5-bac1-712a1bec9096",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c34bd4a-29ee-4ce0-b41d-99411d2f8e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f9015f-65a4-4d36-810e-e5ff16b78135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28664530-c2cf-45b5-89ac-42a7668cd092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf9423b-54b1-4198-addc-ac277716d82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2669690f-270c-4700-bea4-6caf996f96c9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa911f9-cf00-4712-876a-8bba6fb3caa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243ed1e6-56b4-4f13-b9ef-e5b104d95012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd47f1c4-7adc-4827-8d15-450e5cf0d9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e16e00e3-e2a5-4abf-a627-35a65234fe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a280a38-2447-48df-ac9a-f392ea523748",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81243f79-cc8b-4878-a9c8-2ccc3f54bbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434e5666-ee82-4571-bc99-a5069ccfad5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6193427b-e194-4f18-9786-1b9bae956791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5e7a1e-5ddd-4535-ab8a-3fdb07dd9fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c01b79-fa88-46e8-810b-7f2e4f6e47a4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0dd97f-f856-410d-b4f9-bd88a8bab245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6e89a1-1d52-4a8f-b181-c85410a215c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae380112-d875-4003-a24c-565150e35033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e69f49-3149-425e-a17c-81b2fab6d41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ac7dae-8813-4a34-ae5f-354a65d43b59",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8a01bb-abb6-4505-a7df-031d86b0276f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f886e048-20ef-4f4f-8ce1-86ac3f58d92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80344514-37c3-4974-8eff-5855908cb1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7f0fbb-1b0e-4d2e-b023-b6d24b463cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3853a8a4-95e7-4c2b-8a29-30879c92edde",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335d21bd-244f-42e4-85bf-8f0193223fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8603f7a-df66-441c-b30d-3292c695507b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc74d1af-b6cb-44c8-ba10-4adca3751036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22ca6e2-d811-4075-b98a-b786a8736bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08025839-d34f-43e0-9a46-cffa903fb45a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c7f0bf-699d-4097-8463-79ad48307384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce34a6b8-c1e2-4ca9-b6ce-306db011b925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c06fabf-8198-4b9c-ba67-f9ec95ebdb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3b21c7-f5c0-4153-99a9-8e56df815402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353a2c72-39e0-4aab-8a18-e184ea3ace62",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17d9580-186f-4832-802c-53627e1f73f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1c2fa7-88dc-4e41-9a7f-b5b07212d410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7d6ffc-c2d1-4bb8-8f0e-f60b898e80a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6abc95cc-56d0-4561-9566-5d345c08a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0a1a80-0634-4277-b2a4-1cfb803b91ba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d0accb-d5d1-4ce0-acfc-6393b142a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b297bd1-830f-4ff4-9c13-83a74ee9f4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61f5e7a-3f40-4bc8-b9d6-e9cfa3b9c835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d74b5c80-32fc-4f58-bb41-5dd2ea666ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba69db2b-2e2e-4728-b7ae-1270703e037e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bf6ff9-148e-4b00-a0b9-0d03d0e24f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0619226f-155f-4c75-b36b-04e9b951279d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc73ad4-9f69-41d2-b0cc-edfbab78c394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "883ba286-957b-4412-9e0e-68ef28754140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e096f61f-b1dc-45ca-8466-ac539c5ba92b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985a781e-4844-408e-b060-e22b87b04777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc764e5-ea95-44aa-97c2-842cd20cdd40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1664e432-38e7-4714-9680-24ff24e71200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1995f76-22e1-430c-bafa-f45f622a72d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f468b282-b1e1-4713-bac3-4ac5cd4342ac",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "330f60bb-bdf5-4d89-84fc-2ddae54f45b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2077ae-60e5-444d-a16d-1ebf4735b34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faffe4b2-f738-4e96-bb1a-37fba6166591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cac3f1-17f2-4078-b769-44150d1287a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee680f1-8914-4a29-917a-87d3ffad7b67",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38096c3-aed8-486b-8ca2-d1149d2a18b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c676513c-035c-45b7-b17a-49677db979cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4017457-396f-47a3-9dc2-21dcce028334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe9273c-0f06-4ec7-9a77-ffc41b24b6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef18880-c087-423b-98f6-d5b9a1885011",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bf18f0-7f46-4fba-9ebf-c0d3edcfffd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c5ba97-e706-4190-a65f-7961da180033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd3964b-ab7c-4a9b-818e-9f9019d63fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6da221-c4e6-42f9-ad36-af2b3d3c1153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5922bebe-6c3c-4f84-8e8b-e418a2fe9d89",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13409a7b-ac24-4479-a685-eb421ad15ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b750f4-7402-4d86-9aab-c17d7c8cf5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12395f2-9396-4861-b8d5-7da0637452cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1116886b-ac25-4ea3-9f70-099c4b59106f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6649b641-9117-449b-98f5-c9f177e2addc",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc44fce-f1c3-408d-9b13-5eb7b43126b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea40446b-e3af-4a98-b23f-05552b36a99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b66c311-582b-471a-b28e-8aabe0741511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "124b2184-9b10-4d52-8843-4ad88ba53866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebb155d-0d76-4513-9906-855ff2fe0c1a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f32ec03-6dac-4d8d-8b0c-1b2a423d48db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872f4897-8114-4ed9-b492-722ffe2de2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ad15cb-faf8-42b7-bb79-3aaacff4c375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d956f98-abc9-4738-becb-7f599538250c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "708bf0d0-a4be-4d36-a7c7-a2c0225d91f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a244c86-2e08-4435-8134-b043b7bcdd2e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bad6f4-88b5-44ab-a561-9339fd68fbac",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c17ddd29-6f14-4592-b68a-15b50cb92878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006e3d63-5d5b-427e-86ef-99fb269264cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "438c915e-2fb0-4165-9444-6fb4a18be213"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ef385dc-91a5-42f9-bac6-91d3458554af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "684e4f6b-e9c3-476b-9c07-62f4611ed005"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0ac5efc-c4a8-4e17-8408-da8d5dca6197",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92acf81d-0baf-4a95-9d6c-343e1550dda4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c520f68-211c-4d94-b9af-91b5e12c44b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90cc2067-3c6d-4fa0-825d-e3a6e75906fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6630b00d-5cc9-415d-bf94-803cd3a18ba9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e612b6f-f66e-45ac-8b89-c98610e6ab39"
            }
          }
        ]
      },
      {
        "id": "6de3aa45-8104-4f62-9fd7-0038054ea2b1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9c79f38e-d9a8-4053-93b0-8814868415ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83b6f86a-14bb-45be-8340-fb9f9e6b2a21",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db58c707-7b90-4a54-b100-62cbeacde516",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ffeb01-1b20-45fb-80b6-deb62e77baa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba37e318-acc1-4ba3-853d-a606fa1a9c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3053f21-d594-496e-9e61-947c0e653f32",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869cfab9-bd29-47c7-9560-6ee8e5b54b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd623a7a-9d1b-47f1-9756-2cd7b4226c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae29baec-8278-45d9-99b8-426de962e7f4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00fe1445-4d59-4dac-9731-2e69b03bdd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9244c0a-fdb0-490c-b2d4-5b237b4dc293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2049439c-0bd9-4f7f-a193-bf80365388e9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc612ad-10d8-40d2-b0eb-bc5c687f2057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb21d07-ae79-4b0e-93b1-26eca13fbaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c8c430-3bf7-4fea-ac9c-50da9b556b68",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fceab7a-83db-4b13-bf47-c9c3a4a555ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247c9d7c-ab40-4958-b8cc-44acfd9b5c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d9cafa-377d-4aff-9537-29e83b757f7a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c4954e-e115-49b4-8d5b-8fdab3e1f51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4512fe-c051-4547-9ce5-7107c0081e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09af74a0-218b-45d4-846a-b5a14ef7ca21",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f075403-5795-4fd8-97f2-90b922f6447d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184a4b48-4125-4b51-b21c-ea2fef313df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286314d9-56b9-405d-98a9-76532dca80ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd5b191-7d58-43ca-a0b7-711929b96d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b29ca7-2305-4c76-8af7-bf829293387a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048c522f-4c79-4987-b94c-56f0ccd1de6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a6d0d7e-12e8-4b88-ba60-f9bebcc2bac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9eae22f-1bb0-425c-95f6-29952a36b7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2be4a7df-ffb4-40b6-a606-171a5d01f936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988f0c7e-5fbd-4b60-bf6f-d31d14168f27",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db89cc88-213b-4099-8e47-c3e584066985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c96240-e47b-403a-83cf-389a08a847f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7ff1b8-41dd-443b-a8fc-1bd6486bdfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f120012-ac32-4be2-8152-3a5c023ae489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc169b7b-d142-4182-baf4-aa464e0c4800",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53278941-947b-4255-8870-4a8bdeb19cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1226c4e-098a-4c61-a912-3b32d2bd142b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305f2c99-ef7b-40f1-b30a-e6f26f52eefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0aa953a-6c8b-48de-a779-817cf7577fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639f1b1b-36fb-468c-a649-a06689b36c0f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5116b9a-0503-4ca4-adc7-2d52c8531865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac25aa0-3bc6-4e46-8d32-100f9079dd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc9b174-16d6-4e9e-87f0-74ba7736a6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2b7ed7-c1ba-464e-8123-cb6f0e2371b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eb42b9-5009-43f8-8b87-c14c83ba52ad",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a633179c-19a6-4108-8fd5-4107c2999403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcab2f52-eff5-48c6-9698-f3c3423a482e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9221152b-73e7-4816-8ecf-49ebb0545bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a8dd1a-b4f6-41d5-b8c6-f15440dde61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c0b1b3-a7cd-43d8-a641-f2290f0ab250",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fe5f38-ff25-4ddc-9461-2eb864f4e1ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbaf0681-f7b5-41f2-9ee1-655803c6fc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbb6467-e487-4e6d-8dc9-30cee304fb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c581150-3cef-44fd-ba43-fb213c48e4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf5678a-e6fd-43a2-aa20-b3c49b7fa895",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40631212-b6c5-4544-901d-7326ee008176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b02a97d0-dec9-4d69-9f81-4f6266704c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57a3bbd-531f-4864-abc4-3fc2fc66d646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736b1ba2-c4da-4b9c-8c62-8fac8d293111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc34887-fc16-450c-9a96-00a5de60acc8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46753821-e536-4268-bbf8-8db160c2e025",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52dc93d-9c7f-4612-8f11-0a8344f33cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048ef152-cbba-4e9c-88bc-c890605b2e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5988a96b-a730-4a79-a0bf-fe21f1fc1e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef8b990-5796-4084-8061-8f95418fad13",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1486c9f5-c10c-42bf-a4a3-e994ede7262f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47ee1e3-4bd3-4095-b2f4-6ec22396f92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02f7fba-0b46-4ef5-b453-670554e2e30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1352d0a2-6826-438d-b5e5-4af49e8f8be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79d6357-788c-4dda-884a-32c4d9365041",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ce2633-5411-4d58-9c45-fc491314cd50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbdeaa5-8e6a-4832-86e7-4d30b812f708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516e7cac-7c77-46fb-ba0c-474a4cd35950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241b02df-a226-40d6-a7f2-b51686dc2790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61228de-2054-4dc7-aec3-4e4eb5f66f7a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6d31ac-9de4-4e35-9667-b60ac861646a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342d4022-3219-4b30-bc35-69c7c212ae57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff5bf41-e3a2-4227-a954-b64eb91221b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20979656-b4fb-4602-9789-c790e419ee52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ef5dab-3a85-4d04-8aee-4a1632b6e8a5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936a1ad5-67e0-40e1-8544-36bde109a053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a0621d-928b-452c-8d2d-34cbe7904b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c665bb05-7120-4260-8947-a63ea458fbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66065382-f8c8-4312-82e2-5a4c3ae02df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b3db96-7fb3-41ce-83a2-c675541994d8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4c80e7-c262-4002-8f80-9c97b7b6a3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2e6db7-3f85-4fa6-bf1f-7c1fe8340daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1feb203-e902-4a17-a36e-792b9a70cbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f525e8-173f-4295-9360-9fddcf45871c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c9229a-035e-4473-bb57-3d74eb730c38",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae0aaab-a81d-4ea9-bf7b-1782538ed5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8385e155-9f08-4b16-9e1a-b359346991ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c478c7cd-f23c-407a-bf24-b1d3ff7a49ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58c6559-053e-482f-a83b-b1be0b9bdc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21af3a8c-9adc-4d92-a7e7-d2503865e41d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7e148c-e24d-4aef-a64f-1b306e252a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cba2e71-6723-4078-80f4-41a2dd03b7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb28c023-218c-4cd4-b78f-8ebffc78848c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94eb698d-1bb2-4ddb-b1c3-0006e4cd6ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab51066a-6f56-4203-817a-b3bb2ed2ca4a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493f2e52-5e0c-4db2-9d29-51a806e676e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a7c246-47c1-45de-9b9d-c36c13a0a835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0f1e5e-fec7-426f-ab47-096dd2d05c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0048ef7f-0403-4704-9c39-9afe02845cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b950a5-3733-425f-94f0-09f674154d21",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcadae7-580a-4025-be24-822925f8f85f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a12a2fea-b881-4db8-bf04-f3b82efa8710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1581742-c179-46bc-aba0-23438cd09dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d7274e-bb2d-4e51-b016-54012f6e9afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bc673a-37cf-4123-9529-7c3957c3aee2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2156657c-8321-488e-a242-0b8f0fb8fe64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e65690-7bb4-4b70-a8ed-7fbef756600f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d96c9d-3445-4876-bbf8-76ca8be36a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f5b249-ecaa-475d-abfd-4cfbe9133e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693396d7-de0c-4bfe-8db3-5fde446e3552",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af47e75e-5e4b-46ef-b71d-17b06efd37ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76c596cf-1619-49b3-bb52-ed33d7a77b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4eedac-35b0-41ab-9dfb-4d65a78b7204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8735ada0-291d-4dfa-8074-42faef77aebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0768ef72-a5ee-4d32-a4f3-6b7e60dbd11c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cec2f8-0446-4980-955d-d5f3b06cc859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6884f89-9504-4cc2-9589-d19b298c4447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ba5d06-fa7b-4e98-bd16-c6878a85de8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a102f0c2-55c8-4221-bd54-e2c0201de633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c71c3f-8944-45a1-bac7-698e78c1db65",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45de005d-e293-467c-bc95-060165691789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d88bc3f-7e49-4f6a-8ca7-441a6a434943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aebcd28-b834-4b78-96ec-557536f1c74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc0adcd-5582-4752-a3e2-7069dc8c6113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e580a2-2a89-4fe1-acbc-c6c8c0052ee9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b292f4f2-2f56-404d-9762-1bcfe99d5d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c83ea54-4243-4976-8e48-ce300cd285b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0a0532-00ac-4411-8329-b7a21994a389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65dbf99c-4fd7-447e-9229-92d2bcd950c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1131348-8604-4ff0-996b-ea509f247bcd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7741897-1bdc-45a5-83f2-28364dabd9e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e84596c-6f95-4e27-a9d3-63bb97fb1603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed12d31-2322-49ca-bbd7-8067d9df42da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cc9bfa-a08e-4ac4-b2e0-7496028b1411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb88437-cde7-442e-9d63-0352751150eb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a438aaae-eaa8-4aad-865a-30cbc9a1a770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7d1669-0a4b-462e-a434-d0ac91d9deba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bfcc1d-7b80-4275-83bc-b89eb7a2c8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971724fd-1cb1-4dd2-af41-38255034e1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf536c9-e4f1-4608-9f42-97818cab2f2f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab91e33-5146-4b73-a122-e9e1b6502b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74e831e-5c93-44fb-b89f-4fda9b37f403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3abab7c-fc65-45b1-b606-93ad2a84010b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64d69cf-8364-4a41-80cd-2b93be9b74b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6516c490-9bbe-4a35-b279-f2b6de344ddb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a8d25d-2736-4642-85c9-6f33b0bd8f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b31f769-5e5c-49be-81d2-05858c8b0415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1a3fb8-fa7d-4aca-b286-10e09e919383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc005516-8d52-42c8-b0fa-c01a83ab1c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f6fff3-c3d5-4cf8-846c-b9b1bfd61fd8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c8b87e-b5a5-49a1-bbed-874660e3e2c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ef6299-c30a-46e0-9a62-80272623b2c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b0e53d-15d1-48a1-9f3a-5d69fe9973fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94acadd4-e39e-4e55-aa6e-dca8e03fcbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05f972e-056e-4ad7-bcbc-33a547906485",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7106d24e-5fc4-4c32-bec4-30ff0a7d7e1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f81795-662f-4102-8482-7ac589c6d7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b16e9fb-a114-4f6f-a14f-515e7a8dad09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7b05ab-5dc7-401b-98d5-691fb9dc46fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea300084-4a9c-4b59-a611-99350c2f2535",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3439a8e0-725e-427d-8eb3-538e8f44f44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8836836f-feb3-450b-b590-b6feb92ffd42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39370c52-a984-4ec6-82b0-cdce0acf6257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d22596d-856a-4f59-b030-f6c6e9a489f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426f59c9-4fa2-4800-9842-cd543721e789",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42c2c9b-02ff-4996-8db3-de4b447bbb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c97a5b-63c4-498f-9d51-04eb43953730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24350bd-e80e-4e0a-99d4-344605670657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5c6923-3009-4123-a4d0-9046cacf49b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50cf5e93-f9ce-4801-9a49-a725579a58b8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c416cd9-fa7a-43eb-b830-bd763bc29d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a58049-d37e-411a-91e2-a73d64083ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f40626-b100-4cf8-a481-455df7967f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd64f9ae-0869-45f3-92a1-6ab128526040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5660af0-4ce0-48e3-9410-ca4430c42aae",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8e56df-cb54-4205-945e-9e8a512ddf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d295e71-c625-4dc9-bb3f-0ab8be1df226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0378e10-9b83-487b-aa5b-41ec36465d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04fa46e-2012-4147-b050-afd265cf2531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0948c1a4-104b-496b-a1be-bd2399a6d34d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593bfdf4-de6a-45a3-a087-1e4eead87e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1723fb9a-4201-4a74-9247-762f9d982287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff103062-bec0-4285-a5bb-39f5f64dcc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84930887-9a4f-4f7b-9998-20f27a8dc11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb68240-902b-48e8-9f16-881fae182985",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8f38cc-0173-48d0-8be8-d8fea92e0d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c1341d-587c-4713-86f9-0d852d57643b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a221a4d-f4d1-4ecd-9270-40569ab02ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59578c99-d39c-42b5-8c4f-fa51f7970603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e664498-275f-4a23-bbb4-c85cb1f068b9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512553fd-bf66-42a6-b938-21017a4ee94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f99abe-2027-495c-9d41-3cfd49d84cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12625fea-cac1-4d9c-92d1-79cdae022d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f668f18-ecc1-4599-8fdd-b051bbdd3b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0860ee1-8e17-4400-82dc-49e8360b38fe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ae2735-4d96-4d7f-be64-299dc8171445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce8e73d-4c5c-47cb-9c0a-a956219b73aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15c3513-2767-4f8c-98d6-d99d7961071d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fa0161-3ed4-47e4-a03c-e64deb3f9b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93cfa1a-7a99-4023-9baa-95856af0459c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc96c2f-5d8b-4ba4-8c2c-07897a4dea4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8964c39c-ea37-4001-8327-6d032542fc94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2d6922-1eb7-43aa-9268-a79d7ead0ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d25f84d-104b-409f-8230-90997069ed58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e4bc2a-e493-4a27-85b3-e83709c7bf88",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95772c65-a908-4806-9124-3390ba19a40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b86c83-a6bb-425d-baed-aa87344593eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68271880-c9fa-4e3f-b0b2-f930f94fefa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a080a6e-b92e-4766-890c-b8c8617423de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205b870a-7cfc-4f10-beb1-adb11a9c20ac",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd46dcef-a1e6-4882-90cc-d15742e19f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb59350c-f3cc-47cc-98cf-2837c145cd7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a938e966-4e32-45c7-ab51-8091aa86074a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ae4d3b-32f3-4d49-8d23-41745c7e316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e28cb32-e636-41ee-b539-1be610593527",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16eb6918-70ba-486f-85b7-24e3728ac025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38fe3f4d-c1e5-4cbf-af6a-b1deaa07acc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7841bc-3521-4a8d-b642-8f86d12a8e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdf6c32-2856-4f41-866b-61ee676f36db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ddd0dd-7016-4482-9b55-e8a84ef3cc96",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c9cfc8-cd57-4cda-83ad-3d3ea7ba8c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d66a1a-4200-43fa-9681-14cd3cbb5f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f31dbe7-4060-4bc2-beaa-637b2671063b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25114bd2-3e89-48c3-a22a-e31cd04384f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbdbc65-7d50-41d2-8305-0e1ea03e6351",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a813bcf8-6473-40a1-90ba-ea4561549f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf08e93-6638-477f-a05d-44ee34c4f9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063d0d84-d59b-40ad-922c-dc78db0e19f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c60cc6-1425-492c-a4f7-80018880b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f528558-fa30-457f-aa24-5476cc0af7b9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a50314-2941-452b-a9db-f8cff3333332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29adb19e-a047-4e71-bb59-1309c73b0b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5555ecc2-b21d-4b69-84c0-b0464a26f490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1cb6e0-c5bf-46f5-a170-855eb450a846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05eb1581-ab93-467f-a822-665404d64679",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8f6299-662e-4b91-ba64-bf4d85b78f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9a9253-565a-4166-a22a-e8dddb84f750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f94323-1771-47ed-a883-e0082fd2f51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8b9175-6c01-42fc-be30-e4c347a59dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2355618d-b8ee-4da0-ad97-e2eea93c303f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a193b9-5bed-4909-8975-94b5ebd55746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4f27bc-3e00-4d2e-a93d-0d841ddca4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2137d0c-1694-433e-8ec6-a404660e9055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a5f21c9-9e9b-44bb-b1d9-164395a26de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2e9150-d5ed-4c90-851e-81cfbaf158f5",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b21dce2-719a-4e07-9056-dbed83bea962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d8f2d8-12d2-437b-89ec-c8e73e980699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ce606d-7a10-4f23-a910-5de77d7be252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c86476-b984-476c-bd33-e7cd8a04c3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bea2ae-597e-4238-b9d7-4398849ca050",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c2f28e-b791-4f80-8df4-c6153ebbea24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849427e3-1be7-484b-a6a1-c6b7345eaba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed51f56c-584f-42d1-a764-aa7734e283c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5364a27c-169a-4a22-ac52-374e74997c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0d9948-6089-4109-bd52-d449b6cc58bb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855925f0-5585-426b-ac6e-74e5e353275d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93aaaa39-cedd-4b28-b43f-011ecaccf78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9706fe9e-cab6-4820-93e1-d97e77fae43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c77d8bc-87a7-4c7c-bedb-a2e8cf45bb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc6e1a7-518e-415b-be70-d65041288e40",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c54b58f-c913-40d5-84a7-b3292dd8143d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67d540c-392d-40b0-b8f1-a91bc342185c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c793a32d-359f-4689-9ec1-7b848d141bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816c8cc1-05f2-4fc6-8fe5-3f0774ee01cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9382d984-ae8d-4d80-be8b-18d71c8b9585",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d4410b-6760-4325-8697-118271c7c932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09babfe-b71e-4389-a290-086168049cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061e2b9a-ec59-461e-98b9-176042ba1691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fb21e4-4ae0-4d5d-a971-93430428a141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e66b07-851b-48cc-b723-8d38fe05ab9e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8c648a-f676-496f-bcd8-e6bed63113cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "575f51fe-7060-4aa2-b66b-bcd3e92fb0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df97817a-35e3-4d01-a208-79fb94a3c5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0a940f2-2f4c-4f53-a36e-563c9ccdcf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12dd98e-3a99-4dc4-bb06-3921a589dac8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c738fc-15b8-46fb-84ab-39d880728b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f2a4be-e969-4720-835d-efb723d0731e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271c0b28-07eb-4002-9d30-649c03a946c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4ae287-1beb-4f0f-9dce-20b209a91a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206d8596-d043-4141-a8a4-6c4be816e29e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a2c4a6-00d3-4be3-96e7-24a26d42497e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "043043d0-336f-4e2b-820e-d00b0e2e5d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6f5827-638e-413a-89e4-7779ca269023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba43a4e-9a4e-45c1-947b-3ee925190e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7fb177-c88e-4ae8-b4cf-7a66abb9eb1f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ed42e3-4b61-454a-8ad4-3b7fde9b6d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4749afa3-ac03-4491-847c-d5cfa87bb943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda21fbe-9b14-43fc-807d-330c8bccb7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8889ca8-326d-4eb1-89fb-3302a541c4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f0850f-8efd-48ae-8dbb-51cf4bfaddbd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a902f343-bfe4-4fe6-b6ee-7aa6b8298445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbeb8b2e-e218-4716-8be9-b6652521237f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6c01a7-05e5-46c8-9438-19063efd7a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4008969c-3a3b-420d-a0de-bbbcd4546d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6885c08-c69e-44bc-86f6-c75a0e89f908",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd307b7-abdb-4c00-8424-b96b484ea102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a5206f-b55f-4629-b517-5de64c78b3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0526e6a2-97af-4c16-9a90-cdf856e78d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab34b39-d09b-407f-8382-2d20e075fc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c474e202-be4c-435d-9397-b35005c76118",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627c6ec8-50e9-4b1c-9177-4dd5acc9972b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e7cb35-9890-4b2c-a778-b0d2a96ddb55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b623c98b-a769-4c99-b1ca-694e1d3d75fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d541762-bbc1-432f-b734-5a3527f24ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2838757-0030-4919-b2d4-89139491eade",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68838526-9a24-4400-b5f2-97321f35ee6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee7636e4-3160-4295-b4a7-1fac9d18a4c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ff0c25-0337-4761-b512-a9286023f6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71dca6eb-656f-4b54-8d58-2504a4f7080d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a441634-f890-496f-ac72-f2d5ade3cedb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd034e10-a538-4230-97a8-e05582b20d1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e181eda-a9f3-45c8-9e1d-07e63194300c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4af743d-2fce-4fbc-a754-fcd3ad7c48ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0c63d6-d109-49be-82e2-27e354be07a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14e4813-2e5a-4b57-886f-9b2b7c93d038",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c1b56d-f8ca-4961-948b-9f4e98ecf066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6786623b-97b1-41ab-8b29-59bede0c9d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fabfde-6d71-4071-bf0e-32a0d0884804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc01a2d9-76a3-44f0-9c28-7b769f3097af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37af7ae1-8341-4aaf-bb69-cc2d34d9aa7d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395e5277-30e6-4fa4-8c16-5cbaff423947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff4b6b2-de2d-4b31-8c64-6252b6da01bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119d51bd-c81b-49a2-9a84-d05b99e7717f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119b2cab-77af-47aa-bb9c-f28eadcb6e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98919a4-79d9-4ef0-8457-d10c7e58ad17",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4231fd9-c977-42de-941d-437b87b92e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac9d42fc-fa10-4c58-98ad-9d3d080a36fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1cf9dc-5dcb-47d6-8e80-7e55235b4b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f41ce3-16b4-4738-b690-3d0cadeec96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31250310-ecd0-4b52-83f9-300551be8275",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6320f9-a91c-4a46-a2c6-16460473faec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eec5e5c-866c-4ef6-8671-91a2eebe9058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4bf8e2-91a4-4df2-88b3-a31d631b11a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46e2cb5-1e80-4d36-b22e-84f567b4af02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696ea6f8-c070-4ff0-82de-dfe69c6679fa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadaf65d-8372-426d-9aa5-532a524120fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8524fbe7-6c42-4d69-98c7-a2f29d1895bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5fc2f0-67a9-4e78-acd2-50253dc445d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf57b80-daca-436c-885c-b4b886dddffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbac8fd-2c47-439a-85e9-ce51d38100e8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883e6fa9-c655-4c79-b73a-e10386221072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9150b83d-0c43-46a9-a64b-b334e824e1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d74c9ae-e360-4f9c-81da-4693ae05d5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d03595-9597-4f8d-a21a-ec38ecd659b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24908746-2080-4362-b985-8e9bc857c578",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c22ce04-8099-4bfa-b80a-0943c8418d01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21195253-0053-43e2-9fb0-0025b9e972c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2817c39-6fbc-464f-a84a-7dd0689e02df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d55ab8d-bba5-46c6-a835-3d3f2ab19fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7929ca6-dc54-42fc-bf0f-2eb91114f5b9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33af50e0-6475-43a9-97da-dd998950fe9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6036af26-7143-4fd3-b881-f14844fd0ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ef08b2-7e40-424a-94aa-af4d4e355473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4bb24c-ecb5-462b-9016-c1d167b9dac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5459f8-3c64-475f-9cac-9806c9451881",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006ab5ab-cabb-45a4-8ef5-1c79dd37dd9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8a8cc3-131a-4714-930c-cf87d1254d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73056731-24c5-4242-be6e-7a4b21c068b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3a7142-2d11-492e-b392-a0bc0d59d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b179d26-e6cc-4481-8169-d28859529c1d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6afce5a-803d-49c2-9a68-1a65d4618f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd07965-f5ea-4936-a5bc-1347c9e6c9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a21119-fdd9-48f0-abcd-f6c4a013d3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7bfbcb-8140-4f30-80c8-a37f051e1a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5e6a5e-d595-45ac-aa6f-8bd19532d897",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544b5034-8249-4626-8034-2080b85520c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87873b51-20c9-4db2-bd64-1ebcd9262536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee47e3b2-17c3-41f1-86de-57edadee36cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1381bd8-ce34-4aa2-997e-81fd397a62b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57606bb5-7032-4750-ab97-534f2f0711af",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7ff424-8fe1-4e46-9eae-1c82acef0721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e7ab88-c118-4a6e-b28f-524bdcd83e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d407be93-6859-4199-a91e-664b44b1b190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fe3c56-435d-4f07-86bf-be1ef9124c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68e4f66-06a2-412e-acdf-06dd78d51706",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d23e3ad-0635-450a-9cf5-6c9d9e555a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3693ae2-954a-4677-b54d-875e92c9b196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a487805e-b15c-4ee0-a1fc-eca6a8c45014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3323ab16-bcf1-4cba-b8ae-b42f6ef57ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d54853-f56b-43d5-a70b-acbfdd6c6382",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a1c417-c68a-4209-ae96-d08190ffc0a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7a69ef-7a5d-4d6f-bee6-84fc661e04ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f0de0d-a05f-44f2-b280-b47efa8c5056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27bb106d-0e41-4f1e-9c0d-1779200f7db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe66d7-c74a-4e73-a8ae-bdf234b83422",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423acda2-a15c-4d0f-8a97-e13f9f6d4f42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d527d4b-dbbe-4209-869b-dee0270bbbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ee29ad-32c2-421a-85e1-20949acded04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3df11ea-1f7c-4f64-96b1-1a299d1febb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfba32bc-811b-420d-b97d-1494e676f714",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7094de94-9ad9-46a2-92aa-59ea7b006bfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dcf4555-f26b-42d1-838c-ac46c1d8a10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8883ba4a-5a42-4c53-8db1-4eeb3ddc1a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5286ce-0f8c-4c4a-8577-cacb05494b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700637e4-26df-423a-8386-981bbd1cc6ca",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c014b4-be54-4962-ae64-b150cb974b3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd73c48b-ecfd-44f3-bd06-16e88557615e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de235592-b92a-475f-8872-53f7834bfac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b0308d-134a-4983-a052-1d49a293d4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3758cd15-566e-4e10-86c1-6b7020bc8481",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1849ebea-9297-4c4e-a514-21d9948b65e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cad2ce0-9d9f-4d4f-b4d7-35de4e23257f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b679486-6dbc-4c3c-a006-5fdd2c5219c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36319ae-3709-41df-8395-56a50682fa64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c32a099-8fdd-449d-aa46-5a0ce88b26ba",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d73b42-af98-4966-b819-3d1d889e12ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf738556-ab0d-4902-a83b-203dbadc4851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f5ced2-d7c9-48a4-ad06-9441d5facd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5f2114-dd2e-468e-9172-99933bebbf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f72473b-039c-4ba9-ac74-b7b8d94e9c08",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45487d47-35d4-4f80-966d-206d042d5a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5694f05d-2cf7-4fe9-bfa1-ed8da3b5f9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc9c632-7d41-41ba-b08d-b3c1147fc288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f4b089-4648-4b93-b7aa-0cd19d1a4c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97dd506-b883-485a-a867-2063a189ad49",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60ed6c7-13d0-4186-a2d5-04f49335e2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0aec1d4-1ac4-4d69-8bf6-ef34f4746b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff1e4af-af08-4f76-9f26-c3e686842353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b759577-f115-4cde-8caf-760a22d7dbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c330a0b2-7cbb-416c-9742-d91135ea614e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54a02c3-4548-463f-8aed-8ab8296e424f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6001ad3d-eec3-4200-958a-ba3fa04881d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08d13c2-72e1-47a6-8522-e613e8e03826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59295932-e827-4409-ac88-f2a192407335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b7daeb-14c5-47d7-aef5-e9e2c1575416",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58404762-7256-4329-ab2f-ee69c6d5ae88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b3238c-79c1-46d6-bc2c-ccfee1bbd814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c9428e-8f54-4afc-a5f5-e5f6e1aee7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0df6e0e-da4e-4df3-9d42-80e626ced03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c614ba43-1dc7-45f7-872f-87eefe986311",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db90012-a6fb-4352-a4df-2a15c98cce98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631024c3-0cdc-486a-860d-c3d3f40472a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659c6a07-1bd9-411e-9eb5-0123fac0620b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9403b5c4-8b29-4119-b337-b1bde5372ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35e9070-0d2c-4bcc-b66d-a834973fbda1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd44d861-1a13-4ba4-8eeb-9e5bb0029148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492fe072-4fdf-4d3d-b88c-39a24522a7f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb1f0f8-e9d2-4b72-aa17-643db9b799ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfa235f-9b8f-49f3-b662-2d8a09ddb4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c14eb08-1594-46b0-9432-5ff194bf3b5b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0411124-4c25-4a7e-9ead-f2dfd51fb2e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b7d11c-a20a-4c71-970a-670b929477f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eda29d7-bd1b-47ae-b076-661eb92357b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace35308-318d-4b81-b627-e984fa25c119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba24fce3-7e73-4b36-8ba4-969c458d267a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d40f26-99ae-49a5-afed-8410c429cb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1cc95aa-cf05-4c20-97b4-0e37a5081d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e672e45b-444e-4e80-a44f-329a9f4645d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d3fcf3-b79b-43c3-83b9-135b87245c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f99a415-ea31-449f-b307-eabfba937ddc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b49c0a-1f33-4dc8-b1d5-6e5ace70533c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0fe9f3-eab6-4fd5-a340-41f6b68af90b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3681829-9f4a-4d23-b00c-9caa863a25ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d43a701-b5f6-4a61-8282-d24048177465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b627f4c-5f81-4132-aa43-9e940da08e1e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5787fce-0658-4eef-9970-c57fa200ab43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a8fc80-09a7-4482-b649-ce795b595506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016dbd06-6e5f-4771-a453-41e55eb27657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebebca7-3ebb-41f9-8224-342356b48b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20512301-cf43-475b-b07f-3d01f86bf21e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc3f388-220a-4574-8cac-35b40d3e2ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e3226a8-2b50-4918-8196-7dbd990fe61a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b752e9a-87ec-4769-9bd2-c5b819c919c8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f786cabd-6e59-4375-beb2-4738655be009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e387a2c8-1236-4029-9c77-de1e7f6d226c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab998900-0ca3-410e-bd4b-f9e1d9ffef73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "049e8249-9003-42ed-80bc-e590434e3a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69da6e5a-1287-4f94-bee8-5d9b290b92c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dcfb47-1ee2-4c8b-b06d-57d402aae493"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91184b9c-4a7a-4073-a02c-eb9addeeaea3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f824c559-fcb2-4d81-876d-84b2d021b2f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a59fecc3-d51e-4404-a97d-ae577f1fd25b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d704717c-5866-4b45-9f9e-8309bdb5a2d2"
                    }
                  }
                ]
              },
              {
                "id": "1741d431-789e-4dca-b5eb-a8bf39a486a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "132fc38c-d556-4459-8279-b0344d8666a3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8efe10-b56d-4583-8615-c432628f6b05",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "88dbe655-973a-4b44-a276-bd88809d642a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcb50df-f36a-456f-932d-c8ddaeeb9d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a5c30ec-2922-4131-8aa9-6056b3606ab6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4576cbc-90e3-47f4-8589-09f0fa4cd4fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e9b2016-a2c8-4e45-9c61-671fa4a3b241"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "501bb6b0-3b11-42d8-bd5d-3ee00e2f1315",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a535ab7d-aa83-439d-a47b-3ccbb6335b19"
                    }
                  }
                ]
              },
              {
                "id": "f3622174-90bc-4108-9ca9-b72af6ae60c6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "26e4d0c3-40ae-4798-a573-ca1cac28401c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53afc355-9b27-4202-a285-a50176a6ff35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9b00d082-74c9-4152-86e7-c9a84fc5e46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288540fd-f8bd-4d68-9abf-4c936aa0f604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "655c6840-98bf-43eb-8b67-03d4623e856d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "781e8461-a190-4a32-9fbb-e5c037fa361f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0f929ad-2780-4616-99eb-aa93569d1476",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c737fe40-40b4-422a-a486-0f9400397708",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c0ea0192-9c9b-46ef-9ec2-8753baebeb9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56a8bdb4-d35b-4239-be16-11121d8688cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be1712f8-894a-4ed6-bd86-6b51b04bf6ae"
                    }
                  }
                ]
              },
              {
                "id": "6b6fc412-a64a-45d6-8103-cbbe196a422f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eefac778-3329-4d2e-89a5-3081a055bda7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a41ad2c-42b3-4e46-bb87-c8d7bdf21564"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "041f0f5d-c0cb-4a78-ae1d-4403fbe5cbdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71fb7a79-c679-4acf-a63b-f0d4bef72c95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a1182a2-91a3-4ef8-be91-9b1ac892c390",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "58a7d4e1-72d3-4c67-b0ae-982c94a7c80f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83a5c3c8-3536-4d7c-9b25-5132fe607575",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2f4cc3d-af06-46d1-a435-7004bee27818"
            }
          }
        ]
      },
      {
        "id": "49598f63-7ad5-4d2c-8c72-30d9b48c349a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c48fa4c5-2846-4e04-acd4-9b0a79c993b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f3c84163-ce29-41d0-8afc-cf09849e1c30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2be85e5-1470-446a-96ee-dc78a806c76e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5c5e6b-a471-468e-98ce-cfbd6f71b061",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2fec311c-6a26-4d5c-b84f-fc7085c53c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5abcf55-a611-4d62-b107-86079eb56ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "616efec1-6e8d-40e5-a4cc-111b4497edc6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c9f7cd5-ba97-414c-a826-a54e8e3058c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58e5917c-fc46-4003-b33d-2b95cef4e389"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b8b3883-f0e7-4a3e-b046-9a4e86ab8347",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52243dd1-26aa-4666-bec0-e840c6d3d0f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "597313cc-2e9f-4057-9823-1fd0123d2c88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "46889862-bebf-44c0-bf27-24ac174ff882"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9c1b4e2-ab3a-46fa-aa08-6dd5d89ff698",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7b0ca29-5da6-487f-b31d-1b1e60b3d3d6"
            }
          }
        ]
      },
      {
        "id": "7d627331-3b94-418f-9b15-1efafd9aa29c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "234f7a42-9285-47e3-9e48-616ec3c3d32d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e510689b-48e1-4cc2-9225-a4b4a8b1b828",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6865838b-095e-42ae-b436-13b8e6b82daf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7714e3c-5b8e-4ab6-a75b-13221c8ff02e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46d3d51c-2fe5-43fe-b912-d177240302ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0447af-bdc9-4414-aca6-ccb46e7ab789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79327884-c0f4-4d10-81b2-cb5f7414ea60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98f662f0-c592-4142-b963-cb980f5af08a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce0ef5ad-8134-4bc4-85c0-b811546c7544"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d18928d7-4550-497f-9cf2-8a21cba50b92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d988cfe6-a6dc-4afe-878b-42965f4e3169"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd2080ce-e31d-4ec3-b20d-786e7892a769",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b180e2f7-8b72-4d79-9d16-00af9b73c0d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "974bce58-903c-4eb5-b8c8-6a1c369257d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c90e4f8f-d424-49f4-923d-77c11bf54160"
            }
          }
        ]
      },
      {
        "id": "db689343-d117-4021-8f70-2efa3f8d5576",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3023a685-f673-4ce4-a0db-68563470a623",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd883904-a5da-4e32-ba5d-1190af5cbe53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8606413-1d64-40dc-984b-2fb091304316",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ae4753-d8e1-4bb8-8ba1-6f58659abd85",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69659a03-8826-4df3-9917-e74c6e00fea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae60ec6-d600-4479-8e27-682b6e136643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1c0b29e-4cf0-4b47-a445-e468e4b60b9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2cc697f-5fe2-4a97-88ad-b231d18df450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e96f176-0b4d-4fb7-8e32-4b65232fd6cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7aaa76c-d4bf-49ad-8e1a-83eebaff9eb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "715dd30f-7c91-4dba-bcd9-9946e3ba0376"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad17a688-c0c4-496a-8c5e-c1ef63cf28e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "80f67d1d-af7e-4717-9703-bca9ecf933b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e0a2dc2-9491-4254-aec4-246ef54bd761",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7663fc1d-f511-47b0-8abc-2a490af951ff"
            }
          }
        ]
      },
      {
        "id": "8ebf4708-b7cf-4ada-9d88-2ccdc7f55ec7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7f117b0-2655-49ac-8bed-5170342657a1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78db9524-054b-4aeb-8d07-3255b46cebfa",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f7c802bc-cc72-46a8-9a29-4b2f70058fd4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "edc9db80-7f6e-4fd8-96b8-33c7246c750e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6a77f64-e4d0-4d6f-a029-1e9e8bf5ba7d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 120.94385964912283,
      "responseMin": 9,
      "responseMax": 3130,
      "responseSd": 357.65935524199625,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705883900579,
      "completed": 1705883944713
    },
    "executions": [
      {
        "id": "2d328bb9-a9cb-4bc2-89b5-a41b5f6d178b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b73c83fb-4266-464b-8a3a-b4af6bca737e",
          "httpRequestId": "b7e23620-83b0-491f-af64-17457a6fc8d9"
        },
        "item": {
          "id": "2d328bb9-a9cb-4bc2-89b5-a41b5f6d178b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0fcb6a30-17ec-4470-8da5-be0ebadeabbe",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "a986a7b8-6135-43d0-bb1a-507fe5460c75",
        "cursor": {
          "ref": "07493184-ed06-4bdf-af8a-f97612cea868",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7e54fd0a-b1b5-4a64-8fc0-5cb30aab84f6"
        },
        "item": {
          "id": "a986a7b8-6135-43d0-bb1a-507fe5460c75",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "298538eb-4489-43fb-9cfe-4db931e503d2",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "819c7809-8070-4a1c-a438-66df60fba6ad",
        "cursor": {
          "ref": "697e5fbd-91bb-4af6-be66-50f30f46f61d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "96f9ea79-f98a-4729-beda-769c197a9511"
        },
        "item": {
          "id": "819c7809-8070-4a1c-a438-66df60fba6ad",
          "name": "did_json"
        },
        "response": {
          "id": "9f79c289-45b9-4e6f-9b16-7bb8ecc126a5",
          "status": "OK",
          "code": 200,
          "responseTime": 1121,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b64c98-2615-4818-9888-44d04764ce05",
        "cursor": {
          "ref": "2d4d07fa-957b-4410-858e-d09378338a2e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2a778bee-753b-446d-a058-34d2bfb2e4fc"
        },
        "item": {
          "id": "01b64c98-2615-4818-9888-44d04764ce05",
          "name": "did:invalid"
        },
        "response": {
          "id": "93ab5641-a232-4402-ab36-5401fe8c92d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b64c98-2615-4818-9888-44d04764ce05",
        "cursor": {
          "ref": "2d4d07fa-957b-4410-858e-d09378338a2e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2a778bee-753b-446d-a058-34d2bfb2e4fc"
        },
        "item": {
          "id": "01b64c98-2615-4818-9888-44d04764ce05",
          "name": "did:invalid"
        },
        "response": {
          "id": "93ab5641-a232-4402-ab36-5401fe8c92d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8267ae-9228-4b9e-b203-3d1d42624e5a",
        "cursor": {
          "ref": "a8134b32-4fe5-416e-ad20-373a41761c03",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c1f63b29-0cd1-4fe8-bfe7-28017f4ae71d"
        },
        "item": {
          "id": "7c8267ae-9228-4b9e-b203-3d1d42624e5a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ce262a02-7bba-42ad-877b-9544696340aa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 539,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e887c0-a16d-4133-b1da-79ea51b648fe",
        "cursor": {
          "ref": "30357b04-a050-497f-9085-f07562f6c828",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4b86f60b-3055-499b-8544-54c60dfdaacc"
        },
        "item": {
          "id": "d6e887c0-a16d-4133-b1da-79ea51b648fe",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4012659b-362d-440a-8380-24f9cdf8e42e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c25fae-8f3b-4669-8c30-4487eafdb09f",
        "cursor": {
          "ref": "3c0ad3b6-0aad-41e8-854a-7f24e20b720c",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5f23916e-e6cf-4027-9cf2-b07660f2ff61"
        },
        "item": {
          "id": "d2c25fae-8f3b-4669-8c30-4487eafdb09f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "679dd020-d40f-438a-b90d-4ee433d109f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309c6de7-6295-4f1c-b6ce-19d1667013c0",
        "cursor": {
          "ref": "70c35a13-c262-461d-8273-f269203ae027",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42fc0aeb-f49c-4665-a464-7d1137ef1636"
        },
        "item": {
          "id": "309c6de7-6295-4f1c-b6ce-19d1667013c0",
          "name": "identifiers"
        },
        "response": {
          "id": "fda251f4-6512-4439-a4f0-f65a25c03795",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb07c130-825b-4536-8378-422fc3934578",
        "cursor": {
          "ref": "fed54153-3500-4cec-9f68-99b252343af4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fd472149-48f3-4c82-8541-66900bc0f810"
        },
        "item": {
          "id": "cb07c130-825b-4536-8378-422fc3934578",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "48fc5e64-51eb-4739-9b00-fabbce665bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc22464-1bd6-43e1-87e8-e5fd8d2b6c0f",
        "cursor": {
          "ref": "11fa0ebe-d91c-4b9a-b339-47bff8505d52",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7542c723-d7d5-4ac0-bb1e-a6024d7becae"
        },
        "item": {
          "id": "ecc22464-1bd6-43e1-87e8-e5fd8d2b6c0f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "42fa1ede-ed41-458e-b5e8-ba02483ddb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fd4dae-2cb6-4caa-bb00-e012f9f6b136",
        "cursor": {
          "ref": "a235e9a9-10f4-4409-91a3-63680094dd9e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fbae457c-ec87-453b-a1ef-9632ddece316"
        },
        "item": {
          "id": "f8fd4dae-2cb6-4caa-bb00-e012f9f6b136",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3f108e7a-5e11-4809-a26c-f6afa2c2ab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c157b68-b4f7-4a6a-a43a-a972894d0945",
        "cursor": {
          "ref": "9bc93078-d35b-406d-ae0c-3bcf920db364",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af7296b2-9b61-4c77-b257-80592ddd3a78"
        },
        "item": {
          "id": "0c157b68-b4f7-4a6a-a43a-a972894d0945",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bc0bb94e-0063-4772-9ffe-6c7cc89044b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7259c993-4a67-4ca3-bc98-9d4dbc1c23cb",
        "cursor": {
          "ref": "12aba5a7-203e-4107-a970-aa42ed5cbf83",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a8280429-2f62-40d3-8e2b-08f251453e38"
        },
        "item": {
          "id": "7259c993-4a67-4ca3-bc98-9d4dbc1c23cb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d93f82b9-3825-471a-a7e2-654b3f46ad3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651af831-1c7b-40e6-ade1-06d83a84fdda",
        "cursor": {
          "ref": "2a3df2e6-4ecd-4239-8692-0bd30737fb81",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d1aa45d6-9ab4-4e12-abb0-cc1ac1874703"
        },
        "item": {
          "id": "651af831-1c7b-40e6-ade1-06d83a84fdda",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "80f0a2a6-2892-4a50-a0a8-f6bf7e33fb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae62698-6a72-4bed-9330-02a0874ff93e",
        "cursor": {
          "ref": "05ded458-ecfa-4f6a-998e-482970a67d4b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "73cce778-ec08-4247-b6e9-bf07d42204f3"
        },
        "item": {
          "id": "7ae62698-6a72-4bed-9330-02a0874ff93e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "992ae874-0e15-4b22-9baf-3bc2f0dfb291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b904ce-3030-4442-9465-6d435b35258c",
        "cursor": {
          "ref": "2347a78d-e1f9-4d51-b177-13cd67cb99ae",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c9bf4160-1f27-4a21-85df-09f262bac3b2"
        },
        "item": {
          "id": "31b904ce-3030-4442-9465-6d435b35258c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "56a6419c-a5a8-4d7f-a9d5-c18f244d1379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbb01f4-1af3-49b8-8267-ac87658a6e31",
        "cursor": {
          "ref": "116dd19d-814b-4599-8faa-cde8f4ad88d7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d3a8de0b-f5db-4d96-a3d1-604164975b2b"
        },
        "item": {
          "id": "5cbb01f4-1af3-49b8-8267-ac87658a6e31",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "28329987-e6de-45fa-9c84-22014827580f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb44612-acdd-439e-8695-3005ddd4b591",
        "cursor": {
          "ref": "883f1511-dee4-4e67-a48a-c2beb1cf4729",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a7f4259f-904c-43bf-b74b-503485b95eef"
        },
        "item": {
          "id": "bdb44612-acdd-439e-8695-3005ddd4b591",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dea98cd3-3428-42d7-94a1-6cc902599037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34a85ce-6f04-4087-a9a2-d186c0650bfe",
        "cursor": {
          "ref": "0302cad9-d78a-44c5-bd56-90740d235f3d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e6b7af23-0998-4528-bdac-261b0dccc93e"
        },
        "item": {
          "id": "c34a85ce-6f04-4087-a9a2-d186c0650bfe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5a995a67-f5a6-46a7-b7f6-900b6bd1e02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77a1ffa-4b1b-4149-a959-82b422b52244",
        "cursor": {
          "ref": "e7d77c66-5609-4c2a-bf7b-50a8f17050ac",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "22b1bd09-862e-4231-9255-067803c23bf9"
        },
        "item": {
          "id": "b77a1ffa-4b1b-4149-a959-82b422b52244",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8286346c-26fb-472c-9dc7-0ec5a1692324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8234878-2b4b-493f-98e3-da4c54e9ea4f",
        "cursor": {
          "ref": "195d8996-4f32-4140-9922-b316110faf5c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b6b20765-1bbe-41d4-bd10-6ea516ceaf7c"
        },
        "item": {
          "id": "b8234878-2b4b-493f-98e3-da4c54e9ea4f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a44884fc-fb75-4261-8ae1-c306fa8f33c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628cb455-9088-477b-a576-d087a3020d74",
        "cursor": {
          "ref": "382421e8-d91a-4780-8ca7-5c446716c20f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3850331d-60c5-4344-8b7f-a7ad44492878"
        },
        "item": {
          "id": "628cb455-9088-477b-a576-d087a3020d74",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9e34073c-bda0-41a2-b2f2-d2680e1f8d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff33bbf-e7a7-4d29-b71c-1b15a9b3c3ef",
        "cursor": {
          "ref": "c0b8b8d7-709e-4e01-bcdd-6e0a78128817",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "188cdfd1-663f-4875-99f2-711615da6066"
        },
        "item": {
          "id": "eff33bbf-e7a7-4d29-b71c-1b15a9b3c3ef",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "56924675-e50d-419d-bd6b-2ce5e35271f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912e928c-8860-459d-9d0d-c54e07f859dd",
        "cursor": {
          "ref": "8036a557-8e1a-4956-bd08-b1992fbaa380",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "217d27c3-5a05-4eea-8269-9dce1d94c7ea"
        },
        "item": {
          "id": "912e928c-8860-459d-9d0d-c54e07f859dd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b3980bf8-4ad6-4ff4-97b5-367b290df637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fe4115-744b-4b95-9d9f-f40a6a5a1eb4",
        "cursor": {
          "ref": "61b283b6-f51e-47c2-a5ec-75650c2ac6a3",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6da11785-7909-43c0-ba32-4f907b7fc016"
        },
        "item": {
          "id": "b5fe4115-744b-4b95-9d9f-f40a6a5a1eb4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b9298c0d-5d61-477f-b9e7-06b3769ffdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754766e5-1c72-4e28-8e2d-c8dd6a960029",
        "cursor": {
          "ref": "803d820f-429a-4ae4-a9a0-6689babb1f1c",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "db1959f5-a3f4-4778-846e-2cc69669d840"
        },
        "item": {
          "id": "754766e5-1c72-4e28-8e2d-c8dd6a960029",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "466437de-4551-4997-9c3c-227eafca3abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd18e247-2e0f-4709-9b27-3ceab50305e9",
        "cursor": {
          "ref": "c577a29d-ffd4-444b-9a1a-85736529d7cf",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f3401065-dd4d-4289-87b5-b05d1abb7ae2"
        },
        "item": {
          "id": "cd18e247-2e0f-4709-9b27-3ceab50305e9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "281208bc-f162-42d4-81e1-7efa7ae7c62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1d0b8f-4153-4f7d-b300-dbea22e747ac",
        "cursor": {
          "ref": "4d1bc451-52ab-4d94-90b1-361f6d65305f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "72245967-c57f-4f18-939c-6be823d464b1"
        },
        "item": {
          "id": "9b1d0b8f-4153-4f7d-b300-dbea22e747ac",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8b855b92-2a4b-4ac6-a172-dbe59766a03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5754d583-11e5-446a-aa2d-8d8bebd9b331",
        "cursor": {
          "ref": "fd92aa67-2eda-43a4-ac3f-cd2a3296d30f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "346fd93e-d874-41ec-99ee-9353e791d174"
        },
        "item": {
          "id": "5754d583-11e5-446a-aa2d-8d8bebd9b331",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f4574bdf-b1fc-4bfe-8899-05faad3e1f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7bfedf-8eda-45c2-b541-7b5d59bff3e9",
        "cursor": {
          "ref": "6066bb58-8a4c-4f58-8dec-2feb6ce718d4",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "224f0190-c994-4777-9564-165ec39beadc"
        },
        "item": {
          "id": "7c7bfedf-8eda-45c2-b541-7b5d59bff3e9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1bfd368f-005a-4e1d-993c-76be08ca79fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dcd8d06-e50f-45cf-9384-2af04e9e1ed1",
        "cursor": {
          "ref": "c9af6b57-d3c9-4724-8784-286d3241464f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4a67974a-e895-4632-aa51-3e24e86956e8"
        },
        "item": {
          "id": "6dcd8d06-e50f-45cf-9384-2af04e9e1ed1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "03796622-6691-441d-a794-dbe54c35afee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9bf552-60e7-4c89-9787-59193a01e9ac",
        "cursor": {
          "ref": "e14ff470-cec0-41f5-a14a-37316ea77a16",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8cac2731-c572-4232-9fb7-f39b3149f38c"
        },
        "item": {
          "id": "ed9bf552-60e7-4c89-9787-59193a01e9ac",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9d1d67d9-fac1-42cd-9b3a-12b7c4178f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5166d31c-f57c-4736-bc28-ee77e1c17dec",
        "cursor": {
          "ref": "da28d722-a1c5-45aa-8c14-574a2bf4e25f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "41b16ab7-44f6-4af5-add1-67b4e70cbfdc"
        },
        "item": {
          "id": "5166d31c-f57c-4736-bc28-ee77e1c17dec",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b7e5a4ae-9a8f-4a9c-b7ef-53e62515f737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7520e1b3-6e2b-4fba-8d97-c0bb24a7f860",
        "cursor": {
          "ref": "da2b6a60-fd93-4195-95d8-64b2db29ea78",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c25ba639-7176-40ea-8b57-b7cd80b64905"
        },
        "item": {
          "id": "7520e1b3-6e2b-4fba-8d97-c0bb24a7f860",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ed08e020-dfec-4f27-8f53-06f99614c2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b19a9d4-dc5d-45eb-a9de-d4d80cf277bd",
        "cursor": {
          "ref": "3afce38f-bed7-4430-a39d-b5dde96e5b3a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c167ea27-a634-45fd-a4bd-8882a2fd2689"
        },
        "item": {
          "id": "8b19a9d4-dc5d-45eb-a9de-d4d80cf277bd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2ebaf2d8-55c7-4943-bef6-5fb6b6cafca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dd469e-4dd9-4d68-8798-e5e745497a00",
        "cursor": {
          "ref": "b3e2d263-760b-484b-af3c-f4404d8f6290",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "411958f9-fcc7-41a8-a649-ed220a4b9c30"
        },
        "item": {
          "id": "a5dd469e-4dd9-4d68-8798-e5e745497a00",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e45a22ab-9f6d-47ea-88df-802f9e6bea2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2245c5b-71f2-41d3-8893-8223293fc591",
        "cursor": {
          "ref": "1d39cc8b-347b-4431-906f-47572262e17a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "88a951cf-aff2-445b-b9e6-c6bd6c7b1f28"
        },
        "item": {
          "id": "a2245c5b-71f2-41d3-8893-8223293fc591",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1ad5473b-1ff8-4025-abbd-5fe9ec3ae836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9696205-efa3-468e-916c-ac6cfe9680c3",
        "cursor": {
          "ref": "ef14676e-1ce1-4c16-9fb1-1c751fd4586b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8e386329-7f0b-4530-8728-65a2f3de2334"
        },
        "item": {
          "id": "d9696205-efa3-468e-916c-ac6cfe9680c3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3acf3f6d-1399-48ba-b266-fc80ff1077ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf5a120-f0eb-414f-83b1-fc7f93c4a13f",
        "cursor": {
          "ref": "70d5a6d2-de79-471d-ae2a-e83fabbe73f9",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "701e99d3-a802-4ca8-8d7e-c7fdebcee447"
        },
        "item": {
          "id": "7bf5a120-f0eb-414f-83b1-fc7f93c4a13f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8c44c044-acfd-447b-8aa1-a1ec0a733f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d0f798-ee77-4f2e-8b3e-dcedb3111c3e",
        "cursor": {
          "ref": "ae73b333-f2a8-4ed7-b93e-05247cd63966",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f7186848-f2ba-440a-8fcf-ca28d7fdc685"
        },
        "item": {
          "id": "51d0f798-ee77-4f2e-8b3e-dcedb3111c3e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2786695a-7f01-4c10-b9b9-39703aaa423e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804877e6-98cc-4855-a67e-e1ab17ad1ebb",
        "cursor": {
          "ref": "553e7aa0-7f74-44b7-a719-b2dda229a8cb",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8203a30e-6f38-4b55-9f49-b9fa86c3620a"
        },
        "item": {
          "id": "804877e6-98cc-4855-a67e-e1ab17ad1ebb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "59c814ae-ae1e-40ab-9046-f9da81d4c7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c91a5c7-37d4-4bca-8ba6-4e5c0a250856",
        "cursor": {
          "ref": "9b3fbb61-ce44-455a-b10c-a6310162ea17",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8125dd85-c6ba-4485-9091-bd983c58630a"
        },
        "item": {
          "id": "5c91a5c7-37d4-4bca-8ba6-4e5c0a250856",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "56e1656a-02e5-4bbc-833a-01afbe546b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faa75a9-8cb7-4417-8c6d-142ff5f58071",
        "cursor": {
          "ref": "8618235b-48c9-4425-ac13-dfdf487720a4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "79f33895-2358-4b1a-8868-1bd1586e62ce"
        },
        "item": {
          "id": "5faa75a9-8cb7-4417-8c6d-142ff5f58071",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bf0d13d0-fa51-4972-b800-450c522f0615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e637ab63-79c0-45f3-90f1-22f1655c6a5a",
        "cursor": {
          "ref": "e0effab6-f361-4ffc-9086-61d5c1339e88",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0691ebde-ec7f-4521-8ed3-da31e82cb82b"
        },
        "item": {
          "id": "e637ab63-79c0-45f3-90f1-22f1655c6a5a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "df95200d-c351-42cb-9536-110d6986fb4c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 338,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551597e6-7b58-4ad3-a852-94157e8684b6",
        "cursor": {
          "ref": "3037190f-7ce5-4bed-841d-ccd94b5db444",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cd4be707-3f6e-4a36-94b3-94f9f3e3bd9f"
        },
        "item": {
          "id": "551597e6-7b58-4ad3-a852-94157e8684b6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5cb657e9-8177-4d6c-ae0d-817487285863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92099e4-4b65-4945-80dc-53668cca215a",
        "cursor": {
          "ref": "4489c6b1-d38d-4ecc-aae2-5410c029d54b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "053e7dc4-e85c-42df-a9b1-b47131f053e5"
        },
        "item": {
          "id": "a92099e4-4b65-4945-80dc-53668cca215a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ec23eaf8-8e24-48b8-b329-72b7bbbe2198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0ae82e-7062-4da1-874f-e765850a80eb",
        "cursor": {
          "ref": "b0ac49c3-9201-4a58-b5b7-4d0fedebb1f6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b3f5353f-3086-479d-88c6-c516a1233bce"
        },
        "item": {
          "id": "9b0ae82e-7062-4da1-874f-e765850a80eb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9b38c160-1e89-4244-b986-065f3a2f5f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17141ffd-4ae2-4f86-a132-dca3b0373c80",
        "cursor": {
          "ref": "f2b71a80-10aa-4245-a2cf-31d7c9721d1c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f6da34a6-7c1a-4fd9-a8bb-5d7313af0964"
        },
        "item": {
          "id": "17141ffd-4ae2-4f86-a132-dca3b0373c80",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "79e6d51a-6213-4cd7-819e-a5d921d8a45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd8efa8-f0c7-40b0-b766-67f3d4567838",
        "cursor": {
          "ref": "b7d104e4-b0a5-404f-926c-2d6f0baaa6d2",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7877fa8d-f620-4494-90d0-c58a747161bf"
        },
        "item": {
          "id": "6fd8efa8-f0c7-40b0-b766-67f3d4567838",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "435d1f95-390f-4664-93be-7bb1dc4cb04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50252328-6cb0-4620-8ced-78a811cd0349",
        "cursor": {
          "ref": "72f5b5d3-9cb7-497b-b786-a6b25ba59d91",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c00008bd-7cd7-4e55-868f-15ed5f7079ac"
        },
        "item": {
          "id": "50252328-6cb0-4620-8ced-78a811cd0349",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c6cdd7e0-f591-4e9b-949c-25baed7491ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b11843-3835-43d3-b80d-00a438c29663",
        "cursor": {
          "ref": "0ed565eb-0c16-459c-bf5a-d6d7b1c0e1c8",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "37405258-4fb6-43ad-9c39-7b76def0724a"
        },
        "item": {
          "id": "a0b11843-3835-43d3-b80d-00a438c29663",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b5757cae-1783-4066-8780-4aeb833d7e23",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 325,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04877d8a-1ade-4251-9167-226bfa5911d7",
        "cursor": {
          "ref": "cf7f08f6-2164-4cdf-b268-084af8a71de9",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7ff697de-bcf3-44fb-9870-0720b38f4e74"
        },
        "item": {
          "id": "04877d8a-1ade-4251-9167-226bfa5911d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dff02379-a149-425f-985d-b6c47e3dd223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e9bc63-4ded-4abd-9836-cc6984cfe715",
        "cursor": {
          "ref": "ba74ac50-de8c-4265-8fe4-f4b82bc708bf",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "52293cc5-5fef-47bc-bdd0-2d1a982ceaa5"
        },
        "item": {
          "id": "85e9bc63-4ded-4abd-9836-cc6984cfe715",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a7319ff9-666d-4287-84cd-dce7fc3547e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09282b53-6a3f-4c1b-ac8f-69dcc5b4e3a9",
        "cursor": {
          "ref": "2d8f8aa1-c490-48a4-b6e6-a7e2a03e50cc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1431eb4e-8434-4c0c-8b7b-77a5c9275d61"
        },
        "item": {
          "id": "09282b53-6a3f-4c1b-ac8f-69dcc5b4e3a9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "39253fec-fd23-4df0-9397-69c8ab1da6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ca4aea-a07d-44df-a571-e924aa2f84bb",
        "cursor": {
          "ref": "6bad9b14-7b09-4afb-988a-5efdc89f71f1",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "35d0c60e-d3f0-46a2-9da0-c063ec752816"
        },
        "item": {
          "id": "b6ca4aea-a07d-44df-a571-e924aa2f84bb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e45775e0-094c-41d2-9663-4b0e27bb1573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c0468c-7502-42cc-bd80-2e7303799eca",
        "cursor": {
          "ref": "1cdf79d6-215a-449b-b4b8-8cee1011caf7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "177a5e1b-b61e-4da9-99a9-13dd2d02d1a9"
        },
        "item": {
          "id": "d7c0468c-7502-42cc-bd80-2e7303799eca",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "63af4123-f778-4198-aa3d-80d53dab5fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb074811-dd0c-425c-beb0-09b434d3f943",
        "cursor": {
          "ref": "bf59fb20-0fe8-4d53-b2a5-2571ba292b90",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9cf87f70-f7f9-4f02-92ca-754a5e945b4d"
        },
        "item": {
          "id": "bb074811-dd0c-425c-beb0-09b434d3f943",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e1f1904c-cf34-4b63-93c7-19f71d8a3ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0d4c4b-4f9f-4044-84f7-fef695ce7d78",
        "cursor": {
          "ref": "3a2bd80e-b38b-408d-a6bf-0d7c73c77789",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2e0a01ce-a921-4518-b92d-4a16291a71ae"
        },
        "item": {
          "id": "db0d4c4b-4f9f-4044-84f7-fef695ce7d78",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "19015b46-8fa6-4838-8de8-6edac5c7deb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cdb348-ca52-4093-9433-e71251a2b696",
        "cursor": {
          "ref": "068961f8-6625-43ff-bfdc-2d20f34bad33",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "82af6ee7-49c0-44bb-aca0-7557e58b64d5"
        },
        "item": {
          "id": "82cdb348-ca52-4093-9433-e71251a2b696",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4c445d0a-9f32-44c3-9b63-5efb5b540394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11eced3-d691-4051-9eb9-2b1f22fbd821",
        "cursor": {
          "ref": "48266d25-fbe7-4374-8d46-0b710225571b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "85cfde6b-466e-4980-abd7-8b665b48eeb3"
        },
        "item": {
          "id": "a11eced3-d691-4051-9eb9-2b1f22fbd821",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3e76f00b-088e-41e8-9b4d-47532860c539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee94997-c75a-4656-8f57-c5b7ae0b0afa",
        "cursor": {
          "ref": "beff4f44-a9b9-4f53-8b2d-b90977a11899",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e969ff2d-635d-4e95-9039-223e77f70002"
        },
        "item": {
          "id": "2ee94997-c75a-4656-8f57-c5b7ae0b0afa",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "812a6829-194f-4796-8f3d-5e5fa8c8e745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78136c1-a455-400f-9229-5b7a43b5a73c",
        "cursor": {
          "ref": "d225b241-2500-4ee0-8aa2-cbfa4da0a448",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c351e663-e243-417b-9cc2-d8b44b63ef6c"
        },
        "item": {
          "id": "e78136c1-a455-400f-9229-5b7a43b5a73c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6cd19df2-f4b6-436d-b35b-715c42ba9484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db63973a-d78b-4e61-9449-98b5adb0fd95",
        "cursor": {
          "ref": "11beb4e2-88c7-4155-b89b-03c5df56cedc",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a0ebc21f-8b86-461a-940e-5a94c133943f"
        },
        "item": {
          "id": "db63973a-d78b-4e61-9449-98b5adb0fd95",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ee0a9487-f814-4812-8eb2-826f3e374434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afc4459-d586-4f87-8ec6-b0d3c3818d92",
        "cursor": {
          "ref": "57b71675-eb18-4096-b608-3d68e3f2c6f7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "de846272-d316-44a2-94f6-03813f4b691b"
        },
        "item": {
          "id": "0afc4459-d586-4f87-8ec6-b0d3c3818d92",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ef7a03b0-8631-4835-b280-c141e5b803ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eaaec8-da7e-40a8-8d0f-b80d52e75f25",
        "cursor": {
          "ref": "90df2827-a424-466a-b5f8-afcaf0d16c81",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "09bfc17e-7705-4894-90d3-80f87224c687"
        },
        "item": {
          "id": "c2eaaec8-da7e-40a8-8d0f-b80d52e75f25",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0013b41c-9d7f-4c25-a780-33e876361e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c11b500-5ff1-4c7f-a7c3-2e5a03bb0159",
        "cursor": {
          "ref": "0052781b-0ebc-40e7-ad1b-931fa35ad510",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0c9b41c2-2af8-49d5-8751-9a4d868e0f34"
        },
        "item": {
          "id": "2c11b500-5ff1-4c7f-a7c3-2e5a03bb0159",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2ecdb9a9-5d6e-404d-bce4-100fc0366518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76f80b4-48e2-49cc-9e83-26fe2250454c",
        "cursor": {
          "ref": "715a22fd-c1ab-4310-b0cb-0dee05946421",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4c2df89d-a11d-4ff7-964c-dcfbe0189ba0"
        },
        "item": {
          "id": "c76f80b4-48e2-49cc-9e83-26fe2250454c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "28aac160-9181-48b2-b764-8e5cc46e5cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac834ce-3ae7-4a64-b7c0-f72ab7785036",
        "cursor": {
          "ref": "9f43305d-e146-4341-b16c-7566eb62c4ac",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "af260b33-79d8-4b43-aef0-6e6847bc081a"
        },
        "item": {
          "id": "0ac834ce-3ae7-4a64-b7c0-f72ab7785036",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8e348eae-9de4-456d-be35-24028b7904f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0da653-985f-4e8f-93cc-cb69a84fca55",
        "cursor": {
          "ref": "0f17cca1-3123-4772-b4fb-fdb8c71c4626",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d5c4c4ed-f2cd-48f3-95fb-e69d32897e94"
        },
        "item": {
          "id": "de0da653-985f-4e8f-93cc-cb69a84fca55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fb70d31f-0d0a-46eb-86c1-e3693aab5027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16fa886-cb3c-427b-a5d3-3adf7c7820cf",
        "cursor": {
          "ref": "62aa51e1-4902-41b9-a88c-eabf5a238839",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f3fb9ef1-97c1-4740-9065-4c748dd8c88a"
        },
        "item": {
          "id": "f16fa886-cb3c-427b-a5d3-3adf7c7820cf",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ce66dafe-66c4-4252-817b-556156f687ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2097758-2c4a-4f4e-9a90-90d29772a027",
        "cursor": {
          "ref": "2824c3f3-e96d-437a-a0ff-055fd2208771",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "864fc5c3-2b2f-4e8a-8dfe-f7459ab896d5"
        },
        "item": {
          "id": "a2097758-2c4a-4f4e-9a90-90d29772a027",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4a415098-5c73-490a-b077-28fc15c578da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cff30a-20c7-4107-a489-97e24dba8e88",
        "cursor": {
          "ref": "1683b202-fe50-4f2d-ad5e-c6cc85e6ff2a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dd0ecaca-7597-4915-a80b-14296eeb3bf8"
        },
        "item": {
          "id": "f2cff30a-20c7-4107-a489-97e24dba8e88",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5b24a3ac-f3d7-4cc8-965c-f7f1d47e5e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1881f0d6-a0da-4384-a5e5-70e509c2014e",
        "cursor": {
          "ref": "fa2a6200-5a06-4723-8aac-697bff470ce7",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e2b0b596-20b6-4cc6-8c38-d8f2c2de5a16"
        },
        "item": {
          "id": "1881f0d6-a0da-4384-a5e5-70e509c2014e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eebffa4b-031c-484e-b926-aaddcdbe0236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4642f996-5923-4f54-90a2-95d19842f621",
        "cursor": {
          "ref": "49bfec7a-77df-45f0-ab47-d2abcd37a735",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a772195f-cd14-4d90-a741-2fc063f23f05"
        },
        "item": {
          "id": "4642f996-5923-4f54-90a2-95d19842f621",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "76367557-1054-4176-8570-3ec7f5e0fb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ad852a-01df-4f74-aa77-65ed07195e22",
        "cursor": {
          "ref": "b10631bc-eaa0-4aac-8080-6105951eeafe",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cbad3953-a466-4af7-b1a5-d53dac09c5aa"
        },
        "item": {
          "id": "09ad852a-01df-4f74-aa77-65ed07195e22",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d6686cf8-1e95-4210-ab17-a216a3192e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da518b1-98ad-4524-a4e2-3f198a9dcb1e",
        "cursor": {
          "ref": "6da89fea-8d3e-4527-b581-bf3f5cf8f91b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c938e628-6ea3-4425-903e-c2854898f4c2"
        },
        "item": {
          "id": "1da518b1-98ad-4524-a4e2-3f198a9dcb1e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0c08f805-ecf7-4316-a248-ea2e9229a01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4e76d8-72db-4c58-b97f-fcaaeb3a0124",
        "cursor": {
          "ref": "6533d36a-5288-455b-9736-27308a56f8ff",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "caf0f832-823d-4dc5-b4c1-8819d439bbd8"
        },
        "item": {
          "id": "6c4e76d8-72db-4c58-b97f-fcaaeb3a0124",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fad7c365-a196-45df-a122-e6a7542e761e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3aa4db2-8bdc-4953-8180-99af927e1231",
        "cursor": {
          "ref": "36995ebc-9a49-4743-8b40-ca8a26ab9b62",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7af1e8bd-81ed-4e95-813c-487071ff1479"
        },
        "item": {
          "id": "a3aa4db2-8bdc-4953-8180-99af927e1231",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7d4def36-7b89-44cc-a2c4-28b1dbad8fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58399ed6-171f-4673-b708-3c71fb998806",
        "cursor": {
          "ref": "dd8c6321-cc8f-47c9-b706-8fcbede20575",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a7b2c7ef-4072-43fd-9631-a52570ce540d"
        },
        "item": {
          "id": "58399ed6-171f-4673-b708-3c71fb998806",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4cccb05a-2a0e-4fe7-8de7-51bb545ddab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee231d3d-023b-46cf-b6dd-d29c5200bbf5",
        "cursor": {
          "ref": "520d9ef5-64f5-48c4-9128-56fcbd28446e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b5c5f8fc-df16-4461-b781-6e938cf549b9"
        },
        "item": {
          "id": "ee231d3d-023b-46cf-b6dd-d29c5200bbf5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "13861a8a-27c5-49c4-9ed7-90a01627e056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128ad787-11e3-4b98-aaf7-0de0de6416e1",
        "cursor": {
          "ref": "080c5a72-5d7f-4e49-99a4-f28e6cf34541",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d9713b1d-388e-4ca1-9eed-929698d7e242"
        },
        "item": {
          "id": "128ad787-11e3-4b98-aaf7-0de0de6416e1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5554ed6a-0fd1-4e8d-8ff9-d90ef93d494d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf4034f-0007-4842-b10c-4d8c4235e3cd",
        "cursor": {
          "ref": "c098b7fb-8219-40dd-94b3-9953fbc74c47",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "46b354a0-0ac7-463f-874f-20f8479f0235"
        },
        "item": {
          "id": "6cf4034f-0007-4842-b10c-4d8c4235e3cd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9627895f-446a-46e0-9b9d-7551d8ed97e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896b5614-7ac3-407a-9098-0908fd36c812",
        "cursor": {
          "ref": "b72596d4-b664-4adb-85ee-5b99ddf9a68b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "022bce26-a354-4912-ad81-6d50005a9688"
        },
        "item": {
          "id": "896b5614-7ac3-407a-9098-0908fd36c812",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4b5a889c-0a98-400a-b3b6-f9f245996f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdcdf1e-4abf-45ef-9dfe-d1e587f6e39b",
        "cursor": {
          "ref": "8227313f-9eff-4d60-b8bb-3bceb58d0ae7",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "309f9153-df0b-4fb3-b584-7049ac2c4d29"
        },
        "item": {
          "id": "6cdcdf1e-4abf-45ef-9dfe-d1e587f6e39b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3bf63e2b-95a5-402e-9f97-04ee73395a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4bb2aa-9576-4a0b-ae83-816924925527",
        "cursor": {
          "ref": "11376ea4-1334-4308-8653-87736b5514ad",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "333f4f71-d23f-42b7-bb94-903fc5d50648"
        },
        "item": {
          "id": "bd4bb2aa-9576-4a0b-ae83-816924925527",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6902aa4f-b6ee-48fe-b942-98d1894e0b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332b629b-b9eb-4ad9-9b90-573fb6e45945",
        "cursor": {
          "ref": "cbf4056d-7c5d-413d-93c7-3c8d508bb5a2",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6dc765eb-6ded-4617-87f7-d4e5685da345"
        },
        "item": {
          "id": "332b629b-b9eb-4ad9-9b90-573fb6e45945",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fbec53d4-9e2d-4de2-9cf0-2d8dd90cac17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28581e05-39db-4950-a602-c2023ff9cc2a",
        "cursor": {
          "ref": "90b1d152-2bdd-4907-876d-3088c1c2f800",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "15a4e879-1482-4aaa-9ede-2eb264ff0558"
        },
        "item": {
          "id": "28581e05-39db-4950-a602-c2023ff9cc2a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2d4a69f0-6bfd-4025-ac98-0fe1233b82c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc5d646-8491-4b89-bf98-3bd88fb4e47c",
        "cursor": {
          "ref": "00c68312-a738-4777-8a6a-0b92f7ab60cc",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "43a56e46-23dd-4480-993c-f8b1d13a0a2d"
        },
        "item": {
          "id": "5fc5d646-8491-4b89-bf98-3bd88fb4e47c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3f97baff-7da1-4322-a23b-8ea8705c752e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b05033-ef26-4500-86aa-f7ba47ac87be",
        "cursor": {
          "ref": "ffec7f96-c04e-4f56-a357-291f9f228c4c",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7b015d72-0007-4a58-888a-51b47b935216"
        },
        "item": {
          "id": "20b05033-ef26-4500-86aa-f7ba47ac87be",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "36264780-44ab-407b-8881-6b6a32496a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0f4a9e-59ed-476a-82d9-4ec87d59ab36",
        "cursor": {
          "ref": "da38a15d-d213-4dfe-9069-02c1aeeaeedd",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f7a4b423-8b9d-4e2c-9e6e-bbe371525812"
        },
        "item": {
          "id": "7b0f4a9e-59ed-476a-82d9-4ec87d59ab36",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a880586f-877d-44bb-9af8-56edbaea8649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09b9937-cc1f-4891-ab9b-b6aabf71e99a",
        "cursor": {
          "ref": "820ec270-cc17-414d-907a-d1c745d622c9",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b630fa88-fa52-4ad1-aed0-494055fad178"
        },
        "item": {
          "id": "d09b9937-cc1f-4891-ab9b-b6aabf71e99a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "591e8b98-aa01-4b09-a75b-2070f4e238f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc7f61b-1683-409b-ac1a-c83a189f8cbf",
        "cursor": {
          "ref": "1f051899-87ba-4db9-b079-064ab687fe52",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "77205679-455d-427d-a8ac-8e87188e801e"
        },
        "item": {
          "id": "bbc7f61b-1683-409b-ac1a-c83a189f8cbf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f98e8485-2ab2-4133-a97c-5ad7a4699354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d625735-8a66-4435-b28b-29330f5bdcfd",
        "cursor": {
          "ref": "21ac3653-cafc-4fef-be36-9066d73678c7",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b731bcb1-5627-4c6c-954a-c370e76cc77b"
        },
        "item": {
          "id": "7d625735-8a66-4435-b28b-29330f5bdcfd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "83a9f849-19a1-48a1-bf6d-e0a00edd3b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7217d42f-3af6-40ed-acb6-49ae7dfeab4b",
        "cursor": {
          "ref": "bd3da0b0-d890-4d74-9975-253fc7e2b2f1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4eb45f8b-43d0-4b40-a3de-7379b9300a55"
        },
        "item": {
          "id": "7217d42f-3af6-40ed-acb6-49ae7dfeab4b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2a1f290c-c15b-4c2e-bd64-ecc6a8861f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f71620c-c49e-4279-9374-7e95047d2483",
        "cursor": {
          "ref": "c393c8d3-eb36-4311-a7b4-9d5d0a81455e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "18596dba-1f34-4cf1-b67a-5d81372ebb42"
        },
        "item": {
          "id": "7f71620c-c49e-4279-9374-7e95047d2483",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e0a30a1a-b9cd-4379-b43e-b68b89891f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76afcc47-7e6c-417c-96b5-b38d523652d7",
        "cursor": {
          "ref": "41ac3270-8eba-42ef-b8fd-19c3c1e4c17d",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6a1f5880-3753-4bb9-bd8b-bcd4cca092cf"
        },
        "item": {
          "id": "76afcc47-7e6c-417c-96b5-b38d523652d7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "dd8e84d9-81d5-42ea-925f-f57b48299d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae6ca0c-39ed-44f1-9436-4baea2b80365",
        "cursor": {
          "ref": "5f4c37fa-464a-46c8-ab97-2e1ecc5f59fe",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2ae5ef2b-00e1-4f2a-a944-7c936ec80546"
        },
        "item": {
          "id": "dae6ca0c-39ed-44f1-9436-4baea2b80365",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "95eb7142-8eaa-4666-8104-27cd98a18a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d05972-982e-487c-a5cf-af0133f3c97e",
        "cursor": {
          "ref": "fb2257e6-a61d-44ea-b9ed-5e6783d298da",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0205d659-ec2b-456b-b704-92cab51ccbb7"
        },
        "item": {
          "id": "64d05972-982e-487c-a5cf-af0133f3c97e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "654ef64b-d018-4f13-aaef-012f8dc1b38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1996c2c6-6001-4550-8436-fc88860fa1d5",
        "cursor": {
          "ref": "e456890e-7f38-4e01-b287-ec8ead688385",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a4a0ee54-e197-47a8-8670-1497b11813a7"
        },
        "item": {
          "id": "1996c2c6-6001-4550-8436-fc88860fa1d5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c9d22ac5-7546-446f-a3f9-0f71ccb2525c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f618fbf7-b4e8-4e4e-b16b-d904617b3c1f",
        "cursor": {
          "ref": "f43429fe-a3fd-4966-bb3a-0f37c858ada6",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5b9cf7be-1e30-49d1-9293-c2fda1c4c387"
        },
        "item": {
          "id": "f618fbf7-b4e8-4e4e-b16b-d904617b3c1f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "70d15264-d40a-4f54-9e81-e8338bba68b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d1d9d6-28ee-4fd9-8060-e4e46adadb2b",
        "cursor": {
          "ref": "a61b8d86-ed6b-487f-969f-008c4f9d1b22",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e1354498-cebe-4245-88c6-98120a02d5ff"
        },
        "item": {
          "id": "46d1d9d6-28ee-4fd9-8060-e4e46adadb2b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8ef7ae98-2b2b-4cec-b046-fa7c5211b5f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c222f3-304b-4d2a-b377-50f6ba4c3eea",
        "cursor": {
          "ref": "152ba1ef-d9ef-4c62-81b6-89c90946fbeb",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "136267b0-d5bc-416a-97d8-cf2b01064496"
        },
        "item": {
          "id": "f3c222f3-304b-4d2a-b377-50f6ba4c3eea",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "69ff20d1-e033-408b-913a-4b0f8d08835d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "132989e7-d434-48c1-ac41-7de5bac8b46d",
        "cursor": {
          "ref": "ccb02590-2c2a-4248-87a5-576fc99cd596",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "242c4a9d-f6e4-43bd-a22b-18bc52393c08"
        },
        "item": {
          "id": "132989e7-d434-48c1-ac41-7de5bac8b46d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "734bac17-0491-4c49-8735-01a8407a88b1",
          "status": "Created",
          "code": 201,
          "responseTime": 3130,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38506ce-0ec4-4a03-9598-73c65c61847f",
        "cursor": {
          "ref": "78406b2e-57f1-4f12-ba1a-00ccdf362d74",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "605fd5f5-2552-488a-8f2d-58e28bc3e381"
        },
        "item": {
          "id": "a38506ce-0ec4-4a03-9598-73c65c61847f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "45cb26a6-ffe1-4ee2-8f65-5b2b6093450a",
          "status": "Created",
          "code": 201,
          "responseTime": 3079,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ab91c6-1af3-4b25-bec0-26b7c5595f97",
        "cursor": {
          "ref": "ce3a904f-5447-4a81-9338-d48d9c991c36",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d6fe61c6-84e7-4c29-9ee1-0b24bf4a6989"
        },
        "item": {
          "id": "57ab91c6-1af3-4b25-bec0-26b7c5595f97",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a17d010a-8265-46fa-848a-c5040ec8794d",
          "status": "Created",
          "code": 201,
          "responseTime": 2347,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "93709d92-a94d-43f9-ad80-02c79d5d9d58",
        "cursor": {
          "ref": "67405022-a711-47f4-b110-c67496c14008",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bbeeeaec-1362-45f7-835b-f2f14bfd2e9b"
        },
        "item": {
          "id": "93709d92-a94d-43f9-ad80-02c79d5d9d58",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3c517b3b-22d2-498c-ba9e-bb0fb5857fea",
          "status": "Created",
          "code": 201,
          "responseTime": 2203,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe5c7a0-1424-43c3-bce2-141253a14613",
        "cursor": {
          "ref": "3178063d-91bf-44d1-a3bf-a10427a9649f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "129a903f-bd57-47a4-a000-45944fbcac33"
        },
        "item": {
          "id": "ebe5c7a0-1424-43c3-bce2-141253a14613",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f96090ea-cdea-4db0-8121-f41a896f945e",
          "status": "Created",
          "code": 201,
          "responseTime": 2030,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e016516-8d50-4548-be2f-14991a5de0ea",
        "cursor": {
          "ref": "81255a56-ce00-4af9-9dcc-8fd244430940",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "04f28803-4790-4310-9a56-c540bba5926c"
        },
        "item": {
          "id": "8e016516-8d50-4548-be2f-14991a5de0ea",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f739e8cc-4c41-445f-8a34-8e8c4bd0886b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b41bf891-7928-4496-931d-878cf9ed188b",
        "cursor": {
          "ref": "d69d3cb0-0166-445c-a8b1-aabeb01b0d1e",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "292c80b7-3d4b-4ada-9101-1efd4b8e2bdb"
        },
        "item": {
          "id": "b41bf891-7928-4496-931d-878cf9ed188b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7261f33a-331c-46ae-bc32-b6f99df11e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6fd125-0b81-47e8-9a63-8e6c3ae3cfa4",
        "cursor": {
          "ref": "d84b5c7c-2eb4-49d3-b090-f2d3291e1c4d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c69239a1-ec07-4829-937c-7402d4f08920"
        },
        "item": {
          "id": "3c6fd125-0b81-47e8-9a63-8e6c3ae3cfa4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5e262b8a-b7ca-4228-ba44-f62ef0e49e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b50b73-051b-4c5e-9be8-fddc22125b7d",
        "cursor": {
          "ref": "6facc92b-9708-4d40-9352-4084bdda8282",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f1653b09-852f-492d-8204-449217db76e8"
        },
        "item": {
          "id": "58b50b73-051b-4c5e-9be8-fddc22125b7d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bde5da05-6d4f-4b98-9818-946ad21cb8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d79e687-3129-421a-bcf7-724076d47817",
        "cursor": {
          "ref": "69e6466a-c5ae-4abb-8948-9659f6b605fa",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e52aaed4-1fd2-4a44-9c21-5c61e8c05f5f"
        },
        "item": {
          "id": "4d79e687-3129-421a-bcf7-724076d47817",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "958d87dc-4e1e-4c6d-b5ec-db8553aa8a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60df4d44-63cf-4179-8c9b-5278943f8b0c",
        "cursor": {
          "ref": "3b66ea92-2344-496e-a8f9-aa6a32f49fc7",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "95f7a68d-7447-445d-92c2-4c4dbd7a8f27"
        },
        "item": {
          "id": "60df4d44-63cf-4179-8c9b-5278943f8b0c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2818d7a1-0afe-4055-8edc-2c03f3763a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e358d2-f920-431a-98c0-9ce89d0f7f1e",
        "cursor": {
          "ref": "6f1fca41-c87a-47ad-8bd4-ea9b89b6daad",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b3bd8707-29ff-4fe5-b00e-8a1b60177302"
        },
        "item": {
          "id": "61e358d2-f920-431a-98c0-9ce89d0f7f1e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9fe29926-fb1b-4843-a073-72ec38ed84db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1835729b-7033-40bc-a10e-c69c9a95a0ce",
        "cursor": {
          "ref": "8918e3ac-280f-4225-9b73-7fd37771c6d6",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d7ca97a1-8bd3-4700-a029-7548d0b164e9"
        },
        "item": {
          "id": "1835729b-7033-40bc-a10e-c69c9a95a0ce",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "52366752-6057-45c6-92d4-2f9e18756b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443cb755-1c4a-4306-80d4-05d6ff1a650d",
        "cursor": {
          "ref": "3854a150-de77-4ed3-a083-f8b3875631c8",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "691608b3-29b0-40a9-b72c-1354dcbb97ef"
        },
        "item": {
          "id": "443cb755-1c4a-4306-80d4-05d6ff1a650d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "daa89585-9379-4670-91c2-273e75ecb35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66b940d-ea5e-42de-a770-03ab5cbbd523",
        "cursor": {
          "ref": "ccc4a121-91fe-449f-ba2a-eb80ddea1be0",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "89000104-9156-4a07-9da2-918cefba0aca"
        },
        "item": {
          "id": "a66b940d-ea5e-42de-a770-03ab5cbbd523",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "06089962-772b-492a-bcbd-5d39016a447c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0366db4-a846-42a6-b8ea-f4bfa5b27e9b",
        "cursor": {
          "ref": "f9ae607d-3113-4bd1-b3ca-c58a9bdf823e",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8d6d5385-847e-4e78-90eb-61125c1a8f2a"
        },
        "item": {
          "id": "d0366db4-a846-42a6-b8ea-f4bfa5b27e9b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a5b976e2-f83d-4537-88a7-e943a57670d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed7b4a3-1294-4736-b319-e62e4f3e1c84",
        "cursor": {
          "ref": "496a4c55-2064-40b4-9ce5-bf694eb53767",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "86ceb0ef-af08-49e2-931f-fe062b26c2d8"
        },
        "item": {
          "id": "7ed7b4a3-1294-4736-b319-e62e4f3e1c84",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f0ee51da-e80f-4fd2-85ef-6b11d59665fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29f435d-6620-47b6-96d4-2a46c6f74265",
        "cursor": {
          "ref": "29e59a06-9d22-4573-81c1-56388782f9dd",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0a31cfa2-8732-4f1d-a18a-841b85c07937"
        },
        "item": {
          "id": "f29f435d-6620-47b6-96d4-2a46c6f74265",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2e5258f0-0777-428a-8330-98c429207b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee59698f-eba9-4c54-bf30-46b7b86d1640",
        "cursor": {
          "ref": "e73fbff0-b621-43c1-be58-e61a962dc46c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f7dcd82e-9df0-4ee2-be33-34442faec5a5"
        },
        "item": {
          "id": "ee59698f-eba9-4c54-bf30-46b7b86d1640",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "adc01064-3f8f-49fb-ac66-aaa73d6244ef",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 110,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9268b4-7b78-4db1-aa12-5c6aff04d844",
        "cursor": {
          "ref": "b55ed9bc-d34d-4ebc-93bd-70193651aab9",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5f082844-5ab3-47c9-93cf-d745cb0abf76"
        },
        "item": {
          "id": "ca9268b4-7b78-4db1-aa12-5c6aff04d844",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "16d33c06-5e24-4956-8821-9eb727efe1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7353f38f-1cd7-441e-b189-d9bf8362bf32",
        "cursor": {
          "ref": "a89398d8-66d6-4476-82f0-65290ec09bda",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4da48dfa-232b-41ef-b318-93eca419d47b"
        },
        "item": {
          "id": "7353f38f-1cd7-441e-b189-d9bf8362bf32",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "94178b86-caa5-4778-905a-b57e04a37604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050d028d-2ae5-446f-b831-594f15e4f430",
        "cursor": {
          "ref": "81104ce4-1677-4747-a18e-9e7a7fe6a7a6",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5c78fc37-0565-4cf3-8bb0-903c7dc724a6"
        },
        "item": {
          "id": "050d028d-2ae5-446f-b831-594f15e4f430",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fa0a5417-7f69-45e5-8694-967e77afe62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94997540-f426-45ad-93d0-08c7db2b698e",
        "cursor": {
          "ref": "c24cac68-6c09-4893-85b5-7223233e2b36",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "708a9ae0-ea24-4944-8426-6bd840b334a2"
        },
        "item": {
          "id": "94997540-f426-45ad-93d0-08c7db2b698e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "47782fa0-681e-4709-8a93-9cddc7f07ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725d2b87-b38b-44da-ba41-0fc5763447ce",
        "cursor": {
          "ref": "8db46000-110a-4c67-91d7-4cad26db01e1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9ece5c81-c43a-4f8d-9e52-b83089f3dcb2"
        },
        "item": {
          "id": "725d2b87-b38b-44da-ba41-0fc5763447ce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b45e254c-7752-420e-9032-c0c29e714fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae68b8f-8fa3-4721-9c3d-c1cefeb30ee7",
        "cursor": {
          "ref": "e9d13ec2-68b4-47c4-9119-80acfeda67fa",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d4fd7398-9164-4bfc-99de-d02f0f11e4d0"
        },
        "item": {
          "id": "0ae68b8f-8fa3-4721-9c3d-c1cefeb30ee7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c0e7680e-8b8f-4aec-a48b-e39a3feec15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24bbaae-df36-4afb-920f-caf942e0a72a",
        "cursor": {
          "ref": "5c23d14b-39e7-4b18-b76e-73e9f8b91922",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fecbc91f-0106-4391-9d3d-d36096e4c8fe"
        },
        "item": {
          "id": "b24bbaae-df36-4afb-920f-caf942e0a72a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d5adc35d-7c7d-4195-8936-93bee05b9a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898de11f-6517-4bea-9d36-07ada524af18",
        "cursor": {
          "ref": "e74be93a-cab8-4445-b35f-09f4c45291a6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1691aa70-d2fe-410d-a3f2-bab06c79a303"
        },
        "item": {
          "id": "898de11f-6517-4bea-9d36-07ada524af18",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1eec1673-ba1c-4f2c-9b43-e5c0414a4b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54ba09f-d960-4afb-8351-5ddd4a1afaef",
        "cursor": {
          "ref": "56e4ec09-8c1f-4487-b390-83d624e89fef",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "51dd69c8-4e06-4874-8cd2-948c8397b831"
        },
        "item": {
          "id": "b54ba09f-d960-4afb-8351-5ddd4a1afaef",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "478100fd-c0e9-4df6-a5d0-76dbf401efa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175cca91-64f9-4b42-84d3-01b7dfca27b6",
        "cursor": {
          "ref": "26738e9e-cb66-46cf-b4de-f4379078b67d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eeca62f2-5a8e-459d-af92-481e5c15a3e5"
        },
        "item": {
          "id": "175cca91-64f9-4b42-84d3-01b7dfca27b6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a646c6e2-8247-4ec6-8c31-5a1c8a11e009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccc51ab-e137-4703-a02d-89c35afe30e5",
        "cursor": {
          "ref": "0152a1c9-036a-487d-9eac-1a62ad9ab5a3",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b73b270b-00c3-4434-ae68-e0dccaa94b20"
        },
        "item": {
          "id": "fccc51ab-e137-4703-a02d-89c35afe30e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "47e6d6e0-cf0a-43a4-8051-598cff14e2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0f76e5-ae21-4645-b60a-6b89136140bf",
        "cursor": {
          "ref": "7597e198-1439-4158-8588-5385f5a2da77",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c7666262-e86d-4a56-ada6-6e9e08c62e28"
        },
        "item": {
          "id": "1b0f76e5-ae21-4645-b60a-6b89136140bf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2566424e-df04-42e9-b212-7b1d2fd64c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5f8a13-2ac4-4335-8148-c74267a7027a",
        "cursor": {
          "ref": "638f193a-0032-44e9-b980-d4207deacab1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "35a08df4-3d50-43d1-906d-763a1f169821"
        },
        "item": {
          "id": "2e5f8a13-2ac4-4335-8148-c74267a7027a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "434730d2-0fb3-4d7f-b56a-780b312bfd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faa9c00-cf21-45bf-885c-5731f20f2988",
        "cursor": {
          "ref": "68282ef8-5dd4-4183-829b-b22d3919bf92",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a2c762a9-0baf-4341-bc30-a23271f42647"
        },
        "item": {
          "id": "5faa9c00-cf21-45bf-885c-5731f20f2988",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8113ba0a-0bdd-49bb-a0d1-642b53f322e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b470c95-3233-4684-8e1f-cd8e4b2f928f",
        "cursor": {
          "ref": "de0999e8-1920-42da-9696-320e3c580a46",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fe4d8e17-b8e7-470d-b7ad-3f0b8130f040"
        },
        "item": {
          "id": "9b470c95-3233-4684-8e1f-cd8e4b2f928f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ab9d7c0b-2512-40c8-a18c-b39f458d7c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4396bbe1-c97c-453e-980a-215473fcb6ff",
        "cursor": {
          "ref": "5bf98763-2dae-446e-ad4e-314f5b243987",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "944bf9ef-4d04-4b16-b361-732d7b616992"
        },
        "item": {
          "id": "4396bbe1-c97c-453e-980a-215473fcb6ff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "abb9a4f5-6efc-4629-aeb4-a65839a0af57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f2135b-b307-484c-b9cf-ac1766da36a8",
        "cursor": {
          "ref": "9b3a5ed0-1859-4140-9044-2c0ec41e5dcd",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b697f247-a708-432a-ae8f-e489aa04d614"
        },
        "item": {
          "id": "79f2135b-b307-484c-b9cf-ac1766da36a8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3ddce02b-6979-4573-b6eb-e2ca326a011a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2198057-f350-4ad5-9eaf-41138b5b0e04",
        "cursor": {
          "ref": "7ad5136d-c74b-4e80-b5e5-8842556a6471",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "066fef9b-40ae-43f8-b7c4-22ab842d7ffb"
        },
        "item": {
          "id": "b2198057-f350-4ad5-9eaf-41138b5b0e04",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f0dbaf80-3915-4e94-a643-5b546c841d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8429c8a-0b7a-4877-9862-2dd028baadf4",
        "cursor": {
          "ref": "783ae2ef-0f80-45ef-a975-cac967f10e39",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3e2810ce-f68c-4b1a-924c-e859639bbea1"
        },
        "item": {
          "id": "c8429c8a-0b7a-4877-9862-2dd028baadf4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dc9b0c31-58c8-4953-8825-ef623a907abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ea57f1-5430-41ce-8f5d-276846743e46",
        "cursor": {
          "ref": "579232a6-c8be-4388-8bcf-4d57ecf6b96f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c66ce962-888d-47f3-857d-d1bac3555179"
        },
        "item": {
          "id": "79ea57f1-5430-41ce-8f5d-276846743e46",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cb57cad4-352c-4918-88eb-e9f553ca65a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585c90dd-f1bb-4038-be2b-abb5323c5dbb",
        "cursor": {
          "ref": "4fbba08c-adbb-431b-a88a-2acfebf2a545",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4e267951-bf96-4c22-a84b-524825ee8bb1"
        },
        "item": {
          "id": "585c90dd-f1bb-4038-be2b-abb5323c5dbb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e918c579-c3f1-48d4-a3f9-81cb4a5db0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed52e33-4713-4614-9ad6-e50d32ce2507",
        "cursor": {
          "ref": "66daba92-8776-4e00-9e57-a82e25af777b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "546c66df-a127-440e-8467-fa28feb4d08f"
        },
        "item": {
          "id": "4ed52e33-4713-4614-9ad6-e50d32ce2507",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "92f0dc82-a86f-4865-8dbd-09628c907ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c36fc7-b1be-4827-9f6e-76293817fe46",
        "cursor": {
          "ref": "e71061a8-3f9f-4a2e-b553-66d2e0da0f80",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0acf7d27-6327-4da4-abf1-212972bff2e8"
        },
        "item": {
          "id": "47c36fc7-b1be-4827-9f6e-76293817fe46",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a66701f6-97a6-4d8b-920e-c44422ad3035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f1c28b-0218-4a32-b746-e22f9a1dd0b0",
        "cursor": {
          "ref": "f932ccec-0e0d-436c-af5d-cb17eadb21ca",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "21ee5df8-5c16-4716-b4cc-77a1ec59341d"
        },
        "item": {
          "id": "d7f1c28b-0218-4a32-b746-e22f9a1dd0b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "887cc5cf-5bbc-4f31-b3da-186869f86619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb2db01-5958-4c89-a10d-df48d16ab1c6",
        "cursor": {
          "ref": "5d824f4c-afaa-4911-8d84-044a2ea85704",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bb700a84-624e-448a-8299-9e2d85eb4bad"
        },
        "item": {
          "id": "bfb2db01-5958-4c89-a10d-df48d16ab1c6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8fd01a58-4b4b-4e80-8569-793088e663bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaf2364-5bdf-442e-b90c-75801dd2467a",
        "cursor": {
          "ref": "9edbfb21-fdbd-495c-9dea-01e8177f9596",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6cb5fb76-2871-47e5-ba0d-7dd3b50b9c64"
        },
        "item": {
          "id": "1eaf2364-5bdf-442e-b90c-75801dd2467a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "995a65ed-5b95-49d8-a272-fef631ea9dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ef358f-914d-4aac-9c5f-afbdf1b3fbae",
        "cursor": {
          "ref": "bebbe7a6-9105-4af4-b398-1c8a4dc81ff2",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "34fa322a-ad5b-47ed-b81f-86cd52d87a4c"
        },
        "item": {
          "id": "b4ef358f-914d-4aac-9c5f-afbdf1b3fbae",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06aa696e-590f-47c8-8b00-38258db8a054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2525ea-bf1d-4c3c-bf98-7047b0fe9703",
        "cursor": {
          "ref": "02fb811c-ee13-4a35-9ce2-ea90c97614ec",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d9bf11e2-abe9-4f54-a398-9d2cfc024689"
        },
        "item": {
          "id": "4a2525ea-bf1d-4c3c-bf98-7047b0fe9703",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0e7a604c-1fd9-4414-a95c-f8044c7e9d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ffb5f1-3931-40f8-91bb-ff7216f5452f",
        "cursor": {
          "ref": "634dd0f8-a969-4197-a662-916f2876fcb1",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c2f2a0b5-4db1-4c45-963f-ee5f6fae8516"
        },
        "item": {
          "id": "41ffb5f1-3931-40f8-91bb-ff7216f5452f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "621bb2de-7311-4733-8472-572cc67cbdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac671ef-3a53-4b50-9ac3-12a7211eb1fa",
        "cursor": {
          "ref": "c9848415-334e-43c2-b719-d76a5648f231",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7d21f5a4-2931-4c01-af4d-a3b9112fb1d2"
        },
        "item": {
          "id": "5ac671ef-3a53-4b50-9ac3-12a7211eb1fa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "06c058ff-1287-4ff5-9fb4-c12d6acaa184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf1c8d9-5228-403a-94ec-108efdb8e958",
        "cursor": {
          "ref": "e24e0982-4c0f-45b3-a5ef-bf0efec8424d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eb67266b-91c5-4e7a-9bc8-dc8fdfb3deb9"
        },
        "item": {
          "id": "cdf1c8d9-5228-403a-94ec-108efdb8e958",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b1633762-a42d-4913-b078-a6e844c38369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184cf2ad-8f00-4680-8daa-2728674a3f3c",
        "cursor": {
          "ref": "f4378e5b-c94c-4a83-99f5-c84cf216cb4e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6c0065b8-e927-4111-9418-1759209b8520"
        },
        "item": {
          "id": "184cf2ad-8f00-4680-8daa-2728674a3f3c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fc2d5fbf-38d7-4f2a-b612-19f0c19d28cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3799c117-d9df-4163-ae3d-13c5d4209282",
        "cursor": {
          "ref": "009fbe92-0f87-460f-87b0-ae5b74d225f2",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "97fe8a68-0f34-4245-8c98-453f503e5be7"
        },
        "item": {
          "id": "3799c117-d9df-4163-ae3d-13c5d4209282",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a159b567-979b-49ae-96b0-cae7d95df114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ee33f2-0289-477f-9201-5b9df1783ef3",
        "cursor": {
          "ref": "4dcbf2e1-2ff6-4b7c-8734-b4b7b478a233",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3702aab7-4d9e-4622-8012-693f34f4bde3"
        },
        "item": {
          "id": "11ee33f2-0289-477f-9201-5b9df1783ef3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b9373430-e866-4bf8-b1a5-d2911612fefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9282a519-114a-41cc-b5ba-24bc71f94ad4",
        "cursor": {
          "ref": "4ad890c7-7002-41b2-a418-171a6a328cfa",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b7db5527-44a9-4a57-8e3a-2b11d606e525"
        },
        "item": {
          "id": "9282a519-114a-41cc-b5ba-24bc71f94ad4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "663601b6-cfee-4f4b-84f0-196d3680f7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d63ea6-c886-40ab-9b38-0a07e5d166ad",
        "cursor": {
          "ref": "4503d859-ebdc-4a36-be1f-b6c0b3af83e4",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a832808b-d764-466d-9351-1f326d95df88"
        },
        "item": {
          "id": "44d63ea6-c886-40ab-9b38-0a07e5d166ad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "143d5867-475f-4aba-bb0f-046f5cc710ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb84c89-61df-474d-8272-183374a92e94",
        "cursor": {
          "ref": "bc7eb705-b724-499b-b081-cf1d7e20c980",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d05421a7-789a-491a-9c6f-f7ccfd3c379c"
        },
        "item": {
          "id": "5cb84c89-61df-474d-8272-183374a92e94",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bdd84743-c0b8-4afe-951c-a42bfd557136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a0de94-68b4-4397-95a6-815f3498ea03",
        "cursor": {
          "ref": "627d20a8-8e46-4fd0-b5da-0b3cbb61627b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f8b065cc-3830-4044-99ea-6053b2961f21"
        },
        "item": {
          "id": "88a0de94-68b4-4397-95a6-815f3498ea03",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9923fde6-bddf-4514-b4bb-de457dc9be8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80fcc1a-e9f8-4636-8e65-4a2ad7793f85",
        "cursor": {
          "ref": "49b3143e-b7c2-4ed9-b282-b0a3fc93c89c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8feedc01-507d-4a9b-9262-678b29554137"
        },
        "item": {
          "id": "a80fcc1a-e9f8-4636-8e65-4a2ad7793f85",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "49a6c64b-093e-471a-a47b-bce494e42ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef2b9a2-9824-4831-9577-f292418acc34",
        "cursor": {
          "ref": "c386bafd-a5fb-49dd-aeb7-5fa75f027824",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "96e65cf3-216c-4fce-95e7-ee4dc837ef51"
        },
        "item": {
          "id": "7ef2b9a2-9824-4831-9577-f292418acc34",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "41996c41-6aa8-493a-85ab-45a9d26d5925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7850e19a-2fe4-49e5-bac1-712a1bec9096",
        "cursor": {
          "ref": "a9201f43-d12e-4344-b2e8-a91946dd5252",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "19927d43-8e35-474d-83fb-97221c4a281d"
        },
        "item": {
          "id": "7850e19a-2fe4-49e5-bac1-712a1bec9096",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d4b38256-79df-4f8f-be25-79dff1916d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2669690f-270c-4700-bea4-6caf996f96c9",
        "cursor": {
          "ref": "a3b36d5a-ef0b-4039-849d-408b22b93cc9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0018c660-f516-4423-ae59-671ca1f42160"
        },
        "item": {
          "id": "2669690f-270c-4700-bea4-6caf996f96c9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d58aa954-dfa2-4d49-aa49-2dd6a9167e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a280a38-2447-48df-ac9a-f392ea523748",
        "cursor": {
          "ref": "e0b1e694-00dc-472b-a9b0-c4f9cd16975f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "525bca2e-7d0c-4bb1-bf90-f4966cee0bf6"
        },
        "item": {
          "id": "0a280a38-2447-48df-ac9a-f392ea523748",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "718eccb2-081c-4a2a-a6f8-10208bb6da1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c01b79-fa88-46e8-810b-7f2e4f6e47a4",
        "cursor": {
          "ref": "1e37884b-cf99-4e80-a1bb-69719379d1ab",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ce928313-cea5-4e0e-ae0f-858fdd854c21"
        },
        "item": {
          "id": "f5c01b79-fa88-46e8-810b-7f2e4f6e47a4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "169ca580-acad-48aa-88db-1bceb5475615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ac7dae-8813-4a34-ae5f-354a65d43b59",
        "cursor": {
          "ref": "6d80fbe1-e9c6-4fd8-a629-de0f09b7c969",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a93fa138-8b03-4fa7-ba9a-45e7872207d8"
        },
        "item": {
          "id": "57ac7dae-8813-4a34-ae5f-354a65d43b59",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "780c0747-3c4b-45cc-baea-4af7bd4c679a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3853a8a4-95e7-4c2b-8a29-30879c92edde",
        "cursor": {
          "ref": "b2c56d53-fcc5-4588-be80-6f76a87ea76c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d176b521-cd32-4f0e-86fa-238cd0b80a4c"
        },
        "item": {
          "id": "3853a8a4-95e7-4c2b-8a29-30879c92edde",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "43706ef3-48f0-48ac-83e7-d01c7c32dc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08025839-d34f-43e0-9a46-cffa903fb45a",
        "cursor": {
          "ref": "97ff30e2-a480-4ba1-9a19-44d66d1b3d25",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ea036484-efe5-47ef-8825-a029f055e68c"
        },
        "item": {
          "id": "08025839-d34f-43e0-9a46-cffa903fb45a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4d8501d7-fc43-4c7b-add9-d4a37eb67baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353a2c72-39e0-4aab-8a18-e184ea3ace62",
        "cursor": {
          "ref": "24ff3dd4-d508-4831-9a47-e613816492b4",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e651ab55-d4e3-42a3-a7b4-033dffa315c9"
        },
        "item": {
          "id": "353a2c72-39e0-4aab-8a18-e184ea3ace62",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c82eae9e-cd78-4522-9893-a0f040169a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0a1a80-0634-4277-b2a4-1cfb803b91ba",
        "cursor": {
          "ref": "f9fe73ce-9480-405c-84e8-6a4154ae7b22",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bca2dd5e-cd89-43aa-b117-873dfe67529b"
        },
        "item": {
          "id": "ea0a1a80-0634-4277-b2a4-1cfb803b91ba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b5364dce-eddb-4590-8bd0-a49e62776f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba69db2b-2e2e-4728-b7ae-1270703e037e",
        "cursor": {
          "ref": "c36a9e81-ccf2-43b0-bc03-044a82d709af",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3513272a-c836-4ec9-913f-b1f6eb25d38d"
        },
        "item": {
          "id": "ba69db2b-2e2e-4728-b7ae-1270703e037e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8ece8d66-ec63-4c13-9c7e-8c581c33fbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e096f61f-b1dc-45ca-8466-ac539c5ba92b",
        "cursor": {
          "ref": "c475731d-7573-40b6-9455-1a395948bf3d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ef271d8c-146c-43e0-9beb-1236fe0e7e63"
        },
        "item": {
          "id": "e096f61f-b1dc-45ca-8466-ac539c5ba92b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a53ef8bb-501a-4d77-8e60-a95b2e45a5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f468b282-b1e1-4713-bac3-4ac5cd4342ac",
        "cursor": {
          "ref": "fe5a77bd-2877-4770-97ef-c2ded9b58ae6",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f7bd0426-32a1-42b5-bd3b-f8871480bbfc"
        },
        "item": {
          "id": "f468b282-b1e1-4713-bac3-4ac5cd4342ac",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dd5c4e6c-576c-4546-b9b9-3b76f3560f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee680f1-8914-4a29-917a-87d3ffad7b67",
        "cursor": {
          "ref": "49d3ec9d-d2ee-494f-bdbf-b5f49f22798a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e610247a-c707-4fb7-a28a-7a65fe77b04c"
        },
        "item": {
          "id": "3ee680f1-8914-4a29-917a-87d3ffad7b67",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f0d986c5-af0a-4dcb-b47f-5da95d5a997d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef18880-c087-423b-98f6-d5b9a1885011",
        "cursor": {
          "ref": "09bf5771-ce58-43c6-af15-94e44803b878",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b6dbcbe2-54cd-498b-8f73-ae99934311ca"
        },
        "item": {
          "id": "1ef18880-c087-423b-98f6-d5b9a1885011",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c76b2b0f-ebc3-4239-9217-baea6ae61bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5922bebe-6c3c-4f84-8e8b-e418a2fe9d89",
        "cursor": {
          "ref": "41d27533-d2a3-4784-841f-61937542655a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7592e0be-23b0-4806-b9e0-4c90098b296c"
        },
        "item": {
          "id": "5922bebe-6c3c-4f84-8e8b-e418a2fe9d89",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "08df3c31-53fc-40ee-8148-7e3063ce25c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6649b641-9117-449b-98f5-c9f177e2addc",
        "cursor": {
          "ref": "78dc56c8-1eca-4576-96d8-0f19a82dad96",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5f140005-d1ff-4ea6-a414-0a5c65aca053"
        },
        "item": {
          "id": "6649b641-9117-449b-98f5-c9f177e2addc",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "be5c4a9d-5292-4997-990f-8d545443af21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebb155d-0d76-4513-9906-855ff2fe0c1a",
        "cursor": {
          "ref": "8e98b080-0bc7-4f6c-90a3-76364d20f77a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "67a0f526-daa3-472c-8202-4a2297fb54fd"
        },
        "item": {
          "id": "3ebb155d-0d76-4513-9906-855ff2fe0c1a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5a9cae24-52eb-44ec-a83e-044bb21a793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a244c86-2e08-4435-8134-b043b7bcdd2e",
        "cursor": {
          "ref": "d86893ad-ad07-49f0-bf67-b48a29f7e7ab",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "090d40aa-8dfd-45e7-b197-fb1bc1a67812"
        },
        "item": {
          "id": "0a244c86-2e08-4435-8134-b043b7bcdd2e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "93cbc0c2-4fe3-48f8-934f-860927eaad20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db58c707-7b90-4a54-b100-62cbeacde516",
        "cursor": {
          "ref": "cb82d2b8-83ba-42ac-a7e6-55e3fe0bc1ed",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e6c9fa56-c258-4a0c-a35a-d2e57e7e3d37"
        },
        "item": {
          "id": "db58c707-7b90-4a54-b100-62cbeacde516",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e2301832-47e0-41ea-a770-504074d3cb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3053f21-d594-496e-9e61-947c0e653f32",
        "cursor": {
          "ref": "ca2d5855-b6fa-4f9a-b01d-363815fb7232",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9a9f0d19-d302-4f76-b872-da4da65929bd"
        },
        "item": {
          "id": "d3053f21-d594-496e-9e61-947c0e653f32",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fcd5dd8f-b015-4e75-a8a3-ef03a7801cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae29baec-8278-45d9-99b8-426de962e7f4",
        "cursor": {
          "ref": "2d024cc6-1716-4e68-ba4f-6cb1831ae69d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "54668fca-0617-497e-a54a-b17ecd37ed41"
        },
        "item": {
          "id": "ae29baec-8278-45d9-99b8-426de962e7f4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e1fe9068-57f5-46a4-a2f4-908bac7bbc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2049439c-0bd9-4f7f-a193-bf80365388e9",
        "cursor": {
          "ref": "8a5e6f93-9fd9-4d1f-9d52-9df32ab2c90b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4b182783-b220-42bf-a374-a44b3cfbd4ba"
        },
        "item": {
          "id": "2049439c-0bd9-4f7f-a193-bf80365388e9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d442d9a8-b2bf-4c95-980f-9d83d2379b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c8c430-3bf7-4fea-ac9c-50da9b556b68",
        "cursor": {
          "ref": "3a70c9cc-3aaa-4d7c-ad54-39efa679756e",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "87294253-ded8-4190-accf-7c9e14e035b4"
        },
        "item": {
          "id": "42c8c430-3bf7-4fea-ac9c-50da9b556b68",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "36fa30ae-7b72-4f45-8c02-d07a989e7f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d9cafa-377d-4aff-9537-29e83b757f7a",
        "cursor": {
          "ref": "070f94d7-e622-4fad-af94-e1a8fcff4a90",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6b850d51-e30b-4f1a-a4e1-a1cdad0cf6f6"
        },
        "item": {
          "id": "30d9cafa-377d-4aff-9537-29e83b757f7a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9cecaa47-3954-4e42-9e9c-a37cb1332374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09af74a0-218b-45d4-846a-b5a14ef7ca21",
        "cursor": {
          "ref": "6f49ea28-5cc8-4a85-a672-f0a637fab63b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "03c04d33-d6b5-4fe6-b317-746790bef966"
        },
        "item": {
          "id": "09af74a0-218b-45d4-846a-b5a14ef7ca21",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "57936b71-9075-4421-a01a-ffbd631a4a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b29ca7-2305-4c76-8af7-bf829293387a",
        "cursor": {
          "ref": "74c60311-7372-4986-b352-3eca924e6964",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "63373ec9-26ac-4907-8d5b-687244bf55f5"
        },
        "item": {
          "id": "b7b29ca7-2305-4c76-8af7-bf829293387a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "92ca51ee-74c0-48e7-b404-787c337f10f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988f0c7e-5fbd-4b60-bf6f-d31d14168f27",
        "cursor": {
          "ref": "83367b91-e955-42f0-8479-1837216cf804",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c24fc1d0-f6db-4141-a884-3461008fbabb"
        },
        "item": {
          "id": "988f0c7e-5fbd-4b60-bf6f-d31d14168f27",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5bb53a3b-7920-4037-a128-1115aec01664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc169b7b-d142-4182-baf4-aa464e0c4800",
        "cursor": {
          "ref": "dafa6eea-f401-4a05-9871-71c7da4b6a6b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "301efb8b-7434-4f83-ab3c-64a8b0e01bad"
        },
        "item": {
          "id": "cc169b7b-d142-4182-baf4-aa464e0c4800",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "96d55784-9ccd-43e4-bd3b-4740e7b14fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639f1b1b-36fb-468c-a649-a06689b36c0f",
        "cursor": {
          "ref": "54c09e6e-a38d-4a65-9fe4-3547a34e7db4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d91bc666-dabd-4011-ad4c-8277eba4b077"
        },
        "item": {
          "id": "639f1b1b-36fb-468c-a649-a06689b36c0f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a4272d91-8eb5-4b3c-a0cc-ba056efc925b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eb42b9-5009-43f8-8b87-c14c83ba52ad",
        "cursor": {
          "ref": "6c8016c7-9f2d-4e0a-a7df-e8ea57461d3b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e622178f-31e9-497c-8c6a-b5fd4ba8d528"
        },
        "item": {
          "id": "b5eb42b9-5009-43f8-8b87-c14c83ba52ad",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "158a25f6-6227-4066-b77d-f92b3c97c571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c0b1b3-a7cd-43d8-a641-f2290f0ab250",
        "cursor": {
          "ref": "56480d56-6746-4b36-a6b5-12501f11936f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2874f01a-e3b3-498d-9d82-f0dd13d1bc3d"
        },
        "item": {
          "id": "97c0b1b3-a7cd-43d8-a641-f2290f0ab250",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "750535df-1ced-416f-80c7-efdd372d9c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf5678a-e6fd-43a2-aa20-b3c49b7fa895",
        "cursor": {
          "ref": "094c302d-fc8a-4367-86d1-01f1f2ca1048",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b8886fff-499e-484d-8ed8-db9783ca3805"
        },
        "item": {
          "id": "aaf5678a-e6fd-43a2-aa20-b3c49b7fa895",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4d96e1e5-da5b-45ce-a069-a33ec45ac8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc34887-fc16-450c-9a96-00a5de60acc8",
        "cursor": {
          "ref": "0821ae82-4c17-447f-b570-2b8d07b891d3",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "85c8c6bf-bf16-4b50-887e-6e16572ac7c7"
        },
        "item": {
          "id": "2bc34887-fc16-450c-9a96-00a5de60acc8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ce88cdee-a478-4fd9-9040-897067f165da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef8b990-5796-4084-8061-8f95418fad13",
        "cursor": {
          "ref": "566916eb-dd9d-4f17-9990-8b6aad2bdd03",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1ef65aad-0bbb-486a-84de-6883a8c90dfd"
        },
        "item": {
          "id": "eef8b990-5796-4084-8061-8f95418fad13",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fdaf10f0-b2a9-4b75-b634-c56b1de67c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79d6357-788c-4dda-884a-32c4d9365041",
        "cursor": {
          "ref": "a62ebd82-bd5f-4ec3-944e-b272bc68e50c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c8ad5794-1d7f-4743-b8b8-a8c492c6de53"
        },
        "item": {
          "id": "b79d6357-788c-4dda-884a-32c4d9365041",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8bbb656a-5584-4b84-a13f-03851b72411f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61228de-2054-4dc7-aec3-4e4eb5f66f7a",
        "cursor": {
          "ref": "23c8ba12-d7b2-4de5-865d-643a2719fa4a",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "18b364bf-4dd4-49a0-b8cb-73567cdf1788"
        },
        "item": {
          "id": "d61228de-2054-4dc7-aec3-4e4eb5f66f7a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e9135eff-cf0f-4735-b766-2feb3124aa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ef5dab-3a85-4d04-8aee-4a1632b6e8a5",
        "cursor": {
          "ref": "2d246413-9ee0-4f39-b849-e4945dd6cc01",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "51912121-3cf6-480a-b0db-8f7929804063"
        },
        "item": {
          "id": "09ef5dab-3a85-4d04-8aee-4a1632b6e8a5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "616d74a7-a9b1-4659-8338-201ed02e9e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b3db96-7fb3-41ce-83a2-c675541994d8",
        "cursor": {
          "ref": "d5c2d7ff-650b-473c-bbcb-e707f6868f8c",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5cb90b42-ccc0-449d-baa6-3fc9e826aed9"
        },
        "item": {
          "id": "f4b3db96-7fb3-41ce-83a2-c675541994d8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f68af1c4-5457-4366-9433-8643097da975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c9229a-035e-4473-bb57-3d74eb730c38",
        "cursor": {
          "ref": "6765c5a5-0023-443a-94b5-3dc1cdcb95a3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "788f9929-0dc4-4651-bd88-020f62cae019"
        },
        "item": {
          "id": "84c9229a-035e-4473-bb57-3d74eb730c38",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0ec08b8f-ea3a-4a39-9aaa-48ccdf0d6165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21af3a8c-9adc-4d92-a7e7-d2503865e41d",
        "cursor": {
          "ref": "98b26716-ac28-4f8b-a3ca-b0010f2b6438",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0ae969ae-9eda-40ee-b46f-3a1ffa777f60"
        },
        "item": {
          "id": "21af3a8c-9adc-4d92-a7e7-d2503865e41d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fa8a3721-e457-4504-a6b6-cee9840be82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab51066a-6f56-4203-817a-b3bb2ed2ca4a",
        "cursor": {
          "ref": "b26c6ada-431f-49c9-a15a-2b9f5e7e280f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2689d69c-afab-461d-bde1-a0286480ca6f"
        },
        "item": {
          "id": "ab51066a-6f56-4203-817a-b3bb2ed2ca4a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d68b5cf0-72fb-4bdd-a5f2-3ee18ae6fe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b950a5-3733-425f-94f0-09f674154d21",
        "cursor": {
          "ref": "22869a60-8277-495f-9685-998de97f2cc8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "cb517937-4442-457c-a671-a0d41cf648f4"
        },
        "item": {
          "id": "a0b950a5-3733-425f-94f0-09f674154d21",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9635474c-cb8e-4a53-8905-448492a2fa69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bc673a-37cf-4123-9529-7c3957c3aee2",
        "cursor": {
          "ref": "d2626ada-7aec-4d5f-af26-6e85ba277851",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6c5ff2dc-6390-4fe8-9941-a6291ff180bd"
        },
        "item": {
          "id": "19bc673a-37cf-4123-9529-7c3957c3aee2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a66ee5ed-bc2c-48c1-908f-6f89e0b3419b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693396d7-de0c-4bfe-8db3-5fde446e3552",
        "cursor": {
          "ref": "0fbd3889-9d5f-4a86-b638-e7c3919d1d3a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "54192e33-7983-4769-a826-40e8c088b650"
        },
        "item": {
          "id": "693396d7-de0c-4bfe-8db3-5fde446e3552",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4b9b890d-05e4-457c-967a-912ed54ba079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0768ef72-a5ee-4d32-a4f3-6b7e60dbd11c",
        "cursor": {
          "ref": "5eaefaf9-799d-4929-8f70-63978b7085c3",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "730f09d8-18c1-499e-9b1c-d965984eae2a"
        },
        "item": {
          "id": "0768ef72-a5ee-4d32-a4f3-6b7e60dbd11c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "188a284d-bf94-44c7-a825-5359c0efd2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c71c3f-8944-45a1-bac7-698e78c1db65",
        "cursor": {
          "ref": "466cc1cd-38b7-4982-903d-06d3a7a2a4d6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0d3f6636-f505-4c5b-bfd9-c28c69dd2be2"
        },
        "item": {
          "id": "a7c71c3f-8944-45a1-bac7-698e78c1db65",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b7044d59-9304-4302-a6c9-3f3bce28041f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e580a2-2a89-4fe1-acbc-c6c8c0052ee9",
        "cursor": {
          "ref": "377dff60-51ac-4d9d-9458-cf5b0f74b979",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ccd2ae63-3ecf-4a85-9fae-780a0ce7246c"
        },
        "item": {
          "id": "d4e580a2-2a89-4fe1-acbc-c6c8c0052ee9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5efe9192-d1d5-48d2-8c06-dda7846e20bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1131348-8604-4ff0-996b-ea509f247bcd",
        "cursor": {
          "ref": "fc5b83d7-fa5e-4e4c-8ba4-758796140b58",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3461b88a-4cae-4be8-b4bd-2dd55a1f372e"
        },
        "item": {
          "id": "f1131348-8604-4ff0-996b-ea509f247bcd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "65cce9d1-674b-4013-ba89-22cabe9644a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb88437-cde7-442e-9d63-0352751150eb",
        "cursor": {
          "ref": "74e1f85a-acff-439b-99a9-3277dde2788e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ca45a1a1-a50a-4915-8805-272b2fbda751"
        },
        "item": {
          "id": "cfb88437-cde7-442e-9d63-0352751150eb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "64348db7-6478-4032-a398-36fe1dd524f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf536c9-e4f1-4608-9f42-97818cab2f2f",
        "cursor": {
          "ref": "08cd80ac-9ba5-4650-af92-24581d473780",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6e3ce415-9b5c-4803-a29d-b428eab30009"
        },
        "item": {
          "id": "6bf536c9-e4f1-4608-9f42-97818cab2f2f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fcbfdbda-1e43-48a5-bae3-dd8988d100b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6516c490-9bbe-4a35-b279-f2b6de344ddb",
        "cursor": {
          "ref": "e818c03a-51f9-48ac-afa3-ae8a24f56363",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "865a609b-44f2-4a77-8618-e17b94935b44"
        },
        "item": {
          "id": "6516c490-9bbe-4a35-b279-f2b6de344ddb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8cd81a4e-2d6d-4d06-a58a-59610fb3995e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f6fff3-c3d5-4cf8-846c-b9b1bfd61fd8",
        "cursor": {
          "ref": "df5bf407-5304-4660-8026-214a1494f6f0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e954df77-10a1-4d20-9561-ec5fbe3544bf"
        },
        "item": {
          "id": "06f6fff3-c3d5-4cf8-846c-b9b1bfd61fd8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fca14a6a-a53f-4829-b9a1-f56715d695f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05f972e-056e-4ad7-bcbc-33a547906485",
        "cursor": {
          "ref": "e510b1eb-3312-4c1f-bc9f-b7158bbc9311",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "83cfabac-b64d-432f-80df-71a260418024"
        },
        "item": {
          "id": "d05f972e-056e-4ad7-bcbc-33a547906485",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b3cc8da9-2584-47f5-a737-a63c38fa8f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea300084-4a9c-4b59-a611-99350c2f2535",
        "cursor": {
          "ref": "25f19e30-2a9c-4c99-b144-152df380695d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b2c58319-eac2-4967-a2bb-73f801b9feca"
        },
        "item": {
          "id": "ea300084-4a9c-4b59-a611-99350c2f2535",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f9dc4d6b-3267-487f-a69f-1f679d1ec551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426f59c9-4fa2-4800-9842-cd543721e789",
        "cursor": {
          "ref": "91e5764a-d927-4852-a66f-c4521bcede21",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "91591603-e38c-488b-acbe-e93553316203"
        },
        "item": {
          "id": "426f59c9-4fa2-4800-9842-cd543721e789",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bacd1af7-8ae4-4b48-89de-f953b0de651c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cf5e93-f9ce-4801-9a49-a725579a58b8",
        "cursor": {
          "ref": "0b741113-30f9-4bda-84e5-c23ec7291dd4",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "861864ec-691c-40b1-bd08-462078face74"
        },
        "item": {
          "id": "50cf5e93-f9ce-4801-9a49-a725579a58b8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d461de4e-4c8e-4b4f-961a-6665da480abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5660af0-4ce0-48e3-9410-ca4430c42aae",
        "cursor": {
          "ref": "bdf0b859-aa8b-4e44-818a-376a322486a1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f5eaeb48-5577-4564-a50d-74c12df13dc2"
        },
        "item": {
          "id": "a5660af0-4ce0-48e3-9410-ca4430c42aae",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f9903cda-5328-4743-aece-bb74751122c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0948c1a4-104b-496b-a1be-bd2399a6d34d",
        "cursor": {
          "ref": "152dc58c-1275-4bb4-89da-a457353554d7",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "200fb7f5-747e-44f6-878b-6863b3923f5f"
        },
        "item": {
          "id": "0948c1a4-104b-496b-a1be-bd2399a6d34d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "afa6180b-bd84-423b-9434-1eb3b3ed1027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb68240-902b-48e8-9f16-881fae182985",
        "cursor": {
          "ref": "5429dff3-2e18-457e-b665-8c181b98dcff",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5295e26a-27c4-48bb-ace2-935a51fb828b"
        },
        "item": {
          "id": "ddb68240-902b-48e8-9f16-881fae182985",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9031827a-b8ac-4c81-abd7-99ab73666334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e664498-275f-4a23-bbb4-c85cb1f068b9",
        "cursor": {
          "ref": "604f1c6c-eb88-43d5-afd1-cd60c3c58091",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5f9f4ffa-9bb0-4995-8f68-74c07de4bb12"
        },
        "item": {
          "id": "1e664498-275f-4a23-bbb4-c85cb1f068b9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9703dd82-62bb-4fe3-8c47-fd6e86625282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0860ee1-8e17-4400-82dc-49e8360b38fe",
        "cursor": {
          "ref": "0e0755cb-d6f8-41b6-8f0e-3225d5396489",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ceed7356-8d84-4418-b897-8ae4bbdc6a17"
        },
        "item": {
          "id": "c0860ee1-8e17-4400-82dc-49e8360b38fe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "676d1ba1-7f0c-4e87-a3c3-0361218c0fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93cfa1a-7a99-4023-9baa-95856af0459c",
        "cursor": {
          "ref": "fca897ee-5c8f-4872-b7ec-8359620c9fbf",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4923706f-be30-46b8-89e9-1540e4299ace"
        },
        "item": {
          "id": "e93cfa1a-7a99-4023-9baa-95856af0459c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5f6ec6d1-3991-4eb2-bc5f-01763fae4d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e4bc2a-e493-4a27-85b3-e83709c7bf88",
        "cursor": {
          "ref": "9634126d-87ec-4ad6-8deb-9c1e6df07dad",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "89e56b92-96f9-424b-803b-dbc7a5621340"
        },
        "item": {
          "id": "29e4bc2a-e493-4a27-85b3-e83709c7bf88",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d31d3a40-0b98-4ba0-b041-36e6ee2af155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205b870a-7cfc-4f10-beb1-adb11a9c20ac",
        "cursor": {
          "ref": "c84b6902-db1c-4f87-a6b5-d383eafbe6a4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "686ad604-6f17-4e6b-a65e-556c0fe9d60d"
        },
        "item": {
          "id": "205b870a-7cfc-4f10-beb1-adb11a9c20ac",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6c49c07e-97c8-4918-bf6e-cf045aae9fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e28cb32-e636-41ee-b539-1be610593527",
        "cursor": {
          "ref": "10c2dc0a-cdf0-44fa-9e96-0fdb76bc8def",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "74ec6483-6a51-4ab0-9570-73f09250749a"
        },
        "item": {
          "id": "8e28cb32-e636-41ee-b539-1be610593527",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fea8ca5b-13bb-47cf-99dd-155a7c78ab70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ddd0dd-7016-4482-9b55-e8a84ef3cc96",
        "cursor": {
          "ref": "4d02fcff-74b6-418b-84ad-8442781db459",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7d4bf702-4673-4b4e-9158-4168f11cf650"
        },
        "item": {
          "id": "80ddd0dd-7016-4482-9b55-e8a84ef3cc96",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "87329a9c-7ac6-485a-868d-518d45da9476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbdbc65-7d50-41d2-8305-0e1ea03e6351",
        "cursor": {
          "ref": "0f6f9cae-d45b-4c69-ac3b-fcc37645a820",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8646dfa3-b06c-4967-b827-d408b83b96cb"
        },
        "item": {
          "id": "8dbdbc65-7d50-41d2-8305-0e1ea03e6351",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "21e60cd4-7e80-46eb-85a8-6d0427da9dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f528558-fa30-457f-aa24-5476cc0af7b9",
        "cursor": {
          "ref": "4e71fd19-186b-4de8-8477-109658b14bd4",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8367b1e1-6ffc-44e1-a867-df5df8f603bd"
        },
        "item": {
          "id": "4f528558-fa30-457f-aa24-5476cc0af7b9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b03f8673-9b3f-4fc3-ba12-73ebd8c26bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05eb1581-ab93-467f-a822-665404d64679",
        "cursor": {
          "ref": "f7e773ce-b363-4833-8361-fa4f04687b3a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f67096e5-a5c6-40b7-9919-cca234cacbbd"
        },
        "item": {
          "id": "05eb1581-ab93-467f-a822-665404d64679",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b0d056ce-f0d4-467f-9e20-d3e185a7cda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2355618d-b8ee-4da0-ad97-e2eea93c303f",
        "cursor": {
          "ref": "725d34f9-4a96-45dc-b965-09430a29b3d6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ca46febc-ed79-4cf6-9c93-2083c3580906"
        },
        "item": {
          "id": "2355618d-b8ee-4da0-ad97-e2eea93c303f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "be61dcb2-7431-43f7-8cdc-1bd32fee03af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2e9150-d5ed-4c90-851e-81cfbaf158f5",
        "cursor": {
          "ref": "07c0617d-f143-4538-8c51-aed53bd824bc",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "da577d13-5025-4c0d-ba1d-23d76c4d13a2"
        },
        "item": {
          "id": "ce2e9150-d5ed-4c90-851e-81cfbaf158f5",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f880a22e-6950-46cd-8859-399b1cab082b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bea2ae-597e-4238-b9d7-4398849ca050",
        "cursor": {
          "ref": "8365b25c-c7de-4340-be0c-b1eefffd178e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ab5f9c5a-b70a-48ce-b6ef-22a25d06aaeb"
        },
        "item": {
          "id": "45bea2ae-597e-4238-b9d7-4398849ca050",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9a9d3a4c-ab25-4eff-8b2a-ef5e5399ab58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0d9948-6089-4109-bd52-d449b6cc58bb",
        "cursor": {
          "ref": "34d1f9ba-b05a-4b50-992b-f064ec34b34f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7eeabcb3-4000-40f7-a9a0-5590c9cc213a"
        },
        "item": {
          "id": "5d0d9948-6089-4109-bd52-d449b6cc58bb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2304ed82-a6db-4ff3-a1ca-6d6f78e7b969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc6e1a7-518e-415b-be70-d65041288e40",
        "cursor": {
          "ref": "e8492e10-348b-4070-8b18-97d2630315bf",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cbf0d83d-2983-44b9-b987-8b79bf2b6f43"
        },
        "item": {
          "id": "6dc6e1a7-518e-415b-be70-d65041288e40",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e2d9bd1d-bca7-4158-a1fc-68f1c7e0c72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9382d984-ae8d-4d80-be8b-18d71c8b9585",
        "cursor": {
          "ref": "eadf464c-8d71-49c5-8db8-9a07901776b8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c681a63e-70f2-43b8-85cf-e9d12ed8e23e"
        },
        "item": {
          "id": "9382d984-ae8d-4d80-be8b-18d71c8b9585",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "df9993f2-beb2-4889-8ea5-ec342fa978bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e66b07-851b-48cc-b723-8d38fe05ab9e",
        "cursor": {
          "ref": "fa732c47-945e-4c3b-8367-9f4be6ea4b59",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "52e0e2fa-e157-46fa-9095-87495c40f393"
        },
        "item": {
          "id": "c6e66b07-851b-48cc-b723-8d38fe05ab9e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "93a1a7e0-2a5d-4520-8536-ae053bd5293f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12dd98e-3a99-4dc4-bb06-3921a589dac8",
        "cursor": {
          "ref": "2697bd8d-d3ed-4123-b56e-bedc7508fdb7",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ed6d2f2a-6715-400f-9209-e9c491e6bdc7"
        },
        "item": {
          "id": "d12dd98e-3a99-4dc4-bb06-3921a589dac8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e78215e6-f303-41eb-b2f6-3fcf1a60a4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206d8596-d043-4141-a8a4-6c4be816e29e",
        "cursor": {
          "ref": "452e2b4d-1e96-48dc-ae89-773038ec4bd4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "556f0c40-6c7b-459a-bef4-0b22af689797"
        },
        "item": {
          "id": "206d8596-d043-4141-a8a4-6c4be816e29e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0ebf7b78-8143-4351-9a31-870530625ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7fb177-c88e-4ae8-b4cf-7a66abb9eb1f",
        "cursor": {
          "ref": "f0bd1d9b-02b0-4cc8-8454-da41139a0501",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dc3db3ba-6b9a-4c14-89f6-8461f05abf4a"
        },
        "item": {
          "id": "7b7fb177-c88e-4ae8-b4cf-7a66abb9eb1f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "deb0beb9-740d-4990-b90e-db1d386d661a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f0850f-8efd-48ae-8dbb-51cf4bfaddbd",
        "cursor": {
          "ref": "2fe3756c-24f8-43c3-996e-4220aeca8bd2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "36d5f76c-81ab-4823-a48d-1ce098ceea42"
        },
        "item": {
          "id": "73f0850f-8efd-48ae-8dbb-51cf4bfaddbd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "884b8bf9-0aaa-42cd-b57a-166dc51128fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6885c08-c69e-44bc-86f6-c75a0e89f908",
        "cursor": {
          "ref": "12f2afd3-34a3-4461-b2fd-e896547fa780",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "28c669fa-78dc-43b7-b096-ec8710c1c6d6"
        },
        "item": {
          "id": "e6885c08-c69e-44bc-86f6-c75a0e89f908",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "edcdef37-f2d8-4c3a-a3e1-e4a54eb2f111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c474e202-be4c-435d-9397-b35005c76118",
        "cursor": {
          "ref": "314e3e74-7d7a-405d-a1b7-487979c444e5",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "40dd7ffa-2029-456e-a5f2-c3d1aa14eca5"
        },
        "item": {
          "id": "c474e202-be4c-435d-9397-b35005c76118",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ef5c0821-c9e4-4900-ac7f-b24fc195ec1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2838757-0030-4919-b2d4-89139491eade",
        "cursor": {
          "ref": "5b072df1-fdbf-4aaa-885a-f5ce64908459",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "783eaf7c-56f5-4f1d-a9f8-301383cc4a51"
        },
        "item": {
          "id": "c2838757-0030-4919-b2d4-89139491eade",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7f678d34-6e4a-4052-82ab-c4dcd3942deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a441634-f890-496f-ac72-f2d5ade3cedb",
        "cursor": {
          "ref": "0878553a-0bc0-40b8-abff-7414eb981378",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c2a35a50-9b82-4b00-9135-774a556b2d5d"
        },
        "item": {
          "id": "7a441634-f890-496f-ac72-f2d5ade3cedb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "05ddf04d-23a1-4daf-b619-b3477ed0b833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14e4813-2e5a-4b57-886f-9b2b7c93d038",
        "cursor": {
          "ref": "52ac89ba-949a-4807-a15b-ff9f62b7bb4b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dbe255f4-dcc3-4fbd-8809-4b377f06eb64"
        },
        "item": {
          "id": "a14e4813-2e5a-4b57-886f-9b2b7c93d038",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1be465a0-75fe-431b-ba04-d3206a3518a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37af7ae1-8341-4aaf-bb69-cc2d34d9aa7d",
        "cursor": {
          "ref": "f4ac5b38-cf1e-4438-bb98-074dd847e006",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e79c2bfd-8d42-4ecd-828a-d96ca249474f"
        },
        "item": {
          "id": "37af7ae1-8341-4aaf-bb69-cc2d34d9aa7d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4eb4978b-33df-4d77-adb6-cf75dab05e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98919a4-79d9-4ef0-8457-d10c7e58ad17",
        "cursor": {
          "ref": "30905e4b-957f-40fb-8a4d-320fcbe70c14",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0c9420f8-91b3-42ed-8c4a-8157534ef776"
        },
        "item": {
          "id": "b98919a4-79d9-4ef0-8457-d10c7e58ad17",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2596ae62-acaf-467d-a3f2-052eb4ddfb71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31250310-ecd0-4b52-83f9-300551be8275",
        "cursor": {
          "ref": "99884f76-c376-4a22-a8cd-66ebf0012813",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "746e55ac-57c4-46fd-9f7c-b1dee67bdaec"
        },
        "item": {
          "id": "31250310-ecd0-4b52-83f9-300551be8275",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "532bc4af-422b-41f4-a61e-603248dbe229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696ea6f8-c070-4ff0-82de-dfe69c6679fa",
        "cursor": {
          "ref": "dd4c2a07-5baa-4482-b426-7262a6f3ad1c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d8915e38-fc70-47e8-8c4b-f0c38ed67083"
        },
        "item": {
          "id": "696ea6f8-c070-4ff0-82de-dfe69c6679fa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a36ff421-29d6-4422-96d9-27fb8293132a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbac8fd-2c47-439a-85e9-ce51d38100e8",
        "cursor": {
          "ref": "a03a4adf-16e0-4bd6-80d3-fdca95dcdd4e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a8ed7799-6fb6-4636-a04c-b1e0f0d4a3be"
        },
        "item": {
          "id": "5bbac8fd-2c47-439a-85e9-ce51d38100e8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "49ddf4d8-0911-4900-96d7-9b089bb5aa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24908746-2080-4362-b985-8e9bc857c578",
        "cursor": {
          "ref": "8905c86a-9c6f-4b6e-9735-f3caf5df52c2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a2aed74e-0f82-43c4-8e9a-0657c79f2cdd"
        },
        "item": {
          "id": "24908746-2080-4362-b985-8e9bc857c578",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4ed0df05-d666-4d2c-8f14-62b4eb772084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7929ca6-dc54-42fc-bf0f-2eb91114f5b9",
        "cursor": {
          "ref": "3d0ac2bd-9bff-43a5-99d2-6a3b0a53f8cf",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "31ec20ed-97d0-4fba-a7c8-627cd1385729"
        },
        "item": {
          "id": "d7929ca6-dc54-42fc-bf0f-2eb91114f5b9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "93ef428a-aad7-4570-8750-9680e489e48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5459f8-3c64-475f-9cac-9806c9451881",
        "cursor": {
          "ref": "dd6fcef9-7b91-4441-9d5e-42f977e73d09",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "edfdd604-bf46-4330-9811-4ba294204529"
        },
        "item": {
          "id": "da5459f8-3c64-475f-9cac-9806c9451881",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9157daf2-a531-4f2a-818c-69b41d96c1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b179d26-e6cc-4481-8169-d28859529c1d",
        "cursor": {
          "ref": "c0bdb97a-a4ce-4261-a2c5-898a9de06626",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "613b5951-6dae-4f9b-bae8-eaa307ee6d87"
        },
        "item": {
          "id": "9b179d26-e6cc-4481-8169-d28859529c1d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "60ab59e3-205d-49da-8072-3654c37c95ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5e6a5e-d595-45ac-aa6f-8bd19532d897",
        "cursor": {
          "ref": "9d2444e1-3a25-4756-9fd1-bb0f969e13df",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ea73b7d3-42d7-486c-9f99-fb8dd0d8bfba"
        },
        "item": {
          "id": "8d5e6a5e-d595-45ac-aa6f-8bd19532d897",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3160891d-d8a4-4d99-af8f-25c5015575ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57606bb5-7032-4750-ab97-534f2f0711af",
        "cursor": {
          "ref": "659a3f6a-228a-419f-b96c-a288041609e0",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "711938e9-7435-4f27-ac73-a581191a519d"
        },
        "item": {
          "id": "57606bb5-7032-4750-ab97-534f2f0711af",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3b171d4b-8f2c-47dc-afba-896e95e3e830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68e4f66-06a2-412e-acdf-06dd78d51706",
        "cursor": {
          "ref": "3a85b68c-24f4-4a02-9279-974909a94b32",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "417afbef-df0f-437c-9514-49984f6c1d8e"
        },
        "item": {
          "id": "f68e4f66-06a2-412e-acdf-06dd78d51706",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d46f3452-574f-4734-8741-00561a652121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d54853-f56b-43d5-a70b-acbfdd6c6382",
        "cursor": {
          "ref": "296c4dfe-3062-40fe-aeb3-403b48d1f819",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a12bc811-c197-4521-895d-56b80d0d52cb"
        },
        "item": {
          "id": "c8d54853-f56b-43d5-a70b-acbfdd6c6382",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "53c4a55b-3583-4dbb-837c-94f1a30c58e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe66d7-c74a-4e73-a8ae-bdf234b83422",
        "cursor": {
          "ref": "1196daf3-89bc-43ad-a207-3f9225be1525",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "455da4ee-d62c-4c70-b898-b7761c03cb93"
        },
        "item": {
          "id": "fafe66d7-c74a-4e73-a8ae-bdf234b83422",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f10462b7-2569-4658-a182-1dc8dbe0318c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfba32bc-811b-420d-b97d-1494e676f714",
        "cursor": {
          "ref": "7dc2b5cc-9091-49e3-b972-54a4dafb1508",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "41622c53-b15d-4654-bb6e-5f8be1d3d71e"
        },
        "item": {
          "id": "dfba32bc-811b-420d-b97d-1494e676f714",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6cb6fe44-f35f-486d-a76c-c6dd162e493b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700637e4-26df-423a-8386-981bbd1cc6ca",
        "cursor": {
          "ref": "eb78b186-5113-45fa-9ddf-50e7505e753f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "49f1bc8e-b1c7-4dec-a208-7413cf46bd60"
        },
        "item": {
          "id": "700637e4-26df-423a-8386-981bbd1cc6ca",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3187e0e8-c9c6-412c-88f8-7fc5729d0787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3758cd15-566e-4e10-86c1-6b7020bc8481",
        "cursor": {
          "ref": "a18d70e7-6da0-4dd3-a938-44390f3c84b3",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "71444626-aa5b-48cb-8f95-8d59ea81b0e7"
        },
        "item": {
          "id": "3758cd15-566e-4e10-86c1-6b7020bc8481",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "835a715d-fc23-4ff2-84ae-d5f80b8c9bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c32a099-8fdd-449d-aa46-5a0ce88b26ba",
        "cursor": {
          "ref": "15be4132-d86a-4151-b12a-33e34c34b15a",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "3f1b59b5-345c-4eda-a8f1-ed822078775a"
        },
        "item": {
          "id": "0c32a099-8fdd-449d-aa46-5a0ce88b26ba",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9b2b3cdf-3504-4e6e-85bc-4d08f35c249f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f72473b-039c-4ba9-ac74-b7b8d94e9c08",
        "cursor": {
          "ref": "c056bda2-6b26-4edd-b1fc-cce7229213bb",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "95d11b22-ef2c-452d-baf1-cc565c53e12e"
        },
        "item": {
          "id": "0f72473b-039c-4ba9-ac74-b7b8d94e9c08",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b1e24236-9684-4089-8a62-8f25dd8129f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97dd506-b883-485a-a867-2063a189ad49",
        "cursor": {
          "ref": "36bfc115-a6cd-4abc-a1d2-42f9e27e7fba",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4084ff28-e128-40d7-8b2a-d903fe4ca566"
        },
        "item": {
          "id": "f97dd506-b883-485a-a867-2063a189ad49",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "78dd855c-22ad-42ec-ac5a-0f131fd78875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c330a0b2-7cbb-416c-9742-d91135ea614e",
        "cursor": {
          "ref": "575c48b5-408f-4626-be9c-1ca7fb84d84a",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "01ec3222-b39a-46a4-93f7-fc0a03dd164f"
        },
        "item": {
          "id": "c330a0b2-7cbb-416c-9742-d91135ea614e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "903d7ec6-1b0f-4553-bd9a-395fefc65e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b7daeb-14c5-47d7-aef5-e9e2c1575416",
        "cursor": {
          "ref": "7cc48253-d2b0-4893-80aa-792578517355",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8cad023a-57ca-4d41-82db-f0e7200f9dbc"
        },
        "item": {
          "id": "90b7daeb-14c5-47d7-aef5-e9e2c1575416",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "466bec20-0670-48d1-9657-af9f68b4e2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c614ba43-1dc7-45f7-872f-87eefe986311",
        "cursor": {
          "ref": "36579e76-a5a2-4eca-8425-3f8492a1aa38",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "466da42e-aa86-43e6-93a2-312182a946c1"
        },
        "item": {
          "id": "c614ba43-1dc7-45f7-872f-87eefe986311",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "452c4528-4f28-45c6-92da-1335b3fede6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35e9070-0d2c-4bcc-b66d-a834973fbda1",
        "cursor": {
          "ref": "a3be8efe-fbe6-4462-be27-4825895940cc",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8309dd40-2130-4b18-9a11-5910dd7079c8"
        },
        "item": {
          "id": "f35e9070-0d2c-4bcc-b66d-a834973fbda1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "aefc48d8-e120-4d57-8325-21c043b855bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c14eb08-1594-46b0-9432-5ff194bf3b5b",
        "cursor": {
          "ref": "3754eebd-c0aa-4ec7-9702-f7a31ed3d744",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ec9526f3-8a82-4fd5-9b1b-2dd10d945b66"
        },
        "item": {
          "id": "6c14eb08-1594-46b0-9432-5ff194bf3b5b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f26a82c2-2b21-4115-98f5-26c7407dc356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba24fce3-7e73-4b36-8ba4-969c458d267a",
        "cursor": {
          "ref": "f18bd628-a233-4e5d-b9c9-efa6e75cd245",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "573cb2bb-468b-49d9-b35f-7da7144987f3"
        },
        "item": {
          "id": "ba24fce3-7e73-4b36-8ba4-969c458d267a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "02c8cb83-1844-4979-bd1f-3b19b1039c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f99a415-ea31-449f-b307-eabfba937ddc",
        "cursor": {
          "ref": "fe958c82-2b56-4253-ac82-7fb571bc3599",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e1ce72a5-fa72-4d31-a99f-1511cfbdfa94"
        },
        "item": {
          "id": "1f99a415-ea31-449f-b307-eabfba937ddc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a4ca81d5-c1f7-4905-8235-96b4c99b3d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b627f4c-5f81-4132-aa43-9e940da08e1e",
        "cursor": {
          "ref": "40621005-29bc-4991-a44b-13fc3eccffa3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c47ce137-ffc1-4490-94bc-984e1601e477"
        },
        "item": {
          "id": "5b627f4c-5f81-4132-aa43-9e940da08e1e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "04f0d2fe-d47d-47e7-abd8-5515648da2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20512301-cf43-475b-b07f-3d01f86bf21e",
        "cursor": {
          "ref": "22fe24d4-7d69-4e26-9dae-c25aa6aec97a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "188e8e49-cd7e-426c-9019-71746bc8ba32"
        },
        "item": {
          "id": "20512301-cf43-475b-b07f-3d01f86bf21e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a998c586-c1e6-46d8-873a-c213eb80762b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e387a2c8-1236-4029-9c77-de1e7f6d226c",
        "cursor": {
          "ref": "a2e4a5f0-ad33-47da-8613-1fe2bbcf29c4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "48c736f9-6f2b-4b99-af47-8f18294c8631"
        },
        "item": {
          "id": "e387a2c8-1236-4029-9c77-de1e7f6d226c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "08e5869e-0735-422f-81ea-2d0ba03dcc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132fc38c-d556-4459-8279-b0344d8666a3",
        "cursor": {
          "ref": "005502b8-9f44-4155-ba66-4de14b3552b9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "db5eedbc-6f30-4cdf-8aab-26833c42136e"
        },
        "item": {
          "id": "132fc38c-d556-4459-8279-b0344d8666a3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4c8c36aa-1ab1-4419-a569-41fdc2e77fdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e4d0c3-40ae-4798-a573-ca1cac28401c",
        "cursor": {
          "ref": "cd33f950-660b-4980-9e7f-8b3c8f195692",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "255a0fc7-afc4-45b4-8000-775e95e9c245"
        },
        "item": {
          "id": "26e4d0c3-40ae-4798-a573-ca1cac28401c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7b4c04e6-3b85-4434-bed1-0c5542e4273d",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f929ad-2780-4616-99eb-aa93569d1476",
        "cursor": {
          "ref": "8ed86d6c-b9b2-49b1-82f3-b26e084065d0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5fff89cf-704c-4a92-8498-34a9383dd231"
        },
        "item": {
          "id": "e0f929ad-2780-4616-99eb-aa93569d1476",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f5265f48-f1b4-41d2-9a65-66f8f270c60e",
          "status": "OK",
          "code": 200,
          "responseTime": 1382,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6fc412-a64a-45d6-8103-cbbe196a422f",
        "cursor": {
          "ref": "4c6e50ec-a0ac-4b10-832c-c057470e7190",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d6900fb3-f161-451e-94bc-c967848fa824"
        },
        "item": {
          "id": "6b6fc412-a64a-45d6-8103-cbbe196a422f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ea3e7684-727e-4838-a6d5-c3f14dec13d6",
          "status": "OK",
          "code": 200,
          "responseTime": 1288,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2be85e5-1470-446a-96ee-dc78a806c76e",
        "cursor": {
          "ref": "5e11ceab-f2e7-4240-8bdb-584a2810925f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5406a050-cdc7-47d7-bb43-4f2e6f4838ae"
        },
        "item": {
          "id": "f2be85e5-1470-446a-96ee-dc78a806c76e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b07a2845-1f4d-4f6c-bec9-8f27dcc30a6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2be85e5-1470-446a-96ee-dc78a806c76e",
        "cursor": {
          "ref": "5e11ceab-f2e7-4240-8bdb-584a2810925f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5406a050-cdc7-47d7-bb43-4f2e6f4838ae"
        },
        "item": {
          "id": "f2be85e5-1470-446a-96ee-dc78a806c76e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b07a2845-1f4d-4f6c-bec9-8f27dcc30a6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6865838b-095e-42ae-b436-13b8e6b82daf",
        "cursor": {
          "ref": "72f8686c-d549-45a1-b5b3-9b9bcd6a7ed3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1743467b-696a-460b-9a1d-a4132ecef86c"
        },
        "item": {
          "id": "6865838b-095e-42ae-b436-13b8e6b82daf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "814a478d-879a-4eaf-ae98-763e71316d0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8606413-1d64-40dc-984b-2fb091304316",
        "cursor": {
          "ref": "9c6e9033-d561-45db-9366-f020d3baf3e1",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "fb6b4282-711e-438c-94df-cc356b13ddb6"
        },
        "item": {
          "id": "e8606413-1d64-40dc-984b-2fb091304316",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7ccc14c4-7558-4e02-a78a-8e4b7c476005",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}