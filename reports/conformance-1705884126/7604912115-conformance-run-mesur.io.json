{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "455949fe-6191-43f5-bebe-d99b9cfcc134",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ad215929-31b8-4820-a9d1-a2748e474294",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b0fed704-e1d2-49f2-86e4-c96b6b377c65",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8fbb66a3-1ff5-4333-841e-ddab93866f10"
                }
              }
            ]
          },
          {
            "id": "ad527787-2318-42ae-8cc0-25e2d9f0bf85",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09f8479b-81ba-41ad-8826-89c841d225c6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c149778b-8afe-4cee-b35e-0d9d9af8bd8e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "69261898-8475-4d20-8914-5a907c8160b0",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b2fc6e60-43f0-4021-b560-9ba0271133cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ad91853-4f12-4bd6-b256-08b62c7da03c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2190c90-458a-432c-bb98-4df071166f54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b42f3cc9-d332-4701-a794-6e36584e0246"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abeca216-a7c6-4f8c-b87a-15ade7fa995e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75243a55-69fe-482c-b99e-f61aa241b78b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa3da98b-3b80-4c61-b141-9cefa85d3998",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ce7ed63-cee3-4d72-aa1f-a6bda2d05b4a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8760eae-50b7-44ea-927e-eb7a531d43c3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "072146e2-3e3d-4b2b-9522-ab4994ae3128"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f9a8324-661b-4e48-9980-38640ff968c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24ed67c9-9b99-45ad-b548-71d7d6aa10d4"
            }
          }
        ]
      },
      {
        "id": "cc356ae5-9550-447d-be0f-129c1aa6e5bb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ab2f75ce-7d4c-4eea-ad97-bd04aed28b49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1d5f5ea-ea93-4643-844c-ddac69ac167f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c6a1b3f-a184-41be-a7e5-23791b89f231",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157241da-66c8-43d3-b74c-a1ab8acabc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1301a0ca-ea37-405e-8312-77d4466882e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7f9229-fe1a-4068-ac0b-95f4455ea845",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9518e902-5c2f-418f-bedc-710e433a7850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7101486f-1989-4940-846f-9bb5f73c6a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c7cf93-dfba-4988-9f1e-1f7c54b7f0e7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6760e94a-bdf7-4abd-9c15-425eee34fbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfbce237-9384-45f4-87e1-5f8e5c019442"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "760fc8b4-318c-4c98-a5c6-188fed734fa1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0971a62-7165-4e5a-941d-f4e6d2d13623",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2cdaf4-6c59-4748-bf0e-852512e29b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2cf3132-98f5-42d8-9236-97def6231304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bf6c40-effe-443b-8b13-0fd0f5a9bc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8854440b-666c-4087-a084-4453e546a15f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f28d5c97-336d-491b-96ff-227edb9e6141",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89fb5400-539d-4daf-9604-6983e9d84e65",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9f96349-571f-4b79-90f3-331a72bbd4dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4685f6be-737d-4a60-b5be-265f3ddbd300"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79fc0615-d7a6-48d7-ae7b-9a0527f4d115",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d02c164c-1b91-4c58-992a-e8da8fc31c6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6f5bea0-e3b6-45e6-8cb5-9aa6fdd3ebe9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97b19de1-015e-4ec1-ad10-c50ae717cb91"
            }
          }
        ]
      },
      {
        "id": "d54d61a7-06c1-4de8-bf2f-bbf008dd8a59",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "129c08ce-f825-489b-afac-1de49df7cbbd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49faca1d-ec0f-4b85-8071-2d5e6e3291b2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "387beedd-cb4e-4b5c-bf5e-d4e70c811fa9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f985ac28-f7b6-40fe-b52e-621e1c1012b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ccbcce-4b3d-4f55-9dc6-acb43abdf369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24d144f-cae1-45a6-9537-103386bbf8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b78adac8-c45b-4920-bb99-9c65e945dc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0ed3a8-dfd5-4130-949e-7f5069bb21ef",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857ee925-b8fc-4450-a5f9-594a74862e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ac0616-87be-44f6-8999-872ae86ec1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b275d6-2a4b-4790-8807-64116fe114dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "405b92db-9f3a-4e51-b743-23703f63bc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe73495-67a6-4ad4-bc47-a85022e58257",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c18a54-5f3f-4d7b-8564-f6decb9e9260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8098384-eaba-4708-baf1-11402b592487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e23a851-4ab5-4409-b2f8-44ead58031db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2461ccc8-8384-4e14-a901-e0ce0b2202fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6626d60-ba28-45d9-98d6-30526446d17d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4016dc5-f357-46a5-ac4b-e7b324f28ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c1695c-5696-48dd-bc8b-8fb0863315a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b1cf88-ad93-4ea6-80df-695564793a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1281dcfa-36e2-4c4f-bf80-6e505d3e1b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bace533-a615-4661-82de-8a9cb3dfbefc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0aca2a5-cc3f-43fe-9385-cf2fb03b66ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca014eea-2fc7-416d-9e2a-df54c2ec9c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe07b5b-3b08-47c9-9f67-e1cc34b6744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e7751b4-5ef9-4e1c-8e3d-d6863282b4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f46bc7-bd24-4c19-aff2-658be5fbf8ef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e570a65-2347-4f82-bb94-79f162c911bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69d1d1a-d3ec-45c5-b0cc-8706dc6b9105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b51b7-3319-401d-95e4-89cdc39a751a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "214674dd-0b06-4d3c-b4ee-9e2748f924e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa79687-9a4b-44a2-a909-8f18ab1ad7b8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ef0ba9-63ce-4217-a1c5-0b5cec09e2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9bd9cc-c3ec-4f79-b079-2bfa10481d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de97897-c766-43b5-b829-f32b17474bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de529126-e75c-4ca6-85ce-f9db4a5a714f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ae51e6-4a5f-4364-b394-c9060bc8b665",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dc4009-aaab-4f7c-9186-55eb3c738ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655c02a7-7f7d-4cf3-b46a-3c1a49c72568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953ff17a-393b-460e-b566-c43f5599ae6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "751a6098-7fa3-440c-b942-35a0b024704a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47efac5-6a00-41f9-9baf-c78642588d33",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dc3c25-5c49-4f30-9245-a095d78eefe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbb894f-dbac-4732-a40d-1556f5b76917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653e1f61-bffb-4827-b0ac-070eaae07486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "564d133c-7a41-4c04-90f7-d60f9264ae3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9158278-4357-4434-b646-ea0ea3c5c7e5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e004b713-4325-44f7-a168-99bc0ff4afbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f21d126-28dd-43b7-adb9-878eacd07d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722473a9-ca78-447e-ae57-2d3bc5253146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89c0380a-a26f-4107-b7fa-6beca9442282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8811ec-0091-4df4-9145-822bd9c1eeff",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f44958-abc0-445e-a50b-21d247ec8d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcdd9b3-950e-426a-b640-f56bc534577c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6170a4b-be14-404c-bc21-8494d615f813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4daa8af-fd78-42b8-a947-b2fe9827dd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8385c16-8239-4cdd-be35-56b4f1a280c7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15bc162-15e3-4b95-ac6f-7c7cc7f05253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1abd54-6dfa-40e3-a217-55aefb39b48b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0a3484-1258-4057-8aaf-ef2e9092a9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77816c63-936a-444d-b99d-b82ba855803e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440724f0-12e9-4a22-81a4-cf0a29fed6f0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ebedc5-6cd2-4beb-b36f-ab80c76efa8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c457b30c-8e7a-48e7-9e9d-1b59ff88fba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e8bd48-0939-4afc-928c-469693544975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37d63edf-fc0d-4776-a2e6-99ff16e8b8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84351808-f3e8-4d75-8e27-e2821f5e2b5c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af86cbef-1430-4804-94e7-0079c9760a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04f21ab-21b4-493e-abfc-7d1b757d0611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3df64a2-9f63-40df-a663-a6eb68d68d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71335549-1d15-4692-bd3e-9290e8994b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b3c517-d205-4db5-a047-9cf7273caf12",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579e7401-fa60-4680-8b0b-b715652700a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a65efe0-4240-4948-bd31-3befeac0bbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78b0d5f-1747-45c3-9b7c-609571ddcd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dd2b0ec-085b-433c-b9fd-9f1b2aa7b6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848916bc-6577-4e23-8fb3-31d1e3286a06",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abe2793-a19f-4e7d-b7a8-8cccd0dababc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cfc545-a792-4130-ad70-c9efccd832d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a9cb3c-81f7-4555-bde2-664be32d6dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "699caffe-0667-4aca-a35f-b236cbb7e689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aafde46-5b6f-4bce-a37d-f8ab657bae79",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18177def-5aba-4dbc-a163-2b9b7d2b2e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c07c3d-7a85-4669-b044-ff8e8e62289c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25229132-0639-4209-aafc-a5179787c2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b818d9e8-798b-4e15-b2b6-b0a30722e4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bf6e16-5fa5-4a69-89a5-1b41f3701dd9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509ff0c9-d6b2-4baa-b944-75c3b2b4683f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a23b50-4234-4a9f-8bb6-d8d262fb7fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19390100-9cd3-4ed3-9167-cead76c61f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c144122-5e93-4bd9-aaa9-3c9b04bb22a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1061ff1-2eef-428c-aff5-4caca1afe7cf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10e58ae-c10a-45f0-ad93-f2efb0ff2f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f586a856-3d89-4456-9c90-a285eeb82883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9547b006-2357-4983-b2f7-a706780d17bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1269c481-b431-4681-aa8d-8ca0bee13746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7c7c91-18a1-4c9b-a9aa-60731dad0fb3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b113996-9410-4e3d-9155-78ee6326eb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed12b810-79d0-4fe9-8d3a-df82ae60b104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f60760b-e5ac-4a99-ab82-1c0a8a3eefd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9499eca8-37bf-45c8-9a0f-e1d5c304d028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3993f4df-3c80-4827-b142-4999c870b025",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5cda43-a1bb-49dd-b825-25c606194310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eff29b7-9865-4965-9bf4-10cb260e21c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc5112b-335b-4064-b789-41beed460cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7502ea-6076-45d0-8a8d-cf7653c609df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e17b2ae-228c-4896-b870-f97651604fb7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1744981e-902c-4d34-8a6a-39b8ca9d116e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156504ff-642e-41aa-a687-bbf715569cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e75294-f4f6-43a0-9654-6573f441d34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4373e5-68ab-4a86-b18a-3859ca41c9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6d5315-baa9-4d1e-9b9a-b06e6b73167b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1574007d-9531-4629-957e-e9f72671c948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9307723a-fb92-47e4-bdd3-35241951829f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf2dca4-c59a-473e-8ff8-27b2e1a88cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4568bb20-536b-4270-9cd2-f251b2e3231d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9537c8-305e-4ee3-87ba-a341b0e2e17f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a58028-0055-4fd4-bf9c-b99f0422d7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8578311a-815b-4146-829a-47e923917f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321e31aa-df84-45ad-a689-5f90a2021819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4ffb47-30df-4e60-b60e-ca3681154912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aea7588-d694-4efe-aa74-9714296dfb02",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbd38fc-79fd-4860-a280-ba4a97216cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82553882-ca75-4d73-9e2c-95bf875e1424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa18467-f478-4f92-8837-d20c6e23ab7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04b39b87-d5d7-4a76-aec7-9acbfadd38b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa90cf61-a41c-4d1f-a25f-3ffae765b08d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071910c7-c0e4-4ece-a3dd-ae64e58c6a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31d5d3c-78a3-4e42-9bfc-3b6e7cf26820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6a71a4-67fd-4b72-837e-64c03c00099d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed18964-73c6-4121-b645-b9c0091f2aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a0e185-4ac9-42bf-825c-50c08123c5e6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90b546b-a0d3-44b1-95cf-8ac46202830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574ff1e4-736b-4955-b95c-63ef9dbdd0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef238b6b-35dd-4ea1-9f2f-eea7b6f4dbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27def1fc-e80a-47d0-9c31-406c2b997061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf8e2c7-b3d2-44aa-a96a-61ea92f9f9e6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3e052c-1c89-4c08-813b-b3a661ab4e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69eb1b73-23fe-4cba-8c83-8e43cb92477b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348a2254-5379-4464-8ce8-aa74bbaf6eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "752027dd-b715-47bb-92b3-5562ae019831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55958d25-f199-4055-aa27-91f9b9ca47f1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eb43e2-62c4-4192-8a37-fc322e54fe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66084a04-350c-492b-9ca2-17fba50875b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fb2a7b-c16d-43db-b151-d8c8d49bc51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "642537b3-2543-4541-a934-89bbf6af05bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd636df4-cd63-4ebc-9038-5317525ba12b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7286e2fb-cd31-4ff7-a164-30c27d334c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8862de-868e-43a8-9885-aca70d8906b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a52a56-51b0-457d-987d-bdca0ab1b177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aca20a1-d14a-486f-b962-0be2845ca67a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899bcb21-066a-44bf-a438-33aa62c95a14",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b90f4c0-6e41-48c0-8f12-9c9d75148c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a06c4ee-0e07-4141-b74f-01311cc69e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca56d92-5c1c-498b-864d-b5dd367ef123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64284037-39aa-4b42-8e9b-a5d67e44223d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b11d586-6752-4d2e-b695-b78c09c63e93",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1684f75-ef48-48db-9920-12a2ac95b3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1017ea2-15e9-4900-bc1c-2347a04f957d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5512b1d9-846b-4b20-93be-4236e252e5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4274fd4-b0f5-4c8f-bf47-cc33eb910f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5452cafa-ca4b-4af8-bf1c-bb6e7df09d61",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f96fddd-d095-4747-84fe-2e6638b96bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1801f93c-0fcc-40ed-9d14-19a2dd9a57b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050d27f1-58ef-4692-9880-f91b166cfe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddfd74da-cf9f-4d87-af6e-5c6ea2c3c4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6468bb58-575c-423b-97ec-4f8b427ff0b4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95eb410-e10c-4525-ac29-9ab320cc4815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e016f6-2567-425e-ab7f-33bc8218e844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590c1e23-702c-4bfe-ad00-2720b280a327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd171b8-cd81-4562-804c-8f23dd5c9c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede5106a-4730-4ffe-8c43-4eaa60e27a61",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afaae69-6101-421f-8c24-b98711b302f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccc56a7-33ec-4007-82ed-d3a51f251563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a85a61-6d80-40ed-bb32-c9f091ab3369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "73fbb470-0ab1-4502-a28c-0e2766e79a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1670255-9500-4b88-a718-f6f3d9dca301",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e43378-98c5-4cba-859a-d03114182aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ceb70916-f1be-4b26-9053-81e9f48a21b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde24df8-b125-4fb2-9cad-9c4d0a754bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d561b8-dede-4ec6-a8c7-9b6b50d8f605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4518f9-98a3-4634-9c6a-2c1d5a321fc9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b00aac2-8383-46aa-835c-c97ed5ae74a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc28b23-b687-47c0-8ca2-ff15b16dd0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1d4c77-748c-4176-a221-a5aecdda257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8240a1c6-3bc1-4af9-a879-ee089323ee02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f80dc2-f5ae-4040-b24c-732dccee8beb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bc1e38-c927-40bf-82a6-4cadceb73a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382a3355-2b05-4a16-91bf-02149b297bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa64bf3-cb5f-4f7f-9d5d-842ebed9de3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "587d469e-9d92-4f3a-bd70-18049c84bee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76ebdbb-70a8-45d2-985d-8f2f7be7624f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c547b967-872a-4c34-8773-5f83f3d6223e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087485d3-4c4c-4652-9063-e907063f4860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52b541d-453e-40dc-8104-a77a3d663721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75684473-2577-4212-8883-6d37a0ac0843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7534883c-2280-4311-9aa1-fc3927246e9f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd34777-6dab-426a-9456-a5fe3d93ed44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990eebc4-552d-412c-896a-8efe3264c746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b2f3f8-8ac5-4f1c-9fae-87ae0a21c315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d81becb2-1c8a-4131-ae56-a2e750c37446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f89f1e5-5247-4b88-81a4-54d16bd8274c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e1955e-1f1f-43ba-afc0-426eea6a6dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3e46ad-a60f-4f4d-8ce1-88815bc70755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd4c4d4-b57d-406a-8d6d-f24d6f7ba5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be5e617b-b397-4751-a57e-addd0ff570e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e78c943-2f02-4212-aa8b-e26bf750f83b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0bec5e-065d-4e7b-9d10-e0d74ce6b2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5047f948-fb50-4b96-a041-5adf36f3655e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0113977-9d2a-4831-b1fb-a370c344850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "038f05bd-f8b0-41e9-ba4b-4239e6954e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5d8ed6-2b14-40c5-89fe-7df1d50f8250",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60f559e-6d9a-496c-9902-3e762c1ec1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48bd26b-0718-4b50-baf2-bc82f6bb3cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d54312e-ed65-4e38-8ebf-574fe19c2d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "900032c0-c85b-4cbe-bbcf-caacbd11bffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac71eee4-dec3-4123-9eaf-da5e25b3f4ae",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078f9858-ea32-4306-b32c-d3a1cd9d4ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55692085-9520-4922-9891-34e1b6f1ea1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dd9e67-3334-452d-994d-c08ea8f96c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "857dc501-21d6-4703-800d-54f40adc874c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdcc78c-b920-4b30-a274-0a2abf262d45",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c27553-e01a-4612-a074-b70d1217c502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3b3246-edef-424a-89bd-e66f563a0486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dab4358-5f9d-4dd0-b40e-9626cecdabc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "881e2888-2662-4876-a4ec-c450c3dc1a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27feafa2-f3f2-4817-9b94-6b7a963a8292",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23d844a-e7fd-43e6-8379-46373f0eaf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6277a82c-5d08-43b4-bcff-13b46c30a9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b505b878-f9b3-4000-8ad8-44eb6c54d7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec2cc34-5721-4f5a-87d9-abe498a73fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2812cb1-c2f5-4c52-8dcf-e935e60d325d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4375b97c-1c29-427d-ad72-c56e8c9365e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a880e11-c378-486b-81ca-b551be6df1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a155ab84-8560-40ac-9782-5c632c43dd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f93ad09-bcab-43cc-8c70-66fda0a8ff98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f28663-dec5-46f6-af82-53ad97e0eee8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0403843-398a-4dee-9624-2f4d4cc3b90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b3e9c0-fa71-4a2a-89f7-95e48ec67a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92ec7a2-4463-47cc-8334-6bba9ac7d1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4384e38-d785-4c44-817b-9f88bc934b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6597e6bd-fe69-4fad-a507-27dfc64a5e15",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72617f80-be4e-4346-83fd-82e9e09bb0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1045a8d-383c-4362-ac51-6f843c8d2be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da75ac15-5d38-4eaf-9476-b30d3f125946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d5acfa-1139-42f1-b0df-0e4923dde3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bd516f-b69d-4c71-963b-fef2828e3a29",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6fca6e-cb75-4d24-a717-10665f8313da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25fcf91-b423-4bbc-8471-0ced6688da96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f6135e-d070-47fc-adc7-d2e1ee1650e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "587937a2-d0f1-4d11-a5e9-cdc894197442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ed73c1-a99d-4069-bcec-2929271a0aa5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed04a3ba-6914-4e87-ada8-5e2d9803b24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3dc8155-8a46-4193-9600-a066e34353f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af64a8a-b575-475a-973b-65592ee55a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cce4a80-4ba7-4092-8dde-cce7b0c039b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87657bac-cc39-4faf-bbf2-1a7397f67665",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60e3aee-c302-49a3-8c8c-7147738a9abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8b097b-b352-4521-a4c1-2f225783466f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8c5c67-ddf1-4dcd-b681-a24aa7fea96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1239b3-41e4-422c-b578-33b6a4a429ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974b668b-350b-42a2-9ec2-7e5e197e8d1e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37619948-bbdc-4215-9531-b65912d589e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a683518-e369-4fb7-b86d-a60bfada2f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f9c3e0-9332-48c7-bb8f-07545a0030ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93734cac-b429-4a7e-b1cc-d82ee5709c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb71ac2-9d4a-46fb-9bd4-8bef9482f328",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92470b44-6ef6-4884-823f-cd7b62e7b652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd1d020-2637-4594-927b-5087988eccf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18777ed6-7ae7-4e5c-9ba1-849133b30935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d09b10d-0719-4793-8144-4d0abf58d41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2113608-b25b-426e-ade1-9a88534df4d5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bbd9f8-08b0-4e63-919c-49a1a415c16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd15f2a-bb13-4e9e-896a-5fc7e44c9589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b18c77-99df-46ab-a5b0-1702486abd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ee51ef-b8ba-4036-a356-27607987af66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6b9ee0-14b4-4574-81db-7d1d5365ef7b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0802cd-d005-4129-835b-b29599fb47a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ddc89f-d189-43aa-a203-03a057455c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404d6e97-239a-4a33-9867-ec622feaba3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed210e7-ecfb-4dfd-aa28-018960c727c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11dd267-08bc-4d81-80c2-9f22aa97c929",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf35fa6-1159-4dde-902b-3665157d928d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efa31eb-2d73-44cb-93b0-86aa2ae409e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a83309b-e6d7-45b0-adb1-e35b05980250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6beca6-308d-4001-9798-96e87c31f9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073e4ceb-5260-488c-8131-2cf738aec4b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0c04be-2a5f-4f4a-87f7-e608b92fa5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06b9b52-a7d9-4448-8649-2cc681189097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71a0c50-1498-4c06-98ef-527b3c1aeb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a759c5a5-fe2d-4254-888a-bf4762fc3ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085f0ffb-7f9b-4d77-8785-63ed205c3e5f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfde328-157e-4105-adf1-05d0c7bed300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85a6e69-ad16-4142-ad99-711873c28645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec05d29d-a531-473f-86a4-63a064721582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac13671-fa9a-4396-96e5-7a0a3cc51885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e94c8c5-24a8-4ea0-8800-678337611772",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a66355-cb3b-4764-8162-97d77e1e55ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecf6624-2a75-4f18-81d9-d9196f99bf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd78ab4b-38de-4dd5-9431-ff4d21c2e3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "002514d2-4499-4117-8d6c-305dfbee6fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8377a566-8452-4dd3-a150-be5c9627fc7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2294b8e-f8ae-47a0-910e-585f4fc34a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07345382-b55f-423d-8a9d-86d99fa6fdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4a933c-a54c-44be-86b2-f11b9f4c22a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6ad4cb-265a-41e7-843b-317c6bd2e4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3728412-babc-4d64-8cee-a9a40822a78d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07981bac-fcd1-477a-9939-16a7b0bdcaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cde827b-39ef-4613-9152-62654bf96ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0514c6-2714-4385-aa54-68664fde047f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d38bf782-0c64-4bba-a4cf-4dd6c061176f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bb53ea-bd34-4022-a6b2-5b5e494923d4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39effeb1-0897-4dce-a5e0-bfb3aa184045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20108cc-2062-4329-acec-63f7d066a552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84284a7e-e315-4b25-960c-bedd54843a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f8628b-620f-4f9a-8076-fc4b683dbf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c430684-0267-4abe-8c26-eb66d7e9073d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c37f353-c029-4fe4-8238-3c4532cd1552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ae101b-fbe1-42c2-85da-86023ae0efd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbe2787-6549-4ff2-803c-69068005f3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "749ba7a7-b9c2-4035-9447-a02669fa1e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c99e72-8671-4e57-9eb5-b76ed7046370",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f622fa81-c7fc-4cd7-82ac-a9f3df5e1e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5ff732-0ec4-486c-819b-dcf328a0d6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6962a671-d8fa-4acf-b4cc-6eedb419187e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dad8fbb-cad2-45ee-bb43-8ad54d0ca4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8f585d-680a-47de-85ef-892b7bf5f63e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbd2fc9-f8ad-41f2-acc2-4d2489181e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c478d79-a040-447f-a865-cf90e4cc0091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e79138-da61-4c09-98b2-2f2139ce73ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b355e80c-430e-4650-a530-61c6fb7c4999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e744f4e-1871-4893-a459-ff80ccea54af",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c23f23-add3-4d76-abc9-3b9d1fed7937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed36043-6e55-40db-bce8-2c5e59019897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d022ddb0-1576-47c0-a97e-5828178521b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "004baf4f-cf77-4686-ab67-d48074502e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da98a99-5d9e-42de-a6ed-8da982b3fd79",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26743593-b0f0-4f17-84be-3bf4ac75daa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef07a8f1-950f-40b5-b85b-550da5f671c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d328d5c-7ccd-4e90-b08b-29bd490dd798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a24d41b-115d-4d96-8ea4-02220ae0163f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282a6289-95f3-4db2-b405-b961c5920a19",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eab2807-65c6-4c53-9369-380a98e7f4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc46f58c-550e-4457-9f70-4e4a7b3986dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a58ff8-870f-4c10-80bf-58e4c06134f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "609957ef-49b7-49d9-90e4-878f7554e6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b5c886-0c13-4029-924a-6e9bf4254a96",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b01f0a-de16-4365-aa79-388822c85bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e904b6dc-c1cf-45c3-97af-4a956193701c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3ab617-bf20-43f3-9a2b-5134cc093f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da7365e-8a57-4f5c-b46f-51a67718b0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57dfc6de-a9c7-4e36-a854-c1434c1ae622",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6568bc4-8b53-4ec7-a3fe-5bdf1cd46577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea7e18d-580e-4480-ad3c-203d6afaab6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d609e3-1dd9-425e-9229-4e9709fed8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1865946c-9404-470e-9072-cd744a1ab503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1178f8d9-8f7c-48eb-8024-e87d03529fd1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f891a6-ea5b-45a6-a9bb-bacf4c836c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50490143-d4bc-4c4f-ade5-a3831344a55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a3c437-f2f1-40eb-9769-2a521b42d423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cda887b-aa41-4d38-a510-842510a59956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5429913-2470-4d3d-8646-662122151a76",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdebd22-e107-46e8-b85a-8020bead4d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af8a89c-0eed-497f-8cec-977a2fc70839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca2ee34-9dee-44c7-9e44-a6c438dfce60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "269810b3-548d-46e7-94a3-9ece0e699269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6076e0ea-3af0-4232-bc56-23c6b0e43b66",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9b7537-11ad-461a-9b15-74678be15743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccca22c6-eed1-41d5-a242-f97ff2ae8cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4421edbc-0f74-446a-bec9-0db61de36961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dbab82-2bbf-414a-96aa-bfdf055c2dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45480653-2aba-457e-9f1a-54ef9dd7a30d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0f2bdb-1aa1-4e62-8b5c-1041906540ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba137a0-6a69-4d17-8e58-5b3b9ecdd3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f40a45b-354f-49cc-a7bd-fa54c5bde3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d356ed0-fb57-4670-a6ff-ca4754215884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45f01b0-7861-46ff-9089-f64f2ce68143",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211d2ee9-852b-4163-a659-d8f44b2b164a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da7d8c4-d51b-49a5-884a-233c845e2f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aef0d1f-27ba-4f52-b7d2-be4f4ed4970d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "743a1438-266f-4eb0-971f-ff313be2e081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e0f022-9b2d-4adb-9a0c-027662bfa64e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98a5be8-5160-4565-963b-5796aa5208f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800a2949-87c6-49ec-a91c-439397ce8bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa63bf6a-93dd-4aa9-8034-a1591ac06e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52322750-419e-4de4-b28a-e86e884d6330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef86f50-69a0-4041-9f25-0dfe13fb36ed",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e56b0c-117c-4921-9645-b85df2c07567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d61576-2d80-498c-821e-2b065f0c8ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532a2655-dfa8-4564-a786-1cec888e5010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa14de74-6b8e-4036-af50-f1cdc3c12828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4f9034-cdbd-4b5d-8b7a-5c464f04bce5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06befa00-fb8f-4945-9446-5d2c8d91108a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1acb47-7ca6-4704-8865-827d389146e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d4d974-90e4-412e-aa0f-40597bde922d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16364efe-e11c-4168-a842-9f6d5c4d132e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f7c55c-6e82-4f9d-bd52-d6fda07ea506",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95655330-e861-4a2a-a7d3-928718a4cbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d8867e-660c-4009-a16f-6bd85005a22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56da5877-c0ef-449a-b391-2c1e71112977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33fe7a48-a1e1-45de-9b36-78c199f8391e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aface89-078d-4280-aac3-f2b9ffd1b483",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1782e4-de81-4685-97de-764c6d772c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efd2611-77bd-414f-8714-f17d883b21b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf729140-194f-4ef8-9f11-6bf2e942617b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ee90d3-6c9b-4c0c-ab8d-bce650c9e445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c1aae3-b6b0-477b-bc25-4214e4197a92",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e651627d-85e0-4a14-93e1-b6ae457f5039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9c121a-a4ed-48f3-aa78-ccd4d4a57505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea53b72a-0be1-4351-af5d-6b92ed747aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fce79b-0263-4f28-95f9-f0fef6825c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b70847e-b30d-487a-9d90-16160104cf9e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af446e42-8347-4f4c-b6d8-61c8d6bfc4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c416eaa-1707-4e13-8265-3d642cbfbd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fa4cc6-3dac-47c7-952c-0d422fcf9323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70199d6-73e5-4c15-8d45-0f9d6f2ae1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53501c7-d82d-4058-80a7-48195388036c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92426861-66bd-499d-a953-d2cf5216b6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f87f676-07ab-4af0-8f69-0eea30a1df26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2efa18-9624-48dd-a0e7-d64538546365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb962f71-c4c1-422d-93b1-cb516b68efd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d90770-9e6b-4e2b-923d-13652f04f4b8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5972f1f-42aa-41e0-bb98-621ae8bad078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a891cc0-df4c-4c84-924a-546c6146393c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14990a47-425e-4b4f-9cc5-30aa3ae92aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61d53eb0-7251-4b57-8f37-923b0f64c0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a794d9cc-c85f-40f3-9384-e7d1c847917e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c18bcf-34c9-456e-94e5-6714e0abe47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c454bf2-69af-4ce6-a7a3-1b5e57a271d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf3deb6-88a6-4814-8395-84fc7afd7435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfdc95aa-32ad-40a3-bd57-bd38881044bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6947d43-0e67-49ac-aa2f-b8ff157d85cb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbea85c-46a8-4208-bc3b-bacec3ac845d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5d8a00-80ba-4866-9621-7e99292c5995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af53dd38-8948-4c75-8b37-9f48348fe14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb4988f-4b68-4c8f-be0a-8f882406df08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52f4b8e-a164-4976-8361-5627e216622f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b507a4d-0c90-47a7-9e12-3235559de3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7189ed-17ff-4ed7-a4b7-aaff69e9d9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0906a574-f5d5-4515-8bd4-a5d57c54017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd05d728-88e9-4be2-a144-3de92909b931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "759912d7-dc66-43bd-8ca9-808b5b34ffe3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1a4de7-38aa-4e9a-aa99-54ea042c095f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad500d1-7a07-444f-bfdc-9fecc4dfd034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3ba47e-ff68-4489-bd91-eb9bbfc956b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7e848a-f9c6-4367-b80a-9582a7dd1444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176085c7-97d9-47ab-a9eb-079df8910dc8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4233b151-a9a7-4286-8006-6991a8142c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3e15b5-a078-44ca-a6b2-54c773f1f72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d6ff15-20e8-4811-9a2d-0dc56fd6ef82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3dee72-9058-4d28-ad26-abd29968532e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5444d208-5af8-446d-9ab0-c6810dca2136",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecdf50d-4377-414d-baf5-5e4d9eba54cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde1b41a-20b4-415d-a9b7-001c748cfaa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac00a8b-3fce-4fde-9898-89eef4358a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a55fab76-44fc-4e7e-83fe-56bf7e87cf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ad9ede-3ec6-40b4-bcfd-8354c7b6520f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab018693-36b1-4950-9539-08bf9e16ee70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7a070c7-4cff-49fc-8ed6-b39ce2bb4911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd58dce-017d-4ef6-a286-dcf840052e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd01b467-5658-41be-ae60-807c53ecf80e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d49837e1-4389-408a-8fa9-6dc7c0e28c36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9a1addc-1bdd-45df-80b4-48a80dafa510",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3893305b-1bb2-4d94-b6ca-c55fdd851aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e63e1d09-a77b-4730-b311-73dccc5a8516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0732672-7669-4cf5-9b3b-04623920ab39",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b70df55-57b0-41d8-a7af-ce67e21e0814"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d260729-ff78-4199-99bc-1550ce6cb156",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6b87d09-b9a9-4bdb-b802-bb601a1fa44e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c1ea080-47f3-4d90-8564-86bf876c1db2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40ae6159-8bc1-4cb9-a7f6-35ae5565c6b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7787d8d-9c7e-4d42-b2f7-2c6e51d8e865",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36d466f1-69d4-4fec-9661-cf1247ffe75d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6f02284-9c74-49b0-a222-0bef1cfa6e18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "143bd6ba-8eb6-4619-824b-c6067e78603d"
                }
              }
            ]
          },
          {
            "id": "83feb8ee-7587-4353-8ac0-07c93992236b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8e16488-f126-4001-96d8-5393b6c40fdc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a6131f22-3507-442c-87d0-17c0cee48a91",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9b2340-cde8-47d8-9483-2834a26321c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c0df46fb-3f2f-45b0-b1ae-40f13bab00b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7267c3-2219-4bc4-85d7-3fa417be0b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e2ef92-366f-443c-9c89-0cd254a33067"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c9a50ff-a8c8-4b20-b3cf-689a8650391a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ba9673f-a068-4e61-b2cf-0ff4b97e65ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cfcfedb-4a11-427c-b4da-f24c0e6378ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67076a59-b8c3-4512-8199-1ff038ed6e4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "25cf99ce-99fd-45f4-8965-fac54369b29a"
                    }
                  }
                ]
              },
              {
                "id": "daca3a7d-eb70-4ffe-8d1a-1220bea89def",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd1bc546-4b66-46b3-9f52-43ed9ef8a9b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbd1cc96-b9ab-4a2d-a661-7da213461d4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a831fd9-599f-45bf-b898-b3cfa3ea5a0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb6ee48a-b9f6-4258-ba69-7cd592476dc7"
                    }
                  }
                ]
              },
              {
                "id": "02751174-e69e-49ed-8189-bcf776c7174b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ed4482d-ea66-4655-ad46-473b587471c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f79ca0e-de93-4f58-a5bc-cded346d428b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8607879b-81eb-4381-b2b9-eeed608b7ded",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2eb7e82-dbe6-41c7-a587-a1da2be3ebc7"
                    }
                  }
                ]
              },
              {
                "id": "344dc17f-d803-4ffa-9962-c78f5753c4f6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37fa3a79-3558-4550-9172-5e6a4ed59ac8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e255b9d7-63a4-475b-9b25-2777086a6e6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e71ca878-17dc-47c9-a2c2-fcd9b691d0d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "498d0a09-7079-4a77-842e-3bfb18e548b5"
                    }
                  }
                ]
              },
              {
                "id": "4b3d3752-0868-406f-9cca-043374f5bde6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e124e339-a5a2-4c44-ae9c-ea8f489f5930",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a39a176b-1b3a-43f7-9eff-670fe0f09fe4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dac6973c-8fbc-4a64-98dc-5758c1402705",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "33959f89-2a33-49c6-9a6e-3cce5bbef2ef"
                    }
                  }
                ]
              },
              {
                "id": "390ba3c7-271d-43b7-b729-dbc162dc73a6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd1a384e-8fbb-48a4-aa45-0c725b042655",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ef47822-9fad-49ba-b9f9-8d5240066f71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3503fc7f-91d1-4400-9e6a-70604c0db9d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "359f414b-46f6-4860-b116-57b640567904"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b84dc4d4-cf63-4cfe-bcc6-d8e3c98a27e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b3aadb3-f3e2-4544-bf2e-60822e5fe42d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "945da379-440c-4d34-bdc0-38e0489b61cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ae9b11c-c522-4143-b9fb-8df3e82f415a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f6ab525-d34e-4d16-8da5-32b269217cc6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5691b63e-0388-4583-91c2-39aad08794e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7289375d-0911-44ce-8ca7-5a1699d43087",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1d8d9ce-1739-4715-96d9-f600422b5e13"
            }
          }
        ]
      },
      {
        "id": "5785a158-04a9-4eec-b001-0fb9bbc5d6b0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e44878f0-77d5-493c-8dc2-dad36d998d62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b77d859-bd76-448f-9c18-2c92873f2177",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ce9a60d-dc98-4a5e-a8c3-7b14ed713036",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c0899a-fc36-4173-bfc9-2ab02f0d57d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de399aff-4a37-4479-a98e-866e2396e838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a02a6ae-5c16-40a1-ba25-811fd377def7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed84ae78-32cd-40c0-ab82-e0c2119bbfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f933fce-28c5-4629-ab62-27cbb1b68608",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114638eb-f7c1-45d3-87aa-179b9f3869d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24df1021-e0b6-47d5-9688-24bd0f3d851e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acc96e0-9320-456f-9072-aea222f2096d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "778cbd8d-2941-4d12-9c6d-8420611302b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49efb413-8b99-4423-b7ea-5531b18ec7b6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85034cc-8ee8-42a0-9b98-f9647944fadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adeb1158-3d8a-44aa-b221-e412d1f25f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5303600-be22-420f-a5f8-696faaf12f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09eb86e2-705c-49a3-9b29-f32d8b9ef118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75558f0-bb17-4dfa-9b16-58fa8a687e54",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901c3aed-effb-49fa-bace-c73da5b9666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c446cb-ab7f-4539-a041-07a56844a2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09369a04-5abf-41dc-aa9a-8d12f7641663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2bc58d-1bae-4a4f-905c-8e85615a7721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba183678-0556-4c5f-9f0e-ee5e0a85e965",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe653e95-5fad-459a-a91b-57df308111c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d598d2-ecfe-4660-813c-70c307be2e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4886d6e7-f74f-48cb-9dfc-91f99d6d8e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb27a6c-7b8a-4f04-9d81-f35a7f916c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87e4d15-5164-43cf-a6b1-73deebbb1135",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb68d63-8eea-4ddb-82d5-d66a6ff6e325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa3602a-8d37-4536-82d4-6351b9c62a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343466a4-92d6-484d-9b93-4842a522409b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "514ba822-5536-4bf5-9b5c-f9d7a68781f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6ead78-fb8b-4fbe-aea2-325811c206ce",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438852d8-12d7-40db-b9e8-1cc0a019a453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e165643-eec2-4c74-a029-869531a00c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03c095d-5484-4ead-ac6d-5fc2fe9182f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e76ab53-a949-4792-a2bf-954936f4238e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3623a13-0e58-4712-bda9-269dfeb28ae1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb3a2eb-0976-41a3-99bf-c17ac06581e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53d6ac0-7480-4fd6-bfdd-9637f0c474e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f62d07-8e31-42ad-83f8-266f3cae6bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eed39a7-6554-4039-b611-e9a2f219f713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572f8d29-9b86-45e7-8387-e368804e029d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e07379-98d0-4985-8269-9eff8768fc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85db3e72-cd53-455e-b505-60c1486358fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1f1482-56e4-4850-ba36-0644f350c490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbde88fa-02cd-4b5a-b82c-cbb0b18052a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be699101-33e1-4bae-9cdc-9fe7b506126d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7c6b22-abfc-400a-a314-c9873d651aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5285fc-367b-4366-94a2-a5e353f2c4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a124b50-abde-4752-a897-9b5818602c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "424b8ad6-7825-48a9-be55-c3373f16b155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2558ec65-daae-4ae1-9b16-a8fe8f4f4fe6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1270959d-4809-4f65-aeb2-6c105f4f8ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7104263f-517f-4c77-88f9-e6b5d85b47ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aba6554-78c1-415d-b872-c886557f6c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0a1bee1c-c5e9-40de-9ed7-cb393f2679c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcdb2ee-76ad-440c-ba58-df289eaee193",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a74433-b894-4db3-8bdd-e7a7ce98fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3e33de-eca8-4664-991b-609417255777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27aaee1-bf94-489c-ad02-6e5124576ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "104c4dbf-56ec-47db-8c08-de9279a23ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca6a987-fca0-469b-b0fa-9644b8ad7095",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02d169f-a397-4c26-a73b-f0b1845d77e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ff03e4-1dcf-4629-bbbb-47b15c003997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6593c1-3e1c-41ba-8227-0d944be72207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca8baec-d527-48b6-865d-85c560083736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e7164f-9b6e-4707-86f5-24dd43225e0b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0c8b8b-46a9-4029-92fe-082a7b58b62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75579b2-dc8b-4c80-a6ba-e9f3a8b65c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e9781e-8376-4318-8825-75d5d2c780cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "49fd45e8-355a-4819-8592-937119b493c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c14c2ed-444b-48a0-959f-6ebcbafb8581",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6208a791-c465-4be8-b958-21736018ddb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bad7201-ef9c-4d10-ba33-964714b2186a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dba983-65e9-4cf2-8c19-66958a80eeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "763d8326-e2a5-475b-a8bc-d235cff0c008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275e2a3e-0ab7-424a-a0f4-4860ad761cc5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10053d4-5093-4fe3-8b32-f494effbb273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db18c92-0083-4dcc-a06f-53de39d9a336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79747de9-4dbf-406f-bab4-cb7b5034d7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdba9562-8a33-4434-bd5a-ce3169555a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce224742-a06f-42e1-ab81-683442ec21dd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e47815-0d49-48c7-894c-988013d0d997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1e9a78-043b-4cdd-863e-a90c3df182cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74de1e40-4055-4117-8f33-8626dc6e0799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1677039-2261-4803-9499-1de55e30f882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c5ce32-f96c-4ff2-8bc4-b0cb59fbadcf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42dfe70-aa4a-4928-abdf-de27f032ec18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbf3809-4db9-4bca-86a6-c243bb368748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185f5b84-2bfe-4746-8364-3e2c8e916caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b842a31-52d4-42b1-8056-de98765e35ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72daf77d-a354-47d6-8960-40a46cf6e0af",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd5febd-93df-437c-8080-feb0456a9d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9350ef-bc43-434e-8fbb-ea6529fd1ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e467c8-8f81-44cf-869d-a00fe5ab3be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e9bebf-fb3c-4f7d-99bd-ee93ae94941a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28d20df-2f21-4d5d-b8bb-7ca50bbb1b65",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4829db3-6c40-4464-a5ee-61628b7868a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706af244-c78e-4cf9-99f4-58992fadcdfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ad338d-6dd4-431f-9065-53c05ab0721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e4274e-080a-40fc-913c-676679df9bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf759bd-e182-45d7-b287-dba93a73f8fe",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6439d8-8542-48d0-9bf1-8391d57e6d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d534efbb-ef32-410c-9022-f9906e28059f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7b2f12-bfab-4b70-b953-929c199a5034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae86df06-07bc-4f83-828c-52915dc0ba8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d07b70-d5d8-4bdc-a961-108db6f7ee2a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2333ca-33b6-4bc9-9a84-bdbca1a5681d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55635fca-6331-4e22-b432-1e69c172f80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c3fb7f-de56-4faf-afef-9f0d7c1a92e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d45968-5f78-4b16-a39f-5f0feabd230d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0849b103-14a1-4400-a3aa-e6084b33c45c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d3bec4-314d-4e21-b332-aa44d3a5146c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b6e6c5-464b-4f23-8b94-e40b710da1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317262c4-4e49-4682-a719-94cfe4c0ede1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a3d410-cd5e-4dfa-a604-0a2d1fb19565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70d5a8b-2523-4c56-9ef3-b68e153fde55",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97816851-997e-445a-ba65-0e11721af2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9733824a-1a5b-4d5f-95fb-2e228b2b82fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb05ec48-03c4-440b-9947-c1c51049e07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f723574-b534-4358-b372-70db66596a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93365551-74dc-4d5c-8a04-a711c9f97340",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb10288-9654-47fa-9268-f13e3ac1abd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22868dc1-bb0a-4158-bc0f-a77d49f7cfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb46a2f-c363-4ec2-8ad8-72346d70edcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5b8990-9fcf-4956-997a-331ad629e6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca73665-fc5a-41b2-9982-867d8b5be3dd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345b7fc0-ef07-4f01-bd38-c0c5dd23d12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f5adf0-bbf6-4ea6-a386-8e40bfaa2dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f6d958-ff9e-4961-aab7-a2ada4d71e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05dbb7ed-7116-4255-8e1e-b0f36fa8314e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522e7182-b149-44aa-b710-437790d59cf9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f736dec-9ae0-4c17-b972-d76fbba87394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01925219-a4c0-4b35-b573-6396da89900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e600e7-2c02-46f2-a13f-eaee24d62454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da719c46-acfb-4a83-bfbb-f43ab500fa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9878303-bd3f-40d4-b476-0312989b5054",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad351d54-48c7-46b4-a2ed-af8863b93de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95d10ee-4e80-41c9-83d0-a7e85a9c3453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c1ecf7-e576-41a7-aafe-26ea4a822169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "181570fb-caa2-43f9-80cd-f31efc29d4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e16995-ae31-4eef-839e-aa70d7a602c6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d5bb29-a526-4a47-93bd-3e8e1cddfa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b6bc36-29eb-426f-bfa9-5c2fceca7fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4e7be0-6875-4a5f-88f9-212262db3212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a780f39-461a-4b24-8770-6c37cf4f79da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e536ed8-3931-41aa-8465-6ac4d2430331",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af671717-cdf7-4c78-bca3-e8c0a33b87b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c17b1da-aeba-4c2a-94a6-2e58e8b91d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612aa2a2-b8af-46c1-98e7-aa65596558a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f300c88-bec6-4999-aa55-cd024483bd27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4dbe8e-b7ae-40ac-b3f9-23e482097187",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25eec8c-6ff5-4494-a132-a1dd6203bd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf161f5-9b8f-480b-8f8b-a813d9388213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c865a603-c3c4-4003-9425-d1212d240e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "187332ac-c062-4111-95b2-f2cfa511a3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ef5b02-9011-4034-a56b-632b97e25208",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c12492-886c-4a83-a0f7-a6f7cdfb40b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e8d238-1208-4111-8985-8563df00f6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6727cb37-407b-4ba5-b482-8996f702376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a08409-8177-4cfb-81f7-52dca7d51dc7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0413058f-b6bd-4c53-b856-125903fda4ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2dc9251-868c-4267-b105-a21bc4a55380",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaaa09b-1a17-48ef-ab91-d1c99b9e30d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6c34d3-a0f8-4ae4-8fea-0a90488ec063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721f5dd1-8b4d-4834-81b7-a35ac4d33050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8420011-321a-49aa-be5d-2a15afbfac33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "939bfda8-7ceb-476e-a738-9ebe2d43e9f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e9b7131-7e44-45b5-b396-ae9ff0caeaf9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fe41fde-9f5f-4895-8c66-45a87bdd22f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae12370a-c215-4aed-a64b-a2cf49f48164"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1af93b30-58b1-453a-899b-45ea8838059d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "086c63e5-2712-4c24-80a3-f21f138025d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6532153b-f31e-4878-b7d3-a4dcddb48aa6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a7c1273-95d7-4325-a94e-8f23cdab46d5"
            }
          }
        ]
      },
      {
        "id": "1a83aa38-5f58-4a04-ad9f-da6de8f382f9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5853ed1e-465e-4af8-add0-5c7091cc3e74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8da5d049-3dc0-4fed-ad5f-d297492ef5ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9da69348-c735-4342-88f8-4f49229b989d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c82d70-39d0-46dc-acff-8ff18e8cf793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a751e6df-4343-44e6-877f-3394f7d51d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb5bafe-7a5a-4bd8-9679-fef8001c488d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a004bd3a-5885-4d38-9106-ec40a4b1642c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c2b0b3-f66a-4300-96cf-1bba9a018fcf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3971093-27c5-4870-bd5e-5604b0117cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754f9406-81cb-4354-aa96-136699fed268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca94f721-9014-48b9-a953-ad845b32e24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71b6d22a-8fee-4390-ade4-cfab51380c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e41516-950b-4465-8dbe-c3e3f38598f8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fe0b1a-9d00-4343-8667-eac259c74e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dc35dc-cd7b-492b-b1fe-08a72d7d8679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed88518-a984-45b3-b298-d17ac1432f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3657cc7-c4ff-481a-8522-80312c5b7cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141518b7-553b-482f-8668-764e3433c6e3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e691800b-1705-4dd7-bf85-d21e4cb32a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d32445-fee5-4afb-bbc5-c28e68894173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cd18b1-36fd-41a3-9d13-7f9c96bdfa1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cfed5c-e754-4176-997a-0305622f2cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c21293-4104-4a12-9725-f87a7c8e7dd9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c217d094-2fa9-456a-b0d6-176979dfb443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6303f173-5f15-47b6-85fe-3be162c4a76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc280a98-578c-4b0d-babd-46454fdcfa07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d649be96-f356-4030-b89f-6d002eb6ace2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35448b67-c53a-47fc-81e9-13ad08a483eb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0c560e-55ea-4ac5-adef-6fa4bb9f251b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2456a7e-9437-4add-8ace-c5c601b41561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d93563-7f33-4055-8c81-d172224b1b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba426878-b878-4996-8317-e4bc54078a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ccd0f8-b454-4d47-b078-ba4639abb062",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df9c18d-eb0a-42ee-833d-580a978c6d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db724fe9-2da3-4bd7-bfed-191dd22447a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4683c7-3444-43bc-8eed-e500e34508ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb236fd-c43b-4048-928b-f70c5c8e0e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df590d4e-f129-490e-954a-44d955f3fbe3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1515991c-e1a1-4476-bdaa-8cd26acdff15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d51ace-3fe1-4881-925d-6bef2d658eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa8dfc2-3009-4b3b-b668-85520229ca80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30620f20-0166-47e4-bb4f-7198493ad263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b5ab82-a28d-4567-9021-11a114e8e324",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f7deeb-9233-4c53-ae73-57a7fc70bd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda5e3eb-e77b-4c92-84a5-25d188250fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432892bc-db87-4954-836c-e92821b5b2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d236c3-79bb-4756-aa51-3ec419239899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c83683-71f9-4b65-b0a7-5f56b01bf688",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ac6a18-f3cf-43e5-a48b-9ad0e498f07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87e7b32-9c54-4e63-b41c-823d4a1f946c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f714e124-2865-44cd-8df9-28f9dccf029a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f450fe-1a9d-47f5-b322-318514ef4703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48330b57-cda9-4131-9bfa-8b7d2b7ff48a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d887407a-a9db-48c3-a6e0-8c1c5660a33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b013ee5d-a58b-410b-8acb-c82f4794b5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38842f0c-1f2a-4619-8045-db66d1537aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "75fcfff7-e1d4-498b-8bc5-ab55c5b903ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf27394b-0fcd-45ac-8072-17199f6c94b9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec525fc-cf75-4c43-91f8-d7a06395f6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670c11ab-04e8-482b-8c9e-54b98d92b33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73740c46-6d50-4763-8e48-f68970e5befa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6399930a-44e2-4b6f-b43f-eb8d3ab9be40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1d0ea1-abb8-4290-9ac4-6035ee17d912",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48a7d53-d617-466c-86bf-8fe715779e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffda976e-650d-4f2d-9277-5ffc587ad2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622e73aa-6a66-4337-9b01-31af10129ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa23e3e-7700-451f-8753-e879d1fe8f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3798db65-673a-41fb-9c17-3438fc5c5838",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b75ef1d-5a0f-471b-9b11-5f510752af25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6355aa0d-65af-41f2-96f4-956444ebbbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7861c2-c0c1-4735-a81d-6e7abaf35704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e45ea0a8-9d9c-4d4b-9929-dae64a2fd69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689f2ffc-ac49-4031-8983-80a4129de207",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d660e7d-66f4-4c90-97c7-c4692318c4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1953dbac-d71b-4265-a9d8-116a03df669c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975f8bd6-603a-480d-8fd6-4e5c8a0f3b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8999ab02-22bb-4ae9-9e94-0e4ac70e2348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437ff49c-4920-4500-b55c-e1b9006cdd66",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e236e175-209c-44e5-88ba-2a6afc7d9472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34962c0-d297-4ffb-84af-1c8ab5ca13f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e506c7c-4ea1-4338-abac-ffae337d22cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7f17d6-edae-4652-96e8-13e4341223d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9de857f-5f60-4601-8b79-94710e865f06",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b50946d-2b9a-47f6-b9e1-865cc01fd300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1664091-bfa0-48a7-a0ac-29987c1217e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb08ab1a-6a7d-46e9-a633-890a5d5b9961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c293f0-e0e4-4e6f-a493-05a93b98eccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28088eee-e72f-4b4b-88c6-e3b31b93e76d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c35d573-fe94-41bf-a22e-8786b00a245c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47fa83de-daf8-434f-ac4a-ecdb5d58a67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16eaf76-6f2c-4587-b837-dd650ab3b8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c16079-92f9-4b72-a265-971573b88644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78f86da-a7ee-4626-8fd9-3eba509dff26",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8eebc7c-4873-42a5-bbac-35883bb7441b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2e9568-d4eb-4167-bd09-9f3de8e2647b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229ebc6e-85ec-40a9-8149-03c747972ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4cc747-705c-413a-bc5a-45ff4dc01eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519027b0-da1e-4566-9390-971923070b0e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ec34e1-0d60-4020-a667-c2a17ed673e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1e022e-2d9c-4c01-8a6e-be7391eafcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb38b966-e6ea-4db1-a93a-93f9f8312489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7850662d-e995-4132-8397-b2d6e92f2bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045f18df-9ae1-4292-ad1a-04c61379f661",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a697658f-48d1-47a8-9c47-77ed7aa4442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7196ea6-7b71-463e-84dd-a00fb51cbf1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3523ad1f-a955-4b3a-aa1f-88866ca7fc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb420eaa-9649-4bfd-ba02-e5b4ae5e4af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240bc9b8-48ad-48eb-9742-cfeaacad4b99",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ceb976-d2e5-4339-b438-c0dbb7f0d1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d86269-5c33-42a5-b074-10bf18ae2d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c559c9f0-6f7b-4445-8cab-ce49da8b87bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ae9803-c0cf-4376-80f7-f7169c277e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e440d81e-cb33-4de1-93bf-c5162527394f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d5ad5b-e240-4923-81fd-158afd74215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e6cdf2-dbf4-4432-97f5-f8c9e750566a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e708d4-e997-4c92-b3bc-092746d36faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7a3dd0-cd99-4dab-bb97-fa0f8c74b275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085b0373-e370-40a8-857d-800d33821d91",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf8cc99-f4b6-400e-bc63-87e3c46e50d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a2d3b7-22fd-4e9a-a6d5-0ffed27beb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be532f99-305f-4357-9d45-bc1a7e0ab53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "563510e6-993b-453d-beab-dda4c8f91809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f623c5-e823-476a-9e14-a17c9123ef9d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5110deb-5f58-416c-94d4-6e7c70f90637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dfddb0-173f-4fc9-95c3-13a939152be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82498e8a-b4f3-4a6d-9252-0f1c6287dcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ac70f9-67c3-4532-b5cf-db5b17269812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a13214-97f2-4f92-8b21-97cba49ead99",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb5925a-2459-4ace-a0dc-bcb4c63377d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f1d836-fff5-45a7-88bd-1c122826bce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a6cd84-a4a1-45fa-9801-797fe98fc9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bde4c9fa-2651-42ad-b6bf-112d1868770c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94034f3b-e3a5-46eb-a055-a2d0a9a1a199",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf30e47-07fb-43b6-add0-8a9b638cac1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8a8c2d-0cc3-4f49-9ef6-b7ae83ae0f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f82329-8e04-41e8-ad44-81e1e8d6d177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c24238-cea7-43e6-a590-d4a9bf79927f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d30590-51f0-42f6-84c1-9693086f2f8b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44f2c59-de98-489d-b339-0c82ba18140a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007856c8-df00-4883-bed6-d7f2dd0c03f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67dfb5a-b21e-4509-8a33-5b78b96b60c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ab494e-d9b7-4987-9fd0-2c1d507783e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5d9790-9d82-418a-aaf9-38c2b2648da3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cbcd29-f915-44f0-af2a-b9d3b13d11c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d19a711-dfb9-4ea0-9ba0-679600d04153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4a1ce6-2f75-49d7-a8e8-93aeb3ec9e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3802085-5d81-42cd-8883-0fed35a2a168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a8d2df-f8a2-4d41-a67a-423ad060572f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a937dbc-4b18-4e90-bca8-0fe2aeccd188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c8af0f-e41b-44ff-b6f0-ece8a78d3d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292a5676-c0ab-454a-9a59-c2d4c034a6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe8c8a0-9657-4d70-bff1-ed9a978a6041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac52403-a813-48aa-ab9a-7f0a6c5e9399",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee20ec06-b9a1-45d0-af3d-d8ee7e3d76db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03708443-9308-49ad-8d28-d697658948ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc80d568-ac7f-48fe-839d-1dbb4c1a4ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec28cea4-d585-487f-a89f-b5ecc17fa50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c8ab57-fa4e-4ffc-aaf6-5f6c2402668b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23c920c-ff5a-4cb1-99f7-a8b1bdc96c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb329b38-2a10-4671-82f4-eb46ef50250f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad4ad61-0a6d-4d1f-adf6-29320bc5beaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9956f24-0422-4384-8029-6369856c4795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf940c97-fd64-4d92-9cb4-41c409ce35f6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873646b3-2609-46a9-ac42-ff8e810f3979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7a7dc0-1e36-4516-8574-02243e3cdc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c2c94c-448c-46d4-a125-50b6f9b7ed1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0605df1-9c85-4fc6-8729-2ba10f1db34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f245843-6321-4508-8261-57ac9dd4941d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "219f6327-7f76-4658-bde3-c81b21db6f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5fc18b-241b-4cd0-bc75-9c95fa92c81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c6d016-9ee6-4a37-985d-cc08ece41dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca38d5f-6ae9-48be-bf0b-3c17fe532a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1fc0cb-8942-4674-a8a0-0471f1807e64",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b1694f-5d82-4dcf-b601-cd84745ade47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0ac3c8-c7fe-48ae-8b6a-11413ac92cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bbad8c-0e0f-4129-be48-8b84dce364de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0884103e-6a43-45d3-9140-b7d0f6dd735b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5145376-c330-4753-bd6c-f45c069b972d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cbd222-1bdb-4875-9d39-f9b6d1c9ea9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a58c80b-cddd-4766-b41b-115ec6440a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cdfd9a-c7de-45f3-8cd6-93d4a35f1ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa915ad-5fd6-4da0-9e54-3ce03b7404bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01529d0c-770f-42db-bf95-9bf8a5ee7bb8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d954a5e-1c62-469e-87e1-39dfe890cae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1741f86f-74d5-4899-8101-02f7cd39877d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703bda7f-b83d-4122-af09-d7a206cad963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2284ffee-6b32-4e7d-b881-af165ced2b53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ba2940b-9696-4672-a5ce-8148ac7ade25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1ff862b-754e-4a31-a130-c508e95c1930",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbeeeca-c76d-4360-8ce2-007b0558752f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8e2643-ae48-4a33-a1cc-9ae3caadec68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f672e9-e579-4881-99ea-a055747c2ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e4256cc-a93c-436b-b6ef-aae1bc28ada7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c9d0836-a3f5-434e-b815-b16499bf4477",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fd5eb3b-ae74-454b-854c-9663d644d2c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95d68e29-3c64-453f-9a60-de057730bb60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64eaf9b9-8d17-4cd3-b452-0eae447a12a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "530a8edd-a51e-420a-bcdd-933819281c00",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aed740bf-2651-41ea-84fb-ccfc45c13568"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de7d5f0f-835b-421c-9cfc-feccb187a0cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "312fa349-3fe0-48e3-b5cb-2c6320111dc7"
            }
          }
        ]
      },
      {
        "id": "efad8ec0-9e72-48b9-b922-8057da5c28e1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3e991f0c-04e6-44c1-ba59-7353e0b61a8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eabe7f43-4eb5-4f1a-abd1-0df742217782",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13ef8439-d460-413e-9d7f-7cb93acc386e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e748f6a5-1481-4dc7-b5a1-802862edc5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f205054-4df4-4511-afe7-c144309466de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665f3194-fc49-471d-9ea6-8e3733d561cc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2a8bfd-acb9-4248-bd98-b4742dc82a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddf33ae-0a18-4f61-af37-faf88eaae003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c26dd1-612b-4a74-8997-9078f1e6cb4b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d37dd3f-0ffe-45a8-a79a-188568f49a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0935b5df-2b1a-4e7a-b2cc-c5875897fc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f795977c-5f1d-4dd8-a6a7-dca95b38026d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a7ee72-7c85-472e-b9d9-89887bbcef5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30377a3d-1eed-4744-b258-291cfc833ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd64b1a-4b5e-4325-a991-c368f80483d4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5afc3a7-847b-4fc6-b57d-dd8df8005613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebbfdb1-cb2b-49c4-b135-41b465cec361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d115c3-27d4-4e94-a652-f58afc4f45d5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375873bf-91c1-47db-986d-409112715d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de60dfdf-0654-4052-b9c6-96306b0961cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a75ab5-ddd9-4c2a-8eb1-eb0a90909342",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab27d662-a770-4850-99c1-1aa05d1b08ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973f701e-5044-4015-a482-c9d83515ba86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4015265b-e97e-4871-b10b-d689f54d0180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb215ec9-5a7a-428c-818d-afafc694559e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1021b5b9-94a3-4c83-93c1-d19f708eabc4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af08f86-99ac-415c-9ea5-2084f254b1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e332929-217e-4967-8ae0-934d8a1ff9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c319a388-c687-482f-bba4-59014f4f9806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf8397e-1604-4506-9e2b-8ddc64f09ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afd7845-2ef1-452d-b460-5038a2c4379f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c421e9-2d2f-4bbb-b5cc-861c8e12fca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4fd3b6-16b6-419a-b85a-8405c743868a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d08cb0c-f2b8-4050-b64e-a251aa6f8ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39417a53-7803-40c2-a7c7-4bfd682f40e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cee9c70-c17c-4a89-baed-2ff07b0eaf67",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35ef2bc-567f-4048-aeb2-7755b2b9693b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7b6fe5-3606-4fe0-aefc-f510103bb4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8345b791-c1f7-4c8b-bbaa-ef6349cc085d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96942b7-41fd-4aff-b85e-1c5d77eff34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9fa2ed-042d-418d-aeeb-eca51e9682f8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1f5899-5dc2-459b-80e6-24e09c170a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1736c0f2-1ca1-4ca0-a193-b4e8747bd7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2052c8-0fb6-470d-b7e0-c7ef60fcb9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa5117b-6864-43c3-98ec-92d6169b4f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e487ef8-a267-4335-82bf-aef41691bd88",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed87e7fe-9491-438e-b286-0cebe4c0a100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262f8ec4-849d-4d6b-8303-457f651e4e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70432f5f-0d95-429a-9440-92d37b35d945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9502dde5-f527-4b13-a4e2-78bac05ec71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4470a2e-ba2a-40da-b39d-cee1e5dd7f37",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5695a80-00c9-4c2e-8686-f046f2878d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34adcd89-62f9-43b6-b81e-96bc2a4822b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9971d964-7ea8-4f03-8d8f-cc32e46e2caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816e775f-0503-4e32-80b3-33a8d45048c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c734906-c037-4e18-b6cd-5db1bf9bf049",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f82a5aa-0d34-4784-be59-d974a41a1eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bffad586-b661-4020-9f1d-7ad1ea81b087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d472fdae-83b8-4507-a9c8-c7ff02cf4738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4036b38a-c1f7-4a2f-8160-0a15f5e62e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdc71ba-a0a8-4ee9-b7f3-2111403ef2d8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab172a52-c1d4-49b3-9944-ef4c102501e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb22d82-b43e-4c76-9eef-577bf36f8c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70da34b7-767c-4b1b-98b9-3b65f376e275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78cb7fb6-eef9-49bb-9763-e859e58bcca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eea6ca1-d5e8-4510-88a1-3ab747bdd92c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7449a36-8fe9-48e3-9f8c-e588920ae213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d46d11b-fb56-4139-847e-a464dcbf07f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f9d31d-c4f8-4365-bb7b-bb228127f104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e46f79-f316-4ba0-84be-0868f39e6c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7f151c-90d7-486c-8057-964b00eb265f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3f7c5a-433b-4c60-9296-600de7f0024b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4580e055-43ea-4e63-8ad2-c150416d2f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a3db99-ea61-41f8-ae8e-1679bae6cdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700cbedb-8a1f-4f58-8401-dc93b27d1971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f157ecad-6ec5-4654-ae36-ff6bca8823de",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fe7fcb-42d4-43c3-bbc6-076626e4fab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be73a057-f18b-4c21-bd09-0dfe41c24273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2aff7c-9ce0-4cbd-8794-3da2cb68bf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d07d1df-70c5-43cf-9181-6040c84c75e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd1d4ba-ef3d-4ab0-8d4e-22e1e77d39b3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42605e5-46fe-450c-a47e-6c62858e780e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd36a3a6-f0ba-49a1-8f38-929c6de23017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18b849e-5642-4b34-8490-c5681335bf62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e023c7f-6be5-42c5-8c1c-5c5b0dc3fa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf7522c-6562-4a2f-b087-48a3059dec14",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76b3336-b7b1-46a2-9ef3-7f4792ae235a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9033697c-0221-45bd-abf8-d23b3fd8a43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4711a757-cd36-4bf6-bbc8-ffc82a89754c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd187a74-792e-4f45-a74c-731e23fb6c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16670021-d768-483d-b612-17438b268cae",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e91d68b-8895-4cb9-bc03-08a783c64070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b92e20-1928-4999-bf1f-432648b997e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88559d3-7e8a-4ea8-ae25-4981ed3d6cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4c115d-004b-49b4-8bdc-e8b288f2c2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e5e393-ca86-4e7b-b637-027b528f259d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d79aeff-09bf-4df9-b4a9-39bb82b2bf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6deb5c-1e56-4410-82f0-49622aadcb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7087d124-0b9d-4c5e-b5be-265c199c7a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c265667-60d0-4001-99a8-6565010d67e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e9f32d-34e9-4b76-b57c-40ee81098a59",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b4a357-f097-4f61-abd0-67060aa4bba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8628db22-c483-4e35-8026-dd2e06518009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3077be96-2fd1-4518-9ba9-887dceef848f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80564cfa-e52b-4bc0-8c8a-a809b511e466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d80de81-9d6e-4572-99b2-7edac048895d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed84b0a-8bef-419a-81c6-22576aeae714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc540f8b-58e6-44b1-ae48-510eeb091b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d96492d-834a-49a4-aa2b-88b1192dd91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c339ce66-9f45-429d-a048-7d8109cc046b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c491c7-3d2a-4681-9c26-8e57a11806e8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6d117d-b5a4-481a-ab25-7562c594fce5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e8a008b-baa4-4b51-91d5-0a74486760f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e536d6e1-53ce-4b06-b74f-070e0957fcd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd57b1ce-b563-427d-b788-5d3c6fd5851a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eec20fe-edc3-46b1-9600-7fdb56da32b4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623b64be-0397-46b5-bad4-d3c4a736362d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b5c02af-eb0b-44e0-80af-2c8c4319c5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c1b4ac-e81e-44f9-b6dd-5f35767b3603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1041f49-275b-4caa-92f8-b764b37e547c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7333dc7f-5ebe-43bf-bdfb-2e8d99130f87",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e4a301-abe2-48ca-b3d3-b89c0f48c7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade4405e-b854-4514-8564-1a40f39d909f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f89c88-d552-42a8-97de-d71fe2ae9782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677d1ced-9324-4739-8b1e-336cb9903adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a98bdb-3646-4cad-bb8a-1b2ccc52a66c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9b1891-f710-45f0-8c50-1d9c4972d5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2fb937-7ef1-4317-bd3e-447424b67293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cfb417-2cec-4e46-93da-c04521a60e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7479c898-75f7-4b5b-8f46-dc69e963578d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f334c2-bbc6-4f10-b78b-177068a03594",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b9986a-d57d-4403-9a1b-7deba7d4158e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82793fd1-e595-4652-817a-494559187882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0981ff4c-ee25-4eaa-a0d5-01e32c5ca8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09baf0a3-c182-439c-8f15-344b5ee62e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c736712d-fca3-4248-bbd5-5abf822fa004",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e618d07a-c06b-47ac-9c29-6965f0f58ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b534547-da8d-4f82-a683-798003e627cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb67e0b-44a5-442c-a21d-62cb313f7795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d55d49-b6a1-46f4-8a22-67a3d8b5dcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a1ec05-85c4-4780-bc97-80adaadd8295",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1014afe0-6f66-40e7-a19b-52afdf248d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7b96e9-61a4-4735-a892-775c47d77824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dad10f-9abb-40d5-8356-ed232db8eec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cfe55e5-7844-49d7-a2af-9fe9305044af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d939d36-519a-46ae-9371-c570b1d72019",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671537ad-f2dc-4b9e-91fd-274d57372619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae9e4b3c-1305-443d-9886-1107ba087ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c55caf-261f-44de-be94-d533034d6d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c866a2-1dc1-4fb0-9ffb-97ad2cfe1ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ceeb18e-52b3-464f-89a4-62ead3df7799",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93459e6-ad2e-4f3e-bf49-b0ea7e385318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c55fe59-cb67-4231-8420-ff2a865de5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257f9d49-f6ea-436b-ac39-4ed1de402f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733c3b7a-d1d8-410c-b171-6e84dc75cb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1012072-1a9e-4f1f-9fc7-3bc095580dd6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50289588-9783-46d7-b6e5-b8452aac2857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c300c9db-d73c-45a0-99ff-0ef8f318af23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12885197-584c-4f24-8352-cdfa7f5c8d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9f7412-9ba5-42ba-936e-8ab9ed5350dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f968161-9639-4a03-842a-a40076016971",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9dd63a-f7ff-4749-862b-76601a5496cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beaf70bc-f814-43f9-a7a3-a16a17eaab27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20217923-4793-453c-914b-161256a536ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb0f102-99d2-4ef8-8ade-3bed16e77c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e63fbe6-7f96-4ae5-836c-5e0c85d3662e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df26471-3968-4ca7-a311-4b720e1b75fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349fc680-76af-48cb-a710-b599a04e251d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50fdc59-6568-4f09-af99-85bf76dcc338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef73ca5-aa77-4ab3-bf1f-e94cdf7b126a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b311d712-fab7-4f91-9552-d9f9658919b9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a8df07-c4f4-4e02-9c9d-3f559182ea7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507e91c6-5a29-4db1-9202-66bc20462ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a1f3cf-5dd2-4af4-9637-d501053ef91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69f5cfe-b894-46bd-abe4-99d14fde7175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e55c96-6c1d-4329-8412-458ab2d3b6d2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b6da93-39fd-467d-af3b-40830af00d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cc01bc-5342-4b6e-8b56-4d7138f03206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816845c8-7cfe-478a-85a0-feb20dfebf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8edcf9bc-303c-44ad-a140-0a8564e5ecf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6093cfd4-ee8e-4a46-9308-93de7fdb64c0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb98a09-a96d-4a66-9031-e56bc624f6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ab13a5-557e-4ab8-b379-28420b1d51f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2700e6e-6da1-4ad5-a17a-d364c5a6144b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923566c4-82bf-48ac-8d0e-e09e1c430a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9f98b2-53c4-4c14-9d81-307ce5d3fe0c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869d1aa3-0e38-4c69-af20-303689005c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c36fc7a-66ff-4686-8c92-b1f85b48c470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea83779f-93fb-4223-b21a-d77ef89410b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798d7030-abd3-4020-88e7-aafecb473d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589daea0-f0c6-4df8-bce3-a6db7190f3ff",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f3ab4e-b965-4d07-8248-bb2fa610396e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076dd0ca-ef0a-4a92-8df6-b30ac8f936d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7256ff39-9949-400f-b142-e410541534ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7bd341-04d3-4990-aec2-62bada1a7eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d404a90e-4cbf-4221-a91e-9c53895fc26b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eeca513-962b-4596-8fc7-fee1ed7149a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9166b207-4893-43c3-ac2b-ed7bf76c755e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea07ee8-f9bf-4bb0-96f2-f363df0d7247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19451537-8b6b-42c5-af4f-f5be26adbd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab88517-34bc-442c-9980-57bb4455bc26",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a5a53a-40eb-4ba1-b71f-99d64097c442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f23417b-3881-48cc-864c-49c2d152334b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a035a8-85b5-41d0-bda8-67e2ae9252dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c39428a-1aaa-4566-872b-c120f13abc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb63b88-7814-4ba1-b54a-4b3acf9b6936",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e7b644-b39b-4137-bfdc-7b49875bdb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f94632-cf0c-4925-bdab-00a124664299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a4d79b-fdeb-486b-9ccd-1cb24804375c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753a321e-cb8c-4d3d-901c-92b77ee70f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7604cc7-59c5-43e3-b608-230fa32eafd3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6514eb10-68e2-4f25-b705-a3dca51cc52b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43de19a2-4a1f-4004-8dcd-e275930b22d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e007e9-61d4-47bc-8d65-dfe733561b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7b915d-f387-46a1-a7f2-969829a090bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33ad0e7-cf32-469e-81d4-97d426e1fe9c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5006645a-7d1e-4c9f-b28f-c5d6ee83677a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513a19f0-8208-450c-841f-dde6dc914da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840d9f13-a476-49a2-bb4a-90298f6ee22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bba4e8e-5046-4a08-9c5b-1c4f45c48e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a41a25-a9f4-48e7-9303-261f0f004e45",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6220bc2-5ab0-482f-8e71-4b1d1edebc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4caf11-c1f0-475a-914c-96e593f72961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49f2bab-725b-47f1-a9f5-e91e0667be3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7a4971-89e2-402e-bc04-78becf4e63b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5111e4bd-2cc7-4eda-a1e5-1525bc0a05d0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0f89b5-d4d3-477f-b569-1597825d732c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ff014a-a0e8-4b2c-9a7a-13ffc95b9ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1160ff-bbb5-438f-87c9-8d9813867aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5484be82-4863-43d7-94a1-478e6803cafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a7775b-ec90-45da-8a63-bb9317443bde",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7f28f5-1d1b-474f-9451-aa64d067476f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fbd8e1b-759e-4be0-a944-1d5aed916316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49793659-ac89-4c02-8063-c6bba40f4f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade7e0ce-c8a8-4abf-a49b-fdff6e9690bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbff113-e991-4b61-a242-8023151fee78",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa887f63-103b-4837-944e-c0e7a44eb42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260c0890-743f-46eb-8ad6-dd7ebbc4e44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d31121-95a2-4b9d-a4a6-c5fef6e0bbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fd548c-0457-4a32-a27e-80644a682aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03302ded-be24-4968-9004-944987cb6684",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84b7f23-238a-4eda-8428-8276f025bd65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed4f34d-673c-435b-8f1f-6bfdef115b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88939a67-748c-453f-9389-2e342d36e027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e058d57-36ca-4575-a4cb-04deaa4cac06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381d560b-33c3-4d94-989b-9cbaae0498ad",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea061895-13e9-45c9-93c7-502d418736fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a95b0f-7312-4210-8363-e1fddeccece5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f250c7-cfa0-48cb-a9af-3506f861725c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff6b8c8-aa36-47c9-980b-845d20ce1622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c416b1-9b42-4fb1-bbba-73212fa71337",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e82048-c1b1-4944-8231-8bf5fb1a9ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cc956e-6444-4556-a2d8-742413039ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af9053c-c6e9-4bd4-a80e-1d162e28ffe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2b771c-c4de-486f-be18-4b5333375517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b246b20e-f5ec-4be5-b7ee-85f67d2b90ce",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681b738a-58b5-4cfb-8dd1-c2a559a315bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee5d6cb-27ca-4219-a9a7-f4e3c3063805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdc85a3-3a3f-4d55-ae71-4f598ee5cd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad36667-e460-40ff-9c81-e435d054a0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bbe3f8-1998-451d-b709-0aaa9e6a6cc4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5df77c3-edb4-445a-af80-0a32d2a23dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45ae0d4-3d2d-4c1d-9fe9-a84e831dd9ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e01e1a-d1ce-4011-b7f5-b0ce2a952077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7481d815-3ddd-4fd5-904c-b33c6ebecaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414466cc-74d3-4019-b545-2b62cf7202fd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac30d1bc-83a9-4cf3-ad52-275d666da20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251c867e-6698-4f2d-97f6-dd77a8c58650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa711b7-e4d4-405e-a167-fc02c63b11b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c77bc4-058c-4820-8cb2-be19b01b7dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2e5596-81a7-4219-883d-83e4d15922a8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a629442-a14b-42bc-8d86-4d0c9f6e1556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf71c4c-4c79-40fe-ac67-22e901ac996f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72920f0c-fd73-45ed-ac99-80c5c4f7777a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db116608-aad3-4a19-8dc9-a85092e21427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a7f0fd-b36b-46d6-aafd-b198bce43f67",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0130396-6d18-4c0a-aca2-eecb25f551ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45fed64-0c9b-4e7e-8123-71f73a01aef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308dbe5d-9547-4a07-995d-0b94c93bd0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b927e1c-fe58-4cd2-8863-2dbfc2a12d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e924db-cc5a-4de1-996d-29605ae21877",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b99b4bf-8cc1-4fc3-89ff-4feeafa63cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2fefd2-9b7e-4d9c-8aad-53170a5b7963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb573e48-7ab0-44a9-bda5-ad533162c70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c88640d-3e52-4cef-b73e-a9dc8e8cabb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c075c63b-ff60-46b6-93d8-fe9c5b3feacb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5051b60-76cf-49d7-b7b5-d28ae8ec38a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f2f6ca-e639-4072-b4f9-bb2ab9429ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc8e961-f8b0-4308-802c-3138f88295f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f28dd2c-042a-4556-92e5-e3f4e257d30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489bd974-f0db-4a54-a5d2-d4171c48eac0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29269fd3-28c2-43ab-b33d-e974a774323c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5395eb1b-adf3-4856-9034-0ede3b05441d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9758c8d1-c210-402b-83e3-2a0c8501b0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f761f1-54af-47f0-bbf0-2ea1bfddb132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98cd0e13-b6e3-4a9a-8102-30e27ad950a2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae4666a-e813-4e9e-aac2-dbb849a59fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae782b27-fbd6-4d23-b2a0-f28855069f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be21922-407e-450f-b7f9-894a57d47761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04759d64-fcba-4654-9402-6bede86a64de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701b445e-cf26-4460-a6af-106265e467ff",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2ea6e8-5964-4992-b4b7-8baea52388cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77eed151-dd83-4697-b3ac-1358b1899433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e2d25b-51c3-4cdd-a4c8-947ee8d41d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47694568-481d-47ac-bf39-dff871c1ea36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bec5232-d96d-4659-a0a7-003bfd121aed",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3f1b1d-ae84-49e7-9691-8cd27c03794d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3733c85a-dcd9-4de3-a8b7-4091eb5af132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d269c8f6-5453-406f-a286-fad9ddc03c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8972eb44-d917-425a-bcda-94f1ff8ce7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3153a8-5a39-416d-93af-6c78a9adfed9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d517853f-7599-424a-be10-c24bbfedbc53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e0a19f-580c-4330-92e2-4dbde64b6116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b0bbfe-8ec2-43d5-a7fc-37d0e37c0f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b3672d-e812-4cb4-acb6-0a0ec9d1e05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e49e851-9ca6-42e3-a0a1-1b7a52110640",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda0d564-c0d1-4cae-99d6-8ad951336998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d4325de-ad46-40a3-ae50-ddade828fb50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b40a9e-edf3-4610-a7d5-a6a7a644097e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ca6916-b658-451e-bbed-a79e4b680da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a54120a-7161-4c8a-8868-f8c25a33f722",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f9deb5-6845-4f62-8b2b-d8f3910a2b80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0072ddeb-f205-43a1-9492-d69f5842242f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f969a8-a9f3-4072-8dfd-0d778eed8b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b2a5bc4-497b-4cb6-8b4d-f0e92e5f42df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acb2c40-9539-4bf1-be85-1faf9147573c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b13e231-1181-466e-90cc-979af65736ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb1297a-6dd2-4b55-92ee-5d2bc72f2c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdc4041-d096-4ef4-aeb5-18a897761a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc68ee7-1cb0-4be0-bfaa-590b30758bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002d5389-5fb7-485b-a99c-c94c409c8589",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d748b10-26ff-4d87-a5d3-1ecfc1bb188f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fda41e66-d987-4d8d-89e8-f1d476930460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9161c25-f35c-4802-a0e2-cf495ebdba5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965ae7f8-3288-4b77-b534-7d37faf23613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee7ef0a-e51d-4b3a-981b-25efb610ad7c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e123fdf-3e8b-446d-8754-605f6e1f5d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae3b5d1f-975c-49fa-a888-78cb208c2e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d4a49d-d832-4506-b482-acd4acfc6a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a45265-e86d-4c0f-ba97-61b5826bb616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e49e129-237e-4132-94b3-d1116a69dd77",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1139f-67c1-438c-934c-ba72b8a6eb81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81c378c5-32ab-4ccc-a6d2-68929ce905a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b126519f-d54d-419d-ba1b-d6bb87db74eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec033e5-3621-40b8-8b14-a38faa4e5541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f96352-9b22-4827-9f54-5cd6a0e96025",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a18ac1-cb03-4a5e-8168-b7a5660276b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0775225d-2df1-44d8-959a-dfff41db1c6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed45422-a3b7-4faf-89db-9b5afa032cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cf0909-3be6-4034-9d83-040f31e2f4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee52c039-c8d9-40ce-af88-1787db9e4e56",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd78aad-ffca-43b4-9f06-c2ac6df20bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e4d142-ff17-4414-b728-72fd038873e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c336f0f-e558-4051-846f-93c6077b2ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6747bedb-c4be-46eb-81e8-a2bdd00c3718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d77a994-e730-4fbf-ae4b-86b72a440421",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3028e4-89cc-4b4b-b0f5-29e5bfe8ec25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a8e0df2-e02e-48f7-906c-b5cece01ed64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5b46a6-f1b1-4a1a-b7ec-8a0d160f73bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aeb039c-be62-41f1-b075-5638aa9f0110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cb4fb6-9fba-48a0-9f4f-3f98aa4391b9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d8a709-e994-4f87-99b9-306fa924a3af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59fb3061-879e-4fe9-a602-15644e9a9d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6e8616-1e41-4399-840a-26881f22e6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f48d92a-6b7d-4a55-becd-2b61ac7635d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2962e1-e24b-4e41-894e-ded82dffb9b0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e960d9f5-8592-4432-9062-f63ceb109e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71dad33f-06e7-4a48-aa2a-55335af1d654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b849e4f8-4d78-4355-973b-e14784fc2d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7bfe99-7327-4ee8-8aad-22e09bbc628a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098069ad-8ce4-4456-93f0-646d2ac86b5f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3764975d-d22e-4c00-acd0-2b135a7d8af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9715c42c-237a-4cba-9185-bb9b14b4206a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7425443d-a186-4101-a287-47691982c711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733c69d8-740a-4360-923b-b64a7f2f0a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dfd16d-314f-49c5-9fd7-b327e5a08deb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c34e63d-21a5-40be-bbcf-ea8c95991842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c635d8-ce00-420c-97a0-763234ec7ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d622a2-9c84-49b7-90c3-41fbc3fd1e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee20a8d-ee23-40bb-97b4-d032508317c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9b42ba-5daa-49fb-baf3-c2a9318e67b2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d734a46-560c-486b-82d2-12f36bc5b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6510e6b6-9b89-4a15-9bff-4f3594d3ec9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8dd848-a581-41c7-81f0-62112e08de17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0c463c-01ac-4bc0-8595-7294481aa928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bc34b8-546c-4ed9-a4e4-4e83ec3b7c8e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251bfa6d-5c90-4f71-be37-830f108cf29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfc698a3-8d9a-4c64-a809-1ef8c81d6331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed988f02-2426-46ae-815a-b483faf222ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864b6949-1a77-4615-a426-6fa8023bec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc884b5-d52d-4864-bcf9-886f636a5502",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdfeff5-222b-4f55-9d1a-06b50f9e9d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e318c215-0c5a-4814-9964-715c1d183dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e36a28-27ac-4d24-86a8-790f0bbc5662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f606a12-4cbe-4a8f-8a96-da8166d0fbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863ec80f-931a-4fb1-9acd-0ab96f9d0c76",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e710d10-fc95-4d20-bd50-06963e541e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa23aab9-4ad4-4251-8fe5-e67bc3b2fe25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2772183b-c61b-4665-a75b-cb0ceca91a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960746aa-4c59-4a03-b6d3-db55fbda3448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae371d0-b92f-4d7d-a493-311a8db3d545",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54fe7fc7-90fa-42a4-9a34-4f0603518987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825c939b-a48c-4f13-baef-e3be7656ce74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bb1610-1f56-4d5e-b82a-179690cfa7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc57fd27-8650-4e1f-b073-24fe5a74f334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34aff116-9515-4a32-aec4-54900f734da5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d302432-aafb-45ca-9602-9d0e6807e9ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f61966e-61e8-41f2-a9f7-7d63b5f102f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5e6ad9-f4be-408f-aeac-0c1ca9f6ee73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97094bfe-8559-4295-a931-3965ef0015a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30705237-df1a-492c-83f5-c00cb1746336",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c647c02f-afaf-43bd-865f-1333d304742a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89df57fa-1442-4349-8493-8c682af2a906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bda35a7-260f-4a88-adde-8e666e4a8db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5480477c-4e64-40a8-87c8-2c104029ade8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaff806a-d2b0-41a3-b4f5-d6bccdbfca9a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f685b31-b90b-4432-a8b6-1a995c9cb116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe48601-8df8-42c3-b7d5-0e6f4e5ff394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe77f59-06b7-4b87-bd23-b2821585ef2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869ea6c9-fe3d-495d-bb37-77c626cae18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17d85a8-fea2-471d-a4f8-63f2eb9fa5ae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9a919f-ae5b-4907-adef-2479e28664ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7df0efdf-f421-47f8-9fb4-8daab523879f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee01bb6-e8d8-4824-a89e-4b7c51e1351b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22d06dd-a976-4a2e-9e32-a2b4d01be6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cfbcb7-a1f8-4ef9-ae3d-2b55ad55f00d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d6b7cb-d95d-47b3-ba0b-37e75a71f728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75d73d7c-865e-47f0-8452-2b64d5278861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4688c83a-527d-413c-b00f-da3a5e413d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1886a11c-3406-4a2d-9e9f-18818a5f94cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd19ca24-9458-4cce-8e0d-4e45e4f1086b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0925b21f-bbd7-41e6-afab-44bcf2c7e605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ff9c93-57db-4b7b-b6a6-0aebf4fa519a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84afbbd2-2d35-47ce-a4b9-1d9dc77157cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b598c17-3535-40d5-bed8-bacfb7b20b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148306d2-eb78-4d71-b585-996497b6e60d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c391c29-9ada-4c8a-a1cb-cd7b290ed1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a7e00e-ed40-4810-aca7-b040083f2393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7faa9923-4d51-444a-a21e-5e4221c1ad44",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54e0de4-b168-4d8e-8e74-238730db14b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ce9598-de19-4a8d-9ebe-c76e54f56a66",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8711a9a6-5367-4216-97c6-cbd194245207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88e1fcbc-bc67-475e-85b6-977c4bff1fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1bd5b2-f2bf-4a9e-9def-d460256a70be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08e5e13-a2f2-429a-96d8-30c6cccc12a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eff8df9-9963-4989-a1df-7c84fb047c3f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b21b4ca-5b8d-435f-ae7e-6ed06c9897e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7abd7bf8-94aa-4356-b2e5-84104b9c8437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda8b0c5-c0eb-42e0-9048-da7b53ffdb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb33d0a-5efa-49cc-86ff-0c2e96c0d6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89bf878d-a794-44f0-a907-8922f37c5ad8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76f433b-92fc-41ea-9fbf-6ded1c0703a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bdc6072-0bcf-44dc-8832-7f4a95518acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf51eae-2898-4fa9-afd9-5319e0d2be8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3c0917-48df-428d-90b3-14fd22ca8244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae4b154-f4e3-40e6-a851-461202e9473a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d59267-4b00-4f0e-ae9b-da6ad124f9a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "409b5723-5dc0-46d8-832d-668b13bfc1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f8832a-4f56-40d9-adb7-d948f39cc10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bd960d-04c1-487a-bf74-5e4b1a6692fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9052bf2-f99a-4e66-a038-fc411c46045d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991b75cf-a071-4eea-a117-b91fa8424e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ffdb2ce-0ddd-47cc-82a4-9cec5f4be340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d87f5f-55c5-4955-82bf-6d82aeb1b90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5980fa50-102d-484f-a835-3305085d2f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb7cc84-0501-4374-b1ee-8cc129bdae04",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a33ce1-aa73-4889-a2c7-c75b15853977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a4dcd5-cfd5-4ae9-92ab-8ce1abb342b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75e2808-a8c7-4067-a988-9b4dcfe1a6bd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bf5393-fbcf-4b00-a600-238251ac3fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c5af4b-55be-4449-bd97-a81194858aa3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7247b606-db56-46eb-b97b-432225abeaec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f60f97-4602-4761-8c07-2d3518be010c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed6a9d4-73f0-49e9-8da9-d3573bac1072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903ad245-5b4c-406f-8515-54859db7c32f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad40b793-d757-4a10-88f8-19c8f025f1d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95bf3c76-2808-48db-91aa-906f89e5d301"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68714719-9ef1-4559-84d6-2682a517792e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbcd8af3-0626-4b97-888e-dfc3f790cac1"
                    }
                  }
                ]
              },
              {
                "id": "30b0c619-fcb4-43fd-8af4-e668aed97791",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c9b9979-5394-4643-8fc2-e8a6607362e0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1b72d1-c4af-48f7-bc20-c0e33196108e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "85ad7018-7bf9-423f-92e5-98ef3ac2245b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2919b8d-01eb-413b-bd8b-f6b5c8867c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6a36a99-1260-463d-b81f-2dadf89c5d80"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73e3ae74-1478-49ec-ba46-6a2eae20d264",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1e2e343-0e3d-4348-9307-d77b2a0b7d81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad810456-d50d-4717-bfaf-4da989a59805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a29ef32-c733-4f91-92f6-007274ec15c1"
                    }
                  }
                ]
              },
              {
                "id": "313d3703-99c4-475c-a05e-9e845cf2f3ea",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "de772b54-be40-4f60-80ee-ab37231ce536",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311b5978-8977-48db-8eef-d36a4a87cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a00cfbf2-55be-48cd-9beb-1781223c3505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf17a4c9-f9f1-4b18-b077-00521bfd9055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf41d1eb-0b5c-4564-9fea-7e3c6a8c5e77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "33fa7ee3-c05d-46f7-addd-7a3d99ef4934",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58828756-5168-4940-8d5d-04377d7a3c6f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0024917e-e2f4-4b30-8ca8-2cd0c1b04401",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5b6df1e2-c659-40bd-9078-c5f1ccd60683"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b339606-ef09-40cd-9060-1bc7f173690f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e8f7e5f-b816-4f73-8254-2630a54685d0"
                    }
                  }
                ]
              },
              {
                "id": "25ba0a76-10a5-454c-b1e9-c5b0a417996b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3f8d15b-0db7-4c5a-a5b1-94db536f1fd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "35a150ae-20b3-47f6-8f55-41f022b22b98"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d0a21bc-19cb-47b9-92bf-c3b8ed512f61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ba8d36c-b209-43c4-b0a9-2963a18858e9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3b24bf2-9929-4c5f-9a11-8a78cb7397d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "55048c66-bcc4-4caf-af60-ecf43f372238"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7212d709-7392-4ae6-ae6f-eb04bd4b9a75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10dd5298-48d9-4fd6-b692-67c62be459c3"
            }
          }
        ]
      },
      {
        "id": "ba0999c7-f360-46dd-9ac6-0fe7a4d7a672",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "095c2dd1-fd6c-479e-b5ab-6e90e4675ac7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7e2d5dc-0782-494c-b49e-2f1815c85242",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9e6f4ee-f3c9-4116-9e86-180a3512574e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60c0dc9-3c31-48ff-801d-0044bc251d27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fabbcc11-d210-4e26-93c1-f295c300a5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfca8685-1a9a-4c43-9fa5-83ece6e78a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a079044-e27d-441f-99a3-2b2009ce402c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "641992fb-26c0-4546-a333-795212496cad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "706986cf-fc21-4f9e-9275-6ac1998779c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74399570-156a-4e73-ad55-0b7da9cc27d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bfc8c4a-d554-4476-a4d4-3aa764554304"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9238ea6f-cf80-439a-88e4-4c72b75a6581",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a19a9d4a-18ac-4fef-9a6e-94dac8d94eec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21707151-f51b-4dc6-a538-a3dc885ab81a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cbcb4f6-ca1b-4597-bce7-e11457d11bcc"
            }
          }
        ]
      },
      {
        "id": "d8856a36-c387-44b2-97d2-5cba936cbb8b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "76aa0866-315d-41d2-817f-801f3fd9f8a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "223e572a-bbdc-4d54-9f11-2c3ad96fd142",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfb76382-84a4-431c-90d4-1fd43c38239b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b354d196-a287-4442-b760-6fa8999ca937",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16585e17-34f0-4d61-8809-ee90af9c639b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cc2ff0-91b9-461d-bf13-9c645dc9068e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cb3d2e3-3a3a-4cba-84c6-a063ad4383f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ba66b63-f0fa-437b-bb98-5bd94495be84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25142ca5-e22d-4c03-9a3b-e258e000a7f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b223521-2ec2-4b2d-b419-dd14a5de1651",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21c1ca45-ded8-48e6-9d14-f58ce772b8f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c951319-fd9c-4fbf-8322-82034b36dee4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5935b02-c0f1-4792-acf9-75d1a2d21847"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "631ccffc-5556-4c69-9054-9c50e8541ec3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32442088-46c2-4c53-a275-65277d40008d"
            }
          }
        ]
      },
      {
        "id": "9091f675-246d-4927-8831-7d5353794e0a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bfe13612-5aa8-4c22-9575-6ae78c88e4a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce259faa-81fe-49f3-a2d1-51a075a733f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c4ab723-b4c7-4414-bc08-8995679743a1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9905d4-ef0f-4996-be23-4f58e642f6c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c104d67f-6bd0-42fd-ae09-b0991986a5d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e307b3-d2ce-419a-baa7-e468c50faa56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a173b21-9f89-4b33-8a4b-c627b87a6d99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd8e0a96-c989-4a1d-bffb-3e1c608a85ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "963e7ee2-58fb-430a-8ecb-6ee19b1c9bbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80fea1bb-9ffa-4333-9ca0-21d7124a1ed9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6d2a970-8f8a-4209-9f04-05568f588fcb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98561702-2fd4-4ff2-bbb4-02a4c7db17b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "99b19387-efb5-449b-9b91-402a5da07a5e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65cd3f1a-9cc0-4bf8-bab3-72e4621f2715",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99143f9f-369e-4e40-8181-2654cf7f37eb"
            }
          }
        ]
      },
      {
        "id": "a8fa9aa3-0c21-42d0-acfb-cb803e128e33",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15e89f2c-7879-4424-995a-18816fa8a52a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5aec3ab6-50cb-4cef-890f-255977d7c36e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5caa3e33-e18f-464d-8e27-d1fa3cb41031",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed9387aa-e965-40ad-8e72-f000359b3dc7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c4ff247-eec0-47c9-924c-757738d880de",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.687719298245613,
      "responseMin": 5,
      "responseMax": 280,
      "responseSd": 21.41578422791575,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705883898624,
      "completed": 1705883910858
    },
    "executions": [
      {
        "id": "ad215929-31b8-4820-a9d1-a2748e474294",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a84344ce-2a24-485a-9979-d828f0aa6f6a",
          "httpRequestId": "54d658b0-e36d-4f36-902d-57f2a3a00294"
        },
        "item": {
          "id": "ad215929-31b8-4820-a9d1-a2748e474294",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1397a9a8-dfb3-4e52-8afd-f8d9dc29c823",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "ad527787-2318-42ae-8cc0-25e2d9f0bf85",
        "cursor": {
          "ref": "a8285c79-d612-4041-8eab-f846fc9958ff",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3c92c3ac-7504-44e0-a3dc-8d7f083f54c9"
        },
        "item": {
          "id": "ad527787-2318-42ae-8cc0-25e2d9f0bf85",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "57bf34fd-4ed0-4884-8319-ba1884a64936",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "7ad91853-4f12-4bd6-b256-08b62c7da03c",
        "cursor": {
          "ref": "efed9f45-ed25-45a8-93b9-9c0d7d0cb8a1",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2a251a71-2fbb-48ad-a2a4-aae71e92fded"
        },
        "item": {
          "id": "7ad91853-4f12-4bd6-b256-08b62c7da03c",
          "name": "did_json"
        },
        "response": {
          "id": "a00df3f8-6f3c-4b0d-b0b3-691eecdd85bb",
          "status": "OK",
          "code": 200,
          "responseTime": 163,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6a1b3f-a184-41be-a7e5-23791b89f231",
        "cursor": {
          "ref": "77f03148-74e1-4a9e-9508-e27e2086e18f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f886b8e-5676-4e2c-b494-87a8b9ca8cc4"
        },
        "item": {
          "id": "0c6a1b3f-a184-41be-a7e5-23791b89f231",
          "name": "did:invalid"
        },
        "response": {
          "id": "14877626-e510-404d-b5cd-8c56d088280e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6a1b3f-a184-41be-a7e5-23791b89f231",
        "cursor": {
          "ref": "77f03148-74e1-4a9e-9508-e27e2086e18f",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6f886b8e-5676-4e2c-b494-87a8b9ca8cc4"
        },
        "item": {
          "id": "0c6a1b3f-a184-41be-a7e5-23791b89f231",
          "name": "did:invalid"
        },
        "response": {
          "id": "14877626-e510-404d-b5cd-8c56d088280e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7f9229-fe1a-4068-ac0b-95f4455ea845",
        "cursor": {
          "ref": "fef0927d-2951-4dd0-bd58-ea3f03ee73bd",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2d653326-7c02-4e86-a08e-79f10cfd9f62"
        },
        "item": {
          "id": "9c7f9229-fe1a-4068-ac0b-95f4455ea845",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8cf3efb2-2594-4172-935d-bdad67d3b3e0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c7cf93-dfba-4988-9f1e-1f7c54b7f0e7",
        "cursor": {
          "ref": "5ba1b208-0f66-4145-b53d-57c157161918",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a0f3ee8f-42f9-4c50-b155-59f1bbd5bed2"
        },
        "item": {
          "id": "b2c7cf93-dfba-4988-9f1e-1f7c54b7f0e7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f4dd6f29-a128-4e7d-87ae-aafbd9dc360d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0971a62-7165-4e5a-941d-f4e6d2d13623",
        "cursor": {
          "ref": "919b8b2e-58a6-4068-8d5b-4abcd87f2460",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0fe77c72-4eab-474d-ae37-694b2594ad78"
        },
        "item": {
          "id": "e0971a62-7165-4e5a-941d-f4e6d2d13623",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "01f0b845-cc78-4226-a35e-0abfd21978bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fb5400-539d-4daf-9604-6983e9d84e65",
        "cursor": {
          "ref": "83bddada-dd09-4f89-9908-6903263c2bdb",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c49cd774-e3db-44dd-8a99-cc24deffd71f"
        },
        "item": {
          "id": "89fb5400-539d-4daf-9604-6983e9d84e65",
          "name": "identifiers"
        },
        "response": {
          "id": "eb84d0c1-341e-4ee7-a418-0e63be0aed00",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387beedd-cb4e-4b5c-bf5e-d4e70c811fa9",
        "cursor": {
          "ref": "73a81054-3084-4112-9eec-ca94f61b70a4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d4570236-265b-4f27-b64f-26fc6d59a5e1"
        },
        "item": {
          "id": "387beedd-cb4e-4b5c-bf5e-d4e70c811fa9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bf5892a1-455c-4c5d-b85b-5d097f476e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0ed3a8-dfd5-4130-949e-7f5069bb21ef",
        "cursor": {
          "ref": "c4a97651-aed8-40a2-836a-bfb67570286f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "40e2d609-8ac0-4ed6-a4b3-be36bfe69e0d"
        },
        "item": {
          "id": "df0ed3a8-dfd5-4130-949e-7f5069bb21ef",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3304aa3f-4e5c-421d-a47d-7b093ba70a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe73495-67a6-4ad4-bc47-a85022e58257",
        "cursor": {
          "ref": "229e71f5-8cf5-4a63-b110-05247b1d4b5e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7cdd46a6-e527-4c70-b02c-76874dab265d"
        },
        "item": {
          "id": "ebe73495-67a6-4ad4-bc47-a85022e58257",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5c842381-7f76-45f0-9427-4bb3bc833b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6626d60-ba28-45d9-98d6-30526446d17d",
        "cursor": {
          "ref": "7b7b0fca-0390-4da9-8d02-3bc9f018f42f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "33c247de-896e-40e0-bd1e-795e0ffe9be8"
        },
        "item": {
          "id": "e6626d60-ba28-45d9-98d6-30526446d17d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4ad4e7a7-662d-49e7-839e-33e7c789b1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bace533-a615-4661-82de-8a9cb3dfbefc",
        "cursor": {
          "ref": "24e0adc1-e39f-41cd-854d-62ce87436ed0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d902de63-9f06-478a-b1f5-fea5dfb819a8"
        },
        "item": {
          "id": "0bace533-a615-4661-82de-8a9cb3dfbefc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "12759e87-bcc5-414d-b766-b5fae13c9901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f46bc7-bd24-4c19-aff2-658be5fbf8ef",
        "cursor": {
          "ref": "7966392d-6cd8-4e14-8233-eb63fdf1cb47",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6c6323f1-aee7-4e8b-861c-b7a5f2fbc3c4"
        },
        "item": {
          "id": "a6f46bc7-bd24-4c19-aff2-658be5fbf8ef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "93fb0394-fb5c-4e8c-9c5a-5820928ed25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa79687-9a4b-44a2-a909-8f18ab1ad7b8",
        "cursor": {
          "ref": "4c23c8dd-ac27-45b4-b0b1-bdd56b7814e7",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6c7b3583-da6b-48ea-ae03-b3ee75d0bd7c"
        },
        "item": {
          "id": "0fa79687-9a4b-44a2-a909-8f18ab1ad7b8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ac3847ce-c55c-44f4-91da-b45a5c9993bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ae51e6-4a5f-4364-b394-c9060bc8b665",
        "cursor": {
          "ref": "d7af086e-6c8f-4fe9-a0a4-493ce2d6a26b",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a9951b67-2f21-4627-a390-e3e9f6bd645c"
        },
        "item": {
          "id": "c2ae51e6-4a5f-4364-b394-c9060bc8b665",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e38ee519-4aba-4df4-9924-0c289d228ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47efac5-6a00-41f9-9baf-c78642588d33",
        "cursor": {
          "ref": "99f753f7-7299-404a-9f99-d5b63497b98e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "00aeb49e-a731-4f3c-a4f4-45e40b37fc42"
        },
        "item": {
          "id": "b47efac5-6a00-41f9-9baf-c78642588d33",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5b4a593a-1565-4bbe-abab-e06929fa8867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9158278-4357-4434-b646-ea0ea3c5c7e5",
        "cursor": {
          "ref": "c0eede81-1196-44d6-a054-3de78fedce62",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b167a20f-4a2b-4cf3-aff9-a37e6058c765"
        },
        "item": {
          "id": "b9158278-4357-4434-b646-ea0ea3c5c7e5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f0684e72-99bb-4778-9433-07bf63ba79f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8811ec-0091-4df4-9145-822bd9c1eeff",
        "cursor": {
          "ref": "2059dda2-bbb2-4574-b09f-2bed8ce2c09a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "152f98d5-45bd-474b-88a2-e786c7f790a0"
        },
        "item": {
          "id": "af8811ec-0091-4df4-9145-822bd9c1eeff",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "08838a66-df05-4c7a-a4c1-ef17b4ae7c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8385c16-8239-4cdd-be35-56b4f1a280c7",
        "cursor": {
          "ref": "693ef0aa-07e1-4a83-8199-e996ab5641ab",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6714725f-fa00-499b-96a4-673f2ce61eaf"
        },
        "item": {
          "id": "b8385c16-8239-4cdd-be35-56b4f1a280c7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "96f10805-123f-4ada-a843-b3cd4c1aa9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440724f0-12e9-4a22-81a4-cf0a29fed6f0",
        "cursor": {
          "ref": "7875ba97-cc80-4b69-8986-7faa95d58434",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "def6c2ae-88f2-4cfd-b3d7-db013496805d"
        },
        "item": {
          "id": "440724f0-12e9-4a22-81a4-cf0a29fed6f0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4cc3f487-8efa-4deb-98e8-e6867b0c650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84351808-f3e8-4d75-8e27-e2821f5e2b5c",
        "cursor": {
          "ref": "8a5eaa5c-0d75-4e62-b4a6-8b567a1c2173",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fe77ad1d-f28a-4d07-8867-6f26e476b63f"
        },
        "item": {
          "id": "84351808-f3e8-4d75-8e27-e2821f5e2b5c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f0f741b5-3e7c-4005-b87a-fb4212095d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b3c517-d205-4db5-a047-9cf7273caf12",
        "cursor": {
          "ref": "5e9e1eea-357c-461d-a5df-0f35a7e10ae7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1acdab88-bea4-48b1-8b57-8f34fb3f2a67"
        },
        "item": {
          "id": "84b3c517-d205-4db5-a047-9cf7273caf12",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "eb7cc432-5c64-437d-ae80-7746fa98fa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848916bc-6577-4e23-8fb3-31d1e3286a06",
        "cursor": {
          "ref": "a209fa11-f30d-45c0-bd5a-d5d76ebd2e13",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9925dcb6-6c83-48a7-b623-fc1a7179f4f7"
        },
        "item": {
          "id": "848916bc-6577-4e23-8fb3-31d1e3286a06",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f0c7bb3b-8220-443f-8b26-2c5541897c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aafde46-5b6f-4bce-a37d-f8ab657bae79",
        "cursor": {
          "ref": "52cffc0e-14bb-48a8-956e-ac7c5fb01fdd",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9894a3f5-85d0-44fc-8f5d-ad1b84952be8"
        },
        "item": {
          "id": "2aafde46-5b6f-4bce-a37d-f8ab657bae79",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ac7df8a3-f63e-4193-acf1-b497e5ed02cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bf6e16-5fa5-4a69-89a5-1b41f3701dd9",
        "cursor": {
          "ref": "e0dd4b8d-03de-4416-b845-7189ea2083f5",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "55e961ec-6fb9-4182-958b-0ab983e9a58a"
        },
        "item": {
          "id": "24bf6e16-5fa5-4a69-89a5-1b41f3701dd9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "acd67aa1-826d-429f-b745-1ef4cb1ff276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1061ff1-2eef-428c-aff5-4caca1afe7cf",
        "cursor": {
          "ref": "af4b957d-e449-4ff4-8639-98fe372be0db",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5e71dfbc-1e2f-49e9-9ec5-e875f1098794"
        },
        "item": {
          "id": "c1061ff1-2eef-428c-aff5-4caca1afe7cf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a8cf6e36-32ea-41bb-a543-3bbe17b140f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7c7c91-18a1-4c9b-a9aa-60731dad0fb3",
        "cursor": {
          "ref": "1261c83f-f8ed-4088-9749-c8cd2d470f11",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d8dd666d-c861-46d2-992a-ca3ebcd02dd6"
        },
        "item": {
          "id": "2f7c7c91-18a1-4c9b-a9aa-60731dad0fb3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "10242706-ef74-41b0-a967-24bfad25ddd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3993f4df-3c80-4827-b142-4999c870b025",
        "cursor": {
          "ref": "7a797de4-20a2-4e51-bf99-c4c9bb0e7029",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9b26e661-b21d-46c1-b3b3-e9b4c7b51384"
        },
        "item": {
          "id": "3993f4df-3c80-4827-b142-4999c870b025",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2bb7c3b2-9739-4d68-abce-4d41ed9c4938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e17b2ae-228c-4896-b870-f97651604fb7",
        "cursor": {
          "ref": "ef9698a3-d186-44a3-8429-d0dfdedaac5a",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cb883f19-1c14-4167-8830-659a886ea971"
        },
        "item": {
          "id": "1e17b2ae-228c-4896-b870-f97651604fb7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "062a75b1-6857-46eb-aeaa-412785a0ef92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6d5315-baa9-4d1e-9b9a-b06e6b73167b",
        "cursor": {
          "ref": "8dd51d5c-1913-4127-a377-212036d76329",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b16a5350-a4e2-4f95-b3d7-f5087561b649"
        },
        "item": {
          "id": "1a6d5315-baa9-4d1e-9b9a-b06e6b73167b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "69bc1565-0be2-4700-ad49-fd8bf78fe520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9537c8-305e-4ee3-87ba-a341b0e2e17f",
        "cursor": {
          "ref": "13cc48e7-92bd-44a7-81df-0e535f5b3343",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "943cc58c-cfbe-459d-9c30-3b0ea736a3d8"
        },
        "item": {
          "id": "2c9537c8-305e-4ee3-87ba-a341b0e2e17f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1c0a4610-c777-4c06-b1b2-64349032d686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aea7588-d694-4efe-aa74-9714296dfb02",
        "cursor": {
          "ref": "2f54b172-49bb-4e1a-9c40-965271a54680",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4cb8b86a-d6cf-40f3-8ebc-31c1aedbbb32"
        },
        "item": {
          "id": "2aea7588-d694-4efe-aa74-9714296dfb02",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5daf3d78-2166-437c-877a-a6a8ad8d8efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa90cf61-a41c-4d1f-a25f-3ffae765b08d",
        "cursor": {
          "ref": "eb887c79-db3b-4e5e-8f5e-ef11ae6d2895",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a4d1149a-7e26-4b9c-b711-ac0c9aabd6cb"
        },
        "item": {
          "id": "aa90cf61-a41c-4d1f-a25f-3ffae765b08d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c22c212e-4daa-4309-b976-f0b73ed4c5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a0e185-4ac9-42bf-825c-50c08123c5e6",
        "cursor": {
          "ref": "06d0f7c8-1559-4e3e-8201-3ed7091137fb",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3e8d6447-0c10-47c0-85be-4924842dd95b"
        },
        "item": {
          "id": "39a0e185-4ac9-42bf-825c-50c08123c5e6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9937dc49-ba43-4c72-a768-8a0659eb2465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf8e2c7-b3d2-44aa-a96a-61ea92f9f9e6",
        "cursor": {
          "ref": "615ed125-e714-4f4d-a758-d0cb3d6be344",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fe48bc48-f0d9-4c57-abd4-414e1d98b0e3"
        },
        "item": {
          "id": "9bf8e2c7-b3d2-44aa-a96a-61ea92f9f9e6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ba2272b1-7100-4ed6-b4ef-3feaad0ebf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55958d25-f199-4055-aa27-91f9b9ca47f1",
        "cursor": {
          "ref": "c313411c-6069-44e6-bb49-b224576bca40",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c5f41d72-63bb-451c-bfef-3b27e4301b99"
        },
        "item": {
          "id": "55958d25-f199-4055-aa27-91f9b9ca47f1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2dc6d415-5b12-4cdf-8612-08d1fdbb4976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd636df4-cd63-4ebc-9038-5317525ba12b",
        "cursor": {
          "ref": "1cc06cd6-bff9-40e9-bac0-0a4e43c00188",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "05662a17-e627-4c64-bbff-677d01be5157"
        },
        "item": {
          "id": "fd636df4-cd63-4ebc-9038-5317525ba12b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cb684bcf-1f14-40cf-8b04-ae545ca423f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899bcb21-066a-44bf-a438-33aa62c95a14",
        "cursor": {
          "ref": "f0705ae3-2ac6-4c72-b13a-bf8213b0d097",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5acf5d8d-a384-49ac-b875-3be73e365adc"
        },
        "item": {
          "id": "899bcb21-066a-44bf-a438-33aa62c95a14",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7bffaa7a-ed70-47a1-a7d9-d5890d8e307b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b11d586-6752-4d2e-b695-b78c09c63e93",
        "cursor": {
          "ref": "7e4982f7-29bb-4382-a5fd-484848d76b0b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d5feb56c-bd93-45be-ab6a-6976e0c8fb62"
        },
        "item": {
          "id": "0b11d586-6752-4d2e-b695-b78c09c63e93",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b8ba1c8-0d61-4df8-b8dc-53feddfa5e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5452cafa-ca4b-4af8-bf1c-bb6e7df09d61",
        "cursor": {
          "ref": "35661ea3-ef59-4456-b1db-bcadbcd44a2f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "711b8aee-5980-465a-befb-ad97b35ea45a"
        },
        "item": {
          "id": "5452cafa-ca4b-4af8-bf1c-bb6e7df09d61",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cf2aca29-1bb5-41b7-85a0-3b9e8434e963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6468bb58-575c-423b-97ec-4f8b427ff0b4",
        "cursor": {
          "ref": "99e5c4f4-0935-4370-8421-28d789575bfa",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0ffe0acc-bc9c-4e1c-b8cd-16ddaa7f39c6"
        },
        "item": {
          "id": "6468bb58-575c-423b-97ec-4f8b427ff0b4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "14099bb5-9858-49a7-a4b0-aaa5a817e5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede5106a-4730-4ffe-8c43-4eaa60e27a61",
        "cursor": {
          "ref": "ef4a7acd-7176-4b2c-a751-598af8d27509",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "66a673f6-34ec-4ba5-8552-bb5772a74fb8"
        },
        "item": {
          "id": "ede5106a-4730-4ffe-8c43-4eaa60e27a61",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b1d99245-2ea9-45ab-9917-6486b45732c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1670255-9500-4b88-a718-f6f3d9dca301",
        "cursor": {
          "ref": "52f19b79-4c27-4c48-b701-62858e252696",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2faa0eaf-134a-4ba7-844d-6878f82f8129"
        },
        "item": {
          "id": "f1670255-9500-4b88-a718-f6f3d9dca301",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "390f63e1-e30a-4558-8a12-4f941c95bc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4518f9-98a3-4634-9c6a-2c1d5a321fc9",
        "cursor": {
          "ref": "d7e7128d-33ce-452d-a2e4-92818fb09ee8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "84bbfec8-5601-41cd-aeaa-8559b0c540a2"
        },
        "item": {
          "id": "cf4518f9-98a3-4634-9c6a-2c1d5a321fc9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f7756c81-80e9-4296-8dfe-ed4a012ab7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f80dc2-f5ae-4040-b24c-732dccee8beb",
        "cursor": {
          "ref": "437f0a5b-7635-41ad-9e14-9d015400e88d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "88389317-3535-4501-acfd-a98751fe677a"
        },
        "item": {
          "id": "e3f80dc2-f5ae-4040-b24c-732dccee8beb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cd124c8b-2755-4fb7-a5b3-4a63cca22658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76ebdbb-70a8-45d2-985d-8f2f7be7624f",
        "cursor": {
          "ref": "5a21af35-a2ed-47a0-ad9b-dc75ab62b43b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "410af5a2-93bb-4931-b209-4689594d4be7"
        },
        "item": {
          "id": "f76ebdbb-70a8-45d2-985d-8f2f7be7624f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "442c9940-e872-4cb6-a59d-5aec8b71a026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7534883c-2280-4311-9aa1-fc3927246e9f",
        "cursor": {
          "ref": "97414b38-3ed5-49ef-9d4b-6e0c0d07784d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "256a9fef-8b79-445f-ade2-7b336dde5cce"
        },
        "item": {
          "id": "7534883c-2280-4311-9aa1-fc3927246e9f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bf0233fc-9a69-462b-9627-964675688330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f89f1e5-5247-4b88-81a4-54d16bd8274c",
        "cursor": {
          "ref": "e6f1c9f2-a793-462e-90c2-0e64bf569aba",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7644fd9d-6e7d-4f7f-b8d1-04319916a395"
        },
        "item": {
          "id": "5f89f1e5-5247-4b88-81a4-54d16bd8274c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ef760615-4f6d-4668-ad1c-3e69a6ec7bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e78c943-2f02-4212-aa8b-e26bf750f83b",
        "cursor": {
          "ref": "94a793bd-668b-476e-b7b7-c225b69fb0c9",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0ea2b098-96ad-477c-9f63-e68876640b44"
        },
        "item": {
          "id": "9e78c943-2f02-4212-aa8b-e26bf750f83b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3f888ad8-860c-41c5-8ec4-580a57b35c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5d8ed6-2b14-40c5-89fe-7df1d50f8250",
        "cursor": {
          "ref": "e427a5f6-4e78-4e85-abb3-35412d36cf9d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a91734ec-bbbc-4368-93d7-7ebf3302af75"
        },
        "item": {
          "id": "9d5d8ed6-2b14-40c5-89fe-7df1d50f8250",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "02a7328f-ca79-4b42-a23a-761ef4714c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac71eee4-dec3-4123-9eaf-da5e25b3f4ae",
        "cursor": {
          "ref": "24364618-33f4-4c9a-8cdb-14faa745469a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7668f575-f2da-4b3d-b127-68ed80125873"
        },
        "item": {
          "id": "ac71eee4-dec3-4123-9eaf-da5e25b3f4ae",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "65ea4b22-04d6-42d2-8ae7-5378bcfc7b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdcc78c-b920-4b30-a274-0a2abf262d45",
        "cursor": {
          "ref": "560b55ef-1d31-49a5-a61e-0ada5bc49986",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "26552638-19e7-495c-9d5b-2d866c56e966"
        },
        "item": {
          "id": "6cdcc78c-b920-4b30-a274-0a2abf262d45",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c52d8e31-4374-45a9-815f-90abb7a2bcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27feafa2-f3f2-4817-9b94-6b7a963a8292",
        "cursor": {
          "ref": "33bfd0d4-d996-47dc-8091-342d55b12606",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9ffa3ad9-5efd-4bc5-8e4d-60edb8b5412f"
        },
        "item": {
          "id": "27feafa2-f3f2-4817-9b94-6b7a963a8292",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0d6ccdad-e2d2-46ac-89ef-e0df0ba56fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2812cb1-c2f5-4c52-8dcf-e935e60d325d",
        "cursor": {
          "ref": "76a7eb33-21ab-4284-8f3f-9f4d52b597a6",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "05910eb7-526f-4a28-82b4-c6aa42d8c7ca"
        },
        "item": {
          "id": "e2812cb1-c2f5-4c52-8dcf-e935e60d325d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2a2c2444-5644-479d-b407-f4119852196a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f28663-dec5-46f6-af82-53ad97e0eee8",
        "cursor": {
          "ref": "0e585195-7db9-4196-9533-86685cf6c916",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ee2fb2f4-3dda-4f90-9c95-8793ad7914b9"
        },
        "item": {
          "id": "d9f28663-dec5-46f6-af82-53ad97e0eee8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4b3cf58a-f0ed-48af-9cc0-cbc765ce9e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6597e6bd-fe69-4fad-a507-27dfc64a5e15",
        "cursor": {
          "ref": "b410bc6d-9feb-4e29-9461-c0e29899021f",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "38e3131b-af61-4d61-8498-d65b9ffba1c4"
        },
        "item": {
          "id": "6597e6bd-fe69-4fad-a507-27dfc64a5e15",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "81abd601-acb9-428d-a6b2-390047ee0fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bd516f-b69d-4c71-963b-fef2828e3a29",
        "cursor": {
          "ref": "7bb89813-1c8a-4ba8-94e4-72c2a33f4e7c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f7719559-f122-4dde-8bf9-760bd206eb59"
        },
        "item": {
          "id": "70bd516f-b69d-4c71-963b-fef2828e3a29",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e82d8400-46e7-409d-baf4-7e3ff00e0b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ed73c1-a99d-4069-bcec-2929271a0aa5",
        "cursor": {
          "ref": "900d7385-608e-45f4-bb25-ebdeee95c8cc",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a71f6be6-15a7-4f0c-b3b4-9f1af8b7bddf"
        },
        "item": {
          "id": "01ed73c1-a99d-4069-bcec-2929271a0aa5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "53dada50-ea8e-4222-b6b3-1e9b6b5cada9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87657bac-cc39-4faf-bbf2-1a7397f67665",
        "cursor": {
          "ref": "65b27ae0-e54e-4df4-97d8-24e1056fec4e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "17097475-a04d-4651-96a3-20ce7f9ecbe0"
        },
        "item": {
          "id": "87657bac-cc39-4faf-bbf2-1a7397f67665",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "116f654d-1ff5-4be8-af74-6dc3888caca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974b668b-350b-42a2-9ec2-7e5e197e8d1e",
        "cursor": {
          "ref": "4720a4e9-72cf-42b8-bc36-78b82eef99ec",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b9f0103f-d443-4795-bbca-9de7cbf0f28f"
        },
        "item": {
          "id": "974b668b-350b-42a2-9ec2-7e5e197e8d1e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bcfa2fdc-dba8-4466-be99-ea8fb01c2cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb71ac2-9d4a-46fb-9bd4-8bef9482f328",
        "cursor": {
          "ref": "c7542a69-accb-4cdc-bbb8-b9cdf37d0159",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "54befd6c-820c-474c-b4ff-52d76aa46755"
        },
        "item": {
          "id": "aeb71ac2-9d4a-46fb-9bd4-8bef9482f328",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "27182194-0bb3-4ef8-8fe8-2f09f91f325d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2113608-b25b-426e-ade1-9a88534df4d5",
        "cursor": {
          "ref": "74b5c11c-697f-44cc-9573-0b542346d99c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6cc3505b-cd32-4221-b5db-1d4ec0483d60"
        },
        "item": {
          "id": "e2113608-b25b-426e-ade1-9a88534df4d5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a1f4c690-0d46-40cc-842c-33c7a7d464d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6b9ee0-14b4-4574-81db-7d1d5365ef7b",
        "cursor": {
          "ref": "5b9f81c8-5b7c-4df7-a9bb-50ac96820ebf",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7177db4f-8cde-4299-a8fe-02b866b0d63b"
        },
        "item": {
          "id": "ba6b9ee0-14b4-4574-81db-7d1d5365ef7b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4c212d51-73fa-45c3-9f8b-cd854ed30e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11dd267-08bc-4d81-80c2-9f22aa97c929",
        "cursor": {
          "ref": "e27149ce-a4fe-4e9d-b7ab-3113bb6ae061",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1cc2616b-1983-46af-94e1-fd0148de464c"
        },
        "item": {
          "id": "c11dd267-08bc-4d81-80c2-9f22aa97c929",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c3b8dd65-f722-41e0-a579-08cc54fcb7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073e4ceb-5260-488c-8131-2cf738aec4b7",
        "cursor": {
          "ref": "e8bc6d7f-3d3e-460d-98d5-6af105800593",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "57b6cb07-e6cf-41d1-8eef-bb5dffd3360b"
        },
        "item": {
          "id": "073e4ceb-5260-488c-8131-2cf738aec4b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d02e6757-d2cd-47b2-b996-13bf0517917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085f0ffb-7f9b-4d77-8785-63ed205c3e5f",
        "cursor": {
          "ref": "fb09a571-8500-4496-a827-0ef1258bc6b6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cd590a7a-09e8-4d18-8e42-779a2682b0a6"
        },
        "item": {
          "id": "085f0ffb-7f9b-4d77-8785-63ed205c3e5f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "273688a0-539a-47dd-b5e9-550ea43fbc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e94c8c5-24a8-4ea0-8800-678337611772",
        "cursor": {
          "ref": "f08a0d3c-7b56-499f-bff4-83308899fbaf",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0e02717a-8485-4359-9b08-80275c112ec7"
        },
        "item": {
          "id": "9e94c8c5-24a8-4ea0-8800-678337611772",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2c378bb4-ae98-4a1b-b821-fa9296ded8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8377a566-8452-4dd3-a150-be5c9627fc7d",
        "cursor": {
          "ref": "c808b99d-093e-495d-ba9c-3186bf01fb78",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4de129f1-e56e-4408-96f4-912705cc96b4"
        },
        "item": {
          "id": "8377a566-8452-4dd3-a150-be5c9627fc7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "023c0694-201f-4eb6-9e2a-0b8cbf62fd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3728412-babc-4d64-8cee-a9a40822a78d",
        "cursor": {
          "ref": "deec7b67-71bb-41c4-b23f-a7e5abd031ee",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "196c54eb-5847-4a65-ae6a-cd10cb0e752c"
        },
        "item": {
          "id": "f3728412-babc-4d64-8cee-a9a40822a78d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "085daa14-7538-4001-8e03-fcaba0979521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bb53ea-bd34-4022-a6b2-5b5e494923d4",
        "cursor": {
          "ref": "689ed21d-9ef5-40d4-b0eb-b4fbf70d73b9",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "10dfc59e-f3b2-49ad-bb1f-43d8227eec33"
        },
        "item": {
          "id": "d6bb53ea-bd34-4022-a6b2-5b5e494923d4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e43431f5-ef9a-45a0-a8e8-e31cb2cd3a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c430684-0267-4abe-8c26-eb66d7e9073d",
        "cursor": {
          "ref": "5be111ae-089b-4c4d-96dc-309bf01ee168",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "abd92bf8-c1e5-4ee8-aa2c-8df36e0365f3"
        },
        "item": {
          "id": "5c430684-0267-4abe-8c26-eb66d7e9073d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4396ce49-364c-4c61-933c-0a96fa4f6d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c99e72-8671-4e57-9eb5-b76ed7046370",
        "cursor": {
          "ref": "cac8907c-2e10-4d0b-ac35-d6e1c2d429db",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a2bccec8-2e85-4c37-8d43-08b32dd33af9"
        },
        "item": {
          "id": "c0c99e72-8671-4e57-9eb5-b76ed7046370",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0cf02180-61bf-4fc6-bb09-c00f3a9d533d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8f585d-680a-47de-85ef-892b7bf5f63e",
        "cursor": {
          "ref": "5ca0a1f8-8115-4367-8c56-f877ca9ca763",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "41d1d103-9c28-40ab-949e-e946e46de339"
        },
        "item": {
          "id": "5f8f585d-680a-47de-85ef-892b7bf5f63e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4ff4ab3c-f560-422c-953b-b9f8b2033713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e744f4e-1871-4893-a459-ff80ccea54af",
        "cursor": {
          "ref": "e78ce982-eecf-4bc4-ab45-c93f49773ca5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "94d74c26-bbdf-4901-9c2b-738eacdd8ae0"
        },
        "item": {
          "id": "3e744f4e-1871-4893-a459-ff80ccea54af",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a2855528-c0cd-4313-9c84-51255e05bbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da98a99-5d9e-42de-a6ed-8da982b3fd79",
        "cursor": {
          "ref": "23f27cf7-cbbc-4e85-a713-873a02bb5ceb",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2f237bdd-aa66-4103-b5ed-8f564c7eb718"
        },
        "item": {
          "id": "2da98a99-5d9e-42de-a6ed-8da982b3fd79",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e7219534-bb2a-4a18-b3cf-e4aa82ca37e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282a6289-95f3-4db2-b405-b961c5920a19",
        "cursor": {
          "ref": "982c7e7c-2390-4ad1-8254-d1c936752ae1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1882313d-fb46-410e-ac78-353471b1b8d7"
        },
        "item": {
          "id": "282a6289-95f3-4db2-b405-b961c5920a19",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "06168187-775a-43bf-a8ba-ac6a149f4452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b5c886-0c13-4029-924a-6e9bf4254a96",
        "cursor": {
          "ref": "f9895ce2-d65f-4c52-9f40-5fe838f40c22",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "34740c8d-58a9-4232-b045-9efeb6c807b5"
        },
        "item": {
          "id": "f3b5c886-0c13-4029-924a-6e9bf4254a96",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "69fbe8d7-64fc-4c2d-8c4e-a8a804cce6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57dfc6de-a9c7-4e36-a854-c1434c1ae622",
        "cursor": {
          "ref": "963e7424-e7e3-4ee1-8efe-006d109b11be",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c84352d5-8094-4da1-8bc4-efef5eb866a8"
        },
        "item": {
          "id": "57dfc6de-a9c7-4e36-a854-c1434c1ae622",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "236c0dee-8b6b-4e9a-8df6-0eaba0bda7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1178f8d9-8f7c-48eb-8024-e87d03529fd1",
        "cursor": {
          "ref": "578192b3-f584-4a70-a3b6-daa9b9277238",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4ae0d247-87c4-4e4c-90ba-5ce53b4e07ff"
        },
        "item": {
          "id": "1178f8d9-8f7c-48eb-8024-e87d03529fd1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fda17d59-55f1-4b7b-aa4e-234ef65c8fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5429913-2470-4d3d-8646-662122151a76",
        "cursor": {
          "ref": "8ffcb835-73a0-4e1a-8ae5-839ab78a7dd2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1243f6f7-376b-4404-8ce0-7917a27b41cf"
        },
        "item": {
          "id": "b5429913-2470-4d3d-8646-662122151a76",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8cb25f03-e699-4ab3-af60-c4da24eb4bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6076e0ea-3af0-4232-bc56-23c6b0e43b66",
        "cursor": {
          "ref": "93d1f8fb-6c62-4a8e-abc9-20d1995628e6",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0f57d311-1295-4fcb-a9bb-27d35444aaf2"
        },
        "item": {
          "id": "6076e0ea-3af0-4232-bc56-23c6b0e43b66",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a68f0007-8f09-4e11-a8aa-4894e26df268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45480653-2aba-457e-9f1a-54ef9dd7a30d",
        "cursor": {
          "ref": "f2fabbac-e1c7-4a59-a51a-f7ad818c8bd4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c47be449-01b2-47f6-8da1-7e7978e8c626"
        },
        "item": {
          "id": "45480653-2aba-457e-9f1a-54ef9dd7a30d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "09ae0ebd-8691-477b-b481-c0d3dd78e55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45f01b0-7861-46ff-9089-f64f2ce68143",
        "cursor": {
          "ref": "2c73925d-69c8-4806-940a-b4a89cf4875f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d3e30716-29e3-4e47-8a8c-a7b14d1d685f"
        },
        "item": {
          "id": "f45f01b0-7861-46ff-9089-f64f2ce68143",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bffdd465-c560-4b76-9382-61d95a33c1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e0f022-9b2d-4adb-9a0c-027662bfa64e",
        "cursor": {
          "ref": "99ecf159-23c3-42b6-958f-28d3518a365e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a5cc36fe-8081-4015-9925-88ecf9b38848"
        },
        "item": {
          "id": "a0e0f022-9b2d-4adb-9a0c-027662bfa64e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3e5c1f6a-35c9-4713-9aa6-0de3038f3290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef86f50-69a0-4041-9f25-0dfe13fb36ed",
        "cursor": {
          "ref": "8f3bc13d-2191-4fc8-9339-11dc59de05f7",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1550413b-c3e9-4938-9beb-f2715eec4c31"
        },
        "item": {
          "id": "7ef86f50-69a0-4041-9f25-0dfe13fb36ed",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "12d0bb3b-9909-4cab-bcf3-976d0a264478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4f9034-cdbd-4b5d-8b7a-5c464f04bce5",
        "cursor": {
          "ref": "aca4dcac-2161-4cde-a302-c01544ae71de",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e291ce03-9cd7-47a8-a85d-69c73ed2b0fb"
        },
        "item": {
          "id": "bf4f9034-cdbd-4b5d-8b7a-5c464f04bce5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6f5eb99e-118b-4e97-b16c-9cba3c879eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f7c55c-6e82-4f9d-bd52-d6fda07ea506",
        "cursor": {
          "ref": "03865777-155d-474c-8ac0-15cf6c00dd0d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "dfdd53e7-fb6b-4f99-8f8a-629dcbb77a71"
        },
        "item": {
          "id": "a2f7c55c-6e82-4f9d-bd52-d6fda07ea506",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2d71c40e-d352-4e10-8672-63432638382d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aface89-078d-4280-aac3-f2b9ffd1b483",
        "cursor": {
          "ref": "949fea4c-5141-4c23-95cf-830b33223500",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7c85de52-7e4c-484d-be4e-8701db7c6187"
        },
        "item": {
          "id": "6aface89-078d-4280-aac3-f2b9ffd1b483",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0da276c0-58f0-4df4-aa23-eae95e97829d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c1aae3-b6b0-477b-bc25-4214e4197a92",
        "cursor": {
          "ref": "02d720e7-d65d-4227-adde-3fe9064a81c6",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "379a8ced-4918-46d9-987f-5f3936545ade"
        },
        "item": {
          "id": "a0c1aae3-b6b0-477b-bc25-4214e4197a92",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d36b020a-800b-4891-a14c-a3dde1db4337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b70847e-b30d-487a-9d90-16160104cf9e",
        "cursor": {
          "ref": "e4940836-934a-486e-820d-098a3c76748b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e9b44824-40ca-4250-9a0d-e5aa568e55c6"
        },
        "item": {
          "id": "2b70847e-b30d-487a-9d90-16160104cf9e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "29486dfc-0059-48e5-8914-6df3e1cb9cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53501c7-d82d-4058-80a7-48195388036c",
        "cursor": {
          "ref": "e18d6c68-a89d-4a61-b169-2f0171ba1134",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "90b87ab7-2fa1-4430-a8f4-391f408145bc"
        },
        "item": {
          "id": "b53501c7-d82d-4058-80a7-48195388036c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1b611f50-f81d-45ca-9aa6-1fb9254befb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d90770-9e6b-4e2b-923d-13652f04f4b8",
        "cursor": {
          "ref": "424dcaf9-c293-4616-9d4c-82ccd8d92d90",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d8cc0ed7-2987-4814-81b4-ac331fe90e0b"
        },
        "item": {
          "id": "e0d90770-9e6b-4e2b-923d-13652f04f4b8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "248c8301-c6d5-4dbf-9738-290f52cba08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a794d9cc-c85f-40f3-9384-e7d1c847917e",
        "cursor": {
          "ref": "dbe3094b-fa3f-433a-b50e-f438d9afa644",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "681385aa-3fe6-41ce-bee3-5ec957b6d4c1"
        },
        "item": {
          "id": "a794d9cc-c85f-40f3-9384-e7d1c847917e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7970c21f-1f70-439a-ac14-9c2c31b1e798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6947d43-0e67-49ac-aa2f-b8ff157d85cb",
        "cursor": {
          "ref": "46ddd099-34fa-4fc2-adb9-3933c3f2397e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4e7f0117-ae53-459a-ab9d-5471562df083"
        },
        "item": {
          "id": "f6947d43-0e67-49ac-aa2f-b8ff157d85cb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "86145df1-3f13-40e8-bd3c-5ece85b137ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52f4b8e-a164-4976-8361-5627e216622f",
        "cursor": {
          "ref": "2cb05633-1ced-4edb-a393-67425b148464",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3254df4f-a0d3-463b-aedc-b1aaa4a1113d"
        },
        "item": {
          "id": "f52f4b8e-a164-4976-8361-5627e216622f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3e0e4788-53bc-4f80-8020-59a7c0b4aa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "759912d7-dc66-43bd-8ca9-808b5b34ffe3",
        "cursor": {
          "ref": "d91e7196-2e79-4cc3-aa46-8ce33d40c73b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "00bce813-36ce-41a7-a8c7-d934a09c0a01"
        },
        "item": {
          "id": "759912d7-dc66-43bd-8ca9-808b5b34ffe3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "57a45ce4-83a7-4495-9213-fb7da795b1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176085c7-97d9-47ab-a9eb-079df8910dc8",
        "cursor": {
          "ref": "0f4e7862-8025-439c-bd8b-a857d2d5edb5",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6699ce3e-6170-434c-9d58-1ace136f9e78"
        },
        "item": {
          "id": "176085c7-97d9-47ab-a9eb-079df8910dc8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "02decfe5-3ad5-4d10-ab96-c1c450940928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5444d208-5af8-446d-9ab0-c6810dca2136",
        "cursor": {
          "ref": "77aa1f88-e819-462c-bdb3-27af4abb26c8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bdc476ef-c9eb-41cb-9876-c66ca1073c5e"
        },
        "item": {
          "id": "5444d208-5af8-446d-9ab0-c6810dca2136",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2984bc59-7511-4856-bc3a-451b3271abce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ad9ede-3ec6-40b4-bcfd-8354c7b6520f",
        "cursor": {
          "ref": "f82a5a8d-3296-4c0a-b1c2-2f4e386f2453",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0b2ca4fe-a798-4139-8618-36ec07d75103"
        },
        "item": {
          "id": "94ad9ede-3ec6-40b4-bcfd-8354c7b6520f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9ce9ee0a-9933-4796-9bd1-db9913e51508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a1addc-1bdd-45df-80b4-48a80dafa510",
        "cursor": {
          "ref": "cb75e906-52ee-4d13-830c-3f980f2ee83a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8db7da44-0692-4bdb-81c5-863d804d59d9"
        },
        "item": {
          "id": "b9a1addc-1bdd-45df-80b4-48a80dafa510",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "345151ec-d066-4989-8827-492870eb3309",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6131f22-3507-442c-87d0-17c0cee48a91",
        "cursor": {
          "ref": "ee9a24d0-e047-4a25-8d46-9117cbee6fd2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c2e345bc-058e-4e92-896e-e25f22971bf1"
        },
        "item": {
          "id": "a6131f22-3507-442c-87d0-17c0cee48a91",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "af70e8a4-1a88-49ef-9203-6495b131fdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9c9a50ff-a8c8-4b20-b3cf-689a8650391a",
        "cursor": {
          "ref": "c2693b73-89fb-4672-a31a-f44fc98b0a69",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "104cc000-89ce-451b-af89-21329482eacc"
        },
        "item": {
          "id": "9c9a50ff-a8c8-4b20-b3cf-689a8650391a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c37071d0-7c1d-47dd-87ac-377a35e06e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 179,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "daca3a7d-eb70-4ffe-8d1a-1220bea89def",
        "cursor": {
          "ref": "726c6f76-70bd-499a-997f-13b040b0806b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ef9cfc90-261a-443a-b348-4973639566b2"
        },
        "item": {
          "id": "daca3a7d-eb70-4ffe-8d1a-1220bea89def",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3c7e2717-eb2b-4b7e-9c08-fac6bb624f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "02751174-e69e-49ed-8189-bcf776c7174b",
        "cursor": {
          "ref": "2dba47be-9754-46a6-bf83-e4d1ab229726",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "529e7b63-0c87-4b4f-8599-02ca4204fd9a"
        },
        "item": {
          "id": "02751174-e69e-49ed-8189-bcf776c7174b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "37b48eef-72ba-4290-91dc-51f62fb998be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "344dc17f-d803-4ffa-9962-c78f5753c4f6",
        "cursor": {
          "ref": "cf074700-00a6-4889-b5cc-9ce2931439a0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "030286b0-1984-4ff4-aad1-97eb6d0b5ef2"
        },
        "item": {
          "id": "344dc17f-d803-4ffa-9962-c78f5753c4f6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7e45c5dc-03ca-435c-9e34-df4c20a37350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4b3d3752-0868-406f-9cca-043374f5bde6",
        "cursor": {
          "ref": "c7bcd8d3-7c18-42f8-b4ef-4173e2153b44",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f552c1ec-b5d5-47f4-80f3-81f6588dd09e"
        },
        "item": {
          "id": "4b3d3752-0868-406f-9cca-043374f5bde6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "798b2a83-51fc-411e-aba5-1846f1a8d207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "390ba3c7-271d-43b7-b729-dbc162dc73a6",
        "cursor": {
          "ref": "10374c6d-9ff8-4b68-b8b6-fb1f95fe3fa7",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1635bcbb-3f36-4531-9a6d-af829ae56ba3"
        },
        "item": {
          "id": "390ba3c7-271d-43b7-b729-dbc162dc73a6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "17c2e192-50b6-4026-b08b-e1b9f8d18258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5ce9a60d-dc98-4a5e-a8c3-7b14ed713036",
        "cursor": {
          "ref": "154c7742-ceea-48b2-9cdd-a621bd8546ed",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d41d27c2-9d13-4266-a624-e12f07d67448"
        },
        "item": {
          "id": "5ce9a60d-dc98-4a5e-a8c3-7b14ed713036",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "957d2889-b62a-4163-ba04-74ace1f7e762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f933fce-28c5-4629-ab62-27cbb1b68608",
        "cursor": {
          "ref": "1ac19b6f-8560-45dc-b329-1ea8b8788bee",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1b53e4ab-6904-4dd5-a484-a589f34c203f"
        },
        "item": {
          "id": "4f933fce-28c5-4629-ab62-27cbb1b68608",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "016d66a0-f097-48e1-a102-b71dc930766c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49efb413-8b99-4423-b7ea-5531b18ec7b6",
        "cursor": {
          "ref": "38a6b495-0c38-48ef-a010-0b75ef253f54",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "69937786-c2c8-4841-87c1-c1889c10d188"
        },
        "item": {
          "id": "49efb413-8b99-4423-b7ea-5531b18ec7b6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8d349789-550f-4952-a674-c20c8bd25a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75558f0-bb17-4dfa-9b16-58fa8a687e54",
        "cursor": {
          "ref": "d8b6bd69-c4f0-4a7c-a0d1-8cfe2ada9cd8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "767c6f6e-0bd6-4480-a486-d4510fa29caf"
        },
        "item": {
          "id": "b75558f0-bb17-4dfa-9b16-58fa8a687e54",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9c268bc1-5c1e-44db-b569-5f075a3cd8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba183678-0556-4c5f-9f0e-ee5e0a85e965",
        "cursor": {
          "ref": "10e149f4-dc80-4f7b-9470-b74aacad1a2c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "77783cb1-f60e-402d-be04-1ce2ea7f9f59"
        },
        "item": {
          "id": "ba183678-0556-4c5f-9f0e-ee5e0a85e965",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f86f78f4-ccec-49a6-bcd7-9bd9b8cbdf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87e4d15-5164-43cf-a6b1-73deebbb1135",
        "cursor": {
          "ref": "93b006cb-4822-4b15-9006-c65ed92cfd9c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b2b72215-fbda-4994-9c70-8db4b22354bd"
        },
        "item": {
          "id": "a87e4d15-5164-43cf-a6b1-73deebbb1135",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4e9793fd-7a7c-40bc-b3d6-d816f11d1b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6ead78-fb8b-4fbe-aea2-325811c206ce",
        "cursor": {
          "ref": "189d0338-fefb-485b-b53b-d3490af78b5e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6c0e17c5-cabc-46c1-8f86-fa8537e90ce0"
        },
        "item": {
          "id": "9c6ead78-fb8b-4fbe-aea2-325811c206ce",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2bbca71c-0726-46db-99d7-be4466604415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3623a13-0e58-4712-bda9-269dfeb28ae1",
        "cursor": {
          "ref": "41a990e3-a9f5-4d95-9d5e-8f653e8e1725",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e45f0e93-50e3-4316-b32d-609d08ec42ae"
        },
        "item": {
          "id": "c3623a13-0e58-4712-bda9-269dfeb28ae1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "44e6e857-dbb2-40ce-8828-5e8f3fff13f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572f8d29-9b86-45e7-8387-e368804e029d",
        "cursor": {
          "ref": "694b3ae3-932e-4f56-bf8e-ae3bff04fe24",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "876f9b32-b045-4d95-a57a-433035a518e3"
        },
        "item": {
          "id": "572f8d29-9b86-45e7-8387-e368804e029d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4d309ff5-6ac1-444d-a380-fa779ad6a56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be699101-33e1-4bae-9cdc-9fe7b506126d",
        "cursor": {
          "ref": "150af451-949f-49b4-8a63-edeb364d9863",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "842ba70f-ba70-43e4-b4a6-4ce0f6e028b5"
        },
        "item": {
          "id": "be699101-33e1-4bae-9cdc-9fe7b506126d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f4066d50-2489-475a-a53e-600dc27957cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2558ec65-daae-4ae1-9b16-a8fe8f4f4fe6",
        "cursor": {
          "ref": "d03a6dd7-b336-4f18-93c0-523e56ea935b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3b16ff97-d141-4ec3-952a-33823cdc7c75"
        },
        "item": {
          "id": "2558ec65-daae-4ae1-9b16-a8fe8f4f4fe6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "edbfbade-8218-4443-ba74-ea4c828748d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcdb2ee-76ad-440c-ba58-df289eaee193",
        "cursor": {
          "ref": "49dc8524-ba55-4f73-a4a9-911502654e39",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "07e979a8-9e01-410e-aa22-7dfaaa2d248c"
        },
        "item": {
          "id": "bfcdb2ee-76ad-440c-ba58-df289eaee193",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c68c7b5-84d1-4b55-b51a-2ee2f9ceae88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca6a987-fca0-469b-b0fa-9644b8ad7095",
        "cursor": {
          "ref": "f5c0113a-8ee0-4a5e-b001-93e800553de2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dbfcfbe5-851e-4f0d-8285-e071c3a97aec"
        },
        "item": {
          "id": "eca6a987-fca0-469b-b0fa-9644b8ad7095",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c4a99da1-61fa-48f0-8d01-7bbe81d988f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e7164f-9b6e-4707-86f5-24dd43225e0b",
        "cursor": {
          "ref": "957fb25a-b720-42da-98e8-0a191403c945",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c704040d-dc87-4a20-a528-64c3d43cadf6"
        },
        "item": {
          "id": "23e7164f-9b6e-4707-86f5-24dd43225e0b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "be4262e7-538a-4853-a500-c50c8a88d15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c14c2ed-444b-48a0-959f-6ebcbafb8581",
        "cursor": {
          "ref": "0277ebef-d61b-4188-9269-0816749df54e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f97002f3-6bec-4b2e-95c3-c9bc3f04c050"
        },
        "item": {
          "id": "6c14c2ed-444b-48a0-959f-6ebcbafb8581",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a5c77762-745b-4ae3-9d9b-4c70f8f3fc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275e2a3e-0ab7-424a-a0f4-4860ad761cc5",
        "cursor": {
          "ref": "bffac33d-d0b3-42ae-825e-c303bccda217",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0a0fa1c7-a371-4f53-bfe4-96364cdbacf6"
        },
        "item": {
          "id": "275e2a3e-0ab7-424a-a0f4-4860ad761cc5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "22c3c72b-3ee4-45a2-90c8-71b129b6a993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce224742-a06f-42e1-ab81-683442ec21dd",
        "cursor": {
          "ref": "28f06ff2-5759-4dab-80dd-d0bc656cdc6a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "860001a0-c9b8-4b9a-8d89-af0673fd3688"
        },
        "item": {
          "id": "ce224742-a06f-42e1-ab81-683442ec21dd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0b967c01-8a56-4adb-b4b5-49021a6ba9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c5ce32-f96c-4ff2-8bc4-b0cb59fbadcf",
        "cursor": {
          "ref": "469ce221-d7fd-4c81-9641-453ec04cfd03",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3c904532-546f-4956-a796-fde36c410d7c"
        },
        "item": {
          "id": "f2c5ce32-f96c-4ff2-8bc4-b0cb59fbadcf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "12d58b21-5563-4ed4-9140-04ae8cb55ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72daf77d-a354-47d6-8960-40a46cf6e0af",
        "cursor": {
          "ref": "655649d7-3b74-47e8-93e9-97b5f061b883",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3da495c7-d200-4d5f-b686-cf93fb26df5e"
        },
        "item": {
          "id": "72daf77d-a354-47d6-8960-40a46cf6e0af",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7f78de2e-1abe-4dc8-8004-6d64fbfddf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28d20df-2f21-4d5d-b8bb-7ca50bbb1b65",
        "cursor": {
          "ref": "8307a488-0e78-4a63-a8c6-287de102fe1a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "26f82eb2-8365-45d1-9239-8acbd549e332"
        },
        "item": {
          "id": "e28d20df-2f21-4d5d-b8bb-7ca50bbb1b65",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "24ff71d1-14ec-4cc9-9309-4e9fcabab448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf759bd-e182-45d7-b287-dba93a73f8fe",
        "cursor": {
          "ref": "9f35e1b3-9890-49b6-8d31-95357bf81eb7",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fb2cf4aa-c9f7-495f-8684-e51ae880c025"
        },
        "item": {
          "id": "2bf759bd-e182-45d7-b287-dba93a73f8fe",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "94e3580d-c2a3-41bc-bc1a-fd117107cb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d07b70-d5d8-4bdc-a961-108db6f7ee2a",
        "cursor": {
          "ref": "54eb18d5-cac0-42e8-ac49-b2c657cee990",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "482027b6-fcad-4e40-8007-11de9d192226"
        },
        "item": {
          "id": "29d07b70-d5d8-4bdc-a961-108db6f7ee2a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "476f70e0-f6e4-48b8-90ca-f3fcb6b0d4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0849b103-14a1-4400-a3aa-e6084b33c45c",
        "cursor": {
          "ref": "65aea2f0-fb4b-44ad-ac4d-aa0d37daaf97",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6e0a237e-f2e9-480f-80b1-d32728167565"
        },
        "item": {
          "id": "0849b103-14a1-4400-a3aa-e6084b33c45c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2968d029-5c56-4c94-8de1-3ea76582afcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70d5a8b-2523-4c56-9ef3-b68e153fde55",
        "cursor": {
          "ref": "954d9d47-446c-4550-b571-807d8dee8c54",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "424e923f-5467-47d0-8c1e-2dd77bd272a3"
        },
        "item": {
          "id": "d70d5a8b-2523-4c56-9ef3-b68e153fde55",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cf9604d7-d7cd-4718-8b1a-8b76c2c9926b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93365551-74dc-4d5c-8a04-a711c9f97340",
        "cursor": {
          "ref": "02808ced-b0bb-4fe3-99f4-b7484993d86c",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "769c26e2-eac3-46e9-b7b3-f71145f2e6c0"
        },
        "item": {
          "id": "93365551-74dc-4d5c-8a04-a711c9f97340",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8a1e1793-b181-478b-9b7a-c689e4bc2663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca73665-fc5a-41b2-9982-867d8b5be3dd",
        "cursor": {
          "ref": "0b776806-9613-4230-80f7-050fb26efc53",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "740c2e1d-5257-43b1-a255-4d355a301f79"
        },
        "item": {
          "id": "cca73665-fc5a-41b2-9982-867d8b5be3dd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fc212967-558a-41c3-a1e9-ee767fdae811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522e7182-b149-44aa-b710-437790d59cf9",
        "cursor": {
          "ref": "9cd19154-8562-4d5b-9de6-be03804d745f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "84264628-d888-454f-ace0-0aeffe13235f"
        },
        "item": {
          "id": "522e7182-b149-44aa-b710-437790d59cf9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dfd09238-efc4-4b76-8eda-a9d388d1e8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9878303-bd3f-40d4-b476-0312989b5054",
        "cursor": {
          "ref": "edfbc152-6315-4e31-9406-8c3a0d2b8e7b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bf97bb71-605d-47af-b603-f6daf5e70855"
        },
        "item": {
          "id": "f9878303-bd3f-40d4-b476-0312989b5054",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "053d8ba7-5538-4777-83c4-da6cffb0ad3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e16995-ae31-4eef-839e-aa70d7a602c6",
        "cursor": {
          "ref": "557079c1-1c56-4f34-a181-abd4e132ce86",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7c7bec97-d4f0-462f-99b1-cfa355cfc6fd"
        },
        "item": {
          "id": "64e16995-ae31-4eef-839e-aa70d7a602c6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "312eb4af-2e5d-4491-a839-0a8ef2c4fb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e536ed8-3931-41aa-8465-6ac4d2430331",
        "cursor": {
          "ref": "3796a832-ec6e-4f85-8186-71597c993e52",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e206e1da-187c-4804-9f68-d1f0236c2837"
        },
        "item": {
          "id": "7e536ed8-3931-41aa-8465-6ac4d2430331",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "88b98708-27b5-4161-a664-aad88ea51693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4dbe8e-b7ae-40ac-b3f9-23e482097187",
        "cursor": {
          "ref": "54b46339-9121-44cc-9174-9dd00c561495",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5822d036-08a6-4467-9b4c-173023b53954"
        },
        "item": {
          "id": "0e4dbe8e-b7ae-40ac-b3f9-23e482097187",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8d82bcb1-5888-40bd-b760-8351cb2e30d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ef5b02-9011-4034-a56b-632b97e25208",
        "cursor": {
          "ref": "4267fceb-d474-4fa2-a11d-12d5a625ae10",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1929c492-efbe-4ff9-8d7a-4c3c2b82293f"
        },
        "item": {
          "id": "c2ef5b02-9011-4034-a56b-632b97e25208",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ca64cf84-ef5d-471f-a9f6-988565da25cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dc9251-868c-4267-b105-a21bc4a55380",
        "cursor": {
          "ref": "6a3a0343-2ab1-407e-9945-3881eb39c8cd",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "42b434b2-d522-474b-8cde-88662a8a7c10"
        },
        "item": {
          "id": "a2dc9251-868c-4267-b105-a21bc4a55380",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b99e5a0-e197-48a3-a8ed-65d270a4ddf4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da69348-c735-4342-88f8-4f49229b989d",
        "cursor": {
          "ref": "0310c598-21a3-4a37-b1ba-cc3bdeb05e69",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f4e85128-ae12-4bfa-a4e5-5e98352d5aff"
        },
        "item": {
          "id": "9da69348-c735-4342-88f8-4f49229b989d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a0fbcc72-4769-4600-ae10-5b8553ea3414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c2b0b3-f66a-4300-96cf-1bba9a018fcf",
        "cursor": {
          "ref": "a27d7304-60f0-496f-8a89-c7b60a475a25",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2f76b076-e5e5-4e80-a61b-7d7e13329d77"
        },
        "item": {
          "id": "17c2b0b3-f66a-4300-96cf-1bba9a018fcf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7be7d7b5-adf6-4d02-8b33-d50f3d4b6bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e41516-950b-4465-8dbe-c3e3f38598f8",
        "cursor": {
          "ref": "e0291d3f-cb17-45e6-aeac-fdb744dd5bbb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f458d51c-1b51-45fa-939b-ff512caeac3c"
        },
        "item": {
          "id": "05e41516-950b-4465-8dbe-c3e3f38598f8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "052752ed-3c07-4186-8b69-36cd673ef5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141518b7-553b-482f-8668-764e3433c6e3",
        "cursor": {
          "ref": "91b6b98d-6b6c-4576-8edd-2b6b899e1a95",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "63c652d1-03c2-4957-84df-312cb0a4bfd3"
        },
        "item": {
          "id": "141518b7-553b-482f-8668-764e3433c6e3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d0319317-aa2f-449f-ac29-b43776d7979e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c21293-4104-4a12-9725-f87a7c8e7dd9",
        "cursor": {
          "ref": "abfd1f6c-0881-4bcf-9b9e-54591e374fd9",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "788fbcba-5c55-4227-983a-caf9f9012bbe"
        },
        "item": {
          "id": "d9c21293-4104-4a12-9725-f87a7c8e7dd9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0c6e24e3-04f6-4f51-93cf-b73822017abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35448b67-c53a-47fc-81e9-13ad08a483eb",
        "cursor": {
          "ref": "bcd0598f-3cbd-4182-9535-5d87b31db970",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2456c15b-e79c-498a-b5f3-9d3bfedfbd25"
        },
        "item": {
          "id": "35448b67-c53a-47fc-81e9-13ad08a483eb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7f3f2246-ef41-4f1b-bafc-d3283064de9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ccd0f8-b454-4d47-b078-ba4639abb062",
        "cursor": {
          "ref": "347c0899-d406-4ef0-bfa8-c8ca797c0661",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a5cf899a-a41e-4919-8e4b-da7e132115b0"
        },
        "item": {
          "id": "70ccd0f8-b454-4d47-b078-ba4639abb062",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06a1f615-6699-4fc2-9854-bcf38b3c12e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df590d4e-f129-490e-954a-44d955f3fbe3",
        "cursor": {
          "ref": "d1037359-3a8f-4a44-b3e6-576e965316d7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f4c4acbd-5469-4237-aa1d-2875cd8116f2"
        },
        "item": {
          "id": "df590d4e-f129-490e-954a-44d955f3fbe3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "43e1e314-013b-424a-afcc-30a1fa4022fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b5ab82-a28d-4567-9021-11a114e8e324",
        "cursor": {
          "ref": "d82bd64a-70d6-4795-8afd-7b7defb6b400",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b0974e0c-a838-44c2-94f5-4b9bd052d034"
        },
        "item": {
          "id": "86b5ab82-a28d-4567-9021-11a114e8e324",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b6c71f27-5a32-4630-8368-55ec4baf941f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c83683-71f9-4b65-b0a7-5f56b01bf688",
        "cursor": {
          "ref": "851380f9-a714-4ff6-95b8-53ddd6802271",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "01d4c32e-03e4-4a10-9779-92ed6554cf56"
        },
        "item": {
          "id": "a4c83683-71f9-4b65-b0a7-5f56b01bf688",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd9c7bec-e297-4eed-8013-3d6b0cd92d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48330b57-cda9-4131-9bfa-8b7d2b7ff48a",
        "cursor": {
          "ref": "13a21fa5-d2bb-43bf-9594-7b8a17e658e7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "de7fba76-b21f-409a-a54a-3af9fd8dd6ff"
        },
        "item": {
          "id": "48330b57-cda9-4131-9bfa-8b7d2b7ff48a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9804b850-9554-4484-b04a-87a264f9c315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf27394b-0fcd-45ac-8072-17199f6c94b9",
        "cursor": {
          "ref": "fede86db-ce60-48ee-9b07-3d80b245bfa0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ae6e64c6-14d9-47b5-8550-ceaf2fb41696"
        },
        "item": {
          "id": "bf27394b-0fcd-45ac-8072-17199f6c94b9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2e275b05-eba2-41b7-b491-aeaf3dd9aa26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1d0ea1-abb8-4290-9ac4-6035ee17d912",
        "cursor": {
          "ref": "da5394c3-a1b2-4d29-b0b4-0def651241bd",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "20627bf6-cfb6-4b6a-8d04-3bbf2e7e1d6f"
        },
        "item": {
          "id": "5a1d0ea1-abb8-4290-9ac4-6035ee17d912",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c930063c-6239-40c4-938d-5779d791293d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3798db65-673a-41fb-9c17-3438fc5c5838",
        "cursor": {
          "ref": "bee0068c-6ebb-4cbc-947a-80bfd601d50a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2803ae92-bcee-4eaf-9d4c-9b10e90808c8"
        },
        "item": {
          "id": "3798db65-673a-41fb-9c17-3438fc5c5838",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9f098427-54cf-482f-a42f-21e6817cdce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689f2ffc-ac49-4031-8983-80a4129de207",
        "cursor": {
          "ref": "c05712d0-fad9-4ae0-b232-af91539e708e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "69b640de-3eba-4cfe-adb3-c7c4d4e66991"
        },
        "item": {
          "id": "689f2ffc-ac49-4031-8983-80a4129de207",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2ede56fb-3041-470f-8bd8-93fabfe0d0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437ff49c-4920-4500-b55c-e1b9006cdd66",
        "cursor": {
          "ref": "882b7a1d-a990-4b9e-988b-bac7b49b9af8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b2d5a545-8685-42e4-907b-f9d8076e813e"
        },
        "item": {
          "id": "437ff49c-4920-4500-b55c-e1b9006cdd66",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "efa6e177-4229-4d66-bfe3-e0f1ffe6684e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9de857f-5f60-4601-8b79-94710e865f06",
        "cursor": {
          "ref": "4a709f17-0ee0-4f01-8302-a234fad53a66",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3192bd8c-f0d9-4144-82cb-5acef3967c6d"
        },
        "item": {
          "id": "e9de857f-5f60-4601-8b79-94710e865f06",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4017d31c-c5f1-4b49-960f-f50b5e07f2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28088eee-e72f-4b4b-88c6-e3b31b93e76d",
        "cursor": {
          "ref": "d7fac6d2-b33e-46f9-9a67-c3ce353974a1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a34ae7f8-a644-481f-a695-cabe30a224ac"
        },
        "item": {
          "id": "28088eee-e72f-4b4b-88c6-e3b31b93e76d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "73e62b4a-2558-4e29-bb8c-fde810b70b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78f86da-a7ee-4626-8fd9-3eba509dff26",
        "cursor": {
          "ref": "a01a5a27-319f-4257-8d1f-0dce950b8bc4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6847b913-78aa-4e1b-a3b9-c909fc197216"
        },
        "item": {
          "id": "f78f86da-a7ee-4626-8fd9-3eba509dff26",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "21cc5df3-a8d2-46fd-9abf-d3925b8d9873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519027b0-da1e-4566-9390-971923070b0e",
        "cursor": {
          "ref": "a6293716-bea7-4f9b-89a0-0a4e69d62de7",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "63038bec-5036-4f0c-90fb-3b8995e90c6e"
        },
        "item": {
          "id": "519027b0-da1e-4566-9390-971923070b0e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "72e472af-2c50-49df-8d5b-516e1d278f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045f18df-9ae1-4292-ad1a-04c61379f661",
        "cursor": {
          "ref": "38b1be8b-c0fa-4f91-9f9b-df57db831027",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "aca2f769-a9a8-4ae1-939d-b3aa29bf5e25"
        },
        "item": {
          "id": "045f18df-9ae1-4292-ad1a-04c61379f661",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c733c0a2-9954-4599-969c-aac84241eacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240bc9b8-48ad-48eb-9742-cfeaacad4b99",
        "cursor": {
          "ref": "3fd7e6df-97fa-4c4b-ab77-319459511414",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0af0221a-551d-4a6f-85ca-a66e56decd7d"
        },
        "item": {
          "id": "240bc9b8-48ad-48eb-9742-cfeaacad4b99",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d5677dfe-8528-4259-a152-1aab7b0db4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e440d81e-cb33-4de1-93bf-c5162527394f",
        "cursor": {
          "ref": "63ab0b57-3f0e-4c7b-9d64-c291bdbc5cee",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d02a78a6-1821-40ef-9419-b5a07d382cab"
        },
        "item": {
          "id": "e440d81e-cb33-4de1-93bf-c5162527394f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c3d3cb5f-3149-4658-b387-d92ccf9d9aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085b0373-e370-40a8-857d-800d33821d91",
        "cursor": {
          "ref": "ce3d5ddc-5ee4-416b-aea0-03a35e8eed0f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0e4fab23-98da-46be-ad3c-7bb9c6420919"
        },
        "item": {
          "id": "085b0373-e370-40a8-857d-800d33821d91",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f34ed213-39cc-4a89-ba76-c0ebcf54f7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f623c5-e823-476a-9e14-a17c9123ef9d",
        "cursor": {
          "ref": "a25b69a9-d4be-44f7-b0b8-0a6943de4932",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4b1621cd-d0ff-4c11-bc77-16a4c80f2e4a"
        },
        "item": {
          "id": "d7f623c5-e823-476a-9e14-a17c9123ef9d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19415631-a656-4e0f-a141-e1e673773f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a13214-97f2-4f92-8b21-97cba49ead99",
        "cursor": {
          "ref": "1f2892e6-192d-411f-b186-2479c3490e87",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c31138cf-0c6f-40d5-a13d-9ae26c79fa81"
        },
        "item": {
          "id": "c2a13214-97f2-4f92-8b21-97cba49ead99",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e2aa8d76-6d13-4243-abb4-7fd054f07fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94034f3b-e3a5-46eb-a055-a2d0a9a1a199",
        "cursor": {
          "ref": "d9f1394e-eba6-4922-b4e8-408cde802ecb",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4bc69859-ec5d-4c2d-a141-9dae89289f95"
        },
        "item": {
          "id": "94034f3b-e3a5-46eb-a055-a2d0a9a1a199",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7c88a772-c77d-44e5-a25d-93bfa2464aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d30590-51f0-42f6-84c1-9693086f2f8b",
        "cursor": {
          "ref": "07df4a41-01e0-4080-9733-4a9e9aa88bab",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f2141569-0f8f-4db2-9dd1-c13038618197"
        },
        "item": {
          "id": "04d30590-51f0-42f6-84c1-9693086f2f8b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a8429528-afac-4288-8e05-99234f83dfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5d9790-9d82-418a-aaf9-38c2b2648da3",
        "cursor": {
          "ref": "e912c40a-4834-4810-9ffe-c5451a2d4941",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2f52b404-f2f5-43a1-8b66-7c9bc66faeb8"
        },
        "item": {
          "id": "ca5d9790-9d82-418a-aaf9-38c2b2648da3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b38a9165-bbb6-4512-9d06-2cbffa6a70cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a8d2df-f8a2-4d41-a67a-423ad060572f",
        "cursor": {
          "ref": "8a548d58-e6c9-48aa-be71-d357858aec07",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c41ae219-1941-4fc5-8208-d02f4f73e1d8"
        },
        "item": {
          "id": "b4a8d2df-f8a2-4d41-a67a-423ad060572f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8503da4d-fcf9-4a2a-9eb1-e8d55764f2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac52403-a813-48aa-ab9a-7f0a6c5e9399",
        "cursor": {
          "ref": "6ef1c7a6-032c-4d23-9af5-418eee858c7b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "377d456d-822e-4c6a-ad9a-2ec9a37d3911"
        },
        "item": {
          "id": "fac52403-a813-48aa-ab9a-7f0a6c5e9399",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c1190ef0-41f8-41ca-a9c8-381bbc3d3ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c8ab57-fa4e-4ffc-aaf6-5f6c2402668b",
        "cursor": {
          "ref": "60fe9a78-ca13-41ad-bf4f-422e1b309c08",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f36e019-6828-45bf-86b1-b4e3249d8453"
        },
        "item": {
          "id": "f9c8ab57-fa4e-4ffc-aaf6-5f6c2402668b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d2118a26-39aa-4613-8505-944ba4291a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf940c97-fd64-4d92-9cb4-41c409ce35f6",
        "cursor": {
          "ref": "75706649-40a9-4be2-a8af-c72a4ea3b32a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e5566376-801a-4f0c-953a-e7bef8046d27"
        },
        "item": {
          "id": "cf940c97-fd64-4d92-9cb4-41c409ce35f6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ac6cd634-fc08-4b04-b333-c65f9f14d212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f245843-6321-4508-8261-57ac9dd4941d",
        "cursor": {
          "ref": "100506ec-2d32-4d93-ad89-bf1bc73f7849",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "640fb275-216f-485f-96bc-0ba9b3a76bbe"
        },
        "item": {
          "id": "7f245843-6321-4508-8261-57ac9dd4941d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "50069cc3-8a8a-4beb-9f10-7f80e2f8f948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1fc0cb-8942-4674-a8a0-0471f1807e64",
        "cursor": {
          "ref": "838e12a8-4a84-49ba-8573-1d1d2cb64076",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "358708fc-5d17-4d88-be45-c4dbc52d9aca"
        },
        "item": {
          "id": "1c1fc0cb-8942-4674-a8a0-0471f1807e64",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7cca187e-020e-4989-9d92-3fbdbce80784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5145376-c330-4753-bd6c-f45c069b972d",
        "cursor": {
          "ref": "eee533d2-2850-4501-b28e-cbbb603a083b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b573fc4a-f953-4d9a-b989-76facc0e98d7"
        },
        "item": {
          "id": "d5145376-c330-4753-bd6c-f45c069b972d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "268c74a4-3899-4fc0-899f-96875c154966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01529d0c-770f-42db-bf95-9bf8a5ee7bb8",
        "cursor": {
          "ref": "02a49bf3-f252-4fc3-96d9-23d4211ea084",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8d22dde7-043b-4469-b7ad-3793403c8ce6"
        },
        "item": {
          "id": "01529d0c-770f-42db-bf95-9bf8a5ee7bb8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c45a5c97-cc1d-4fe2-a69a-7ca19304bfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ff862b-754e-4a31-a130-c508e95c1930",
        "cursor": {
          "ref": "5584b781-59d7-428b-8318-e37d22ebd037",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cb77d549-e403-49ce-81e8-f83d9a35cca7"
        },
        "item": {
          "id": "c1ff862b-754e-4a31-a130-c508e95c1930",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cead2953-8c86-41cd-b72a-7201b4fad5df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ef8439-d460-413e-9d7f-7cb93acc386e",
        "cursor": {
          "ref": "0ec35011-6cad-4724-80e0-de878ca01e40",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b9a4d7a3-f920-4cc1-b5e6-133baf214434"
        },
        "item": {
          "id": "13ef8439-d460-413e-9d7f-7cb93acc386e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7fbb5515-c64d-49d2-9985-fea2a8ada6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665f3194-fc49-471d-9ea6-8e3733d561cc",
        "cursor": {
          "ref": "248d94bc-eb21-4ae1-80d2-e712f4239c9f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "47a06af7-5431-4087-86ff-ea50e77d7deb"
        },
        "item": {
          "id": "665f3194-fc49-471d-9ea6-8e3733d561cc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fd5b4c2f-d89c-4c44-8fb4-ffb78291e2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c26dd1-612b-4a74-8997-9078f1e6cb4b",
        "cursor": {
          "ref": "3edd48b7-ef2f-4c09-bae2-c8b7af0293e9",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "27658698-33fd-4126-b092-b68c60cc2584"
        },
        "item": {
          "id": "27c26dd1-612b-4a74-8997-9078f1e6cb4b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4a1a79f3-9aa0-48e5-a622-d0ca2cab7b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f795977c-5f1d-4dd8-a6a7-dca95b38026d",
        "cursor": {
          "ref": "cd99a09d-6575-4590-9e75-38a9ae28358a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8924b6ee-cc06-4800-a5d5-dd44e0665a78"
        },
        "item": {
          "id": "f795977c-5f1d-4dd8-a6a7-dca95b38026d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a04fbee5-752f-4266-bd26-640ca91199ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd64b1a-4b5e-4325-a991-c368f80483d4",
        "cursor": {
          "ref": "add77aa3-1ef9-4136-8a62-47799e32ec87",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9d411f3e-982b-4ff0-988c-c11a40f2cbb8"
        },
        "item": {
          "id": "8cd64b1a-4b5e-4325-a991-c368f80483d4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9219d41f-779f-45c5-91ad-396941891c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d115c3-27d4-4e94-a652-f58afc4f45d5",
        "cursor": {
          "ref": "2b319a05-a321-447e-b3c3-1a0d6fa736e5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "097bfca7-bf16-4bad-9cf1-2e168af470cb"
        },
        "item": {
          "id": "c0d115c3-27d4-4e94-a652-f58afc4f45d5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "da82fdaf-1ecc-43f8-8a02-2f135d471026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a75ab5-ddd9-4c2a-8eb1-eb0a90909342",
        "cursor": {
          "ref": "dffa5286-a2d9-4b27-9d13-31a6654b1dc9",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "086cc5b2-40d4-43d4-bf9e-fb390e269cbf"
        },
        "item": {
          "id": "d8a75ab5-ddd9-4c2a-8eb1-eb0a90909342",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "53f36fba-4664-473a-a4fd-bf8540413e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1021b5b9-94a3-4c83-93c1-d19f708eabc4",
        "cursor": {
          "ref": "10eb730f-88d7-42ad-9f80-218b3f34a9f6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "af23ca34-6978-4a1a-848d-22fbe1bacafa"
        },
        "item": {
          "id": "1021b5b9-94a3-4c83-93c1-d19f708eabc4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1d2900be-113b-4c79-a780-7f531a584669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afd7845-2ef1-452d-b460-5038a2c4379f",
        "cursor": {
          "ref": "7fb4cfa2-8c0f-423b-ba29-8b208dedccdc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d0519195-87bd-4dba-b3a6-d15caab0efb8"
        },
        "item": {
          "id": "7afd7845-2ef1-452d-b460-5038a2c4379f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "82e4624f-0f4e-45f4-abbf-674a17b41089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cee9c70-c17c-4a89-baed-2ff07b0eaf67",
        "cursor": {
          "ref": "766abac6-68ec-45cd-8a2e-9688d9bef0eb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "01f521a5-9dfa-4f91-867c-e016c903a276"
        },
        "item": {
          "id": "7cee9c70-c17c-4a89-baed-2ff07b0eaf67",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cd3ce503-f87d-4b27-a45d-a3570e749e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9fa2ed-042d-418d-aeeb-eca51e9682f8",
        "cursor": {
          "ref": "22376f49-e59c-4bcc-b738-af6b1ebcc749",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b186ed9a-db24-472a-9be4-a231b9b32666"
        },
        "item": {
          "id": "fb9fa2ed-042d-418d-aeeb-eca51e9682f8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "02c178d2-653f-48b4-b74e-e8438a4b6ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e487ef8-a267-4335-82bf-aef41691bd88",
        "cursor": {
          "ref": "18b25b09-510f-404a-b5e0-85c967a86cff",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b20f361d-6531-4249-85df-718e35dbd335"
        },
        "item": {
          "id": "2e487ef8-a267-4335-82bf-aef41691bd88",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4140635a-8061-4593-91c5-d6ee6d527412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4470a2e-ba2a-40da-b39d-cee1e5dd7f37",
        "cursor": {
          "ref": "f788ba0d-29b6-4a29-9766-cf0c7b8b057a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b8692770-9871-4e38-bc11-49807e1118ea"
        },
        "item": {
          "id": "c4470a2e-ba2a-40da-b39d-cee1e5dd7f37",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a839e67b-df97-4bab-9929-64ed709e6e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c734906-c037-4e18-b6cd-5db1bf9bf049",
        "cursor": {
          "ref": "89ac4504-18ff-45f8-9752-b105f6792d7f",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b727ee33-e1c7-45f9-abb8-cee6c98d4169"
        },
        "item": {
          "id": "5c734906-c037-4e18-b6cd-5db1bf9bf049",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "06ac700d-22b6-49d4-b608-7e1ada9c95c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdc71ba-a0a8-4ee9-b7f3-2111403ef2d8",
        "cursor": {
          "ref": "3cb54255-76bb-40e8-a256-6e0f70250edf",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "81f82af4-ddad-4f7f-b7a7-72672677d533"
        },
        "item": {
          "id": "9cdc71ba-a0a8-4ee9-b7f3-2111403ef2d8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "aef54d75-9b16-4430-8c5a-85354d509dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eea6ca1-d5e8-4510-88a1-3ab747bdd92c",
        "cursor": {
          "ref": "ca1e3620-c422-4c9e-99c8-2878f76413f1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4af4e660-2740-4701-a48f-2b2ef217294b"
        },
        "item": {
          "id": "3eea6ca1-d5e8-4510-88a1-3ab747bdd92c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9042fd57-968b-4b0c-be0a-7da5e56340da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7f151c-90d7-486c-8057-964b00eb265f",
        "cursor": {
          "ref": "0b3ffbf8-309c-4034-94b3-b91dfd4fd419",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "113d28f4-339a-4179-b840-1ece793c6686"
        },
        "item": {
          "id": "7b7f151c-90d7-486c-8057-964b00eb265f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c1601d5d-f5ea-4919-8538-442f9e101638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f157ecad-6ec5-4654-ae36-ff6bca8823de",
        "cursor": {
          "ref": "ff19450f-2712-4b9c-b5d9-5ef0e7abc156",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4d795a1e-f5ae-428a-b4c3-56cf06f70bdc"
        },
        "item": {
          "id": "f157ecad-6ec5-4654-ae36-ff6bca8823de",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b32ee117-3e75-4d1b-88f5-3206a23ec84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd1d4ba-ef3d-4ab0-8d4e-22e1e77d39b3",
        "cursor": {
          "ref": "479fca97-e8aa-4e88-9b9a-497412d6f4ac",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "de73ed4f-a073-4e2d-9e56-9e881bc08f3c"
        },
        "item": {
          "id": "2bd1d4ba-ef3d-4ab0-8d4e-22e1e77d39b3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9dfdfe62-0d32-4b5d-b88e-5935f313621b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf7522c-6562-4a2f-b087-48a3059dec14",
        "cursor": {
          "ref": "cd2853d3-bf6a-4e59-a690-c2f52f10f30f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2afe0bd5-591a-46d3-9f30-3efcb6115093"
        },
        "item": {
          "id": "6cf7522c-6562-4a2f-b087-48a3059dec14",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ddc72bb6-a14d-4a9f-a192-2c4f5df4b926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16670021-d768-483d-b612-17438b268cae",
        "cursor": {
          "ref": "3922b85d-aa96-4e26-8bf1-8a785b4636d4",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a7560d6a-0f31-40f6-aa70-1fdd167f83cb"
        },
        "item": {
          "id": "16670021-d768-483d-b612-17438b268cae",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3620f572-d04c-496a-9c87-8ea10e3dfa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e5e393-ca86-4e7b-b637-027b528f259d",
        "cursor": {
          "ref": "8378c2f9-ae15-49a9-9a92-064bf5efb65a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9c3d4973-00f2-4569-9472-a19f60b98996"
        },
        "item": {
          "id": "93e5e393-ca86-4e7b-b637-027b528f259d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ffe0a062-3c84-431a-84f1-492e33121efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e9f32d-34e9-4b76-b57c-40ee81098a59",
        "cursor": {
          "ref": "66eca76c-3bb7-45a7-99f2-7d8b8dc89524",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ae32da75-adfe-4610-9540-003268db62fd"
        },
        "item": {
          "id": "38e9f32d-34e9-4b76-b57c-40ee81098a59",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4f7df864-d722-4520-af0b-3aad0682d865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d80de81-9d6e-4572-99b2-7edac048895d",
        "cursor": {
          "ref": "8c85f821-d109-476d-8f16-cc893a633ba3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e2772626-c967-452b-8c78-b72dcce1d301"
        },
        "item": {
          "id": "0d80de81-9d6e-4572-99b2-7edac048895d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "704179f6-8226-4fc0-818b-2a81c967091b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c491c7-3d2a-4681-9c26-8e57a11806e8",
        "cursor": {
          "ref": "3ae1bde6-2d3f-44cf-9f54-fd553ca6c51f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d3bfe200-e940-4a88-930a-ab8b8815a1fb"
        },
        "item": {
          "id": "70c491c7-3d2a-4681-9c26-8e57a11806e8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3647fd81-1c7f-4132-8015-d8a60ee06c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eec20fe-edc3-46b1-9600-7fdb56da32b4",
        "cursor": {
          "ref": "e20346f6-a58e-4b0d-a71d-f7a1139ac5bc",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4b3d3b02-98f6-4bc3-9fb8-ea7c8d33cbcf"
        },
        "item": {
          "id": "8eec20fe-edc3-46b1-9600-7fdb56da32b4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8e7d93fa-3819-4852-a47c-84b3c1b0ee3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7333dc7f-5ebe-43bf-bdfb-2e8d99130f87",
        "cursor": {
          "ref": "cfac3024-c167-4587-8564-829eb01d13be",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aee9709c-8025-4452-9a6c-b92a8258f1b1"
        },
        "item": {
          "id": "7333dc7f-5ebe-43bf-bdfb-2e8d99130f87",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "14d1a383-c81c-4381-9054-85180fdc330e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a98bdb-3646-4cad-bb8a-1b2ccc52a66c",
        "cursor": {
          "ref": "1da1e8d0-ceb8-4bc2-83d6-a41577db4490",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b1df2ec3-504b-48b2-9259-37dc34c134ef"
        },
        "item": {
          "id": "d4a98bdb-3646-4cad-bb8a-1b2ccc52a66c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e6ff9075-bf01-4f10-b1d9-ac598c17a6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f334c2-bbc6-4f10-b78b-177068a03594",
        "cursor": {
          "ref": "744e4a99-4589-4ea0-bd58-fc03208acd86",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "28a01ffb-41fc-4774-98da-e8654f2a9949"
        },
        "item": {
          "id": "82f334c2-bbc6-4f10-b78b-177068a03594",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "30b75c6e-24c0-4624-b513-72c98382a281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c736712d-fca3-4248-bbd5-5abf822fa004",
        "cursor": {
          "ref": "a5e747c7-b160-42cd-9777-6f9f255cb6c3",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0bfeede1-8b8e-48cd-87bb-4384f1e83f7f"
        },
        "item": {
          "id": "c736712d-fca3-4248-bbd5-5abf822fa004",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2bd347bb-d6b6-434e-ba66-346ed965eca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a1ec05-85c4-4780-bc97-80adaadd8295",
        "cursor": {
          "ref": "bf4a08b1-becf-4af2-b041-6cbe44cb65e7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a0f63fe4-eff1-4359-a032-b4a30eb4370f"
        },
        "item": {
          "id": "b1a1ec05-85c4-4780-bc97-80adaadd8295",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0c485f12-51d9-4b7a-8fa6-8ce0743dd667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d939d36-519a-46ae-9371-c570b1d72019",
        "cursor": {
          "ref": "d97a90dc-9b05-4331-8c0a-2c4de6e40c43",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "38a0d3b5-0df2-421c-bc9f-9d8e4d93d07c"
        },
        "item": {
          "id": "0d939d36-519a-46ae-9371-c570b1d72019",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a22a8f56-36cf-4659-80b8-cd7714734799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ceeb18e-52b3-464f-89a4-62ead3df7799",
        "cursor": {
          "ref": "a61015e9-290f-43ab-bb98-8e101d555fc7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ce812b45-f9c5-4af0-a33b-ce4d13900f00"
        },
        "item": {
          "id": "6ceeb18e-52b3-464f-89a4-62ead3df7799",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3473d9c6-0e61-46fd-aebe-4ab9f2cff322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1012072-1a9e-4f1f-9fc7-3bc095580dd6",
        "cursor": {
          "ref": "fe84bdbe-fb3f-4b93-914c-f7c85e50066d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3cc2334e-1567-4c93-b13a-afda42c39f5b"
        },
        "item": {
          "id": "d1012072-1a9e-4f1f-9fc7-3bc095580dd6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "516c54cb-3e33-4fbe-93b3-d1d4035970af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f968161-9639-4a03-842a-a40076016971",
        "cursor": {
          "ref": "605f174a-1b10-47c8-ba1e-2d51eb8bab0b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "96fa70d5-5a42-4642-96db-58fab4afa9c3"
        },
        "item": {
          "id": "7f968161-9639-4a03-842a-a40076016971",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a95b42cb-b65e-4750-98e4-923d49fb629e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e63fbe6-7f96-4ae5-836c-5e0c85d3662e",
        "cursor": {
          "ref": "ad759201-756c-4d05-9983-51c79a928bea",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d66ada27-bba6-4bb5-a861-552692961618"
        },
        "item": {
          "id": "8e63fbe6-7f96-4ae5-836c-5e0c85d3662e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2ca69569-c7e2-4028-9998-8260f9038ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b311d712-fab7-4f91-9552-d9f9658919b9",
        "cursor": {
          "ref": "720beef5-7693-4d96-8136-35eb1de144c2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1a769c7f-ea84-4fec-acc4-d5e4873dd47c"
        },
        "item": {
          "id": "b311d712-fab7-4f91-9552-d9f9658919b9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c6ca812b-c8e7-4588-a925-7dc9b9be209b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e55c96-6c1d-4329-8412-458ab2d3b6d2",
        "cursor": {
          "ref": "bb15d522-c421-4d3d-83d2-e48787ecb76f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3c1cd1c0-9b82-44b7-912b-ea72b09c4793"
        },
        "item": {
          "id": "08e55c96-6c1d-4329-8412-458ab2d3b6d2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "55b6d289-6532-436f-b875-068f4d42f1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6093cfd4-ee8e-4a46-9308-93de7fdb64c0",
        "cursor": {
          "ref": "16dfc718-e003-4f81-9d57-8e2ba3389a3c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "95489139-3002-46f3-ad9b-ce16145cd3ea"
        },
        "item": {
          "id": "6093cfd4-ee8e-4a46-9308-93de7fdb64c0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e0c1f17d-ba7f-4dc2-b361-c573362c1698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9f98b2-53c4-4c14-9d81-307ce5d3fe0c",
        "cursor": {
          "ref": "0ff718d8-da13-43bc-8d36-ab7eb605aa2f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7877eb86-55c9-4f5f-b6b5-87d19d9b77f7"
        },
        "item": {
          "id": "2f9f98b2-53c4-4c14-9d81-307ce5d3fe0c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "40b117a5-564e-48e8-8188-92b1e9555e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589daea0-f0c6-4df8-bce3-a6db7190f3ff",
        "cursor": {
          "ref": "5fd74f42-80c7-41f8-ad91-0bd3160b8a4b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e97afd96-78be-42b9-a3e6-c5d1faa993a1"
        },
        "item": {
          "id": "589daea0-f0c6-4df8-bce3-a6db7190f3ff",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "19a54c9a-572c-4540-b721-eb91acaf5407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d404a90e-4cbf-4221-a91e-9c53895fc26b",
        "cursor": {
          "ref": "0773eaf6-5566-4b62-81b3-9ba039521127",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "026b0e8b-75cf-47fd-9f8d-097114d6c6aa"
        },
        "item": {
          "id": "d404a90e-4cbf-4221-a91e-9c53895fc26b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a7ea46de-984b-42d1-a00b-f0b418d19ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab88517-34bc-442c-9980-57bb4455bc26",
        "cursor": {
          "ref": "21c800e7-dc09-49a5-bf35-baaad3626350",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aef1d52b-5783-4374-9592-9ac8b49530aa"
        },
        "item": {
          "id": "0ab88517-34bc-442c-9980-57bb4455bc26",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b76ea63f-d773-4a17-be18-98997412270e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb63b88-7814-4ba1-b54a-4b3acf9b6936",
        "cursor": {
          "ref": "8a8b2465-2d2d-47c0-b850-57faab5803cd",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "92d6c8bd-331c-4c7b-b719-6c3ad87d89ef"
        },
        "item": {
          "id": "2eb63b88-7814-4ba1-b54a-4b3acf9b6936",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2314047a-1a27-4114-a4b1-bbf0a53fdbf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7604cc7-59c5-43e3-b608-230fa32eafd3",
        "cursor": {
          "ref": "d6987838-4bba-4c5d-9cb0-c6ccfc50b71a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "106eb5b0-c95d-45c5-8de8-696f744a7219"
        },
        "item": {
          "id": "b7604cc7-59c5-43e3-b608-230fa32eafd3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "13702654-35fc-4e60-9ace-cfa167d77cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33ad0e7-cf32-469e-81d4-97d426e1fe9c",
        "cursor": {
          "ref": "d2107f4a-9425-4e61-a1ca-eb0feee32a3b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "876648f8-25d1-4e14-b10c-62a27ab2ad43"
        },
        "item": {
          "id": "f33ad0e7-cf32-469e-81d4-97d426e1fe9c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ed92e931-179b-4eaf-b892-d710b648e086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a41a25-a9f4-48e7-9303-261f0f004e45",
        "cursor": {
          "ref": "e4af949a-6647-4b75-813e-286ee4c869b6",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "83e1326a-2001-4fc5-8d23-668178c56fb8"
        },
        "item": {
          "id": "59a41a25-a9f4-48e7-9303-261f0f004e45",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5cbdba9b-eeba-41e7-a102-2ac7bda62624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5111e4bd-2cc7-4eda-a1e5-1525bc0a05d0",
        "cursor": {
          "ref": "cf967a3c-b673-48aa-ab6b-fc59671b6f25",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e99ef826-a714-4c15-88e2-fbc73b30f2c2"
        },
        "item": {
          "id": "5111e4bd-2cc7-4eda-a1e5-1525bc0a05d0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "510e2a9a-ba6c-42bb-aeee-6792c23573c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a7775b-ec90-45da-8a63-bb9317443bde",
        "cursor": {
          "ref": "a2af0648-4990-4a56-a32c-63346ddd28e5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "30c1aaec-e691-4bf3-ab37-11c0906cd0c4"
        },
        "item": {
          "id": "43a7775b-ec90-45da-8a63-bb9317443bde",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a42f82da-45e6-4b9e-8d63-1c3310c71e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbff113-e991-4b61-a242-8023151fee78",
        "cursor": {
          "ref": "35efc57d-6425-4fdb-acf4-4af2ac56bcd0",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "87abb04d-5414-4434-bdf9-37d2bfe09c17"
        },
        "item": {
          "id": "9bbff113-e991-4b61-a242-8023151fee78",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4290c0f4-c706-4859-80a8-826205035b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03302ded-be24-4968-9004-944987cb6684",
        "cursor": {
          "ref": "2b8771b8-40d0-4600-ae3c-b0778caa7e00",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2d30b4a0-589e-4a80-8c27-b1d2e82181da"
        },
        "item": {
          "id": "03302ded-be24-4968-9004-944987cb6684",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ac9ce4f1-593d-4419-b18b-6b733836002a",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "381d560b-33c3-4d94-989b-9cbaae0498ad",
        "cursor": {
          "ref": "e2896f32-35c9-48df-8d64-3b2cca36e5c3",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c866aba4-0036-4c49-8d40-585109c2af7f"
        },
        "item": {
          "id": "381d560b-33c3-4d94-989b-9cbaae0498ad",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "25f2dbb4-3cff-45cf-be37-378e9d9aca74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c416b1-9b42-4fb1-bbba-73212fa71337",
        "cursor": {
          "ref": "377032c0-d8b7-4dad-bc7c-d5ed5fcd8de6",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5862230a-d953-4bfd-8340-d3bf4b9b9a18"
        },
        "item": {
          "id": "d7c416b1-9b42-4fb1-bbba-73212fa71337",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "646c1299-9d60-42db-96cd-3c65016d1cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b246b20e-f5ec-4be5-b7ee-85f67d2b90ce",
        "cursor": {
          "ref": "0a558efc-63bf-4509-9a39-1f4be29c3c13",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7afeb98e-ef4e-4689-b3cf-ba0d766569ff"
        },
        "item": {
          "id": "b246b20e-f5ec-4be5-b7ee-85f67d2b90ce",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b6a5a8c0-d2e7-4312-b8de-45c6152eca1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bbe3f8-1998-451d-b709-0aaa9e6a6cc4",
        "cursor": {
          "ref": "0a568f45-6d1c-490e-b065-adb74b8fc63d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7712eefe-8f3d-4a23-ba6f-c0102ff5c2b2"
        },
        "item": {
          "id": "04bbe3f8-1998-451d-b709-0aaa9e6a6cc4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5930f6e6-6fe8-40cd-93b8-703b5aa615ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414466cc-74d3-4019-b545-2b62cf7202fd",
        "cursor": {
          "ref": "a775ab95-49a5-47b3-9653-0fa944e3be11",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4676005d-3b04-4b83-8bb2-29d04b2047a7"
        },
        "item": {
          "id": "414466cc-74d3-4019-b545-2b62cf7202fd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "97c83ee2-01ea-442a-b388-1bb02175e3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2e5596-81a7-4219-883d-83e4d15922a8",
        "cursor": {
          "ref": "8e34ef74-a2fe-4704-b784-e925bf70b4c9",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "eaff48bb-90cf-4861-af95-efff4ef28d1c"
        },
        "item": {
          "id": "df2e5596-81a7-4219-883d-83e4d15922a8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "33969664-133c-458d-9a73-8dbc4bd81605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a7f0fd-b36b-46d6-aafd-b198bce43f67",
        "cursor": {
          "ref": "0df01a59-e291-404b-ba4f-51f8fc85fea7",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "bc33a3cb-bede-490a-a702-a68444a02b96"
        },
        "item": {
          "id": "e6a7f0fd-b36b-46d6-aafd-b198bce43f67",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "41671270-cb10-4619-a591-8a8f0e4e90d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e924db-cc5a-4de1-996d-29605ae21877",
        "cursor": {
          "ref": "42c6455a-acbd-4505-acd4-d892284f48d6",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a1b7bbae-9a2b-49f2-8ea8-add33d6c755a"
        },
        "item": {
          "id": "94e924db-cc5a-4de1-996d-29605ae21877",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fcca6aae-26a0-4e24-a75c-89e0312a650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c075c63b-ff60-46b6-93d8-fe9c5b3feacb",
        "cursor": {
          "ref": "492e60ec-3aea-4433-b2b4-c74ddce97660",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "172d6554-aaad-43d0-88b8-8622e0e9b9bc"
        },
        "item": {
          "id": "c075c63b-ff60-46b6-93d8-fe9c5b3feacb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ae1bd6d6-2d6c-4c8f-809d-5d83cfe3f8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489bd974-f0db-4a54-a5d2-d4171c48eac0",
        "cursor": {
          "ref": "7daf9f3d-fe88-4140-98a8-436db92be87c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c915d9a7-ca43-496a-b828-1decf996da91"
        },
        "item": {
          "id": "489bd974-f0db-4a54-a5d2-d4171c48eac0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8b53e875-8c6d-498d-a2f6-b369f4edf702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98cd0e13-b6e3-4a9a-8102-30e27ad950a2",
        "cursor": {
          "ref": "eb81dce4-8d12-46dc-a194-cff0f76d3145",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "22478c76-bf22-41f8-9e14-1c3b5edf3808"
        },
        "item": {
          "id": "98cd0e13-b6e3-4a9a-8102-30e27ad950a2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "39305987-3765-4adc-b43c-e0335a17ab93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701b445e-cf26-4460-a6af-106265e467ff",
        "cursor": {
          "ref": "56c92caf-b200-410c-9fb8-6d96685c6abe",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "18046bec-6e8b-4f2e-93ed-dab814291e7f"
        },
        "item": {
          "id": "701b445e-cf26-4460-a6af-106265e467ff",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f6669982-1951-414a-bff6-c787d8e40098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bec5232-d96d-4659-a0a7-003bfd121aed",
        "cursor": {
          "ref": "badfcbc1-eacc-46a0-8954-0ae3a0f16e45",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a836c9fa-06ab-441d-a101-13e8ba913116"
        },
        "item": {
          "id": "2bec5232-d96d-4659-a0a7-003bfd121aed",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2313a3fd-0fed-47a6-8c18-ee0ea080d3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3153a8-5a39-416d-93af-6c78a9adfed9",
        "cursor": {
          "ref": "ae8ee059-44e5-4048-bd97-acef7618c8c0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "defdf8d1-2a8a-4981-b174-a5b235e8b020"
        },
        "item": {
          "id": "ee3153a8-5a39-416d-93af-6c78a9adfed9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0cb2d2c9-162e-45b4-b397-c4310b7a0db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e49e851-9ca6-42e3-a0a1-1b7a52110640",
        "cursor": {
          "ref": "decb38a6-8bd4-4244-bd97-1dbf73cdddce",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "90cd5600-08f2-42da-8f16-39c864d9a09c"
        },
        "item": {
          "id": "0e49e851-9ca6-42e3-a0a1-1b7a52110640",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4829abe2-6098-424c-b26e-cdefa1c79221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a54120a-7161-4c8a-8868-f8c25a33f722",
        "cursor": {
          "ref": "7d8185e5-8b6c-456f-986b-ffd250ef1c86",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3de91f2c-8a04-4978-a7a6-7cfaf5ca97da"
        },
        "item": {
          "id": "4a54120a-7161-4c8a-8868-f8c25a33f722",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "090f243d-f821-47f1-85e4-815e2c687f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acb2c40-9539-4bf1-be85-1faf9147573c",
        "cursor": {
          "ref": "788a6166-a932-493a-ba6e-ff0c86eddbb0",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "74c9ecf6-8c74-4b4b-a2e0-5c74378d8f12"
        },
        "item": {
          "id": "5acb2c40-9539-4bf1-be85-1faf9147573c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9ed54edc-84a3-4ec7-b121-9f893e590fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002d5389-5fb7-485b-a99c-c94c409c8589",
        "cursor": {
          "ref": "d46e3ec8-ebe9-4f45-ac03-70c04eaae0c1",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9d4ee3df-8001-4707-8dd3-c25f69af3859"
        },
        "item": {
          "id": "002d5389-5fb7-485b-a99c-c94c409c8589",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2d5a8d6c-4047-4841-a952-7561fd561713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee7ef0a-e51d-4b3a-981b-25efb610ad7c",
        "cursor": {
          "ref": "b082f6d6-b20f-47fa-b7fb-c362ff99f259",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1ce12b9c-ac1c-4585-845d-6d7a6aaa676c"
        },
        "item": {
          "id": "4ee7ef0a-e51d-4b3a-981b-25efb610ad7c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4ee32a22-1fc9-4a23-a678-5c8501569677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e49e129-237e-4132-94b3-d1116a69dd77",
        "cursor": {
          "ref": "cfb5772f-1c10-4fdb-baa6-7ba5fdf7e00b",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e0c1a4fd-3547-4889-9154-7975dbeae572"
        },
        "item": {
          "id": "3e49e129-237e-4132-94b3-d1116a69dd77",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d42760c6-d21b-4b6f-9542-786c276305bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f96352-9b22-4827-9f54-5cd6a0e96025",
        "cursor": {
          "ref": "6c3a90a0-262d-468c-9523-d006502f6e43",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b47b783c-eb35-4f82-944f-094a2c792c71"
        },
        "item": {
          "id": "34f96352-9b22-4827-9f54-5cd6a0e96025",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "34e83404-b461-4b4a-8c81-a0017998063f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee52c039-c8d9-40ce-af88-1787db9e4e56",
        "cursor": {
          "ref": "f15ba6f4-d138-463d-8858-cd9ee7fb212a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4a918fb6-0260-4d99-b1c1-0b2cccea4e18"
        },
        "item": {
          "id": "ee52c039-c8d9-40ce-af88-1787db9e4e56",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ca4a565d-5e0c-4990-910d-f57404715c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d77a994-e730-4fbf-ae4b-86b72a440421",
        "cursor": {
          "ref": "25c9f3fe-d317-4849-be22-f8bd7e152199",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c7c37862-7448-4f3a-9753-3537343b64f0"
        },
        "item": {
          "id": "3d77a994-e730-4fbf-ae4b-86b72a440421",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "45226531-5c76-40c6-a432-a7f0d98d5fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cb4fb6-9fba-48a0-9f4f-3f98aa4391b9",
        "cursor": {
          "ref": "685bed0c-a269-4fc1-b23d-9fdaa2e3a913",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "48c3bd42-8136-45ee-9eb8-38a82341baa0"
        },
        "item": {
          "id": "92cb4fb6-9fba-48a0-9f4f-3f98aa4391b9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1d73163a-b3c6-41bf-a852-c759cc1838ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2962e1-e24b-4e41-894e-ded82dffb9b0",
        "cursor": {
          "ref": "7cc3149f-10fa-42eb-ba6e-e23b553ab296",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "44715cc8-8f74-467c-80c3-66acfd9c7e3f"
        },
        "item": {
          "id": "2b2962e1-e24b-4e41-894e-ded82dffb9b0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "23c3780f-228a-471c-a003-0cbdadecba67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098069ad-8ce4-4456-93f0-646d2ac86b5f",
        "cursor": {
          "ref": "20ad8a9d-5a38-423e-9a93-025ddd57651c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a54556c1-24f3-43a2-b612-15a2ff78415a"
        },
        "item": {
          "id": "098069ad-8ce4-4456-93f0-646d2ac86b5f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7f9e58ac-9649-4590-9b92-2acd62315812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dfd16d-314f-49c5-9fd7-b327e5a08deb",
        "cursor": {
          "ref": "994069b6-850a-43a7-8ee6-0d966e170868",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2773c48f-e946-4c3f-bf0e-41c58ad0f08b"
        },
        "item": {
          "id": "c7dfd16d-314f-49c5-9fd7-b327e5a08deb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2e709b48-ea3e-4dc7-bfdf-29d3e0b8efb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9b42ba-5daa-49fb-baf3-c2a9318e67b2",
        "cursor": {
          "ref": "f9448091-327b-4882-bed0-0bb2ad68754a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6cc7a84e-02c3-42a2-94a7-c93cda09de65"
        },
        "item": {
          "id": "aa9b42ba-5daa-49fb-baf3-c2a9318e67b2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3db395b1-c318-4760-ad76-92bc74c36dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bc34b8-546c-4ed9-a4e4-4e83ec3b7c8e",
        "cursor": {
          "ref": "3d25c500-3496-4b28-9b70-d61f7870954d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e5b7d2c9-26ab-4c81-8c1c-708509ccfbdb"
        },
        "item": {
          "id": "42bc34b8-546c-4ed9-a4e4-4e83ec3b7c8e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0ad2c01e-199a-464a-954c-366d6343bc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc884b5-d52d-4864-bcf9-886f636a5502",
        "cursor": {
          "ref": "b4856038-5527-448a-a106-ddc6c32e2246",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d0eb7425-4001-457c-bd3d-06af9ca1c23a"
        },
        "item": {
          "id": "4cc884b5-d52d-4864-bcf9-886f636a5502",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f9d47e73-d9fc-4167-b8da-241e7b879428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863ec80f-931a-4fb1-9acd-0ab96f9d0c76",
        "cursor": {
          "ref": "1408d981-3baa-4206-9d0a-78b390aab494",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "88411e6b-6e98-4dc1-bd7b-153b7cd39c6f"
        },
        "item": {
          "id": "863ec80f-931a-4fb1-9acd-0ab96f9d0c76",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "90647715-6da2-4e86-bfbd-f5df51cfa8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae371d0-b92f-4d7d-a493-311a8db3d545",
        "cursor": {
          "ref": "d5765004-a1a5-45db-919d-cf1b3e29cc30",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f64171d7-507a-414d-817d-f79911a10ee4"
        },
        "item": {
          "id": "2ae371d0-b92f-4d7d-a493-311a8db3d545",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3e26deac-4061-4fef-a81e-88b8ea6ecd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34aff116-9515-4a32-aec4-54900f734da5",
        "cursor": {
          "ref": "9ba4298c-f774-42aa-b777-89e988830767",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e51d4e2a-e71c-4e41-b3e5-c0db6e302ebd"
        },
        "item": {
          "id": "34aff116-9515-4a32-aec4-54900f734da5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6fc42d0f-c28f-4ef7-a6da-7d6e38908e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30705237-df1a-492c-83f5-c00cb1746336",
        "cursor": {
          "ref": "dac80bf4-d2b7-415b-8118-b3585424e22d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "241aff13-5516-48f5-a8a2-763018fd3efd"
        },
        "item": {
          "id": "30705237-df1a-492c-83f5-c00cb1746336",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "01bc7d7c-29a7-4bc0-b537-e9ca1a4f1a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaff806a-d2b0-41a3-b4f5-d6bccdbfca9a",
        "cursor": {
          "ref": "56f9543e-4ca6-4e1e-9787-affdaaec78d3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6e85e403-e990-4192-b630-85e94ec22b0b"
        },
        "item": {
          "id": "aaff806a-d2b0-41a3-b4f5-d6bccdbfca9a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "59b009aa-5613-412b-aa1e-8fc0fc63be8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17d85a8-fea2-471d-a4f8-63f2eb9fa5ae",
        "cursor": {
          "ref": "ed5849c8-ac96-4bae-b623-a60b45452c1f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e9b22411-7b7a-4aef-bbae-18a8a22b39e7"
        },
        "item": {
          "id": "c17d85a8-fea2-471d-a4f8-63f2eb9fa5ae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "273d1650-65b4-4513-b252-4f91d5d61772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cfbcb7-a1f8-4ef9-ae3d-2b55ad55f00d",
        "cursor": {
          "ref": "50a3927f-2a65-4f05-87e3-0f02709da119",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "216f5e37-7908-43b4-857d-2b2bfc311338"
        },
        "item": {
          "id": "05cfbcb7-a1f8-4ef9-ae3d-2b55ad55f00d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d6753144-fbab-410d-8e63-571eb97cdc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd19ca24-9458-4cce-8e0d-4e45e4f1086b",
        "cursor": {
          "ref": "c2888c4b-907f-4792-b03d-9276463e388c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "92ef0c34-a75c-474c-8304-bfef79902a16"
        },
        "item": {
          "id": "bd19ca24-9458-4cce-8e0d-4e45e4f1086b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7136b2ab-9a2e-4fad-adb6-92b54a588a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148306d2-eb78-4d71-b585-996497b6e60d",
        "cursor": {
          "ref": "e4fc9884-3140-46ba-937d-e0b7a7e1d7e1",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e2840034-2e6b-49f3-bb59-6b59ceb80e44"
        },
        "item": {
          "id": "148306d2-eb78-4d71-b585-996497b6e60d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "43ef8f85-00bb-4eb8-b545-e9529175a678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ce9598-de19-4a8d-9ebe-c76e54f56a66",
        "cursor": {
          "ref": "71fd460a-3326-4e8e-b4db-1ff19263b36f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c6d54d0c-9250-40f9-9b0b-002db9c2e76f"
        },
        "item": {
          "id": "f1ce9598-de19-4a8d-9ebe-c76e54f56a66",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "44705264-4aea-4421-b1bc-357051809616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eff8df9-9963-4989-a1df-7c84fb047c3f",
        "cursor": {
          "ref": "5d93ab1a-f64f-40b0-9ed5-bd60a83d9786",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "0bfb1685-5a8c-40da-b8db-d15835131592"
        },
        "item": {
          "id": "5eff8df9-9963-4989-a1df-7c84fb047c3f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7a60f13b-690a-4249-bebb-3da99ef0c54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89bf878d-a794-44f0-a907-8922f37c5ad8",
        "cursor": {
          "ref": "b2dd30d0-879f-45cd-a7b7-f9b0001d18d9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e0671c5f-29dc-49ed-bd63-7d7140da7043"
        },
        "item": {
          "id": "89bf878d-a794-44f0-a907-8922f37c5ad8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f168d132-f654-444b-8d63-ac8717289fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae4b154-f4e3-40e6-a851-461202e9473a",
        "cursor": {
          "ref": "4e070402-2a5f-4719-945e-32461568e32c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7c57f87d-9326-4fa5-90ac-5ff2d2d4c370"
        },
        "item": {
          "id": "5ae4b154-f4e3-40e6-a851-461202e9473a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "11577a29-f31b-4078-b0b9-2a510cdbe43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9052bf2-f99a-4e66-a038-fc411c46045d",
        "cursor": {
          "ref": "840a6286-9abd-467a-afe4-17ab74f67f22",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3d90c784-a74b-4383-8d6f-39b5b892ec29"
        },
        "item": {
          "id": "f9052bf2-f99a-4e66-a038-fc411c46045d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dd301c84-8e51-48dc-b7d4-50a5b0a511db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb7cc84-0501-4374-b1ee-8cc129bdae04",
        "cursor": {
          "ref": "2ba6fa36-5bfb-4706-9228-de2157e99130",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8860f6a1-5753-4691-885e-41e1fb2e7010"
        },
        "item": {
          "id": "eeb7cc84-0501-4374-b1ee-8cc129bdae04",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "58b6e37a-c050-4fed-8906-51966cb9b60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c5af4b-55be-4449-bd97-a81194858aa3",
        "cursor": {
          "ref": "e55715cb-005a-44ed-a65f-2e404cee39bb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6a3cb04b-5343-4a8b-a924-ca52cb9a21f7"
        },
        "item": {
          "id": "24c5af4b-55be-4449-bd97-a81194858aa3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b56b04ce-e106-404f-990f-e266304359ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9b9979-5394-4643-8fc2-e8a6607362e0",
        "cursor": {
          "ref": "49d57e09-755e-48cb-ada6-6f2d91252f5f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "69b35652-4fcd-4e1a-a437-843b4a5877ce"
        },
        "item": {
          "id": "4c9b9979-5394-4643-8fc2-e8a6607362e0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e6ebebd9-8988-4d87-bde2-4e3529df0638",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de772b54-be40-4f60-80ee-ab37231ce536",
        "cursor": {
          "ref": "712fbf52-e68f-41cf-8cff-baba20d45eb2",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "88407da4-37c0-4a7c-b9ca-819c36f9b5c8"
        },
        "item": {
          "id": "de772b54-be40-4f60-80ee-ab37231ce536",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "54f9f7e0-6614-47b5-816e-590c488aed45",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "58828756-5168-4940-8d5d-04377d7a3c6f",
        "cursor": {
          "ref": "caa04f0e-dab0-47c1-9656-b85253fda14d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "97eb2d91-4ce5-495e-98f9-b15f863818fc"
        },
        "item": {
          "id": "58828756-5168-4940-8d5d-04377d7a3c6f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "55e7db9a-a593-43fd-b1ba-4ad5e657852c",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ba0a76-10a5-454c-b1e9-c5b0a417996b",
        "cursor": {
          "ref": "49ce390b-bd52-4513-9ed4-3375af90c6d0",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1ec06d34-a63d-4467-a950-50b24fe89f2b"
        },
        "item": {
          "id": "25ba0a76-10a5-454c-b1e9-c5b0a417996b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "26b58193-411e-4e9e-bd85-7cb03fa1154d",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e6f4ee-f3c9-4116-9e86-180a3512574e",
        "cursor": {
          "ref": "7d61873b-29f4-466a-95b4-0093457d7f45",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d2cd1b03-5da3-4a52-940e-2b825f4d965f"
        },
        "item": {
          "id": "e9e6f4ee-f3c9-4116-9e86-180a3512574e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50627c8b-28de-460b-af1c-bd6318dfc695",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e6f4ee-f3c9-4116-9e86-180a3512574e",
        "cursor": {
          "ref": "7d61873b-29f4-466a-95b4-0093457d7f45",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d2cd1b03-5da3-4a52-940e-2b825f4d965f"
        },
        "item": {
          "id": "e9e6f4ee-f3c9-4116-9e86-180a3512574e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "50627c8b-28de-460b-af1c-bd6318dfc695",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb76382-84a4-431c-90d4-1fd43c38239b",
        "cursor": {
          "ref": "8e7d3ec5-808d-44c0-846c-e91af52c9ccb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "48079af9-17c5-4027-88cd-f63c09be71a4"
        },
        "item": {
          "id": "cfb76382-84a4-431c-90d4-1fd43c38239b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "83e84617-6641-4933-81ca-31a687b40ebc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4ab723-b4c7-4414-bc08-8995679743a1",
        "cursor": {
          "ref": "ed877fbd-68ce-4176-aae9-1437ec3a69b0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3b65c2d4-a7af-4d29-885c-b1e4a178d199"
        },
        "item": {
          "id": "0c4ab723-b4c7-4414-bc08-8995679743a1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fcb1e7a5-ea79-4694-9dd2-8db3c28225f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}