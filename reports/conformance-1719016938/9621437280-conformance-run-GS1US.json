{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8daecd43-8ce7-42fe-b5f8-e032c13d06ee",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f14f7ef0-19f3-48f4-877c-a2018d4c8d2f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb95a9f3-ce8b-4223-addc-79fbd8dddbcb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e17187c2-70d8-4415-ad10-0ff7ccdcc2cd"
                }
              }
            ]
          },
          {
            "id": "04120ef8-0501-4855-b9e3-be5203fd8ed8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6be947cd-5b29-4c57-8b78-8fe747eab9d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ea9c6b6a-c43e-4842-b079-68fe6c551a18"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fd548112-1670-46f0-9097-0772a86033e8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "896d4f8d-58dc-4a36-b160-2fb3f09b8212",
            "name": "Positive Testing",
            "item": [
              {
                "id": "656c4938-9b1a-48c3-b7eb-0ca96660be35",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a39882f1-86d9-464c-8ad6-d53e12287d64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53574c4e-e00d-4c9d-9837-35f9d4e2b9c4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ab55f74-5ddc-4ef7-99e4-4cc60bff6074",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54eadbbb-3f08-4d4f-8275-9955648fb8a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37ea29ed-a3d6-4fb1-a5df-f3826dfbab90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3b79ba4-2571-4627-b7e8-7103e7681f69"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "264eedb1-5560-4ec9-94e7-92cba881d6b3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "79bc3f41-0c71-4b93-8f92-bab810c9038f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39d329d3-2706-4e2e-84c0-5e73f4a354ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a8e7678-bf15-41d0-b011-4da2a09deff7"
            }
          }
        ]
      },
      {
        "id": "29aea9a1-8d0d-439b-9e4d-cc147d31bd06",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "112fa329-c92d-4a55-9e0e-90d6d2acbd03",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a7c2bf6-7415-401a-85b0-c6ae36f01c81",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d624fa01-6b04-4bc3-a20c-5bc42692a2e5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96eaf52-35c2-4a37-953a-17a74655aa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "747d0161-1988-4545-a884-397bd6a72755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412ef015-e4b6-4cc7-923b-2c0606e402d6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cc0341-5b22-4161-ba84-574d141346f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34e1183a-21ee-4598-8298-069562b6204b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa625899-4fa1-4a72-8d95-8bcde2ec87e7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279020d5-e32f-47b0-95cc-0faf78d066d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da4d9afb-c204-4681-964b-28d87e7d60ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "faa69d63-9ebe-47a7-a801-4c7ab63bbcb2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04b340cd-685f-4c29-b14f-af1c3fed2591",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f93d790-c3a1-46b8-9017-4a21d991ff2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cad1023c-9480-4720-8c7d-c570ff857f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b110ce-2aa3-4cc0-8f5f-80f4c83ab144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068ded5a-2c38-4429-ad46-acf0e17bafd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5e907f4f-2636-4bc2-9709-3850f396476f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "edb7dce7-c6f3-4faa-9374-15722577b2e4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68efc770-f1eb-4906-9f53-6295172d1d18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "de4c09a7-a495-489e-8fa5-4af4f48f6efa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d572e6ee-37f2-4df9-b298-9549d7a4e2b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f5fe12b7-8d29-41de-901e-f31c17caf41a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8d9b720-82ca-4a15-a7c0-428df07f59a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f157dfc-2220-4317-a43b-5af80362d203"
            }
          }
        ]
      },
      {
        "id": "8b96a7e7-0699-4a4e-bf44-c72887ac824c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4c6d9a70-33fb-4cde-a116-84bcb833d24c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55f5b0ee-2453-4470-ba69-6163ec240bfd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "abad0de0-9265-4d65-8a45-b9cd841c869a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d01e41-bfee-42af-aa5e-18aedaf00f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58c1fa0-d1a6-4758-99f2-e7ca4e3d5b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98060dcb-01fd-4f8c-a816-a9da66c9b56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8babad5c-fbe6-4e82-815d-b53928d75e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b70388-4a16-4608-a49e-efb2adde96f4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f3ec65-5290-49b9-b778-c983e7259d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90974dd-af5b-4df4-bd9c-bedafb6c8b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb274da-5d54-47c7-a289-c726e4268e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79804cc5-ec38-4e83-8075-97bff4af8694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d347ec-87a8-487d-9763-1726149e3443",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2f4cbd-558c-4cff-b82d-2618149be528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa24c9e7-ec63-4928-9147-7fab850e567f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466a3bf4-7a51-4272-8374-791ee198e0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86fb4552-23e6-4e78-849d-1ed9df3c5d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64db7677-8624-4dbb-95bc-49420206a37b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a93b49-3760-46be-8467-486a399f9803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e72e8f4-1477-412e-8d66-1888a3fbbe28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3550ae8d-94be-47e2-a2b9-325870d68e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e8e88b1-0c93-4799-9e51-f7983ea244c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0660c07d-7528-4a90-aa02-ec3eae92b24e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73da2223-d258-42aa-9888-d716c603b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521952ed-58b8-4522-ba07-1e8cce26ed2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae672fec-b3ea-49f2-9cd8-91732c34c250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e54081c-9117-476c-ac70-d3ad213d11b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e27d8e1-a239-4856-a3df-07117c76e957",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a65be3e-9573-4a4d-8674-871780e7110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2962320c-b3a5-4ead-b520-7ad7789a60b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d00420d-b31c-48c7-aaba-deea142f94b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f860fdda-61df-42ba-b215-4a030159b7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb45f6e-619f-4138-82e8-47e1eb8dc951",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a6708-907a-4d0e-81e2-b939c733c0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183508ce-7f8a-4e48-a0b3-df3ff2430add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683cb79c-efba-423f-8801-9c2564412915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16029160-ea88-4ae1-83d2-b2b48b2a0855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae2253d-129e-4fcf-82f0-5164a8cee77b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649223b8-b8e7-4c25-b088-dd607ee0769f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5838fbd-4f81-490b-b0f3-25f03efe7f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964d9e2d-2c87-4d0f-a5a0-4a62283a7ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "929e52e2-88b6-4997-8f3d-7849593c0a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea3994eb-c3b9-4a83-8e9d-2cc428db08a5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e41418-25a0-4f0b-afa5-53946c56682e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a860c907-5716-4200-bac5-15be541f747c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4d2ca9-5c72-4ff2-8208-f3608cbf6f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5cbebf0-509e-439f-b40e-cb92fd97c1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a48fdd5-aef3-49b2-a468-599670352b25",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9ce366-daca-47a9-8f5b-dc0963ee1fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d6ef54-9605-41bd-bf98-bed48dbe455a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cb7381-1394-4132-aae8-f219c585787d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffe404e3-a35b-45ac-94eb-470dffcb9021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b522e80-2ff1-4789-aef5-a5a0c013b763",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c45b71-928a-476c-959d-921375af335f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865a643c-5f1c-4bd7-9d03-01af798efa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707c3d0e-1d2c-420f-95cc-5c23ce98ae6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54e8bfa8-c626-4e8f-8738-f8db14d93889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35968d1a-4aa4-479a-a051-338999324b5e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388c9b33-aca4-44a5-ab07-dfafe266c10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d96aa3-7765-4c50-9f45-5fd548ea22d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b026baa-bcf0-4dff-94dd-d234e8a27daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a53e6cb7-17ef-400c-8a17-7144b221b19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aea4e69-a890-4b0e-b181-2067428fb773",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f0e42a-10b0-46fe-b330-930f137568ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83836b2-4f3b-49fe-98e6-1c6901ef49a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c609314f-fb5c-4261-aad5-8fe93fe949d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "162ab33f-287c-4b61-9173-c2c0e58d3bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945f20e1-5550-461f-b8ba-722656b2ff00",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5603fb2c-ed98-4fb8-bf7f-0668bbdb7232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d9e889-a4b2-4d0d-b653-812b4257b927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9a49cf-4aa2-4e7a-bd98-e79f5049ea50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92f43b6e-6d29-45c6-b7df-5b8e5e844e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0277608-a435-4ea1-abe1-a13fb07d9abc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f3cca1-2e5e-48de-b3ba-6938d4baec5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a27e3d-29aa-41ab-9e74-bfb65a6b5212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a16f9e0-3271-4233-afcb-a61690ef569d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba3359a9-af8a-4c1c-8c18-d26b75e2e566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a94d6c-191b-43a0-95a2-b4e904679983",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15389de6-b53d-4a57-8f71-4906d90ebb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73377ab-1584-448b-b3c9-319fe311b4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0f981b-3451-4048-9a21-9bbc7e769280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a426140c-e413-4d5c-ac51-619e9f405c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0677d2-3d9d-4e49-9456-69e99960cf7e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e112004c-e8b6-4c38-a1f7-7a9589a9edc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc792d40-9bd1-4c6b-a09b-b49fe7afbb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209e9694-ad39-45f0-8254-4b961971b74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b7dd5aa-3709-4a28-bebc-a1c8b7a95f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a775d6-b662-4f04-aa80-fb4733081db9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e616653-e1e1-4468-aa93-a146c5e3aec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e529fad-ef51-4ae6-9fe6-60ccf61209c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafe1a55-0a5f-4201-98f1-8793598d4f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a3857c-402f-4859-bd72-4c51423e4ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0d62b3-36fb-43c0-8755-bffb9fe851c6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fda1fc-a93f-4249-84e7-30f7d559ec4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbf9ca6-757f-430c-958d-f9733f266108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3267c131-17dd-4134-8d9c-ff9ff4985bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ad98e4-e1a7-45c2-a3f9-3cce9e4a5306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a78224-62ca-461e-ae49-311f714918ff",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598ecf60-fa97-4242-91d3-45dfd166a589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ef02fc-e6b5-45c0-8ac0-3d9b8bcb7e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cabff2-680a-4fe1-a844-6604b2a90013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38216bbf-470b-4928-9444-1cbf05289459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ce6487-88bd-40fc-92ca-48c811a45916",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8330c888-dbaf-4bf4-afe5-68a947fd08a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bde0fb2-270a-48bd-ac5c-4f7bfd28b4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b0652f-9f51-49b1-bc44-8f423b0d8639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb20a2e-8527-414b-9516-ca9efe6f2642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e028b6-a7fa-4e10-b919-7b8e3f41d013",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac7d084-e892-434c-b987-030b638f38d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50575c91-251a-49e4-83ee-93029e81c1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dfa794-dae7-4719-8eb4-d95982f0d3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "178febaa-4452-462d-bc2b-d5b9e9bf6df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396546b8-ce74-4c75-b998-095e09df880a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352c5afa-118d-4078-a7e8-360624220ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5ed199-2720-4d55-8cfd-7c1a6cd16a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8132f562-75d8-4ee1-a9da-0781bd2d9d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de910d54-0d95-431e-88c4-b3f410687b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72082be-f572-40d0-b6ce-4c874c0dadaa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c539f88e-7e83-4a0d-963f-87e1e5b1970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24232884-17c5-4661-990f-a524da011f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d55d767-a598-4267-8bd4-ba368c2a58d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "424f0dc1-4441-49a6-b327-dd24c2989e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede5c67b-10e1-45ab-94c4-9d0574a9de9a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3577f050-7591-40a1-ac88-bc023f52f395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99dc5725-65c4-4afd-96c1-e59b3dcbb788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0591d6-1ec5-46ac-9b1c-4902e070575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5acacf-8740-42f9-a498-70e9a76f58c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a722605-4fd2-406c-b79f-acf9271124b2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d19f0f6-8caa-4336-bfb7-a7ddc29f90f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b77a808-064d-423e-9c90-a3d246fb6aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0594a1c0-11a3-4f7e-8fb6-65b737b6d79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df7d0ad6-331a-47b1-91eb-4defb9051693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea778eb5-18f3-49a7-8831-d41f9ceeee46",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fe058e-f313-402a-a17b-1684e4a0811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219cd4a7-336c-4b5d-ae91-39b54ca5c266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738dddd1-8744-46bf-98aa-aa76d7a64454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb7a598-544d-4681-b3d7-b53d93d8f6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12681e35-a842-4118-96bf-c67e483d36fe",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b5849b-1b37-4ee0-b5a7-005f269514b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56543aa-3854-4054-b6dd-88851090d1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade597c3-f232-4ba2-8f81-e4f124f8f260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdd1295-8ec5-4f32-b8ab-517d8ee5b62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b37d0d-982c-4127-a32e-0c5c33d5c4cd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac865d12-7832-4f89-9975-4f1c07b2d9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcbab62-1949-446d-b72e-5b450be09471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d32d2d-0248-4937-b446-dc4a6723ab14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3530262-2983-4a25-b677-256534e64867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bdb569-0b17-4be1-b8f9-ca2da9834c85",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f72de35-94ad-4486-aabc-d16a94b99812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9666c710-3ddf-4091-9f0e-a7c77965b453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e4ca26-fc14-4688-a260-1043640edc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22ce5d4-3df8-454e-9733-a51e7cf7d8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8f9bef-b2c5-4120-b73d-dc1e30f064ff",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bd1e1f-d962-4b0f-8705-16d8307d5857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db5f002-114a-4090-894c-cc48c0017405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb242f6-6cad-4b72-b6b0-a0d30bbb28b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c29b98c-4c0f-4d44-8c69-6d280d0a1cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba61154-0669-4e9d-86c1-5f25da9586e6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1494e7f6-9791-4b4a-8059-a04cc4d9eafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744c8a05-1260-43b3-9b27-329cb40bef21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e2b7a8-db37-43f7-8cca-6f052797b5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9009800-28cc-4d0e-bc79-03ea10e8a0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b084e0-0ee8-4133-854b-85ab63e385e2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17dbe1c-83fc-47bc-b332-a2a2f9ba86ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e836b95-cc20-4e91-a8ec-1311e8148296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee25bcf-97ac-43e4-a0fb-b259180e9e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e33f31f-b76b-458a-8d45-e5ac0f552223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f78947-591d-475b-8c46-936107af7d7e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e9c6b5-0f24-4596-9934-b27097c47cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185c226d-48fd-49f5-9044-52bf51b54422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a73e68d-cf4d-4c8c-ba1d-0b2d98c1fa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff34f896-70b6-4493-8760-f978ce3c7100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfdaf38-608c-4304-9df7-cd1c5775a185",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eccf1f-e952-47f0-ad47-9d24f29e5678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5ad9a4-a6b8-49a9-b8bd-e7fb78935107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1659c04-a739-4abe-a862-f5d484b19631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5972470f-f2fa-4b41-9241-dfea8ea3ce87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb7e084-803d-418c-aaa7-b46cd1abb709",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9b8495-2c88-4142-a01a-fb1a885f59e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9624a7b3-d57c-4e1a-8a32-f9215fc545c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3f12b5-9e86-4586-869c-9d42bb272807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4444075-f6fb-4856-a328-7255ef1081ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef85a5c2-e416-4412-a893-4ceccbe182a1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40be4c5b-71b4-4230-aec9-bc6efb03d3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4035a247-77b1-4c9b-891b-16f4f8e33e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd42cd13-860c-44ab-acf8-e20a6a5d8fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b08a1c8f-dd74-4f8f-8749-96c3c5456efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81375dc-9bde-4dd1-a9be-fefac47a6f08",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47b05fd-b174-4652-938a-ee080141111d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d387e7-0ffa-4c58-bf89-ae95554f8058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb454061-e167-4edd-bec5-0f7c0d22450c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "469733e5-6b7e-4365-b55a-58ca296379db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d1aa9d-68ce-4b60-89cb-06e55c66740f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812bf862-97f2-4171-a768-02c12a9a717f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2056a71-ff0e-42e4-95a3-77a247fb4f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952cabad-c6f7-4aa2-b3d6-a99d0b3ccd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "14ad57d6-da10-40e8-a6ee-e932961726ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161436d1-d2a9-4027-a3b8-9ac03578898c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d8a91f-668f-460d-9ae4-83aa00efe53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fcddea-d49f-4e2f-a114-16aa7f368ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b0548e-d653-4c33-a878-2e9f704c869d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54e82e7f-4c74-48aa-b7a1-1309ef74e833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bb3c12-1d86-4783-840f-0c6a3002965f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013c7d97-020f-40ec-a89a-0d3c537e0903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5588c71-984b-4e0c-b9f3-0c3beb88d349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be5e85e-99a8-468a-aed3-66c53109c7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "686d02e6-477d-46cf-afc1-b7b7f81e11de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe64e4fe-e8ee-4b95-bc5e-c5751ddf7c1f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96025601-379d-431e-a7e8-993417c4e4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee8440d-f87b-4868-b51b-dd14435cd0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615421a4-5b33-4853-b4bb-30357e7cfb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "32866fe0-b715-4d16-8b17-59941a0c1c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d9d428-04f1-4f74-92df-8a53970cce37",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ef16a5-1470-4661-9db9-e915420783d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0587d678-5233-478b-89de-b4b6e37f6a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b7c33e-6b85-4e2b-9e17-cc054fb50222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1f4d77-1e58-4eeb-ad2d-f67e5aed6b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9cc53c-7ed3-4119-9342-4bf2a1fba4af",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c18b9e-e262-4412-8186-ea4d8c1718d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777feb21-285d-4001-9335-34899e2c4d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237f99c9-af77-498b-9898-990c4e50fe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "60383115-cd08-451b-b62f-38837eea1cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b71f3b-b87b-4dfb-b296-2c636c73bd31",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157e9214-b778-458b-8d6f-d18d36c81b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8691727a-cc57-46e6-ac49-454c1f54a37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8475a387-6fc7-479c-bb43-a69880663d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e10320e-6f3c-456a-a231-9708739dcc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8dceb1-0aee-4772-a8de-96fda8dab7d7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b30a88-d759-4e27-8444-f61c7b3bd7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7169ea-fcd2-4430-90db-bcbe60954a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b96ffe6-d9ac-4c58-9c0a-89b0a2099119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f68a0c1-31d2-492a-af94-80dd6a281ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f869133-1449-43f0-bb92-8b92fac74f06",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177b9532-92be-4349-a908-98b9547ae70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e50c94-d341-4781-9e15-80b14bd62a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4bb1dc-0b4e-42ed-a057-e5be545da7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6fdf41-fbbc-443f-b6c7-282f3474bd52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93d3170-17b9-437d-b15a-51bdaeed9e0d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d4a102-9a83-4084-8be4-0756d04a64c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2091e8f1-3c76-46c7-a00a-53169a537917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a100d7eb-7518-4c07-89da-7d3026ff0887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d053051-25af-4c9e-ae3a-8f6895479343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a34417-56ec-47f1-b58d-d7c62aa22a62",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f194888-a126-4e33-9d4e-dcd190444f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6887198b-fbcd-4016-a5c5-9b419287a100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada7f838-3932-4caf-b4fb-9e27173e59df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "097d6e94-0a33-4732-90ec-a4095ca51af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfb9e15-ee7b-4138-b778-7629b39deca9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64afa5ff-e05b-43d1-b3af-ab3839a45388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c36bfb-9a1d-4957-aab5-f35a218a171b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f1bd4d-a709-4066-a5ef-722c82850d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfc4b34-3c43-4ec1-838c-fbdea9fa19e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3583394b-5701-4adf-ab21-bdf7617d45ab",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db69f38d-3b18-457d-8182-91198e36de9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736460a6-2ec9-4c4c-a2a6-4747b3b7eeb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd6abcb-46c3-4062-81af-30d1c6ae655f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6d1d4d-e1d5-45e5-9f9f-58d5dd8b829f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57b6b78-f80e-4f4a-8c84-8ea464076481",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4104d533-1140-466a-97b3-3b3cddff79a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34dbb8e1-6609-4c72-99a5-19dbf2ee0922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d3c8ad-427d-4c7c-a02a-17f14065813b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53f62360-7aca-442a-95bb-1f8b9d6c2ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045e6ea9-16c5-42f4-8373-a832e72249f8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b21cb5-3fa6-42ba-8f53-f7a01de13cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c37fa9-31fe-4ee7-85a0-53b7f821c6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d97f689-2717-439e-95a2-a9b1ddbf29dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fffe8b4-df85-4cc1-947f-7bdc3584d2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd09203-8722-48bc-93fb-520f15b5d0b8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa282de-cb3b-4ef4-b7e5-a03106c95824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf250029-0ea3-41f3-9066-9285a36ba262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f79854-42ed-40e7-97e5-07aa9dab2ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4f3983-1323-4e01-8741-f40c3cfec95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ad10e5-98ae-42dd-adf4-a920135947a9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29bf33d8-0660-452f-a0f2-d6949ddfe438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932b343d-a149-45db-b85e-9a89ccd75916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ea65c3-7c84-442f-ab83-5f379a719bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fba4b50-509e-427b-a095-9db4f0eefcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66377cd-1622-4453-a583-977ccddf08b4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a8a3ad-5022-4ac0-939c-d44ce0c65e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3a7b5b-a0d1-4691-a144-2f2c1829399e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ef1d54-3949-466c-853a-aa4a183b97bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f1458268-571a-4ff7-b9ba-d870a0754806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84782218-0fb4-42b7-9064-65f74e810570",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5eb952-44b7-4a3d-86b9-c8003778d576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cf99c1-9b26-41f5-8c8c-ace88fe0bfb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c3023a-702e-40fc-994d-4f17adcb009b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "995eb8cb-9934-4898-8625-c4f78586c0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e75ffd-2052-489e-8cc5-c860565a239a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14909ad-4371-428b-aa5a-6eba5acc30e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268c81c2-255f-48e1-806b-1106b63a2f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74da84cd-992d-4fb4-a28d-7819dd14a497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfee1024-7337-4d09-a920-dfd461d049c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a816758e-6c4a-48ac-b9fd-782ec7d81aac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e213bcd8-47d6-4a19-8133-ef788f02a945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feef5805-0b77-4712-ab7e-bc21dd93bb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe10ebba-5471-4f5a-951a-cbbc5fd9bbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfcd1b1-f8ff-4541-8b94-0d9187ff9316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f4ed34-0120-464e-a4c3-eed1f4d9bd22",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4ffa7b-ad81-4ec8-9f98-97593e07ad0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3028d87-b66b-44b6-8d33-53a2ee8a507e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b4bfa6-c8af-4ef5-b1e0-271ea97e2b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "00db2336-633f-4c17-82ea-dc59880c23a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf69d5b5-978e-428a-aeb6-7a7dc8fdf254",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb89d28f-062c-4f0b-a148-3484379f0693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea0f7bf-8e0a-4617-9ec1-aa563e7fa0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efa7d99-1f5d-4a99-8eb6-2f5c28d1f07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "62454f58-5f25-4598-958f-06553fb01b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01cd747-279f-42c3-880d-02cbdcd9fcef",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970b1850-25ba-47ad-9e78-d14c921ca128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89740fa8-ba3b-4652-be00-99eb82bfc250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3952e22d-9f16-4151-89c0-2b48b4060c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "06242f2e-f6dc-464e-913c-92563df7ca69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5090f231-2dd1-49c3-830b-102f02076165",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ffad6e-202a-41e3-824d-b7c96c8a2f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88dee79-a5bc-479b-a21c-bce72f6a4fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882a5baf-0c7f-4d34-a0ed-afc7d7fc8f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "efca1d69-8001-4c19-82e3-bf08ddba658f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b957989-e285-451b-95f5-a9443f7ed559",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1ed906-dc6f-48d3-874c-8f6aefe97190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491b1b1d-7d55-4241-86fb-0e000f850dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff115ab-4e04-4679-b72e-081907c3473b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "983c1aa1-c179-4d30-b26e-33937a52f02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcd55bd-4f25-4807-ae62-1f091b746931",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e32d7d-666a-4aa6-8980-95ffaa077fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84877663-025e-4ab6-83ff-038464ccbfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc40b67-92d5-4ac0-a58d-ee7ad5edd6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ed880c-341c-4782-ad5d-0b9a5f4d48bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886a8412-3ff8-417c-9d1a-96bc0e37bfc2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44df6e1-9e18-47c5-9b65-5f3b1c902dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6588344-282f-492d-b2b5-549991d21242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818491c9-4d38-4c23-8798-ca51580c05bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc9e72d-56cd-4353-b87d-79f3e0d5e793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430a98cd-1532-47a7-a373-97c0ff95ce7c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50dc342-5f8f-40db-9dcb-c5b164bd6a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258750ed-2a20-4c77-ae26-b4ce5f7d9311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb82b972-b42c-4eb1-9eb6-070df202158b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5a6d29-1618-45e4-ad7d-fd689058fbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c99bb0d-160b-41b8-906f-32eb960c0bda",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ce4811-473a-4ac4-903e-a72e8b8c027f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdd15a9-74b8-4996-92fb-c67b3dd97add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa0beea-fbdc-4fb2-bd62-83a7c72bea02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e98ec027-ade3-480a-8713-3796b69ccb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66e99e4-94f1-417f-aa32-039efbdb0467",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fc3d91-8a68-4ef0-9b06-c92fcd706db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821e5b94-a627-4021-b712-4383db1d21e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7403cfbc-9524-426c-aa89-2fce97131853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "77aab3f8-8bae-460b-b7c0-df0a7434fe27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737289af-cd9e-487c-9fa7-088164983314",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae2148d-a057-405d-9db7-127e8fee936c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a4a086-9d04-4825-be6c-95cb69c22c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f62a5b3-6f55-4b6e-9e5c-06e4e361b250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f275b249-2e8a-498d-be04-8aa47d3968c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312fb759-4d36-4ff5-92de-fbe44d6908cc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0a9cf5-67b4-41f6-b11c-9199dbbf6735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc78c4a1-2040-4864-a5a2-bc5ff60cd018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033bff6f-f6cf-47a8-bac7-ecac07d062b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d95acb-beda-4765-8b33-076bbb6c1b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da853946-62e4-4c90-ac99-95b22065a2c0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72ef6b6-65ff-4e79-917d-9afd3318c0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad6ade2-f447-4ec8-a2c1-a781c62ef093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c20d2d-46b6-4e01-9b99-d7599762923a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "011224bb-04ac-4904-aac2-fb1f367bfa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc89e30-eab3-4320-9bf3-67fe26f7adf1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f064a4e4-b1cd-403a-af2f-4b06c9f5217d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa24b8f1-100f-408b-8c97-fd512ed85aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2bc6f2-141a-4dc6-a129-a70a54bf4c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "960b3b1f-4f4a-482c-9d98-8e3243ec437a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0febba7-2be6-4e67-9f65-8093e597109e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a1dde6-0bf4-414a-98fd-2dea6b582756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9292be89-e484-4dda-b8ea-3cbebb535544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40f9f83-c406-42d7-923c-07aef81050c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac058d2-ba97-4dbf-959d-d9f4a280c0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e518168-7c55-403d-918f-105b717fa554",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8178b4a8-398f-4bcb-a4a7-c854ec03a050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe64e32-4e6e-4301-ab15-dd92ebcc0be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e210a1ed-bdf0-42ac-a3c2-a641a0d5b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3144b0-b978-4ccf-9d13-e8f5ada995bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f280a09e-8460-4d68-9499-ef9d422d1517",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f37a62f-8dc1-45d9-b4e1-90e55871121c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a9226c-7dd3-4e6f-91dd-0212e43a8daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2f7837-ac63-4e7a-8018-402158055865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e361a8-2e4d-48e4-9358-a914186462d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af9b02f-30bd-4fc5-97a1-96525909fec3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b1ebca-38d5-4b54-9f54-dd3bbc16afce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa7ea5a-0c5c-4877-832b-2e4eadd4dc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535db7cd-ee4e-48fe-a966-64c52f9f3766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1fee2c-dec2-4496-875c-b2a31e204372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b945173f-9ecc-4aec-90c6-02c519ee49c2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d3b129-e063-408b-b91b-f001bd9168c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd6291e-9bae-438a-98dc-667784f11a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facb5879-eafe-4614-9e45-c149101c66d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c23753-d9db-41ef-ab96-6205558aa2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4bb526-86fb-429d-9ca8-352d651884d1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2eef763-b646-4b88-b65f-6e20b12417af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b69bd09-54d4-4628-8fd0-7b6e6a448638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd740a0-48dc-47cf-a491-ad124cc50eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec11b16-53ba-4ebc-bb1c-9b008b82e31e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c69dff-a52e-4a74-9ef5-30fdf232d1d6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e82f1c5-9de5-41fb-b425-ebf476f21e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb18b96-f131-4bd7-b259-998e1903ac85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ff942e-08a8-411f-90b9-6d41538f2609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "025259c8-5e6f-4bea-ac1b-b0650c9a6000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a7370e-2848-41d6-815f-5360d03d84be",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e830b68-acfa-422d-bb64-dd90a87fe366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0926c4df-3811-4ed6-9590-d07de8962738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b297b101-9097-4f61-a9d0-df84588b84dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cae0aa0-3080-4915-90f7-54d0e8975a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8faa6c-2a05-42de-bd78-4faefba76661",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3109fcfe-f53f-4f64-ac0d-ec2f810a8832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6520855-192e-4eba-944f-18451b6b77a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53ed11b-a394-4036-be4e-a792dd777d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "662ef87a-c0fc-45da-a77e-4805e5db5b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345a9daf-103d-4e72-b765-eb4a1cad828c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eac88f5-4914-4f99-a885-3f65a0d7eeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e8868e-9942-4e73-aa30-5e87fd93ccac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c4b155-992e-4d2f-b64d-be8e95dd287f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f94051b-167c-41ff-95b1-b4a3bf356f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e416db85-3479-44c5-acb9-bbd64cb5d371",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c457d7d0-7d27-43dd-b9ea-1d4cc5a4c0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db668beb-3bc1-4451-a471-268275e47517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8827cfcf-12d6-4a33-9572-b0d629c807ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43676b9a-3c38-46f8-ad35-66b72d62ead6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cf3942-f877-4d4d-b0fd-2c465612c97e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55404d3-8361-4f58-aca8-327d2517a228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7655fb71-1193-4ecf-91fd-226ba55e6db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4305d17-8f5e-41d3-82dd-67e023d86c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfbb9b7-3c34-402b-9bcd-aecea4bd2759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07eb4eb8-03fe-45fa-aa29-6119dc8f5adc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ee6033-c418-432b-801b-fd62906b414b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d99380-036e-4deb-8738-5c5c68e7d470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbf275b-eb46-4f11-a133-da8151afae1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81ed03d4-4294-480b-81e1-f48f22200f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0c01c5-5a9a-41f8-b868-f7f5c1361866",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bd9112-d2d9-4f48-aa5a-39ac5810ad19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfd1f24-d0e8-4b69-8bc0-e5c5a918ac32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28c925f-a0b6-4035-9d99-42bf3593b631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "585d124f-9d35-4198-a1c9-8c6f08863511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c14178-8b1e-4a72-8426-8022e737e8a2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a37bb9-6902-4c48-b3b6-5d29f5a993ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f397df1-f861-4130-b0a0-93fa3191b8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff027bd3-4b84-449c-a118-d471e7e89830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc32711c-0d0f-4617-8bc1-f4b8c21b1b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b94126-802e-4fd2-bb67-13daa679e8ac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eebee29-fdc3-444b-a975-f08454c2f058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f5ce0d-fc75-4ccb-bf60-29980ce1c56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5990bc68-435b-47b5-9686-c24206256c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d2a906-a74e-40db-abd6-5099a47aa5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0dcb8b-1e8a-4c14-b790-57e94d4b49ae",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8853d4f1-7bc1-4a64-b211-47df1dfb0cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc33567d-7712-417f-9bf7-77d82d130f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71dfa702-bfb8-4cb4-aeff-f93592046c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "413758c3-1e0c-493b-bbca-3a032009966c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39ec4df-9b1c-4c7c-875c-14222442fcea",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8c22cf-d8d8-470d-a1e6-c8b3dd87128f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a038190-e04c-4a1c-9952-4546da68fd4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5efa1b-0057-42d3-858e-f1077977439f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "431d1f86-ab99-43f8-93e7-9af7461bc5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d551eb98-2c1c-4bf3-8d55-4d02b1fe0979",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4478f85-b7eb-45e8-93b2-7ef61c82c469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "52941273-4f2e-4b85-b96f-c654e0a92e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa56e11-5b95-43e2-b24b-4242b4647d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b93d4fe-7100-493d-9a9d-66bd5885b0e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35ff0e7d-c01e-4ac1-9d19-db02433545bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86137505-f09c-4600-b375-83cf26e6935a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a889018-6167-4e63-afd8-0d30e7a62816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f76d0235-1502-40a1-a011-475b2c663044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62315041-2b2a-41c5-aa2f-8eb467841aa4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e525dc0-caf6-4388-b247-53d581eb01ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "674405ce-62dc-42a4-808a-7f3ac3acd8ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb0e8a7b-1895-4485-bd55-4cf0c9d9ee11"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c91b803-0c84-4c1f-bbf9-cd9cc8cb892f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8df4648-5ee9-4712-bbb9-af9e37ea2b13"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6c26d15-d4ea-4e5f-a060-189bd2ac6fc6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1363b055-7c47-40ea-b004-2a3563fae4d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1967490e-787c-4763-8d2e-80bee44a1fdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fb45f7b-4944-416e-bf4b-275cec7e9bff"
                }
              }
            ]
          },
          {
            "id": "87e8ab49-0746-4819-9b55-c7e5fea0d672",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0d667a9-791b-42f1-bbbc-b4d5e5ff61a7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "01554950-7de5-4a37-9707-87d3ee5462ea",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0548f53-b59f-46ae-8b20-0fee9968255b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6b6e69fb-d20e-42dd-8858-4f0140b18a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d780875-60a0-4960-bb69-70129f833169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabc7529-dab2-44cf-8059-3b6af6b51b30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a61c8a79-98b1-4039-917d-55d89abc9c4f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "261dd099-5eb6-4f4e-8605-4d6d23368fef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93a8ce31-7b9c-405e-9802-46804f254027"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "801ce3d9-cd6c-45ff-881b-4cf6cd0c9f6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ffad1ffa-1b4c-4c05-9461-8079dcdfd2b2"
                    }
                  }
                ]
              },
              {
                "id": "b868df48-f86f-4286-8881-72657113b00e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dc19f92-15e6-4ce0-862e-c04fe63fe4a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c23befd-d356-49ea-a2d8-5c4e6906fd91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6c37d20-9a74-4375-bcda-6fdc8ddbfb35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f7ed56c6-f412-41f1-960b-634192456498"
                    }
                  }
                ]
              },
              {
                "id": "5f5ccb60-678f-4759-85ec-f4df589208f5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd7e0294-c2f4-4c1d-8164-dc47de9e5422",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3003bf93-9342-45a0-a557-94575953afec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c43cd32-e92e-477d-9cea-ce6a8e6d43ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4740c225-ffa1-40ef-a1d9-c53c6d094029"
                    }
                  }
                ]
              },
              {
                "id": "5ac6fa77-e501-4019-ac04-b666af437849",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "508eb3b8-56e1-455f-8ea7-48208d55133d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ee43c9c-9b88-45be-8d01-3444a54c88a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62bb5a84-6581-49cd-9343-a665695ecaea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2daa81f8-fba1-4138-838b-fd928ce5ad93"
                    }
                  }
                ]
              },
              {
                "id": "2eff0036-0829-4713-a7e6-06096267e6e5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "deaf8549-8ed3-4cdb-b4e9-4637586b4dd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a21fe0b-f28b-47a9-a873-6df110356c5d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0eb32d8-eb2b-4e42-b9db-6d590ead544f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3f35aa2d-1b1e-4244-b525-73f6f7f73de8"
                    }
                  }
                ]
              },
              {
                "id": "ec8e4f3c-a231-47ca-b1f9-832190cc8886",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46af5c79-32df-44d8-962f-15b7c98da365",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "697a0a32-4de8-4fe7-8cf2-0f19a8f1cce1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25a5bec0-0832-4535-bbfd-e5e7f86f5a36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48cd5a3f-46fe-42a0-80d6-4c3129641e3e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37e12dde-fafa-424d-9926-80e43dad505b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca094c46-3ec1-458a-99d2-2a161667277a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d3bd257-6e22-4297-a4d4-8a5e86e6dbb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e2ad93c-bc6a-4a88-adad-6de70dfe82cd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03d56b13-f6b6-443e-8c3c-86a3c63109d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "de59caed-a9ad-4294-90c6-0437ea4c7c2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4600c6f2-90f4-4cba-9d17-85a6cbda7a1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "507578f5-78cf-4866-b645-3906e51067c9"
            }
          }
        ]
      },
      {
        "id": "c00d363a-6560-423a-8908-28b85314e2c6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c0f8d16d-8213-4066-be9a-02aaedd69be4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae8546ac-5a02-4f85-ae15-f8e88e30cafa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2988056-66d0-4eed-a018-178b8dcc7086",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d75068-ca09-4068-be97-27d8ab60ed9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cb7460-37c5-4338-bdfd-ab693f40b0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef1a4b4-59cb-42a4-81de-55e315bc301a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "47716d5f-28ad-456d-b682-786edca0c930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a277d8f-bb70-4612-9b1d-f435f8c6654a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d976f818-ac87-4d4f-b098-9c23152129b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e99885f-6c41-4fcf-9a57-e82c9311cd3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617cf89c-99cf-43bf-8fb4-9bdac8892275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5abbc497-bb9b-4cd8-b978-a04e8a5575e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34547b1-818d-4632-be3c-9f1a0fbe4dd4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a7e1ae-23ed-4fc2-a8da-8d3f0b812370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba8a0cc-38cf-4851-bcc2-b86c6543179c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06358c1c-9f98-4756-bd48-a28a0f16c116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "49376cd1-aaef-4633-94a2-ec0b54d08a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c726ddf7-7f80-4c67-8a93-36831a96171b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de77d823-fbc1-4f25-8524-399d3feae11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba1214e-fe7f-4128-989c-cbc15d1baa09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41838126-5c30-4cfc-b9d6-b675ddf53d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ef0c10-4c7a-449b-b184-a96c1a7a157a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d69eb2-e022-4f18-acfc-03e11d000ec7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabcc5e8-136b-4cd9-b066-9d2ce775bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324bc5d9-3ff7-448a-9827-fc5cdf8ecbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf83aaf-50af-4225-9b69-e4ed3243e033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0f66af-d340-464b-ae91-c755ad93f353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040fb6da-8fd2-4eea-a3d7-7a17389a3249",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b58464-a266-4b83-87f7-50fa3daa82f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740e6b12-ceab-42f1-9c3c-2b5737a4a4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7592249-1d17-4b70-bcc6-e4202604c415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc68e2c9-d09c-47bd-80b3-12ee11119c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa4b171-f4d5-4f0a-b3f5-19bb46152c50",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd28a8b0-98d7-4c7c-81ee-71957624d64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5e549e-8b5a-4c17-b66a-857d10ea7694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ebb904-11ce-4575-95d7-844a5822554d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "968bce7a-9f59-4df6-a1f7-385ed98333d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7255324-f211-4621-8021-8788c95ff0d3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49337f7e-720a-4fdb-9c7c-2b7ff9cf609b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3774618-e048-4d76-b0c6-3eb8c332c4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064da7f8-f7c9-475b-be6c-b0087a04ddfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f64e265-8677-43a4-b727-ed7c0d8bf8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bffe5d3-ddfa-4568-b147-d51a34f51891",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f94dc2-6178-47e5-97e0-0268c710a0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a8ce72-1b6d-42bd-9c6b-da9903ccd7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f521efa1-7518-4901-9db7-3130e5986a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b281f11d-bcec-46d0-826f-6b33f289873a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a935f9d2-0cc7-4048-ba01-9f64c299a40d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e93296-1ce0-4f5f-98e7-6d4b20d7b393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f367ecc6-4c5f-41d3-bd06-beddc38c5e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4440a8-ece7-44f9-9490-f4d6460bec97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b00825b-80bb-4e37-99fc-7ea1239fd83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6856bff0-655e-46d0-b1e5-8a14fe10c154",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba077637-7677-48e6-8a15-f02bc0d28c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f620507-de62-40d5-b3a7-d5477220506a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b8c6a5-a1b2-4ad1-8d2b-3139510fee3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6418e346-1657-4bba-97a6-02ba51346dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6ccde2-7a99-4309-9e7f-cceefda25d0b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ad3df2-4722-4e86-942b-6890eb2245f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a9d33c-90a9-4e45-974f-fc3554ed9d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a0ed49-3f8d-4cb1-9059-2ad6185ca3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb63d16-4a56-4982-a784-3a383b8bf64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b0939f-48dc-4e97-905d-717f81bd4eae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebb4a7d-4228-4e18-8a89-52df9a3541af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad13445-3293-472a-ad71-e51abddb8b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f609414e-269a-4df6-8913-c2b005528e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45a15d1-2e78-4084-895f-83453bd81927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5994a17f-dbff-4652-a37a-121c8a176186",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaa440f-a535-4a85-be12-6b30d1efd488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b3bec2-2f6d-4c9a-8b27-d4b40538201b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e214bb-0284-433b-b78c-52a323c9ff38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a1477f-2392-4e96-a378-96c4e7fd2467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635707b1-9e70-4e11-860f-6854f4f6e5f4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7f51ef-1f3a-419e-bd6a-2d3124fef360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9426d671-a051-4f7f-9bbe-d07367fa0d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e8aeee-2d1f-44e4-b0dd-64620a486744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed8a89c-8e04-4128-9c4d-05d4a47cc944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b4a2e4-4cba-4fef-9b21-b1384738acbf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eedb19-03b4-402e-be67-990a25d85a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a592b70b-01bf-4b14-a5f6-252a331c4ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296ee5de-e36e-4865-ad2a-6fc001baf420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef1ec50-2bdc-4385-a1fb-e53ae16cea6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534123f6-4311-4411-b28d-0dd0f24188ce",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98be64b-5519-4569-84d5-07de3f578d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb0d9e0-b33f-4813-9989-cbb9d2419530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c354ca1e-122d-497c-9202-abb8394c8025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e69c236-52eb-436c-8bc6-afe834ebe5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6abf247-1698-4b75-9207-7770d14229a2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a4293d-d241-47e4-8b3d-9f44488b0ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d58cb9-6c0a-43ff-9ea3-407ee5134f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156ff7c7-91d4-4c24-b3fb-0f1a4eec0986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a67ae32-55dc-4a11-808a-b3bf88eb5027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9958aeda-2d5f-4d19-9835-deceef686632",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f360567a-8c2c-4476-a04c-b517868376e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527b52c8-f7dc-4563-944a-7ad6787a1265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3d2e78-1710-4cc8-ad3d-8248994a0bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f3325b-5c9b-4932-8b11-66192aeee7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c7a2a3-4f40-4ce5-a88e-b3d49089bff3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedc589e-7c14-4fbe-8c8b-785fe2b0ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20491330-9019-4237-8131-a1eba886f595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ea7694-09bf-4566-a673-06de4a5936db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d41f0f9b-62a8-466c-9c87-8d6c00686fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eaf715-53e0-4488-8b9f-58625b870898",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f2f5c6-614f-482e-9976-2108092ff69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26d3a47-8148-460a-aa2c-8b855d01dfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1a2d30-ff81-40ad-af5f-d5c875761888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c8c017-2fd8-491e-90c7-e5ddafce4ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaf1c44-f250-4d26-9888-5b4e81dee878",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b606bd-94a8-43b3-885b-920b63dc8cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39661c1-95bb-4877-9250-8e7d526830e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef0f760-e85f-46bc-9e77-01dcbcfec717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37df6725-934b-44f7-81fa-cb33be2bd6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90ea641-b8ba-4726-9345-b8fc74d26b3b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ccb664-95e8-4577-b886-9fab51c37a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e2fd0c-ecaf-4494-8898-383a078527b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2d68c5-e9ea-4492-8b80-cee1812c1311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9b798b-4d7b-46aa-a675-10b1cccc4e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703a83ea-237f-45da-ac33-5aad882968f1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42720cc3-81f6-4235-9603-9c8001e6af4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17de5be-a50f-4a25-b9ff-2aa931a65cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55462271-d841-40bc-a0bc-0f852b8cca1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75250707-0f1a-45ae-a254-f9ee047a0fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d33397-e3b1-4ed0-89bd-239a791fea6e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28061886-1d01-477b-99d1-da275a66d329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d42cf7b-37f8-49fa-be72-a9f8c2173cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1ba407-81ed-44d0-8dfa-bc1caffbcc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d04d0a-d955-4ba7-8fb9-51bc921c069a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c364b8c-ae1f-4cdd-ae69-d6b656d3ec49",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3893988-6563-4057-a2e6-7646abc52f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01bab32-ea13-4e3c-bdc6-43dd6f1e80eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f11a1f-7df7-40b6-9f04-a5ba7a335b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3503f5a-22da-4c77-a76f-684b9db1de46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71658392-856e-4f1e-893d-b05f7003f7dd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4a718c-fbc1-4967-bd11-12cd4d6d84ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431f4b14-b474-4175-b43f-c3fcf42c5e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23e8a00-d4b9-4539-8e29-172c9c7e8647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff29b5a-0b9a-476a-b97c-0911c1497a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293a1836-2920-4f8b-b402-4bde796da51b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b93bc06-f606-401b-83af-1070f399914a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc0fac5-e4e1-445d-92a6-358b06f7a888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fdf182-607b-4e25-8635-9e88f5a6621d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74075d59-f48b-486d-aa50-fb684475b0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2349dabe-7471-4c05-975f-ed4731165737",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257b7354-e06a-40d5-a261-c719f1d1f55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73d1aea-b148-4d2d-ba34-ad72173aaf6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5944fc29-328f-4835-9dc5-46f7a4c43b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51381a87-6063-465b-90e5-c82ed4eaa1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7267b341-6666-40b4-a262-a54f88d3bc72",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255084e2-8ac1-46dd-bcb5-226b65afb643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b3d786-f3ac-4c7f-b137-f5ef274fe39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed11f484-c84c-4527-910d-03d3e3696487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "790714eb-f846-44b4-98fe-237860c55653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431abb10-27b3-467d-8a78-83f5090c405e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598ef694-6dcf-4b7b-8690-842a8b6a0a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb0136a-8ad4-474c-bbf5-e7a3f417d613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e868c34c-7fcb-4e54-ab85-d9d97f5d8ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78e73948-cc06-4ab7-aba9-9dceacde425d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c715d48e-345e-4c90-8a15-a2cb77dccf24",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0583b57b-b79f-45f5-b05d-f70139d3c5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee2e573-fbb1-45d9-a85c-82db8032cfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1dc489-98e1-40d2-8dd2-5d9cba60e136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f2eb43-daa4-4b4c-8f3b-bbad5aafcbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af96f5b-c360-49a8-9419-ffea0a6701a4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb9d47d-b0d1-47f9-b435-a3c3d612bdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f4bbb8-ba68-40d7-848c-3a11e3bf4a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feafacd1-4fad-4ed6-b978-4b7a2e9273a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8fd9a44-7321-403a-9281-01ab0da01443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9a3276-cafd-4560-a5f9-24eb1ffd4f81",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9779c9-9845-453a-82bc-4f048d43c4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcad6cb0-aef8-4bd1-93bf-9ce938241ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b991cde-1fdf-48dc-8587-04ce1ccb2054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e86b41d-66ba-40e9-949c-f9ff400d7246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e086f75-c4bd-47f2-8890-e43bc764d66b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91e7e35-1124-4790-8a4b-20d2e7ea92e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb889ca-c0de-4062-8a4c-01d55e5a6f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c866f14-a4ba-4394-bb89-0e63e8145df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb69d35-84e3-4132-810e-23054a1a466f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f5d290-6d66-4575-908e-f881bae880e6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a16aec5-614d-4b18-a117-4df3f7c85920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1faa857-ada5-40d0-89e6-fdba111d8d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430dbd85-4ea0-4fa7-b517-247ad0891e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8643d33-3312-4042-b8a2-88d0e3752704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b477dad0-bff4-40cc-b5bb-6681c357d1d4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b82a9c6-0ebc-4da7-9e61-c18062344e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d3c175-4df8-4c5e-b45a-dfb9583d04e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67626a60-8938-447b-b78d-33139a331d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f150c8dd-0a47-4716-bfdb-8518151c41b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "447e86fd-926f-4f10-99cb-6f71d4aea848",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9e3f236-a07f-442b-a322-e2fd3bb69444",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3294c7-7033-4362-8521-2682e871a910",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "29865ca1-e81d-4ea9-8d70-53928f0d3d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3e26b2-d657-499a-8e39-234372d93dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01eea177-fb03-4ec7-9613-b0c6633cb6e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e14fea35-2616-40e6-aee4-2a876121fd04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da50bac1-d727-4fed-92b6-646118cf40f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "863a9d52-3403-4731-b4af-75a532c03fc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98dad471-b07a-433a-9de3-de4e3b45c166"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "421d7f7d-0774-4d75-a740-791113579df9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a83624a4-6b55-4929-bb87-751d25844350"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce792a0f-8488-452e-9758-8b828f817246",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7252a917-f893-471a-b080-28021f72f770"
            }
          }
        ]
      },
      {
        "id": "3ae06a31-eb09-4340-bc64-ba4dce14e3d9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bc1e9ff1-ce25-417f-9efe-8b06b25fcb1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8199ecc2-3fae-46aa-aa68-d1e278dfe625",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "069c0024-cf1f-4e27-aeb8-c0c26f541ba0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8be5be3-3105-4cd6-a299-925373524c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4030ccf9-2623-409d-92c7-22f978e8bb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df338d83-2afc-469c-86f9-caf39f655f30",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a47cc8b-536b-41c7-b5d2-36489dd2a07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2a7f27-1171-41fd-9e94-7c42a988fc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401f37e4-0f34-48b0-89b4-422f65b8a328",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc57bad4-390c-4546-9aae-231cd80cee70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ffc9ce-3655-4e38-9a53-0943fc51a5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0de05f0-6d2f-4a11-81de-a4d1ef4dd3ad",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb6f51c-6764-4a21-8e72-64288a39dd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a9b916-9369-45bf-a93e-2e6eeae50eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4310da10-31f1-4127-a62d-1e9863c55167",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8254b9-ecd2-4240-9026-ec164f8293e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af405d6-a453-4adf-8936-668bbce1602f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5058ca-926e-4080-91c2-4a9609a1e118",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf8e6fe-e2b1-4f40-81c3-c3fdf130c995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f3ea35-3567-42db-9805-c090806b5c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e53a13-d3f2-4a0a-9c30-5197c0e9c5bf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0050db94-2ef8-4d0b-b51d-645ab83a903b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c9607b-fe3f-46d0-a464-bfe1068f9864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca3b2a2-34b2-478e-b52d-d7df52a45fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49572fe7-f30e-4f36-b21d-98a51c679b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07e4e8b-6f02-4248-bfed-6a66ea24c489",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c951fd4-57d8-40ba-8faf-31ff1e3d4ac1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "053a005f-8f8b-45d8-a72c-b3f7c78962d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e692122d-c614-4fe8-af82-5954f7ef20af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6b9d23-be5b-4a5e-b961-9ef821ac1d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368c4bd8-3eb3-45ed-a0b1-c80567ca20e3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1b0261-624b-41c7-8dfd-beebc32c6df1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff28d358-fc6f-4ce0-b5f8-cba8e798026b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5f8423-8032-4337-ab7a-02703871ee14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c968c6f-56b8-4821-bfde-0d1d224f7075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3294ec7c-8261-415d-afad-8e7a4a20943a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333459d7-14fc-4172-8693-1a4cbef9a404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d543e73-5be9-4dab-bbcf-87909cb8b51d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b727da2-6856-4fbe-903f-a56249ddaccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a96d6e-2327-426e-b40d-ec9e8427df57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39aa49e-6775-4044-90fd-0b5e95e1e79a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ac7204-9885-4fba-b37e-deb184d1c647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d95b45-e965-4060-9358-a97a028bdfcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc6e1c2-7a3c-46cf-bf53-1faa00369156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d09fd8-9932-462a-8178-edb6acfcf144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a0a0b9-f281-44b8-ac11-f326e8ceae7c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7190284c-a53e-4bc9-a4ad-2a60c276fcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9db8023-288c-4278-8911-be3c1b3e8d38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19c8ddf-314c-43f9-99f4-97b957205409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9b495a-81c2-47f3-a15d-9ae03f26f002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4847ea28-7ab6-4b19-93dc-45782faa88d6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fad6db3-cdd5-4bdc-b383-57bdd2f3620a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "758d9cc0-28a3-4af7-a9df-91c5f136480c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741e98a6-c5e3-49cf-84fb-b360a6da53da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5099974c-3a93-49df-8114-6733bc8ef95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b690d1a-0982-4c03-ab90-4cb5d5d3e6ff",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22eb7077-6f49-447a-838c-6e1561965c50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3583ba79-fab8-487f-bcb1-dd524608d27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c32fac-518e-4e27-951b-9d9e74b4446b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ad7127-217c-4f2b-927e-747bfdb6c19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a2f616-a55a-43ba-a8b0-0cbeeb3115c9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4924e1-7cee-4154-8bad-90fef8294783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e45593-1d8e-4e6d-b4af-1452444ea732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d287611-a074-4451-b1ec-269d0e910442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3558c6-6429-49e1-bbf5-e9864b3336d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3e9433-54c9-4a42-ac5b-50d4dc2a33ac",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32c0d24-18e7-47d1-8d3a-de0a8f10d959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b898d83e-7aa4-422c-969a-dde2596573c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca17e494-a1e7-4064-b2ff-4cf96d03e408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f414de93-3b43-4625-8f62-8ecb0da476ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd210296-7a78-4d86-8ea5-0f9b4c223147",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa33c84c-a977-4487-b74f-cc2c550869b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02e7c9a-6227-4ac1-abf4-b0eacc58a7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa262b5-4bf2-4d11-8eed-78851db6ebb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c914edb4-6ae1-49e0-8a08-4295f4bd5f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27953074-8ded-4744-a55d-6aa9b6916ce5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9b4fa8-80a6-4a56-bc40-8f291b22bbfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcdc55c-f43b-4677-ba4f-0f3f83f4b7ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21a6ffb-26ce-4a7a-8660-d56e2d5071c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b00add-d822-4426-843b-0499c9e4bf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57da3c4d-3d60-4060-bcf0-01f97eaa0b4a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d33c605-95e2-46b2-8628-ba64c68416b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7872a0-b006-4ebb-9bef-bf235840e60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7ef019-bac1-4352-b26e-c4a210bd8aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392e58c1-1637-426d-8f0e-26f730097a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d274c11b-fce4-49a7-b5b7-67e541e2bce8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edb1b52-99ff-4f2c-8e8d-7fefd84a3163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b971c9-4661-4548-ad71-5664276b131d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3f0052-aee4-43f8-8917-7883f4618bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c43ee6-258a-47ff-80a3-7c4e998858cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f77fa9-fc32-40a0-8db8-2d0dd465f703",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f824f77-20c0-4485-bea1-247a8a31fc2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ba8c12-cc50-4948-9c5b-ab7512d27448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bfddc1-7e23-4b83-9371-e4ae3bbff920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3cd01b-3204-42e7-be4b-9405e6a8a6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e6ecb8-fec1-468b-8f60-17575075e301",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02983779-37aa-497a-a11f-19d15ab36c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ea9e96-f755-47c5-b870-c4420a8e6cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb14af03-f99b-4bfd-bdc2-ecdad92c2fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7962e8-7090-4338-960d-d2ba380ad341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b708d4-d0f7-4918-94aa-820d840c9da4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a85036-a515-4878-bc14-492dd27555ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d3e366-f328-4204-990a-afea38968ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f49766a-dc12-4629-bb8e-d684700fc3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "942ed1da-e00b-44eb-bfda-7fb7b5d8b886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4b9ae2-2c7f-4e0e-abb7-a7d12fcf294b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69f6021-5917-41b0-a1f8-8aced055c4d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2947c5c7-5d3c-45d9-821e-84e104e866bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e866638-3b64-4e62-a95e-501a6d8fb355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac0aa58-8472-4478-9b46-9423e4d46d78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc3fe5b-2628-4e90-aff1-eb76e68a29b0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d84f43-e555-4c70-836c-d037536450e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd101088-4d1e-4973-beed-5aaa89da9983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72b84cc-5d65-4f4c-a5c7-10a3a0b30a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1d2782-f8ea-466a-a2e6-795aeb37838c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c11fbaa-08bb-431a-a154-090c2b2046b7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c248b2-c949-4ce7-a4f8-6fbc0787477d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04580b6a-0306-409a-9f97-c81cb7ea656d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c98d81c-61be-4612-86e8-2fdc708a535e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af406ac5-c6b0-4d4f-aa75-46d685a1b4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d239a6c-5b6e-46b8-ac10-289a3a5591c3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f59767-f7ff-451d-8300-e09fb69524c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc3659db-4e8b-42c0-98ec-dc0e70b7c69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2a4ca7-4477-4da3-9e71-caf296905853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31623a77-e2de-4955-a576-4b2cb38acfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5fa5fb-b217-439b-8aef-00b4f6d0a9f3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b68c5d-d38d-4848-b3c8-fdc03a43f301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04fb615-d91c-476d-9726-bdde99041224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93e406d-f41f-40f5-9af3-f0414f04e4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10c8d32-28c8-45ae-8c05-ed9093635b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a994c0-ce8b-4847-a413-d9b1d4816885",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e381916-98a7-411a-8824-e6cd5d111437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a003656f-a47a-428d-9d96-2bae84553b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441ba63c-9081-4c5c-ac07-0b4c6b79a8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8f2666-89f7-4f95-bb57-7d9e99d57245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d582f1-60be-40c9-9cb6-36557b363a9d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b573063-d9cf-4ab7-b255-cd18f4dd4891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3950581a-2e76-4b0c-9f44-80f87b5d0758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46901d53-8afe-4ce5-8150-619aecf1d1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e687adb4-868e-4496-800d-69a9d71309d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbe14f5-79f4-41d8-8d9e-86a3e7f32d71",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749c64f8-818d-4126-8366-fa29578a593b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dda6950-eb8c-4dd8-a89b-36109ac9905a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff14b934-7453-4779-89c6-3a9c9d2d3147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6005df17-f542-4d20-96e0-332cd1c74987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a4c201-cb97-42a6-bc4b-b16935e8c2b9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b61c556-27bc-4e60-b3b4-f5f0635a8021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7c52fb3-653a-482e-babd-3b6c667ff8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f064a8-cce7-4441-ba48-fcb72c182c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dd9627-5373-4814-99d3-65e6a0bd3469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d440a7-6de4-483a-8d38-5c9656530599",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8af421-808d-4496-a004-f302570c4620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5cf3d50-63bb-42e0-acb8-572d79327bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dc53f6-dbf8-4233-9152-38102262eca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352180bc-e55f-41cd-8ab2-2dd6c40fcd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92827432-07aa-489e-9763-48c0aad043c5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdffb728-7873-4642-b709-23cbf55f6279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae9c240-6bd5-44d2-b5e4-352f6b1b1d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f3e9db-08d2-4875-8725-2c34269ad75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9d78ba-eed9-461e-a609-35e5f2b778a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162840d0-4950-4e87-9340-94c9b715092c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c38b80-d4ce-456a-bbc5-7205a1d97459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ecc455-5941-402f-a8bf-2221b4441778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04674ca-a9b7-4398-85da-d137823954f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc78961-6d03-4236-aec2-460ed858b86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c8acc6-0628-4e41-84e6-243fd476dcdf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f76cad-25ac-4709-b239-92b471c40dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054ed265-5d1e-4e9c-840e-55e7850b6b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82167e8b-2cba-40d9-b4e4-152396b3c867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c0d8f1-89df-40c6-a649-7aa43db9e7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01663175-f35b-433e-b328-207e3d74136c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcba413d-f047-4980-a276-c9bf3dc5f9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65ae407-207a-4a96-a6f1-c00ed89c415a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40b3f22-82ee-4b0b-8bf7-7cbe9f272535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbe974b-c72a-4095-aabe-8fb100aaea12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd23a47-741a-48e4-b0cf-e432c21f77ff",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0af9fd-d700-4c41-9ac9-842b29fca02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9323a6b-43c5-4d21-862a-31dfb343312e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f861a44-20ab-4339-99f7-4ef6d6e5658c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48f3d2d-cbd0-4b55-b737-ab4d3e8dcf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a739517f-c80e-43e8-a91e-0747cf693cf0",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddc72a8-05e2-4b5b-a80e-fb03cc04e7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4dee9f-f42c-42da-9668-d2a5a185a940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b3f5b8-b487-44ba-9b83-94a396d492a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24e3040-a3a2-4dc2-a368-4e35e5bcbf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baa0b3c-f885-4d95-a6d4-82d60d0d9c32",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daef8a1d-5023-4941-8891-3a8d0a9c3702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f155fd-2801-4c62-b291-9365e0cb4715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14b9e1d-d5d2-4f4e-b628-598dc954003a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3ac742-fe08-4eb8-a2e8-b4199dbd27c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f440aa-9e0c-4198-9c51-e0eb7b1438bb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24de2455-c666-44de-896c-0aefafc4ba64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353a1e14-7efc-462d-a96e-1a6d751fd982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5532873-22a3-4fa5-9a67-7d38a8857623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7682468-fa8d-4b0e-a663-0bc0acbf9d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531598ca-8c45-415b-8e25-de2c63d9a89d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4323011f-c3eb-44be-8185-bd657dc50512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6cfb2b-aa4b-4b89-9609-ccf00323da7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f22c20-deab-49c9-be38-1379374630a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4ddef3-4e46-4d62-b250-278868ec2f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7d2dac-8b30-4b35-bb53-8c9db525b360",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97c289e-c003-4cf9-b218-8989f9ddc533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d8feb0-2cc8-4739-800e-3c6a6d280541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be0bfa7-0fa8-4d01-b84c-7efb492c6797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ce29c8-dbe5-41bc-95b2-cbd8757115cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a81885-1cd2-42a9-85e5-c30a2ceba35b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62b452e-db68-4199-9d71-ea57bd2e4ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eaaeffd-4ee0-4797-978c-72a023a242af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034e7c46-c1ca-4b45-b12c-56b3c3565f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f919f6cf-9fa8-42dd-9e03-d1528e8affd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e4accc-1861-4607-84ca-fb5058fc18aa",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc49350b-c1bd-40e8-b84c-11ba35aae488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb192467-b997-4718-84ab-be97933fe1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b16cd47-a1d9-4646-a2dd-009894639b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b1b8e6-199e-422c-addf-5f15d67ab112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d38e05-8f43-4302-b9bc-26146c0905bb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a387b6d-9b2f-4c86-a999-fac461b58125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d5086e-f43f-431a-8364-d67539dd54c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4619b47c-5905-434a-a2d6-ba079bd0d67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ac57a7-67f9-4ac5-a15a-b74c39ddd017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4d6da4-cfe3-4c4c-b7c4-2a2c0e707ad8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca2db08-c94f-4ffb-9853-3ab363d2abca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85f47219-c2e7-41a2-91df-6c68c58f9e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70598c23-3130-4059-a238-7e53f80461c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48e13d0-e8af-4d9d-a661-4bb8d6190a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ab7f72-61aa-4893-8722-13e781e469f2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b29041c-0abd-45c5-8400-2ce09c3b34de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716e797d-6856-4fab-82fb-3789b0dc1668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4385a1f-7789-492e-90d9-efebbfa8827c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4f06c0-3e3d-41a5-bff7-41810d793bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a5c733-ece8-4f6b-93d7-d4696045413a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d587d1e-26a2-47ea-8a2e-efc0b43bf4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce39da0-ff59-4cd9-a5e7-ed5ba9685a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d043fb-321a-4d20-ae55-b878a046ffd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3789e3b6-55f6-4586-8382-5eebf2f1ea1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2308a2d-eeb4-492d-9336-f7a447418ebb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98472c36-854d-45cb-a2a7-9e9cfd74d57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21be5cac-0918-4475-8ed8-d09d450f9960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2f3c71-8d6c-4f8d-bb9f-ed3d68037f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e0ffbd-65f0-4e14-997a-0b8b8ef7670a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd8e9e0-399a-4013-b886-cd6afef29ab9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bf5342-ab53-4119-944d-42ef7c41cc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a411cc4b-c375-4f7d-82dc-928353bb3a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c16763-1b1f-4b99-a23b-ac4f97e4a4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5942c358-28bc-4c31-bde5-fdc8af269fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc648d4-f36e-4d1f-86cd-727c1dde50cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c571ff75-f8be-4a99-b90c-0073cf098029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd52656e-9484-4992-847e-1874ca2bbecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be3b46f-cbd4-4a1b-be85-fce14089bb67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16a7d79-5265-4e99-a7fe-50739be1cc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886c1ce4-a050-4d4b-b1cb-b83698911209",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4457fecf-2a2e-4a44-9226-3671d9899b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f281d8-4add-4729-9f30-6bb8d858ae8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c152266-b7d0-4a66-8940-7ad4237f42d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b2198b-af4f-42fc-88e0-643997923c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e301032-71f8-4ca5-acce-f84a2517234a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840c58a8-7e6b-4a24-980a-71f5f715fcaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ba40dd-8190-4bad-827b-b484fc05bfa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c797df-b220-442d-8257-d9100cc17cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9708a5-1161-4a58-963f-04484786f893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008402b2-8456-41e1-b03c-61933d75f5b6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a0daea-f0e6-4cef-b29b-fc47bd26f37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e445449e-8d81-4d6d-b9c2-8dc86c6d4206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6920dcf0-47de-4106-98fb-98da6594617a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75af9f0c-ea6c-4ae9-aca7-6a8ee4034b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61531919-bc15-49a5-b188-5d3f45999485",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02b1236-e170-4ef6-9c55-838eaecfbaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d59ef0-4cbc-4474-99c8-1080888b3f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ff3971-8fd7-4426-859b-a718053c0cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437af0c8-b34f-457d-9f55-280236be94ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38757c3-293a-4fb8-8faf-0d88f934dc5e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e40bc69-a46a-4839-8701-dcd6f110a287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e8116c-71a7-4d7a-9df9-f5443ba5d6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd0bf47-b47b-48ff-9a95-fdc9fc890896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b029ccf-0a08-4134-9d3b-a738c9aec09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12bde2b-6115-45a2-841c-0fc345def60b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c582fa-d823-4b0b-92ad-ebeba6a2fe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ec5c68-7b64-405d-a87b-32c62353f0e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee532bc6-1358-4465-af66-0d27b1cc4a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9497ec4-008a-4405-b413-98de7e4e702a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f16453-aa52-4d37-8c1f-1e1d0e4271c8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7171d03d-2cdb-4a8f-8d2a-ad319b120917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717463aa-4a10-4853-997e-a0b32191a09a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ed537b-9207-40cf-86cb-5dde2ef7b313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0874dd00-76bf-4a89-a744-726ec21f8155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79da073b-89b8-400e-b355-7007a9f7868d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48fc564-f531-4889-8d87-09fe6fb0a8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3507e7-c2ac-4a2c-8641-1db8b32b38a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79783eb5-b7e9-41ea-8171-ec289419d9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202d32c1-6aed-4519-af0f-e1a969562598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b84acd-53c5-4fcd-aa9c-c00de690bec9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240fdadd-92e8-42ea-b2fb-47bd75c741f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f0184f-c01f-4dda-bf99-7bc23e64bf47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ce9e31-2a8d-4e77-80e7-c5dd0a175bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de04f78-9525-422b-b741-f5d1e0329ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7565bccc-310b-4dd6-b905-8729337d142a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e67a543-fa89-4773-9946-5d6b686d579c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db62726-9bc5-4582-a360-36257229934a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d5140c-3be6-48d9-89ef-9ced9b766bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e522983c-ab7d-4fbe-945f-7fb1886b427c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc28ad75-1ac8-441b-9b6d-8e5e8c1b2eec",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e21ef29-cb19-4563-9a29-eda708a93c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa39fe96-ba0c-4068-9dcf-58bc172f8551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674a3951-57ef-4d2d-8b4e-60ec2c2e8307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a78fde-6807-4054-bea1-c2f1a428b11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0445437-8ea1-4f7b-8d0c-694e2b3462ee",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be2fd46-9560-46b0-9c64-f8596293be83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b9b9908-0010-4294-92fb-6858ae19dfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52e1e40-e921-43a7-a8c6-a13c418fc7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8a57ca-396c-4671-9982-5b82d5c00709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a804b6-922b-4e54-af0a-a07e150ecf6b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a746e8-05ee-47ce-8078-b77728af8342",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a78560-526a-4ea2-a252-6602cc1f187b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e391eb29-142c-45b8-b685-d431822d1bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6c25dc-5b1a-469c-89d6-7c41c20cc5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e96c5f-e03d-4808-9f5b-a723eb2cbbbb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3808dd2c-c3fe-470a-bda4-9866550637c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7451a5b-03fa-400f-9692-c89a9c94402e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3673203a-7ea7-4536-ae04-bf72edab7f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e38d8d-9d3e-46d4-b879-124d708e0d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d94e6f9-bdc3-4f8f-bbb8-81ac3b3ff2fb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4d7845-c533-4e76-b711-6601f96e95e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f38345c-dd60-4f39-880d-c2ff4928103c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b946d5-9278-4d25-ab57-a97fffdc8d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4437de44-7c2d-4994-a74a-6b5df8ed592c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd42769-e693-4cba-b37d-da798a320b54",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9b6d76-7dc3-4df2-bc71-028df6411f68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdb95f3e-97f3-4525-ae6a-9bd844cd3f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1360a841-b5e5-482f-95de-f524be01af58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544048f7-8ac0-4510-a16b-37c18e05aab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e496625b-21be-4e6c-ab77-1fccf211cbc4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0802cdb-75de-4925-8b58-6d0f71cf2523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "210abce1-9edc-4639-94c4-7acba87d44a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d9b7f7-3738-43e6-8032-526b8a3969b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d6851b-09ca-4063-ac21-9d61574d57ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b88d40-188a-4221-a5b5-59f0f4db5e24",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdaf4ac-71d5-45be-a23f-731d644af710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3828dd0e-48c7-48e4-bb61-9050cf2fb044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3988a0-b215-40fc-834f-231fec6224e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa05e308-1083-467a-bc64-26ba37200089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f556c264-9eba-4364-8ff7-cb19d4299216",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d925dc2a-2783-40b4-868e-eadea1a7c34e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c59113-2b42-43c9-8ab2-5cb58f8d3117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e6a652-ee8a-416a-ab04-faf9cd2b7f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed0988e-1710-4925-9f2d-e198d0121001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6867bd-0b1e-489a-bc87-353e4efd644b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420c1fca-c99f-40ac-88db-84ff28b2adf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d310eea3-94d3-4e74-9406-de69f0a0db2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec59206-bb62-49b0-9c98-cf6064ff6447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e88ab50e-6230-4347-8815-d884db791f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12ec7f2-60e1-4b27-a1df-57a1ba97cc2d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3827be17-fc93-4f9f-bd49-7c8fd3b8e55c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5535da54-7612-4f3b-bc4f-e75fb2c8e7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a17e576-3ef0-4d26-82f1-7f701cc339b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dea630f-4e71-4fb2-892d-6a5134cf3d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5d4518-3001-4bac-b577-e86c2b08c23e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10e2f84-b97d-44bd-bc44-acacc47f3644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c969fdc-fa00-4e06-b842-065b701423b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce2344f-8396-4845-aa9f-b4c7641773ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6701a797-14c9-455d-8f1a-c274bf7ab291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b38992f-38d7-481f-8fcc-170cbca20685",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ad3642-5275-4784-8666-f6b04badcc0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9875000-74cd-4c15-ba67-f7358affec5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dc4eee-782d-4213-be52-780c7d8cf732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb42d69f-ec05-4dcd-b4ba-6ffd219f4398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87727550-838d-421a-a013-14e5a7896468",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69925a8a-11e9-4090-9d01-bbbf122e4c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d5a32c-c058-4851-bd13-c33c679434fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49805340-38af-4306-8ca5-3743e70cf646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a51601-e5fd-490f-b82b-9820543323e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29da834f-2404-4795-954d-96b93fca3f6a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b968c094-83d1-4d6a-a0e6-f12664e6f63b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e377313a-f7c4-431a-8144-9be33c2e8dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a165ea91-6eb1-49bb-9deb-0d8465ca45b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab033e4a-a7ae-4735-8e53-8d65ec5bcbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3c730a-7734-434b-aef8-22eec536eee1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f556333-84fc-4be2-b136-5a0036484346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2067d6f4-01d5-4384-9527-ca566a8e2079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0be9426-c599-4d72-ac9d-f74aa392dfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27fcbb8-2da5-4d22-8dbe-1a9e1c6f4f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8eb3f68-b23a-4b81-ac94-cd2b4360f7f8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b82cbf9-666b-4020-b35a-cb03a8a3986b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23e2928-a889-49a2-8073-ec9ce20f7087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94907a43-6708-4118-a7a8-54be41e06969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ba322a-31b3-40a7-8663-239e9a5ecca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c559f7-0bd3-41b0-b7da-58659aa9d801",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f707f70-1959-4a44-880f-081a2805fd6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b0610c-ffe1-47f3-9614-6cc3a703a3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ff9b39-e7e7-409c-832f-adb274c079d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096a0a42-33c4-454e-8623-5fe9aa2140f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1353de4b-d939-465e-bbe3-1b5954e4759b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1676646b-ad6e-4773-b42d-d77cac805f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f03f12b-ecdc-4127-9156-c05d55141e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f8fbe1-bcd6-4d77-87dd-725200023bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81319e70-e016-4d81-ab39-554962c43c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae791379-619f-4468-a293-5effe8b937b7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb8dee8-c954-46ec-ac81-d33e27674b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "890442e8-812f-4077-b932-1207648e32da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769c87aa-7084-4e03-bb9f-b5c0c32d0645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3540a7f1-6d81-408e-bfc0-1ee2d401fb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff2df73-8efb-479f-93fb-f9a0405047df",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe901114-cd7b-4b0c-9550-6af9052e0faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9aee1c-9916-460d-9369-598ca5746688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bf1415-1352-4f72-8050-0425d967134e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b4eb77-c60e-4bfa-b023-84800decded3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4770ef2f-c209-4e06-bad8-6c53aad30f4b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1b23e7-4897-45c3-9b28-cfca05abd9c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70dd4e02-8978-4def-9303-bb7765b0905b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df527a1-564e-4730-8026-ff6ef35732cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624cd5a4-239b-4f25-9661-bb848542befe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59244429-a9b8-491b-a3ba-1e84927593a7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24eddf3d-ad03-4607-902b-69a2d1baa48a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89023fb5-c615-4e4e-9e36-e28058f80471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f4675b-ae27-4da6-af7b-7cf74a092fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6342e46-c1c4-4af9-905d-436bdd820952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da98069-7799-45e8-b0f3-102903cd3ec8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd53138-e006-4b72-9b53-235f4477b389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1a60a86-ecd9-4b8a-a186-e28d9f544437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92019579-9a44-4e2d-9a37-2f4d7c0137ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211e4099-d494-4988-afab-d3d1b8530db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8711a906-a909-4caf-af84-27e4ac792d2a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e584ef1b-f67a-4464-8e61-adff39428770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95341c1a-63ea-4027-9ed0-6cd2eb233b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370870e6-de2c-4be8-b07d-d2f675ccf1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644edd91-2e0b-4ddf-a8f1-5195e22a7741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2067a9-37ca-428e-94a5-965e96e99322",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ce4a92-b062-45fb-8712-11fd7a85ce56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1baeb1-8c5f-4aba-adf5-724a1ee08e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70df8a1d-d826-4f95-99c2-112b3324cca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e08e4d-d8e2-459a-ac63-cf8f0fca76de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814feec3-1855-474d-a299-4e598b8a5e3a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c1ba1e-5df3-40a0-8ccd-854393a5acbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fa272d-789e-4fca-b821-3bb5ae39a48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7fbd27-35eb-46e0-861c-40d37f80fe31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954ccd8d-1635-4efe-b7b3-f43d9e71f075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb074d2c-7dc7-4e58-81bb-c349ddccddfd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7439d441-5690-4e9e-bfd2-46ed0d5cb49b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af186df6-6db3-4524-8fab-359d52ec5291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f880338c-6782-4deb-bbe8-5b40a3e84c1d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029fbbf3-005d-47e7-a6c6-dc56c8778c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498439a4-2c7d-4b05-9e22-5e019669c068",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8f908f-d3d7-4c99-96e1-adb3c4f376c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9def3a-2755-4e6f-86dc-f1a13c8ad7fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4472b82-77dc-4335-9c16-cee829bcd5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ce4f19-7156-4aee-859a-7a86cb525b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c12694-6f2c-4e41-ac7e-ff13f10c41cd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6068a77-e8ae-47d0-a778-bbbd381937a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb58f3dc-7c36-4167-a5d5-663e90125bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "673954c3-95d9-4ff5-84bb-78d102131927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153baf8d-47d0-41a6-8295-1eca5db225c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d523e4-eca0-4aa8-ba72-2c35f1018437",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a084aa-b711-4877-8e65-b043a7132c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c640168-cf7f-4a1f-acad-ac2972c19dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd532a14-2dc3-48c3-9184-82a35618a949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610b686f-0a02-4961-9a33-b76d0cbaba7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffdfb2e-5f14-4feb-b4c3-757af3530343",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439d314d-d072-4e96-9aa9-68629dd8db26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54167702-a20d-446f-b71e-4f6203c5c5d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad8ff43-9e10-441d-9c9d-3364aeaa9fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae376bd6-e961-4d8d-9046-08a355c2951d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1438ec8c-7bf6-438a-992e-18df24203819",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3fe3e6-2981-4a7b-9570-675d90bfa2a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c12f644-08b8-4efb-9bf0-c9e89ddd0df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62566319-f3c2-46da-bf44-906555b01d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c5a4f8-d266-48bb-ad6a-b4a1226d08d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1863a50-67ea-4712-9885-904d2e23cb8c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2984a49-09db-4df8-b583-21e93e32ae2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76624c16-8d17-4943-ad5d-c1dbc6a25120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c807935c-4340-451a-aeab-35b9618c4fcd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023bfe4b-d2dd-443b-8fa2-131653f85924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cea090-7567-4483-8c81-073d9de6c4ba",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb0688a-1c7e-42c0-bd88-a13ded04ec37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dce72209-c9e7-44c6-80d5-e911ca8beafa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b685e41-41a4-4053-8e04-866828fcb27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53f080f-712c-4b30-9366-5813e35035dd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e63b8582-a9a2-4920-aa3b-d8c467921234",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f2c05dd-d492-4bc0-b884-d3c40433225c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e778d5-d0cd-4a4b-8910-a3ad56cd25b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "613e884e-653c-4eb8-b8c5-46285a86b5c1"
                    }
                  }
                ]
              },
              {
                "id": "13da4dd2-3ded-4a85-9344-50f67937f6ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebc7d59a-1fc2-4d7c-b2ad-45b6eeee0ec1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3758c05f-e638-40f2-a323-c6356d7a234c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d771f810-9aee-414d-a0d7-6913b22097ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaeb158-1c0e-4f28-aeb7-80e49cc313c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33f9cb52-72f1-4811-bb02-d6a9dccdf8ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a0354be-d50f-4c38-b387-bf3db7186b9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49eec8f1-d19a-4734-9e15-718c80aed28b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2906ea3b-fab1-40a1-8495-3292fbf3ddb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "320cfdcb-678a-4836-82ee-1e7c4d416ba9"
                    }
                  }
                ]
              },
              {
                "id": "bd865cfc-bfe7-467d-979d-2eeb2a35885f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0eccd9ca-6495-4404-9444-f8ae15084893",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d87c4e-147f-4d15-bfb0-89720b502a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1303bf88-07d8-4765-8b0d-fc062d58530c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36749e7e-5ff5-4611-a591-1e787a605634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f890306-07e9-4823-9825-63f569037e05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2be1ebaa-fdee-4a03-97e0-ed7d52859da8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "25347e67-269a-4db0-a0ce-cfc6fc885e23",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07bb5728-1b58-4072-93c2-90b104901a0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bba5450e-3605-4708-a0e2-67bc4a7eb398"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e7444c5-71e6-4bc5-b0f5-2be0958c98ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95be5e28-a7a9-4696-a663-6c7e687934f4"
                    }
                  }
                ]
              },
              {
                "id": "46b35d1f-47b6-4688-918e-bfdfa936c826",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaeb8fcf-0b5f-442c-81b6-37c44675fc59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "94e584a3-ea09-440d-a0bb-d37747c3557c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1c5f39e-73f4-46eb-8bc2-ee24a982d959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "182748cf-88c2-4176-8eac-07856ddd720a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19868a0c-7397-4fcf-8ff4-2c080034f0c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "618a7881-c31d-4895-8095-55943f78c7ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c169d24f-6114-47dd-96cf-94a6a4ce5689",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad9d8a9f-1131-4658-b4fc-19afc9792784"
            }
          }
        ]
      },
      {
        "id": "4f2c51aa-1f68-4fc3-a603-f7528984506f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "256f17fc-d4e2-44cd-abc1-5c1aa472a200",
            "name": "Negative Testing",
            "item": [
              {
                "id": "223451bf-cd54-4d60-b382-215b102585c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b60e99cd-7419-49bc-a576-d627d22f840e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26763cf-714f-47a2-8ba4-3dd266b34762",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8e8dbdcf-2c3a-4104-a39f-0a3936f30440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df7917f-fafa-4496-95dc-cfde047fbbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a69172c-eec5-4772-a40a-b9c09a59bc2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "964cdeb6-5537-470a-97a4-7fd95731a6f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5573587-ef38-48f5-ba69-679b79109bbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6f1c792-a484-400a-96e6-3d01116c89ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18c46051-5b5b-4fef-ae90-6c4aed581769"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec21d62b-e6c3-43b2-8dae-3637d8836386",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cdf74be7-8ee8-450b-b43e-a3d4eeb903f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14b4e108-b29f-4a6d-9335-5e1ff0d955b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d18552f5-f6b0-4cb9-b239-8d3e6a0680dd"
            }
          }
        ]
      },
      {
        "id": "edd7b288-0917-4e3a-a63f-7c6751f86f2b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b024acba-fad0-4328-b8a4-8dcd1eceda44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bba29cd5-b935-4bed-a039-982779df9a93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "971a26c0-e7a4-4a31-89d4-89cc4ffe4997",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c54e345-5426-4a2f-ba53-7c16268a1dbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37f0dec8-6fe5-4e15-a47e-6f56abfc7ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b1e303-0133-4561-a33f-fe83a59c5176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9318a5b-d065-4848-b471-403e68345d1f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "491b5428-9101-4475-a1f7-b4153b852fa9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c77cab70-de2c-4b00-ba6a-4c8f2e5995cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85e0099c-cde5-43ff-9699-fb4584efefb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58d53603-081b-4fea-9199-b8b76a1973b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48af8de1-2da8-45fe-a429-30109b634098",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "daac7b83-7ee4-4f82-82ba-5d0152a0da37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc8cc7c8-fe30-4213-bbd7-3793ef9ee45b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86b12469-be33-4b02-91d8-0f0a068a329a"
            }
          }
        ]
      },
      {
        "id": "799493aa-eb40-454e-aa10-c8337f94489c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "34a84c39-d439-4efd-9ae3-efe929fe1a82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "446d7318-ea0f-4df2-8226-1b90239b7ebe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec7ec45c-274c-4d43-8be1-4aa6f60a2ee1",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac4aac8-ddee-4ce0-83de-17e04fb8d6f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a3c3f0b-4cde-4265-bc99-a217ac58c439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3f66bb-799e-4330-a180-2cff83dc6914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19060120-127e-4cde-b4f8-4741c3f21cab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b8dffca-9514-4d10-9b80-d631d26f76bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96fc59a3-bb96-4078-88f5-0d0e62412792"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d631137-f10b-4f3a-b920-6006a210f75c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f79e3bb-998c-4882-994d-09ef5a7d2b45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7b9d415-2438-4ecb-be79-ad9f725441bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "019e7b90-9b01-4f5e-8e1f-041bab21c001"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfc40044-f071-4984-b310-5ce5b3c20f2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8034b3f-3bc3-4ec6-aaa3-f52b184d36dc"
            }
          }
        ]
      },
      {
        "id": "d82f9cee-9649-4649-8053-18f0089ed058",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea364aa8-eb88-4efb-9fbb-9d04f772d8f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0319d722-9737-46f2-ba81-f56c16ee3ee7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8796d4d5-4c72-439b-b2fe-b69d27127df2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "773791ac-2b47-4783-8226-47b9022301d0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2135c61f-2f3c-4123-a6dc-10aa64641880",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 125.78571428571425,
      "responseMin": 6,
      "responseMax": 7586,
      "responseSd": 525.3709589973764,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719016660041,
      "completed": 1719016699861
    },
    "executions": [
      {
        "id": "f14f7ef0-19f3-48f4-877c-a2018d4c8d2f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "105aa79a-f640-41ed-bf90-753f52fed1c6",
          "httpRequestId": "ac9d15e5-c4ab-443b-a693-332f73e6d211"
        },
        "item": {
          "id": "f14f7ef0-19f3-48f4-877c-a2018d4c8d2f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "45a23dff-65c2-4f62-b8ff-af3ed54dab98",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "04120ef8-0501-4855-b9e3-be5203fd8ed8",
        "cursor": {
          "ref": "5569f171-7eca-4e80-b280-749f1b2041bb",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "02043fdf-2b1d-481a-90d5-225f9052cdfb"
        },
        "item": {
          "id": "04120ef8-0501-4855-b9e3-be5203fd8ed8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "65fc080b-9169-4391-a15e-cb66d0a41bfd",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "656c4938-9b1a-48c3-b7eb-0ca96660be35",
        "cursor": {
          "ref": "98953e7d-c8cb-4fb3-99bc-b895696ddf3a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6e537f07-9544-4983-b091-95b4fc517d26"
        },
        "item": {
          "id": "656c4938-9b1a-48c3-b7eb-0ca96660be35",
          "name": "did_json"
        },
        "response": {
          "id": "453e1557-9fa0-4ee4-aebf-bf2d076302af",
          "status": "OK",
          "code": 200,
          "responseTime": 261,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d624fa01-6b04-4bc3-a20c-5bc42692a2e5",
        "cursor": {
          "ref": "209109ce-9839-4f9c-bca7-c7d730458d55",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3192dc15-e162-46b9-bbd2-19fd13952741"
        },
        "item": {
          "id": "d624fa01-6b04-4bc3-a20c-5bc42692a2e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "7dcad0c1-b77c-410a-b7e1-60492957aa75",
          "status": "Not Found",
          "code": 404,
          "responseTime": 393,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d624fa01-6b04-4bc3-a20c-5bc42692a2e5",
        "cursor": {
          "ref": "209109ce-9839-4f9c-bca7-c7d730458d55",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3192dc15-e162-46b9-bbd2-19fd13952741"
        },
        "item": {
          "id": "d624fa01-6b04-4bc3-a20c-5bc42692a2e5",
          "name": "did:invalid"
        },
        "response": {
          "id": "7dcad0c1-b77c-410a-b7e1-60492957aa75",
          "status": "Not Found",
          "code": 404,
          "responseTime": 393,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412ef015-e4b6-4cc7-923b-2c0606e402d6",
        "cursor": {
          "ref": "d43e0b4d-e811-4b23-8fa5-e5ab8fb7f27c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1b188917-d325-4851-b630-3643a384c767"
        },
        "item": {
          "id": "412ef015-e4b6-4cc7-923b-2c0606e402d6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a366e81d-4e3d-418b-968b-d195034b699c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa625899-4fa1-4a72-8d95-8bcde2ec87e7",
        "cursor": {
          "ref": "84553989-8905-44b0-bbb2-f1ad6c7269f4",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d2d5a247-7247-478e-8fa8-e42a33c87551"
        },
        "item": {
          "id": "fa625899-4fa1-4a72-8d95-8bcde2ec87e7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c6e17d27-748f-4963-b754-bb1ac0d56518",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b340cd-685f-4c29-b14f-af1c3fed2591",
        "cursor": {
          "ref": "7bfec7e1-bab1-471c-81aa-e9691d756c32",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3b576557-b23f-48fd-bc96-c4407a42f408"
        },
        "item": {
          "id": "04b340cd-685f-4c29-b14f-af1c3fed2591",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5a58b400-af08-47e0-9026-144c84f04f33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb7dce7-c6f3-4faa-9374-15722577b2e4",
        "cursor": {
          "ref": "e9376020-5cb7-4a60-a5e6-0d2662716bc1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2d760534-dc33-4e49-8d78-cdc5f31c1501"
        },
        "item": {
          "id": "edb7dce7-c6f3-4faa-9374-15722577b2e4",
          "name": "identifiers"
        },
        "response": {
          "id": "89728c1b-6869-4051-ae22-7faaf1135138",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abad0de0-9265-4d65-8a45-b9cd841c869a",
        "cursor": {
          "ref": "2a82f8bc-2a63-4253-a6bd-82f7321ba025",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "42e553af-acb7-4973-b592-690a149cd5c9"
        },
        "item": {
          "id": "abad0de0-9265-4d65-8a45-b9cd841c869a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c02c526d-92bb-41a6-9b4b-c214772c5c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b70388-4a16-4608-a49e-efb2adde96f4",
        "cursor": {
          "ref": "a7be666a-8d5f-4625-bb13-d9d0b2942201",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3b55a0aa-68b0-429c-b0c8-05084a27ee20"
        },
        "item": {
          "id": "23b70388-4a16-4608-a49e-efb2adde96f4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d6dfd6eb-dc16-4771-a306-0a3fac73c6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d347ec-87a8-487d-9763-1726149e3443",
        "cursor": {
          "ref": "8f227378-358b-4b6c-ad77-af6140bf5fd2",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4aca11b5-a86e-4261-ae4e-a73b8d535d44"
        },
        "item": {
          "id": "42d347ec-87a8-487d-9763-1726149e3443",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "675dbb57-6b95-4487-a6b4-db752a35ccd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64db7677-8624-4dbb-95bc-49420206a37b",
        "cursor": {
          "ref": "db846ae2-52cd-403d-9dbf-b0eccb8dafd0",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b1806a86-743f-4017-a2dd-345be17f517e"
        },
        "item": {
          "id": "64db7677-8624-4dbb-95bc-49420206a37b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c8460a5b-7b71-45da-9d20-a1a82c4cea6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0660c07d-7528-4a90-aa02-ec3eae92b24e",
        "cursor": {
          "ref": "8fcb01c8-7c4b-4c49-92ba-236e4c2b4c01",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0c134843-6fdf-48e7-b23d-86f14dea25a0"
        },
        "item": {
          "id": "0660c07d-7528-4a90-aa02-ec3eae92b24e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bc2f318f-32f3-4f14-8196-5c68b95f77ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e27d8e1-a239-4856-a3df-07117c76e957",
        "cursor": {
          "ref": "5e5f4f55-f295-4c8b-b8bd-f004f7fb8852",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b468c47a-6f68-4553-9a32-7d223dac820d"
        },
        "item": {
          "id": "2e27d8e1-a239-4856-a3df-07117c76e957",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "52f36ea6-b39f-4624-b476-dc8cec1b2365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb45f6e-619f-4138-82e8-47e1eb8dc951",
        "cursor": {
          "ref": "312fcab9-4d91-4383-a78f-894746644a4c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f99303e7-0944-463f-ba09-13f9772f6489"
        },
        "item": {
          "id": "deb45f6e-619f-4138-82e8-47e1eb8dc951",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8206cb21-1c6e-48d2-ae38-9f627afd54ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae2253d-129e-4fcf-82f0-5164a8cee77b",
        "cursor": {
          "ref": "e55ffc7b-bf0f-4d7e-b018-2f0985e87a6c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a21c8fbb-0439-4748-9175-43c2d2bafb74"
        },
        "item": {
          "id": "9ae2253d-129e-4fcf-82f0-5164a8cee77b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8cbf1cb6-2826-4651-b1ec-ff15055b61f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea3994eb-c3b9-4a83-8e9d-2cc428db08a5",
        "cursor": {
          "ref": "3031a0ee-fdab-4c2e-bbb4-ad31eb81d35d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "209d2cf9-9cdf-41a8-8ee0-c9992811ba27"
        },
        "item": {
          "id": "ea3994eb-c3b9-4a83-8e9d-2cc428db08a5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0176316f-077c-40d2-bc7d-39b233694e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a48fdd5-aef3-49b2-a468-599670352b25",
        "cursor": {
          "ref": "be709b49-9051-46c5-b060-6a4ab1a6ce7c",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a2dd76ae-375a-4fee-9593-071ce03fc595"
        },
        "item": {
          "id": "2a48fdd5-aef3-49b2-a468-599670352b25",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d59c06bf-091c-4b0d-b1e2-3665f61db621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b522e80-2ff1-4789-aef5-a5a0c013b763",
        "cursor": {
          "ref": "4d300032-982e-4b03-93aa-d292de9c14f8",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "674439ef-5e5a-41f7-a0ef-30d42ae7405a"
        },
        "item": {
          "id": "5b522e80-2ff1-4789-aef5-a5a0c013b763",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7026c18f-d651-4bb6-ab21-47f85e612763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35968d1a-4aa4-479a-a051-338999324b5e",
        "cursor": {
          "ref": "345648b9-0e68-4eaa-af41-e232476d2854",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "668d0684-c744-4ce7-b166-7ab65403099d"
        },
        "item": {
          "id": "35968d1a-4aa4-479a-a051-338999324b5e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "37317e76-3589-4a66-8b44-5fd9c296ba5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aea4e69-a890-4b0e-b181-2067428fb773",
        "cursor": {
          "ref": "b6c0899b-ff17-4da6-b396-eab84aa9c820",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "eaccfaf0-1fac-498c-af38-be79344534a7"
        },
        "item": {
          "id": "2aea4e69-a890-4b0e-b181-2067428fb773",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fa1efa6a-7414-40a2-9592-c566b786a94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945f20e1-5550-461f-b8ba-722656b2ff00",
        "cursor": {
          "ref": "bdb417aa-64ad-4d71-a5d0-2b6aaa450122",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5162ffcd-356e-4734-9bf3-c72f9b158de3"
        },
        "item": {
          "id": "945f20e1-5550-461f-b8ba-722656b2ff00",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3d024892-611a-44e4-949b-7e3ab354ebe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0277608-a435-4ea1-abe1-a13fb07d9abc",
        "cursor": {
          "ref": "9be359cb-0a51-477e-a5b5-44e4c0cd667b",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4f3268d9-6982-44cc-a9c7-844c650c39fe"
        },
        "item": {
          "id": "e0277608-a435-4ea1-abe1-a13fb07d9abc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "811307d6-13e0-470f-a6ec-c00979805f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a94d6c-191b-43a0-95a2-b4e904679983",
        "cursor": {
          "ref": "b343fc50-8b01-4067-8951-e16507ba3e25",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b93c2129-0c93-4fae-a7c9-5e1804848c18"
        },
        "item": {
          "id": "60a94d6c-191b-43a0-95a2-b4e904679983",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b5c1b0da-fb58-4f6f-b5a2-aa6a6ee9516a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0677d2-3d9d-4e49-9456-69e99960cf7e",
        "cursor": {
          "ref": "eb91e1e8-0bf0-4e4b-bf33-2c2a4c3ebbb0",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "48fcc8c2-cce9-441e-b020-7aa5af15f4c9"
        },
        "item": {
          "id": "7a0677d2-3d9d-4e49-9456-69e99960cf7e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6d7673b2-0a9f-4310-9cd0-8e754e3b343b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a775d6-b662-4f04-aa80-fb4733081db9",
        "cursor": {
          "ref": "4b19cabb-faae-482b-9381-a3d799b068c5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "de5f2456-ce7c-44ba-97bf-32a37c22a2da"
        },
        "item": {
          "id": "07a775d6-b662-4f04-aa80-fb4733081db9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2925dbd3-11ca-4007-9267-97aef3d8ff01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0d62b3-36fb-43c0-8755-bffb9fe851c6",
        "cursor": {
          "ref": "b87b92af-e2e1-4d8e-9b05-87b4ef09cbbc",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7d49bedd-d9c1-4451-9053-4b8c6172e159"
        },
        "item": {
          "id": "1c0d62b3-36fb-43c0-8755-bffb9fe851c6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4050e9b1-11de-4393-8e6c-91eb9bb60378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a78224-62ca-461e-ae49-311f714918ff",
        "cursor": {
          "ref": "e1956598-ed2a-4c84-b23d-c4d14a9c5671",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "76f8d922-954b-44b8-9ff5-fff5c9be8a63"
        },
        "item": {
          "id": "a7a78224-62ca-461e-ae49-311f714918ff",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e3e9ebde-36e7-45b3-b109-acd24790d9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ce6487-88bd-40fc-92ca-48c811a45916",
        "cursor": {
          "ref": "8ea29a52-7489-4181-95b2-e90a325743a7",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ff7d2791-dc92-4d94-8fe4-417c1e893530"
        },
        "item": {
          "id": "60ce6487-88bd-40fc-92ca-48c811a45916",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c34a025d-8314-4bc0-aabb-50a210ff3511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e028b6-a7fa-4e10-b919-7b8e3f41d013",
        "cursor": {
          "ref": "ea5d184b-f2c1-48da-9bfb-8b043b51f7a5",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6b2f42d4-8171-460e-a979-56689e60cde4"
        },
        "item": {
          "id": "48e028b6-a7fa-4e10-b919-7b8e3f41d013",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c143cc0f-c962-4d06-84ad-6bac65f36e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396546b8-ce74-4c75-b998-095e09df880a",
        "cursor": {
          "ref": "c96cf81b-1da0-4d0f-b351-d83f9fbbb56f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "41c02856-bdda-4f40-8791-38471b0df8ed"
        },
        "item": {
          "id": "396546b8-ce74-4c75-b998-095e09df880a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "54a36873-5773-4ee7-abbc-a24b28806d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72082be-f572-40d0-b6ce-4c874c0dadaa",
        "cursor": {
          "ref": "f30ae4be-e6e8-421d-85dd-a56580ed087a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "df72e56d-92ab-453e-b744-bb1e3bca9d31"
        },
        "item": {
          "id": "a72082be-f572-40d0-b6ce-4c874c0dadaa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "546c2adf-847c-433a-b31c-8d4b4b37a328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede5c67b-10e1-45ab-94c4-9d0574a9de9a",
        "cursor": {
          "ref": "52ae3f1a-782e-46b2-a7ac-66a72c18881d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e73033e8-8a3f-4b3f-b756-016850a96ba2"
        },
        "item": {
          "id": "ede5c67b-10e1-45ab-94c4-9d0574a9de9a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9c7b5696-9013-4ec7-8854-5a133a5c4f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a722605-4fd2-406c-b79f-acf9271124b2",
        "cursor": {
          "ref": "0f7b5540-03e2-440d-be0b-92b08633baeb",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "95aa42b4-2797-47e6-b662-c0b57ed9fa39"
        },
        "item": {
          "id": "2a722605-4fd2-406c-b79f-acf9271124b2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2e39fad9-d7a6-455c-b1ad-a4a1751f0a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea778eb5-18f3-49a7-8831-d41f9ceeee46",
        "cursor": {
          "ref": "cc35a263-5085-4ef7-8d21-687ad979b6cc",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c445c7e5-350b-49f1-8f04-d168aba9a769"
        },
        "item": {
          "id": "ea778eb5-18f3-49a7-8831-d41f9ceeee46",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e2999eeb-fbb2-4549-8de1-31eca170f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12681e35-a842-4118-96bf-c67e483d36fe",
        "cursor": {
          "ref": "dbefc30b-d8ec-4d6b-bc8a-0c564046cd9d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4e118cff-d57a-4591-aab6-9c7540c90a27"
        },
        "item": {
          "id": "12681e35-a842-4118-96bf-c67e483d36fe",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6ab15789-e0a9-4692-8a93-a6e04a474111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b37d0d-982c-4127-a32e-0c5c33d5c4cd",
        "cursor": {
          "ref": "f154ea8e-a184-4284-8753-3c1b9b0b4d7b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8eabc768-76c1-4c37-827a-95b863c3631f"
        },
        "item": {
          "id": "75b37d0d-982c-4127-a32e-0c5c33d5c4cd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a8f9448c-5da6-49fb-8ccc-33b11b2b3044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bdb569-0b17-4be1-b8f9-ca2da9834c85",
        "cursor": {
          "ref": "b401aa92-889c-4159-b081-ec561c5e03e7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "95ba3068-4a25-49ac-874c-b29bb4271652"
        },
        "item": {
          "id": "56bdb569-0b17-4be1-b8f9-ca2da9834c85",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d79ec8a2-1634-4763-8397-436564c09158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8f9bef-b2c5-4120-b73d-dc1e30f064ff",
        "cursor": {
          "ref": "1a6905e3-c1ab-451a-9086-27edf49e6152",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "45e534ea-222e-4154-ab30-0309d0bad3cc"
        },
        "item": {
          "id": "cd8f9bef-b2c5-4120-b73d-dc1e30f064ff",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bc3c3b1a-4244-4f80-8919-9225377a62c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba61154-0669-4e9d-86c1-5f25da9586e6",
        "cursor": {
          "ref": "9183cdb4-4d95-43d5-b5f9-b480a072f249",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6a5be112-9d4f-4325-afcd-a2d202baac40"
        },
        "item": {
          "id": "8ba61154-0669-4e9d-86c1-5f25da9586e6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "de36fae4-8328-4e77-860a-f981c8a25138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b084e0-0ee8-4133-854b-85ab63e385e2",
        "cursor": {
          "ref": "d2fae57b-ef65-466d-bcef-797a96671cba",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f58151e7-2ebe-4710-8223-2e1273d03b4a"
        },
        "item": {
          "id": "d8b084e0-0ee8-4133-854b-85ab63e385e2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9dc6f4a5-3931-4846-9910-8ca25163f715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f78947-591d-475b-8c46-936107af7d7e",
        "cursor": {
          "ref": "a40ed8d2-3d84-430c-ae78-d125d0a53a08",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4bc9a916-efda-43cb-a729-c4724df8a9ec"
        },
        "item": {
          "id": "b2f78947-591d-475b-8c46-936107af7d7e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3f8a9130-2b48-4325-b308-cead4bab07b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfdaf38-608c-4304-9df7-cd1c5775a185",
        "cursor": {
          "ref": "42d256c1-2a0e-4088-8295-66ac98440849",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "77e59ebe-f241-49c5-8e02-adf241ab1608"
        },
        "item": {
          "id": "abfdaf38-608c-4304-9df7-cd1c5775a185",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "200e6d9d-c38a-44f3-b620-be3900d4d81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb7e084-803d-418c-aaa7-b46cd1abb709",
        "cursor": {
          "ref": "30349206-b977-43d8-a25b-ff17a66612f1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a66f33d9-aea6-4b8f-9411-04151a388f9f"
        },
        "item": {
          "id": "2fb7e084-803d-418c-aaa7-b46cd1abb709",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c85243df-cfe8-4a45-90db-a3b5bfcec601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef85a5c2-e416-4412-a893-4ceccbe182a1",
        "cursor": {
          "ref": "55633e6b-b246-495e-9b14-f061581458f3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d834ebd7-2085-4f31-9f57-f698a5223cce"
        },
        "item": {
          "id": "ef85a5c2-e416-4412-a893-4ceccbe182a1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3fdefcd3-503a-46b6-b0d6-2f4f2e09a71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81375dc-9bde-4dd1-a9be-fefac47a6f08",
        "cursor": {
          "ref": "88f13016-0f88-4c49-81f1-7f8d4d23c275",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "06d73204-e885-42e2-bae0-4218673b936b"
        },
        "item": {
          "id": "c81375dc-9bde-4dd1-a9be-fefac47a6f08",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f61684e6-9ff7-4003-ae17-e1b9f29f9513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d1aa9d-68ce-4b60-89cb-06e55c66740f",
        "cursor": {
          "ref": "a43bf085-3259-4a56-95f8-d5dce7260967",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c0b66cac-569c-4779-9eb9-39a9b6a30824"
        },
        "item": {
          "id": "29d1aa9d-68ce-4b60-89cb-06e55c66740f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f0e38ef4-8363-4daf-9580-1b1a9d405874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161436d1-d2a9-4027-a3b8-9ac03578898c",
        "cursor": {
          "ref": "02c4e85d-71d8-470f-8a6d-ea6307d14fe8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d0dadd6a-5d3c-49bf-8456-80fdcbea6351"
        },
        "item": {
          "id": "161436d1-d2a9-4027-a3b8-9ac03578898c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cd850b7e-f98a-4c5a-9289-e2f2819dcda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bb3c12-1d86-4783-840f-0c6a3002965f",
        "cursor": {
          "ref": "d5d177df-9691-4dcc-9ffe-63a96c7bb41f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8562e6f0-1852-49a9-80d8-b47de5aeffad"
        },
        "item": {
          "id": "b7bb3c12-1d86-4783-840f-0c6a3002965f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d330501b-414c-4464-8ebe-51b080fa8756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe64e4fe-e8ee-4b95-bc5e-c5751ddf7c1f",
        "cursor": {
          "ref": "f93e3c7d-f3a0-4363-8d74-ff5056ae8025",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0f6f5109-20aa-4c3a-b4bd-bee502c2e751"
        },
        "item": {
          "id": "fe64e4fe-e8ee-4b95-bc5e-c5751ddf7c1f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5815a330-05ab-4b09-8977-b3f32c99d0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d9d428-04f1-4f74-92df-8a53970cce37",
        "cursor": {
          "ref": "96fe93b1-e566-4fbc-84a6-2282480ce4c1",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8d2db67a-8160-4f36-b3c2-041f93bd4e19"
        },
        "item": {
          "id": "30d9d428-04f1-4f74-92df-8a53970cce37",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "33677765-258e-4e52-b85a-5124d0142c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9cc53c-7ed3-4119-9342-4bf2a1fba4af",
        "cursor": {
          "ref": "fca8d830-3b72-4cb6-a2b7-db09638a3a6c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a6683ea6-3dfe-4fc3-92bf-1100f5b78bc6"
        },
        "item": {
          "id": "7c9cc53c-7ed3-4119-9342-4bf2a1fba4af",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9266d721-c178-4839-b30f-976f073279cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b71f3b-b87b-4dfb-b296-2c636c73bd31",
        "cursor": {
          "ref": "85250799-cae0-4bff-9937-eefbe56d2d8b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "02e70226-2a5a-4c60-98a8-0549b23bda36"
        },
        "item": {
          "id": "b4b71f3b-b87b-4dfb-b296-2c636c73bd31",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f030b903-ea3d-4b77-9462-10fd8a9651a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8dceb1-0aee-4772-a8de-96fda8dab7d7",
        "cursor": {
          "ref": "a68098f3-b2ec-46be-9a0c-7b0c3315c215",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e6673ae3-bf6e-4967-839b-e4e9b074fd45"
        },
        "item": {
          "id": "cc8dceb1-0aee-4772-a8de-96fda8dab7d7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8b6f7cef-c0f0-4268-8e43-2c0971c46258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f869133-1449-43f0-bb92-8b92fac74f06",
        "cursor": {
          "ref": "6c793afe-d2b5-468a-9d16-631ccc36d352",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "43ed298c-8163-45c8-9766-beed1efe8d35"
        },
        "item": {
          "id": "6f869133-1449-43f0-bb92-8b92fac74f06",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f37b5011-4304-4e56-8ddc-026d4fd2b386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93d3170-17b9-437d-b15a-51bdaeed9e0d",
        "cursor": {
          "ref": "b22fe585-5d99-4164-9145-5f342515d726",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "28609bb0-e781-49d6-aefc-239aa28b194b"
        },
        "item": {
          "id": "d93d3170-17b9-437d-b15a-51bdaeed9e0d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1333af1c-51fd-44a7-b72d-e0fede005a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a34417-56ec-47f1-b58d-d7c62aa22a62",
        "cursor": {
          "ref": "81720ad6-6e11-4cbd-aa06-72053cbb519e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1beaf94e-e00b-4c1e-a425-9f37c63a18b7"
        },
        "item": {
          "id": "d5a34417-56ec-47f1-b58d-d7c62aa22a62",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2adb570d-3ff2-433f-9a70-f5e0c3369c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfb9e15-ee7b-4138-b778-7629b39deca9",
        "cursor": {
          "ref": "f49418f7-06e7-4d2e-a28f-e21f0d7719c2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c1f33e9b-4470-4702-8398-afc035108653"
        },
        "item": {
          "id": "adfb9e15-ee7b-4138-b778-7629b39deca9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "82abe2d6-7f6d-4ec4-ba48-7038a7226501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3583394b-5701-4adf-ab21-bdf7617d45ab",
        "cursor": {
          "ref": "80f83723-7812-4fa9-8407-65f04f2e3e0d",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "084e5087-eb46-4ede-9c7f-eec781708351"
        },
        "item": {
          "id": "3583394b-5701-4adf-ab21-bdf7617d45ab",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5093a1f0-8398-4623-9f84-c5f4cb8c356c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57b6b78-f80e-4f4a-8c84-8ea464076481",
        "cursor": {
          "ref": "f43e4c5f-4c7a-4381-bfb9-7165308a2271",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "aa65398c-4d0f-4084-8494-1a56a7c753de"
        },
        "item": {
          "id": "a57b6b78-f80e-4f4a-8c84-8ea464076481",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "203d4cf0-8a61-4426-ae29-e9b0e2fa26c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045e6ea9-16c5-42f4-8373-a832e72249f8",
        "cursor": {
          "ref": "93a0a768-c240-4c11-8c02-8df278b86164",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e3fd6cdc-92ef-4e57-949b-89a96cb6dd8c"
        },
        "item": {
          "id": "045e6ea9-16c5-42f4-8373-a832e72249f8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e5ca18c5-7706-44c0-ae56-cb476f8cc1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd09203-8722-48bc-93fb-520f15b5d0b8",
        "cursor": {
          "ref": "08be6d59-4828-4f0d-bb68-638625ac339c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ffd007a7-e916-4cad-a55c-54be62b35eed"
        },
        "item": {
          "id": "4cd09203-8722-48bc-93fb-520f15b5d0b8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b57c7348-a327-42a5-aaf5-e49799a27cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ad10e5-98ae-42dd-adf4-a920135947a9",
        "cursor": {
          "ref": "bfe3cd74-dbfb-4714-8e1a-d8cd0c4f593c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7bc76e7e-cc18-4fbc-9b32-b70ea0ad34bc"
        },
        "item": {
          "id": "83ad10e5-98ae-42dd-adf4-a920135947a9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b33ba8b7-ca46-4d17-a3e7-9c29ce620c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66377cd-1622-4453-a583-977ccddf08b4",
        "cursor": {
          "ref": "db4238d5-09a2-4d17-8126-35fe1ff93469",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d44ac8a3-e2e2-434a-b4d7-10e52f298987"
        },
        "item": {
          "id": "b66377cd-1622-4453-a583-977ccddf08b4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "55aac4fd-0037-4c4d-8827-d1c5fafef15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1024,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84782218-0fb4-42b7-9064-65f74e810570",
        "cursor": {
          "ref": "4e333fc4-f96c-46b4-b519-2aacda836b20",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c0278340-ccc2-4ac5-9f0c-d20d93193b1f"
        },
        "item": {
          "id": "84782218-0fb4-42b7-9064-65f74e810570",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3ccfddd9-cf1e-4ddd-ab92-6fb82aac6e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e75ffd-2052-489e-8cc5-c860565a239a",
        "cursor": {
          "ref": "9b5dde11-4d29-4507-a47d-a40bf3a490ed",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "857fa549-0b98-49e0-bcd2-eae9d9b0d39d"
        },
        "item": {
          "id": "b5e75ffd-2052-489e-8cc5-c860565a239a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b5c210a2-065f-4072-ac2c-b102a8d62fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a816758e-6c4a-48ac-b9fd-782ec7d81aac",
        "cursor": {
          "ref": "75daf755-e6a4-4371-8339-1c0ec9e7d1b7",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "583bff75-e922-40bf-9fe4-865fa0ea4d50"
        },
        "item": {
          "id": "a816758e-6c4a-48ac-b9fd-782ec7d81aac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "74b8327e-f528-402b-b379-bf012a395542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f4ed34-0120-464e-a4c3-eed1f4d9bd22",
        "cursor": {
          "ref": "50a223d4-9b68-4507-92f7-42d6e967095f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "26a00506-f77e-499b-853b-66a12c184826"
        },
        "item": {
          "id": "f4f4ed34-0120-464e-a4c3-eed1f4d9bd22",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cc1da95c-6de1-480e-b85f-322398f40b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf69d5b5-978e-428a-aeb6-7a7dc8fdf254",
        "cursor": {
          "ref": "67929c7d-78fd-4dec-9fab-d767c54f0b68",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "78eecd34-939c-4a50-a514-fa97473e4778"
        },
        "item": {
          "id": "bf69d5b5-978e-428a-aeb6-7a7dc8fdf254",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e1047867-f739-496e-9edc-8a644398cf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01cd747-279f-42c3-880d-02cbdcd9fcef",
        "cursor": {
          "ref": "5c97da47-bacf-4a09-9712-c6d699b4dd8c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8778e970-ff63-4e90-8e4c-a1f5dbb11112"
        },
        "item": {
          "id": "e01cd747-279f-42c3-880d-02cbdcd9fcef",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "31c720b9-bc6e-4bfe-9320-bd038dc46273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5090f231-2dd1-49c3-830b-102f02076165",
        "cursor": {
          "ref": "84cda1e8-a50e-4b81-acfd-e982e9683eb7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0d779495-2162-44cb-b57c-a00a23a44422"
        },
        "item": {
          "id": "5090f231-2dd1-49c3-830b-102f02076165",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "875f5e60-74d8-43f6-90e0-1e9b6b04c134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b957989-e285-451b-95f5-a9443f7ed559",
        "cursor": {
          "ref": "233e78a0-eda0-4c48-87ae-48387158d29a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fd8348d0-4a5a-42b1-9b26-0300d3530c15"
        },
        "item": {
          "id": "7b957989-e285-451b-95f5-a9443f7ed559",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "aafbbb72-acfb-40ad-871e-4760846e5f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcd55bd-4f25-4807-ae62-1f091b746931",
        "cursor": {
          "ref": "7da3c705-bfc2-4f9e-9056-52d45dc8575a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "149ab8f7-7ca3-4b1c-9ae2-73168531ac29"
        },
        "item": {
          "id": "1bcd55bd-4f25-4807-ae62-1f091b746931",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0c91b247-a301-48e5-a95c-d84d5b84f565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886a8412-3ff8-417c-9d1a-96bc0e37bfc2",
        "cursor": {
          "ref": "30f5edf0-f433-4f04-9ed7-4910c714a748",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3c1b965c-896e-4543-afd7-d6907b023756"
        },
        "item": {
          "id": "886a8412-3ff8-417c-9d1a-96bc0e37bfc2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "254c0208-f52c-46a4-a2dc-d4c48e6126a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430a98cd-1532-47a7-a373-97c0ff95ce7c",
        "cursor": {
          "ref": "a6e95092-c14e-4f21-808b-9a4fc14c5895",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2510c5a4-5387-43ad-8231-638ae0e47833"
        },
        "item": {
          "id": "430a98cd-1532-47a7-a373-97c0ff95ce7c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "08e5e2a3-13b9-492c-999d-882e51bcb70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c99bb0d-160b-41b8-906f-32eb960c0bda",
        "cursor": {
          "ref": "f5ab6ae4-131c-4975-a26d-08a632459950",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5c3d857d-9c5e-4359-9199-bdfd633fdedd"
        },
        "item": {
          "id": "6c99bb0d-160b-41b8-906f-32eb960c0bda",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3c1742f2-510c-4bfb-8810-6075c28b3fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66e99e4-94f1-417f-aa32-039efbdb0467",
        "cursor": {
          "ref": "1cf4fce1-cb29-4d66-81c3-004afe4de00c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b4671d24-7fbb-48c5-8dd3-818150573c74"
        },
        "item": {
          "id": "b66e99e4-94f1-417f-aa32-039efbdb0467",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "291be66c-6e27-40e3-a06e-3d2f6f3c5b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737289af-cd9e-487c-9fa7-088164983314",
        "cursor": {
          "ref": "521c7611-8363-477c-8bba-0f1a874f2b71",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a550c3de-3ae5-48c1-961a-4a58d5b6acee"
        },
        "item": {
          "id": "737289af-cd9e-487c-9fa7-088164983314",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6d8a0d08-fef9-45f7-9071-320d20d142e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312fb759-4d36-4ff5-92de-fbe44d6908cc",
        "cursor": {
          "ref": "e78531bf-76be-4fd8-969e-cba1ef1b83bd",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6134ee52-21cb-4695-a12d-a68cb674c50b"
        },
        "item": {
          "id": "312fb759-4d36-4ff5-92de-fbe44d6908cc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "05a4e596-1319-4287-8051-30b0fad8148d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da853946-62e4-4c90-ac99-95b22065a2c0",
        "cursor": {
          "ref": "0d777e4a-b198-427e-a41d-22d7d48e5b0a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e554ac5d-93b2-48af-acc9-12ef7d40c318"
        },
        "item": {
          "id": "da853946-62e4-4c90-ac99-95b22065a2c0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9d0f1794-aef8-404c-b86d-32ce509403b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc89e30-eab3-4320-9bf3-67fe26f7adf1",
        "cursor": {
          "ref": "c77ef3e8-6078-43fb-be6a-e8f9d216785f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7c6661bc-ccc3-4c30-af05-dc555b66cc2b"
        },
        "item": {
          "id": "1bc89e30-eab3-4320-9bf3-67fe26f7adf1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2750e1aa-1953-451e-a199-35da1b017b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0febba7-2be6-4e67-9f65-8093e597109e",
        "cursor": {
          "ref": "6f68842c-b2c3-45b7-b531-2ec4c9bae933",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ff447af9-057a-4f7e-9fb9-b82fd3d91bc7"
        },
        "item": {
          "id": "b0febba7-2be6-4e67-9f65-8093e597109e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2f2ea571-c702-4176-af01-ec1f8d615afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e518168-7c55-403d-918f-105b717fa554",
        "cursor": {
          "ref": "84fe5992-8f4e-420a-a93d-0cd16d6c7ce0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3dd2f2da-11d5-4fa2-a27f-e832e6af3299"
        },
        "item": {
          "id": "9e518168-7c55-403d-918f-105b717fa554",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "45efdd45-e8c5-44dd-ad2a-13c694555d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f280a09e-8460-4d68-9499-ef9d422d1517",
        "cursor": {
          "ref": "73bd8809-3d6c-4349-a1cd-d83864832693",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "289dfb36-6ed6-4a13-8785-ef98320d2687"
        },
        "item": {
          "id": "f280a09e-8460-4d68-9499-ef9d422d1517",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0681246e-b069-4949-898e-1cc2d4b3d733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af9b02f-30bd-4fc5-97a1-96525909fec3",
        "cursor": {
          "ref": "f1f11596-f2c8-40ad-a903-12fa6a19ec28",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "72aaaa26-dcc5-440d-a6d1-2181cb507244"
        },
        "item": {
          "id": "0af9b02f-30bd-4fc5-97a1-96525909fec3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "df3a9e75-0896-47ca-955e-f149a10bc4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b945173f-9ecc-4aec-90c6-02c519ee49c2",
        "cursor": {
          "ref": "c4fa21a7-69d3-41a1-b1cb-8c91525ab704",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d3fd94fc-70a4-4bba-9f1d-c83b02ff125a"
        },
        "item": {
          "id": "b945173f-9ecc-4aec-90c6-02c519ee49c2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f43cc0fa-3f35-43df-91df-a69d3f53d7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4bb526-86fb-429d-9ca8-352d651884d1",
        "cursor": {
          "ref": "a7838f26-86a6-42ee-b867-c7aa4efbbd9a",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "70139c78-6673-4b14-ad10-8e00aac5686a"
        },
        "item": {
          "id": "ba4bb526-86fb-429d-9ca8-352d651884d1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6095b5e6-8871-4fd2-9818-5a1ee1ed3c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c69dff-a52e-4a74-9ef5-30fdf232d1d6",
        "cursor": {
          "ref": "c49eadcc-d37d-4aee-8a48-761df77870ee",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "05156cc0-976f-4d5d-868c-dc83cc08a335"
        },
        "item": {
          "id": "78c69dff-a52e-4a74-9ef5-30fdf232d1d6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4807372f-75dc-4d1a-87ea-f986b4d14639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a7370e-2848-41d6-815f-5360d03d84be",
        "cursor": {
          "ref": "49b9b4a8-c096-472c-ae3e-e716dad4eb2e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "44047af1-ca6b-45c4-b2cc-5e8b11c7a173"
        },
        "item": {
          "id": "49a7370e-2848-41d6-815f-5360d03d84be",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "92fec8cb-6f71-4d0b-bbab-49687fc908f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8faa6c-2a05-42de-bd78-4faefba76661",
        "cursor": {
          "ref": "021c8e57-262b-46e0-9ab8-3dbca293097b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e65f5c83-cda4-4713-8043-c543b9309344"
        },
        "item": {
          "id": "ab8faa6c-2a05-42de-bd78-4faefba76661",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0fb190e3-9c9c-43ff-9bda-d3346a8c80c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345a9daf-103d-4e72-b765-eb4a1cad828c",
        "cursor": {
          "ref": "2bbfdcfc-68f5-49e8-88ff-33a8822bd5ba",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1362b2d2-a4c5-4b09-907f-e3a967c2913a"
        },
        "item": {
          "id": "345a9daf-103d-4e72-b765-eb4a1cad828c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d2f44d3a-240e-4a42-b00e-17fd612c5d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e416db85-3479-44c5-acb9-bbd64cb5d371",
        "cursor": {
          "ref": "7c40de34-b911-4774-86a6-43c307ea74f0",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f3ad588b-d49c-411e-991b-591d520ebc29"
        },
        "item": {
          "id": "e416db85-3479-44c5-acb9-bbd64cb5d371",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "89a5d628-735c-4783-9751-c5d8ba89013d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cf3942-f877-4d4d-b0fd-2c465612c97e",
        "cursor": {
          "ref": "c1220dc8-6f4a-4e61-9e7a-702535e19b52",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b7cc77d4-17bb-4dc2-8280-99fe70bb76c1"
        },
        "item": {
          "id": "b1cf3942-f877-4d4d-b0fd-2c465612c97e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3bbeb79f-f1f6-4fd0-a7e3-9b8bd80b60e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07eb4eb8-03fe-45fa-aa29-6119dc8f5adc",
        "cursor": {
          "ref": "9a5ddc6e-c85f-43d1-bf44-d5388a41a0f9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b5fd41ac-cddb-4f00-93e7-0010c5fb7c5b"
        },
        "item": {
          "id": "07eb4eb8-03fe-45fa-aa29-6119dc8f5adc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "96aaac44-1f5d-4564-b49b-0984b4b15a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0c01c5-5a9a-41f8-b868-f7f5c1361866",
        "cursor": {
          "ref": "fdc5ca0f-8d08-41f1-a99b-7c56b91a12fe",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2fd0f62a-8131-49fa-82d6-4ae799c0b6c8"
        },
        "item": {
          "id": "1e0c01c5-5a9a-41f8-b868-f7f5c1361866",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ed33aeca-4c62-4acc-8a78-58ddac660ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c14178-8b1e-4a72-8426-8022e737e8a2",
        "cursor": {
          "ref": "5e8f90ad-4141-4460-b904-41acc4109b5f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "db55ee6c-54fb-42bf-8407-25ba840a7542"
        },
        "item": {
          "id": "99c14178-8b1e-4a72-8426-8022e737e8a2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "07fdcefe-05d9-4752-b161-91808ae0b440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b94126-802e-4fd2-bb67-13daa679e8ac",
        "cursor": {
          "ref": "3c40a7e2-159b-45f3-b1f0-bf475768e741",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aa98afc0-1fec-410c-8cd2-b6e2b4d9ab93"
        },
        "item": {
          "id": "e1b94126-802e-4fd2-bb67-13daa679e8ac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1fc60238-f298-4566-991a-90bf7dfa0735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0dcb8b-1e8a-4c14-b790-57e94d4b49ae",
        "cursor": {
          "ref": "5957c060-a72e-4b61-8d0f-7e84a5baedc1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f701a6ec-5bc3-49d5-80ad-69446f944dbe"
        },
        "item": {
          "id": "1d0dcb8b-1e8a-4c14-b790-57e94d4b49ae",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "af42cd0d-f39d-4232-8ebf-b87b7da08e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39ec4df-9b1c-4c7c-875c-14222442fcea",
        "cursor": {
          "ref": "799307fe-e2e3-43e1-bdaf-06d99e992d02",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8b886db7-dc57-4179-9df5-5d9a14669a3e"
        },
        "item": {
          "id": "d39ec4df-9b1c-4c7c-875c-14222442fcea",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "158a9268-efb0-4407-92ba-543e1a411900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d551eb98-2c1c-4bf3-8d55-4d02b1fe0979",
        "cursor": {
          "ref": "fc39369a-a2de-4195-95ce-615d6ba68120",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1b34bc6c-c6aa-4257-9318-c93b9e4c7552"
        },
        "item": {
          "id": "d551eb98-2c1c-4bf3-8d55-4d02b1fe0979",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3af176b6-d020-4c20-b10f-fdb1a29853b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86137505-f09c-4600-b375-83cf26e6935a",
        "cursor": {
          "ref": "926145d6-129c-4f34-99e2-783d80f8394e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "21360aea-95f8-4a34-aa89-337ec9963035"
        },
        "item": {
          "id": "86137505-f09c-4600-b375-83cf26e6935a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "84c44c5b-c7b4-40c0-90f8-d32f505f09ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01554950-7de5-4a37-9707-87d3ee5462ea",
        "cursor": {
          "ref": "8b5e5911-b9b4-4369-b0c4-25f64c7bdaee",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a6f85bf2-c878-443e-a71f-f40c499f8fda"
        },
        "item": {
          "id": "01554950-7de5-4a37-9707-87d3ee5462ea",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "98bb3564-2e8f-4f51-9d6e-df19162d3a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a61c8a79-98b1-4039-917d-55d89abc9c4f",
        "cursor": {
          "ref": "fb04d030-5d6c-4339-8c41-e91c015c0238",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "69ddd8ad-df1d-4632-9a77-32c3474db2c6"
        },
        "item": {
          "id": "a61c8a79-98b1-4039-917d-55d89abc9c4f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2be57c8b-9a60-481c-b9c3-b4e947350be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b868df48-f86f-4286-8881-72657113b00e",
        "cursor": {
          "ref": "0a55b53c-5688-420c-b782-b87551a09593",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8b243bdc-1db5-4435-945d-af7cce4511e9"
        },
        "item": {
          "id": "b868df48-f86f-4286-8881-72657113b00e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "049c9176-bd9d-4be1-8cc1-561fe929b240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5f5ccb60-678f-4759-85ec-f4df589208f5",
        "cursor": {
          "ref": "534823f6-0a81-43c2-bff8-626c0a92d2f1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f9dc6546-ce96-4589-b5e8-89e8672bcc63"
        },
        "item": {
          "id": "5f5ccb60-678f-4759-85ec-f4df589208f5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "29e312c5-2d9e-425e-9522-4e5be8ccde14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5ac6fa77-e501-4019-ac04-b666af437849",
        "cursor": {
          "ref": "578b5064-71c1-4a09-b83c-551ec5b800bc",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4caeea0e-72ee-4836-a1c4-707a89863945"
        },
        "item": {
          "id": "5ac6fa77-e501-4019-ac04-b666af437849",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6dcf1e72-ad94-44a7-8a7a-3a45f7a37481",
          "status": "Created",
          "code": 201,
          "responseTime": 7586,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eff0036-0829-4713-a7e6-06096267e6e5",
        "cursor": {
          "ref": "77d0ce6a-1e0f-4db2-9ac9-2ae48640a6fc",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b42e3285-1d48-4c94-b491-272e835578f8"
        },
        "item": {
          "id": "2eff0036-0829-4713-a7e6-06096267e6e5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f996ca5f-2f17-43b1-b96c-93cb6188f8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ec8e4f3c-a231-47ca-b1f9-832190cc8886",
        "cursor": {
          "ref": "26a5da79-733c-48e4-a45f-301bd80389f4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6676fba3-7054-4cdd-aa5e-bd68d7bc1666"
        },
        "item": {
          "id": "ec8e4f3c-a231-47ca-b1f9-832190cc8886",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2b4eed02-6f08-42cf-9ced-21a6a3b1641e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c2988056-66d0-4eed-a018-178b8dcc7086",
        "cursor": {
          "ref": "d249b7c9-de6e-4958-8fd0-2b9924b72b4c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "61b87822-9ba0-426f-a309-a40c31823229"
        },
        "item": {
          "id": "c2988056-66d0-4eed-a018-178b8dcc7086",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a41c2f1e-1ed2-450b-be17-508db9afdf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a277d8f-bb70-4612-9b1d-f435f8c6654a",
        "cursor": {
          "ref": "79903b35-1790-4143-977e-8246b36ae160",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "60bbaf22-99c3-45c5-aa49-1cbe268fbb9c"
        },
        "item": {
          "id": "2a277d8f-bb70-4612-9b1d-f435f8c6654a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "558a96e4-c5fd-4540-b5ed-fd0ed9094b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34547b1-818d-4632-be3c-9f1a0fbe4dd4",
        "cursor": {
          "ref": "a9de0ba6-fac7-45fe-9fdd-32d44b831ac4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6790dcd7-91c8-42bd-bb1b-27c75e6f336b"
        },
        "item": {
          "id": "e34547b1-818d-4632-be3c-9f1a0fbe4dd4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "89fee560-34da-4cf0-914d-ad5ab3be784f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c726ddf7-7f80-4c67-8a93-36831a96171b",
        "cursor": {
          "ref": "61fd0e0a-83b8-4543-ba23-fef5a4deec21",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6c6fea30-314c-4b85-ae64-b1cc54cbc3e9"
        },
        "item": {
          "id": "c726ddf7-7f80-4c67-8a93-36831a96171b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4adf3241-f29a-4524-93d3-0864539e1c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d69eb2-e022-4f18-acfc-03e11d000ec7",
        "cursor": {
          "ref": "ad724c60-342b-4555-958b-f97e6f8b89c6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2dc1a3b1-1fcf-4cca-8023-26a0376b6b62"
        },
        "item": {
          "id": "e4d69eb2-e022-4f18-acfc-03e11d000ec7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a50e2b03-75a6-4a31-9a04-624b586c6fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040fb6da-8fd2-4eea-a3d7-7a17389a3249",
        "cursor": {
          "ref": "0dc28873-11fa-4528-aa28-bfa88f988472",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec8a6215-d41b-4cf3-a3e4-31eac32eeb05"
        },
        "item": {
          "id": "040fb6da-8fd2-4eea-a3d7-7a17389a3249",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "53b9b1b4-ac58-456d-ab10-1500b47bc158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa4b171-f4d5-4f0a-b3f5-19bb46152c50",
        "cursor": {
          "ref": "e09497be-32f6-463f-be9a-6141383f5738",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "498c9be9-4933-4df5-98d0-ea56e5f869f8"
        },
        "item": {
          "id": "dfa4b171-f4d5-4f0a-b3f5-19bb46152c50",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4d315be3-20b2-408f-8493-cfbef0ae7358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7255324-f211-4621-8021-8788c95ff0d3",
        "cursor": {
          "ref": "aceb212b-f450-498a-bd1e-79e0cec2841c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5d337ebd-9bf6-4f5a-ad0a-d136995942db"
        },
        "item": {
          "id": "d7255324-f211-4621-8021-8788c95ff0d3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "59050c4a-59ed-4bf0-97d1-a063b5b39321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bffe5d3-ddfa-4568-b147-d51a34f51891",
        "cursor": {
          "ref": "19e6e12d-637c-4537-b365-fdf1e72bb081",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "52a8c291-fe24-4aa8-9b80-699ef4eb5f42"
        },
        "item": {
          "id": "7bffe5d3-ddfa-4568-b147-d51a34f51891",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "86d24915-4cc0-469b-9ac2-059e37661530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a935f9d2-0cc7-4048-ba01-9f64c299a40d",
        "cursor": {
          "ref": "985fb592-2bcb-44f7-9795-4a737048a88b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0f65dced-665f-4c92-9967-474d52c07ae1"
        },
        "item": {
          "id": "a935f9d2-0cc7-4048-ba01-9f64c299a40d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5a51f82e-8401-4595-8cc3-be0dba19fa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6856bff0-655e-46d0-b1e5-8a14fe10c154",
        "cursor": {
          "ref": "e96b3bfe-6c94-4ade-acfc-713cd91ea8c4",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f4f454df-3919-4dee-9ed5-1be7185b75e4"
        },
        "item": {
          "id": "6856bff0-655e-46d0-b1e5-8a14fe10c154",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ae25ab76-417c-4045-a056-868f8f6660ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6ccde2-7a99-4309-9e7f-cceefda25d0b",
        "cursor": {
          "ref": "e9ba41a3-3be9-4408-9a37-f21a4ab5da33",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0aa46516-9b1d-4d7c-b650-45706c959bb4"
        },
        "item": {
          "id": "3b6ccde2-7a99-4309-9e7f-cceefda25d0b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d5b96abe-750f-4223-995b-7c88e5f381b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b0939f-48dc-4e97-905d-717f81bd4eae",
        "cursor": {
          "ref": "950d2e24-e91e-486f-ab7a-78d1ad90a603",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9ae6a2af-5391-495b-b9ca-6e1739d9910b"
        },
        "item": {
          "id": "25b0939f-48dc-4e97-905d-717f81bd4eae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6af29a99-4d3b-4c69-bccb-cd39fd86eea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5994a17f-dbff-4652-a37a-121c8a176186",
        "cursor": {
          "ref": "488037cd-dc02-4f20-872a-aa82187497e6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c97c3bde-9dbc-4491-811f-86b88bf2a79e"
        },
        "item": {
          "id": "5994a17f-dbff-4652-a37a-121c8a176186",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1af97151-07ed-454c-8837-4575df718bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635707b1-9e70-4e11-860f-6854f4f6e5f4",
        "cursor": {
          "ref": "e2cb4bac-4ef1-4c9f-b71d-e5b9f9021b8b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3c936bfe-ba1a-4199-b8ed-cc3effee98d9"
        },
        "item": {
          "id": "635707b1-9e70-4e11-860f-6854f4f6e5f4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "106dd33b-208f-40bc-982c-c690ceb566ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b4a2e4-4cba-4fef-9b21-b1384738acbf",
        "cursor": {
          "ref": "19c47baa-350d-46bf-80ec-3724d57b8506",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "84425f9f-4035-4e21-898a-45d4ceda91c9"
        },
        "item": {
          "id": "49b4a2e4-4cba-4fef-9b21-b1384738acbf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c999f5f9-b60d-4aae-ab52-c2be6ad5a9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534123f6-4311-4411-b28d-0dd0f24188ce",
        "cursor": {
          "ref": "e67d8229-185a-4026-81b3-9a5256cb1811",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8c853a2d-963f-49d5-a1bf-acf7eba4e33c"
        },
        "item": {
          "id": "534123f6-4311-4411-b28d-0dd0f24188ce",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "30cc68f4-3f56-4c1e-8021-e39706aae536",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c6abf247-1698-4b75-9207-7770d14229a2",
        "cursor": {
          "ref": "bf85d360-d1b2-457c-88a2-c7a001aef9da",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "374bf694-2651-4802-b361-2b9b2e9403bd"
        },
        "item": {
          "id": "c6abf247-1698-4b75-9207-7770d14229a2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a9ff24d0-db8f-41b9-a711-5206241a3457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9958aeda-2d5f-4d19-9835-deceef686632",
        "cursor": {
          "ref": "bcc90793-1e0c-4da6-94a3-d8f7ff4382a1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3cf30ce7-abbe-47ee-8a25-c72fec3ca1ba"
        },
        "item": {
          "id": "9958aeda-2d5f-4d19-9835-deceef686632",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "20c5c75d-10a4-4b00-9d16-5c38deb1672e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c7a2a3-4f40-4ce5-a88e-b3d49089bff3",
        "cursor": {
          "ref": "f249659f-b183-4cfd-9673-eb38ac04e461",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2a10db27-6741-4ad4-bb5b-d4e04048f852"
        },
        "item": {
          "id": "d3c7a2a3-4f40-4ce5-a88e-b3d49089bff3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7a660dc7-71ea-45d0-a29c-055003712b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eaf715-53e0-4488-8b9f-58625b870898",
        "cursor": {
          "ref": "44f47aa2-293c-47e5-8716-9e028bb884d8",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "52b396ba-d846-4029-a221-ab2d0b90faa4"
        },
        "item": {
          "id": "a6eaf715-53e0-4488-8b9f-58625b870898",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5c1dd09f-57d0-4d26-8b6b-5f81ac0245ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaf1c44-f250-4d26-9888-5b4e81dee878",
        "cursor": {
          "ref": "ae5677aa-c596-4983-b09a-0c5b9dda69a5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "01b87df7-8015-4e6e-9eed-a9168376706f"
        },
        "item": {
          "id": "cbaf1c44-f250-4d26-9888-5b4e81dee878",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8084408f-4591-417d-a2e6-350e011fa8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90ea641-b8ba-4726-9345-b8fc74d26b3b",
        "cursor": {
          "ref": "c9d0a9fa-0af9-42ff-a7fe-ae475fe3416e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ee44c9d8-6020-4ca0-95d1-3a5bf6493829"
        },
        "item": {
          "id": "e90ea641-b8ba-4726-9345-b8fc74d26b3b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e0547f9e-ce60-4c07-99cf-a6d853929a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703a83ea-237f-45da-ac33-5aad882968f1",
        "cursor": {
          "ref": "14b04c50-5bdf-47dd-aa85-f3eab8730b30",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bdf8b69b-3535-429a-9bdb-8afc4104cf0d"
        },
        "item": {
          "id": "703a83ea-237f-45da-ac33-5aad882968f1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "43eb413a-dc75-4f67-83a8-daf6a88d8c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d33397-e3b1-4ed0-89bd-239a791fea6e",
        "cursor": {
          "ref": "d9f0a197-5012-4078-ab05-4f523d132a44",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "52ede3df-26d5-46cd-ab7d-fb5da6b143d4"
        },
        "item": {
          "id": "10d33397-e3b1-4ed0-89bd-239a791fea6e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eeb510fc-4790-4765-ab46-53a5f89ed986",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "7c364b8c-ae1f-4cdd-ae69-d6b656d3ec49",
        "cursor": {
          "ref": "216cc790-cab4-4fd8-ade6-6e96e23f4d06",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6b78065e-9c9c-496b-b951-85cd0e798162"
        },
        "item": {
          "id": "7c364b8c-ae1f-4cdd-ae69-d6b656d3ec49",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fef9bb27-a23f-4924-aaa3-a2bddbd08e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71658392-856e-4f1e-893d-b05f7003f7dd",
        "cursor": {
          "ref": "93df4ba3-7e82-4da7-924b-6f6b47caf9c2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "df967873-b796-4454-befd-0e7646c2e445"
        },
        "item": {
          "id": "71658392-856e-4f1e-893d-b05f7003f7dd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2cbf3c0a-d1bb-4d96-812a-3a8c724e80a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293a1836-2920-4f8b-b402-4bde796da51b",
        "cursor": {
          "ref": "e5df9b7a-383d-448f-8f33-94a1b63d3b8e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ef6e4f57-14eb-4f39-b756-4f90075c7f55"
        },
        "item": {
          "id": "293a1836-2920-4f8b-b402-4bde796da51b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e926f43-9555-4ad0-a1d6-aa6f3c39d4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2349dabe-7471-4c05-975f-ed4731165737",
        "cursor": {
          "ref": "28d2e6e0-31f1-4af0-88a2-0dfe51fa5861",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7d051619-c0aa-4985-9a83-afd691e454ca"
        },
        "item": {
          "id": "2349dabe-7471-4c05-975f-ed4731165737",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cb86c872-a372-4a5c-b25f-0e8cc252f5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7267b341-6666-40b4-a262-a54f88d3bc72",
        "cursor": {
          "ref": "e443ee94-d9b6-47fe-be88-0350169ac369",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "db611020-d892-403b-a97e-bc1b57a74429"
        },
        "item": {
          "id": "7267b341-6666-40b4-a262-a54f88d3bc72",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3f9efae2-02b7-43ba-b133-ecf08660e0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431abb10-27b3-467d-8a78-83f5090c405e",
        "cursor": {
          "ref": "55d6bdce-2905-4e07-b45d-b27c79cd4bed",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f058aec5-a974-4424-807d-133af754b06f"
        },
        "item": {
          "id": "431abb10-27b3-467d-8a78-83f5090c405e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4f54e2e9-e7e0-485b-aaf6-5a57c61a1936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c715d48e-345e-4c90-8a15-a2cb77dccf24",
        "cursor": {
          "ref": "f2e47ad3-c15e-42c1-88a4-327dc306fba5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0eed1d01-5447-46b3-ad84-12077440e184"
        },
        "item": {
          "id": "c715d48e-345e-4c90-8a15-a2cb77dccf24",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5d8ee63e-35fc-4cf2-82f0-3b25c460b891",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "6af96f5b-c360-49a8-9419-ffea0a6701a4",
        "cursor": {
          "ref": "50be42b5-4fc6-42bb-b023-939350466a95",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fff3d4cd-bcce-4111-9041-a39f0e705685"
        },
        "item": {
          "id": "6af96f5b-c360-49a8-9419-ffea0a6701a4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fd71b45d-40a4-47fe-a4c8-8bdadae3ae19",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "9e9a3276-cafd-4560-a5f9-24eb1ffd4f81",
        "cursor": {
          "ref": "57f3845f-6365-49a6-8fc5-117b9145b5b4",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ff38c2ca-fb01-4989-b586-747457d3d82a"
        },
        "item": {
          "id": "9e9a3276-cafd-4560-a5f9-24eb1ffd4f81",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0cf1109d-0b6b-4be5-8fd2-e9291ccce83e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "0e086f75-c4bd-47f2-8890-e43bc764d66b",
        "cursor": {
          "ref": "8310d5f8-38d9-488a-8963-60eb5beec238",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "47ac9e87-5934-4980-8f9d-3887a7521582"
        },
        "item": {
          "id": "0e086f75-c4bd-47f2-8890-e43bc764d66b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d6ab0e52-6341-490e-bd58-c239386f8605",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "a7f5d290-6d66-4575-908e-f881bae880e6",
        "cursor": {
          "ref": "38613b4a-2e1b-41ea-8a5a-fa65eab6e2db",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "31b4e49a-740e-4bf9-82d1-45ea5b686f5b"
        },
        "item": {
          "id": "a7f5d290-6d66-4575-908e-f881bae880e6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b884e5c8-94e0-47e4-8e3e-2381ae981323",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "b477dad0-bff4-40cc-b5bb-6681c357d1d4",
        "cursor": {
          "ref": "93480465-3cb6-4001-8472-bcc30b5f9461",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "89e8ded0-cec0-474c-9e41-826cb7af4c53"
        },
        "item": {
          "id": "b477dad0-bff4-40cc-b5bb-6681c357d1d4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7e31653a-c21a-4f62-adc0-3afe9ac0a0e5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "d9e3f236-a07f-442b-a322-e2fd3bb69444",
        "cursor": {
          "ref": "9158ae1c-3b24-4286-ac5a-444d9dbe670e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "214b53e5-9587-4425-aea3-34b275c99777"
        },
        "item": {
          "id": "d9e3f236-a07f-442b-a322-e2fd3bb69444",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eec747ce-1993-4398-a992-743d7aee86c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069c0024-cf1f-4e27-aeb8-c0c26f541ba0",
        "cursor": {
          "ref": "f398db9e-8eb4-4c16-88b9-adb7f39e43d9",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e966cfbf-8e26-4933-96cd-80b5e05361f7"
        },
        "item": {
          "id": "069c0024-cf1f-4e27-aeb8-c0c26f541ba0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "69a54b08-5831-4f20-b5de-0c8365705e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df338d83-2afc-469c-86f9-caf39f655f30",
        "cursor": {
          "ref": "5dac1fa9-4efb-4b44-aa6b-a70ad38bd173",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bc8c674c-1c13-4d95-ad85-cd49b04e80bf"
        },
        "item": {
          "id": "df338d83-2afc-469c-86f9-caf39f655f30",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2e5448c8-b8e8-4e71-9287-dc91d5efaa0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401f37e4-0f34-48b0-89b4-422f65b8a328",
        "cursor": {
          "ref": "e7191b03-bd0c-45b3-a3d3-d24dd7c0d240",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fee12a75-defd-4b67-a0f3-03839050b395"
        },
        "item": {
          "id": "401f37e4-0f34-48b0-89b4-422f65b8a328",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e4489b02-8406-4086-8f2b-c896d23cb209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0de05f0-6d2f-4a11-81de-a4d1ef4dd3ad",
        "cursor": {
          "ref": "7eeb5f57-0e6c-49c7-b059-e62aa0655e4b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "229b935f-f10e-487e-9c6d-8e0200703462"
        },
        "item": {
          "id": "b0de05f0-6d2f-4a11-81de-a4d1ef4dd3ad",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e2aa76f0-a2dd-4268-853f-0bc508a6b432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4310da10-31f1-4127-a62d-1e9863c55167",
        "cursor": {
          "ref": "a7d2bd74-d5f2-48bf-9bc8-e798490abfb2",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7b53439a-aa27-4990-834b-760028ca46f6"
        },
        "item": {
          "id": "4310da10-31f1-4127-a62d-1e9863c55167",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2ec91ba3-611c-41bc-8ae4-a528d3e16ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5058ca-926e-4080-91c2-4a9609a1e118",
        "cursor": {
          "ref": "47324481-025b-4e27-bec6-aacccdb61a81",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "834e2ff3-4825-4fac-a8e7-cf5873b2a2e6"
        },
        "item": {
          "id": "2a5058ca-926e-4080-91c2-4a9609a1e118",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d2dddc4c-9a93-4d10-b000-de07b72b12e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e53a13-d3f2-4a0a-9c30-5197c0e9c5bf",
        "cursor": {
          "ref": "9b0fb41c-8274-4c9b-ae2f-ae6be81953d6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d90041f8-bad7-4fde-a545-75bf220fa75a"
        },
        "item": {
          "id": "b5e53a13-d3f2-4a0a-9c30-5197c0e9c5bf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8445a09f-3934-4b06-9fcd-ed5ddbece03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07e4e8b-6f02-4248-bfed-6a66ea24c489",
        "cursor": {
          "ref": "7651c665-5f74-4b35-b87d-bfd83468aaa2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e19aefd8-ca9c-4a2f-8f20-c743283e4e01"
        },
        "item": {
          "id": "f07e4e8b-6f02-4248-bfed-6a66ea24c489",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1ed422e5-ae80-4daf-99db-3de1fa9218ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368c4bd8-3eb3-45ed-a0b1-c80567ca20e3",
        "cursor": {
          "ref": "0565adf3-28cf-455d-b35b-3b22cb89aba9",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e06d1329-fa9e-47c5-bba1-9c13d68da96c"
        },
        "item": {
          "id": "368c4bd8-3eb3-45ed-a0b1-c80567ca20e3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c8d55f02-422f-4f53-8fb5-f6c68d85fe34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3294ec7c-8261-415d-afad-8e7a4a20943a",
        "cursor": {
          "ref": "b601829b-46da-4116-9535-1a7273d44a19",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7c39442d-a93f-4882-9eca-0bf7e4361ff3"
        },
        "item": {
          "id": "3294ec7c-8261-415d-afad-8e7a4a20943a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a96c5bd8-ed54-4d46-849f-942eb59b91fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39aa49e-6775-4044-90fd-0b5e95e1e79a",
        "cursor": {
          "ref": "34b50e97-3535-46cf-abbe-7218ea2ff913",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4511a648-1e17-4fa7-91b6-59f05f19c153"
        },
        "item": {
          "id": "a39aa49e-6775-4044-90fd-0b5e95e1e79a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "68b11741-a07b-4b62-b85a-7fae5c35b927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a0a0b9-f281-44b8-ac11-f326e8ceae7c",
        "cursor": {
          "ref": "3831c6c6-5f7d-4cad-b69e-87a83529050c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "31440ee7-6610-488f-af1c-eb761dbb517a"
        },
        "item": {
          "id": "61a0a0b9-f281-44b8-ac11-f326e8ceae7c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "747d3e93-7c3d-4715-9b71-85dc532f8f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4847ea28-7ab6-4b19-93dc-45782faa88d6",
        "cursor": {
          "ref": "9b0762ac-6faf-4675-acbd-b6147fa0bb75",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ce4986dd-a462-49fd-8c60-ca4000b982ff"
        },
        "item": {
          "id": "4847ea28-7ab6-4b19-93dc-45782faa88d6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "39613d8e-259b-4e7c-8b3a-e2b829548968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b690d1a-0982-4c03-ab90-4cb5d5d3e6ff",
        "cursor": {
          "ref": "7cce941b-486e-4446-a2c1-1f808c5e8931",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e999bd45-1d1a-43f9-89b0-14c96dc69900"
        },
        "item": {
          "id": "6b690d1a-0982-4c03-ab90-4cb5d5d3e6ff",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e670506e-8b9b-40f7-82e9-b42d184cd04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a2f616-a55a-43ba-a8b0-0cbeeb3115c9",
        "cursor": {
          "ref": "8864ef38-e92a-46f0-be46-edc01bb4c0b7",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d51d4d5f-1546-4344-a11b-1cea410903af"
        },
        "item": {
          "id": "10a2f616-a55a-43ba-a8b0-0cbeeb3115c9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "61946607-1a69-493b-b984-8958ee79a3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3e9433-54c9-4a42-ac5b-50d4dc2a33ac",
        "cursor": {
          "ref": "b92d3c56-cf48-4dc1-993d-2990fe15c54f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "89752bc0-cfc9-431b-ae9b-3a0082f848a7"
        },
        "item": {
          "id": "ed3e9433-54c9-4a42-ac5b-50d4dc2a33ac",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4cf5b072-9047-4235-aef7-8bd171e778b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd210296-7a78-4d86-8ea5-0f9b4c223147",
        "cursor": {
          "ref": "5f2be947-5cab-496d-8db3-0d981c04cda3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "88cb58ef-1cd5-4e44-8e3d-266aecdc21e1"
        },
        "item": {
          "id": "cd210296-7a78-4d86-8ea5-0f9b4c223147",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "40d71f07-794b-408e-8ad3-963a6df78294",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "27953074-8ded-4744-a55d-6aa9b6916ce5",
        "cursor": {
          "ref": "57dd5cfe-3c7d-43da-9c6a-70588d2a870a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b4fc8fc2-40c1-46c7-b54a-65f52aae15ef"
        },
        "item": {
          "id": "27953074-8ded-4744-a55d-6aa9b6916ce5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "65704a2b-e8b9-4797-b767-385445c82ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57da3c4d-3d60-4060-bcf0-01f97eaa0b4a",
        "cursor": {
          "ref": "186b0082-ad43-45c7-b304-13ecb2491f6d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f2473afe-b0b3-47bf-9e07-33045254033c"
        },
        "item": {
          "id": "57da3c4d-3d60-4060-bcf0-01f97eaa0b4a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3ea9bfcf-450e-47a9-a0ec-70687cccdc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d274c11b-fce4-49a7-b5b7-67e541e2bce8",
        "cursor": {
          "ref": "69143b50-0e1a-45f0-b642-02aad072874b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "75a6cdc3-54b4-44a9-88c7-ba6733da9e02"
        },
        "item": {
          "id": "d274c11b-fce4-49a7-b5b7-67e541e2bce8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "37412e32-e672-4cd6-b1db-789678e9be4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f77fa9-fc32-40a0-8db8-2d0dd465f703",
        "cursor": {
          "ref": "3ce4c92e-6d9a-4083-a9ec-afccceaf9c7c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5d47f1fb-78ae-4f6e-9499-8429982195ea"
        },
        "item": {
          "id": "62f77fa9-fc32-40a0-8db8-2d0dd465f703",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0d99424e-815b-4e21-bd7f-ba41b3bc7bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e6ecb8-fec1-468b-8f60-17575075e301",
        "cursor": {
          "ref": "7dfc7982-6639-4972-b953-93c342598afa",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "81dfb4ca-86a0-4f1a-b0f8-d0de87e04d86"
        },
        "item": {
          "id": "d5e6ecb8-fec1-468b-8f60-17575075e301",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ac4c9a0f-1d30-4a23-9149-cc6f2bafe178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b708d4-d0f7-4918-94aa-820d840c9da4",
        "cursor": {
          "ref": "5044f793-5841-441d-b81f-0ebafec280ac",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ee0ac28f-cc6b-4698-a9ea-d4bdc5797ee7"
        },
        "item": {
          "id": "32b708d4-d0f7-4918-94aa-820d840c9da4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8d0894a2-e378-4da7-b466-655c64d605e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4b9ae2-2c7f-4e0e-abb7-a7d12fcf294b",
        "cursor": {
          "ref": "922e87b0-f0b9-4b81-ac18-835c753f3f40",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d5a81888-ac70-4fa4-861c-98e3f4fed490"
        },
        "item": {
          "id": "4a4b9ae2-2c7f-4e0e-abb7-a7d12fcf294b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2b6e3e0a-2d03-42da-b2ba-4d56e2f02ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc3fe5b-2628-4e90-aff1-eb76e68a29b0",
        "cursor": {
          "ref": "36a489ce-d64f-46fc-867c-5ac10df8dca6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4f15d52b-9358-4836-a034-3f05ffaf7aa7"
        },
        "item": {
          "id": "1dc3fe5b-2628-4e90-aff1-eb76e68a29b0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "234bb79a-496a-411c-b781-7f9e6d62f467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c11fbaa-08bb-431a-a154-090c2b2046b7",
        "cursor": {
          "ref": "93fa880e-918c-47a0-85bf-28b4435df527",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c8419d8c-ed0c-4706-bd6f-9c4dcb3af84e"
        },
        "item": {
          "id": "9c11fbaa-08bb-431a-a154-090c2b2046b7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a684cb53-cc7b-4e80-ad9d-de60941cd70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d239a6c-5b6e-46b8-ac10-289a3a5591c3",
        "cursor": {
          "ref": "211d9558-4b41-469d-bf35-6df7926541e5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3497896e-8d8e-4bde-90dd-f53fbf2ec8af"
        },
        "item": {
          "id": "3d239a6c-5b6e-46b8-ac10-289a3a5591c3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fcd56806-f55f-44ec-b23b-22f9d5f69c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5fa5fb-b217-439b-8aef-00b4f6d0a9f3",
        "cursor": {
          "ref": "62cfa159-0c43-4c72-a1cb-5bf89455d893",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "69f83d46-127e-4283-ab2b-a026e3342983"
        },
        "item": {
          "id": "ce5fa5fb-b217-439b-8aef-00b4f6d0a9f3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0ea0a6e0-c499-47e0-b460-12ac2120dfb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a994c0-ce8b-4847-a413-d9b1d4816885",
        "cursor": {
          "ref": "1a6ddd8a-80d3-4fbd-b45b-da4824112ad4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ce7a31b9-6bf3-4967-8952-ba4610d4ccb7"
        },
        "item": {
          "id": "61a994c0-ce8b-4847-a413-d9b1d4816885",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6928f826-eace-4f70-a648-efe0d0aa9ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d582f1-60be-40c9-9cb6-36557b363a9d",
        "cursor": {
          "ref": "38048775-6770-4397-bf33-b75730cc12b6",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6ce3442d-14d7-4a6e-89d8-8e023ed72b94"
        },
        "item": {
          "id": "34d582f1-60be-40c9-9cb6-36557b363a9d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c5cecee1-c300-48f8-af1d-f2179a566ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbe14f5-79f4-41d8-8d9e-86a3e7f32d71",
        "cursor": {
          "ref": "895b7d53-3f02-4655-a721-24a5a93a0aa1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f50e1266-c40f-42c9-a2a8-58cb5d4abe50"
        },
        "item": {
          "id": "4dbe14f5-79f4-41d8-8d9e-86a3e7f32d71",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2e23ed90-322a-443e-a39b-34aa5778c765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a4c201-cb97-42a6-bc4b-b16935e8c2b9",
        "cursor": {
          "ref": "a5ee4038-9603-43fb-a0ec-b49d3e8d8973",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "17b6b0ad-bc3d-4ce8-a1b9-f50f61435421"
        },
        "item": {
          "id": "d5a4c201-cb97-42a6-bc4b-b16935e8c2b9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f740e271-322a-42f9-911b-ce2b2755b054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d440a7-6de4-483a-8d38-5c9656530599",
        "cursor": {
          "ref": "531afafc-2480-4119-a784-9f8c43eb7542",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7c85d3df-f08a-4369-8656-3f662d766eba"
        },
        "item": {
          "id": "15d440a7-6de4-483a-8d38-5c9656530599",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cc03c324-c5b7-4240-9bef-c57247deb922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92827432-07aa-489e-9763-48c0aad043c5",
        "cursor": {
          "ref": "f5a40640-e731-4b7b-8e93-385f91ae6bb8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1796c92c-8337-4802-af8b-6233858203de"
        },
        "item": {
          "id": "92827432-07aa-489e-9763-48c0aad043c5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a4e885f1-c8f5-42d2-820c-4ec75a9781a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162840d0-4950-4e87-9340-94c9b715092c",
        "cursor": {
          "ref": "d7b8124e-33b9-4c4e-b2af-02a4aee722fe",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "19265c1f-f0b8-4d05-9c1f-0e45e29523df"
        },
        "item": {
          "id": "162840d0-4950-4e87-9340-94c9b715092c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ec29ea17-f976-481c-98f4-d33b5fa97994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c8acc6-0628-4e41-84e6-243fd476dcdf",
        "cursor": {
          "ref": "71b5993a-47a7-41cb-a77f-c4c245146748",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c77de497-6bb9-4a8c-bd41-723bdc6c5cc2"
        },
        "item": {
          "id": "91c8acc6-0628-4e41-84e6-243fd476dcdf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c95c0956-1722-43c4-8fa1-f031dcd39ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01663175-f35b-433e-b328-207e3d74136c",
        "cursor": {
          "ref": "ab4158e4-852a-4efe-9fcc-cd514699f7e7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d88cf7ea-df43-4128-9b91-70b6134bfcdd"
        },
        "item": {
          "id": "01663175-f35b-433e-b328-207e3d74136c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0cd24045-0509-43f2-aa18-5b23bd6fdae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd23a47-741a-48e4-b0cf-e432c21f77ff",
        "cursor": {
          "ref": "a6eb54fe-c65c-4542-bf88-5a02eb12a07d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "009c999b-1fb8-4e95-be41-e2f31b56ab78"
        },
        "item": {
          "id": "7dd23a47-741a-48e4-b0cf-e432c21f77ff",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "298acfe0-4162-432d-ac37-c45761de2cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a739517f-c80e-43e8-a91e-0747cf693cf0",
        "cursor": {
          "ref": "9e2cf9e2-7264-4a6c-8523-82f4453d3061",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dd22544b-0761-4b20-a721-7cc1b9180fa2"
        },
        "item": {
          "id": "a739517f-c80e-43e8-a91e-0747cf693cf0",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "708d14e8-0eb0-40f4-929e-5ea21613429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baa0b3c-f885-4d95-a6d4-82d60d0d9c32",
        "cursor": {
          "ref": "2975eb91-0bcb-4f72-94dc-96e3e5afc37c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0f5882c2-430c-404f-ae15-df87917b26d9"
        },
        "item": {
          "id": "5baa0b3c-f885-4d95-a6d4-82d60d0d9c32",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d09b3021-8ac3-4eea-a029-19fb32a82e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f440aa-9e0c-4198-9c51-e0eb7b1438bb",
        "cursor": {
          "ref": "8f2397c0-44d5-4645-b41a-2ccd67396c63",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dbdd48c6-6a53-4d04-a4d4-16c8829e8792"
        },
        "item": {
          "id": "83f440aa-9e0c-4198-9c51-e0eb7b1438bb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bc6ca8d2-9dc1-4d34-8276-e17e0cde8279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531598ca-8c45-415b-8e25-de2c63d9a89d",
        "cursor": {
          "ref": "4e4cfbb1-70bf-4a0c-8b4e-aec9e92bb5ce",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b1edad96-5681-47cc-8641-f26cdd07fc9a"
        },
        "item": {
          "id": "531598ca-8c45-415b-8e25-de2c63d9a89d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e7eb7fce-51d0-4854-a41f-208f0c245893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d2dac-8b30-4b35-bb53-8c9db525b360",
        "cursor": {
          "ref": "2ebfba7d-345d-452f-aee3-b8d66aeb41ea",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8b8ac5b8-4d00-49c3-970a-a78fe45263cd"
        },
        "item": {
          "id": "7a7d2dac-8b30-4b35-bb53-8c9db525b360",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0946a6cb-d5f9-41aa-b569-050daeb61baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a81885-1cd2-42a9-85e5-c30a2ceba35b",
        "cursor": {
          "ref": "2d3271f8-896c-4756-89ed-bebfb858556d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c74f9e22-0197-4259-9d3c-92bf628ab193"
        },
        "item": {
          "id": "c2a81885-1cd2-42a9-85e5-c30a2ceba35b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dce2d0e6-4032-4465-a67f-0580813c5624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e4accc-1861-4607-84ca-fb5058fc18aa",
        "cursor": {
          "ref": "c6c42557-75f0-4e81-9995-6b2e7445f484",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ea6254c8-2b44-43bb-9f2b-0e0d4a84bb77"
        },
        "item": {
          "id": "d1e4accc-1861-4607-84ca-fb5058fc18aa",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bc1bb38a-a8dc-44ae-b48d-fd06ae523c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d38e05-8f43-4302-b9bc-26146c0905bb",
        "cursor": {
          "ref": "208205ed-4b4a-4b58-be23-76ec1b2eee37",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "34aaacd8-f5ef-4e5b-a788-fdf5a40687e5"
        },
        "item": {
          "id": "29d38e05-8f43-4302-b9bc-26146c0905bb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "53f0cd96-6181-4791-9af6-5a5844c4c37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4d6da4-cfe3-4c4c-b7c4-2a2c0e707ad8",
        "cursor": {
          "ref": "45878c9b-b721-4c5e-bc35-3d09a49571d7",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e50e8140-1035-420a-a8c9-34df78daa4a5"
        },
        "item": {
          "id": "1e4d6da4-cfe3-4c4c-b7c4-2a2c0e707ad8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "091a763d-de0e-4cc0-b91a-5bda8f793d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ab7f72-61aa-4893-8722-13e781e469f2",
        "cursor": {
          "ref": "ba0a22f8-0b61-434b-bd97-1043a7551f22",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a2a8176a-5a75-4f64-ad65-db9ac957aeee"
        },
        "item": {
          "id": "37ab7f72-61aa-4893-8722-13e781e469f2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ff544b60-3baf-486f-95a3-84460b79184b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a5c733-ece8-4f6b-93d7-d4696045413a",
        "cursor": {
          "ref": "9817d9a4-97c9-445e-8fec-5128f12553f1",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "97492184-6050-4d71-8746-c77ef03a682b"
        },
        "item": {
          "id": "35a5c733-ece8-4f6b-93d7-d4696045413a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b67a9d88-10de-4c7f-aa36-0fafd18487b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2308a2d-eeb4-492d-9336-f7a447418ebb",
        "cursor": {
          "ref": "845233da-f3e9-44c3-bba6-3f378a20931f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b3527671-54d3-491a-a3a9-8e6c5e48f500"
        },
        "item": {
          "id": "c2308a2d-eeb4-492d-9336-f7a447418ebb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d6778f99-525d-47ee-b65a-f23d6b513331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd8e9e0-399a-4013-b886-cd6afef29ab9",
        "cursor": {
          "ref": "9389972c-9be2-4e6e-b9e1-aa00cefe2c14",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b27c81c6-2bd9-468d-bbb1-8623557583ee"
        },
        "item": {
          "id": "4cd8e9e0-399a-4013-b886-cd6afef29ab9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c631cf5d-d7e3-4e4e-bfb8-4768c6b33e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc648d4-f36e-4d1f-86cd-727c1dde50cd",
        "cursor": {
          "ref": "011163a8-d712-495e-8cb5-f31db45bcb42",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6467c011-0369-40b1-87f1-db39d75df535"
        },
        "item": {
          "id": "adc648d4-f36e-4d1f-86cd-727c1dde50cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "155a70bd-5d99-435b-b503-69fcb0e0f51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886c1ce4-a050-4d4b-b1cb-b83698911209",
        "cursor": {
          "ref": "2c1d52d4-3ff8-4e20-b412-a95ce6745ce7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ad725d6d-2c9f-407b-8383-ef663ace9a68"
        },
        "item": {
          "id": "886c1ce4-a050-4d4b-b1cb-b83698911209",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2ce51eae-254d-4b9e-899d-41938bc4df68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e301032-71f8-4ca5-acce-f84a2517234a",
        "cursor": {
          "ref": "913ddcbd-5f1f-4962-b2f0-12620c592fb0",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c10ad330-859f-419b-97ae-1f0aba2a7b36"
        },
        "item": {
          "id": "1e301032-71f8-4ca5-acce-f84a2517234a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e179bd19-d4d2-4b72-8fe8-e217895ea713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008402b2-8456-41e1-b03c-61933d75f5b6",
        "cursor": {
          "ref": "5099a562-c894-4202-8723-4fe5114d32b0",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cee40b5e-cbc3-43bd-b6c0-384989e23f84"
        },
        "item": {
          "id": "008402b2-8456-41e1-b03c-61933d75f5b6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d84d10d5-6e9b-4b00-8de7-4493cfeb2fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61531919-bc15-49a5-b188-5d3f45999485",
        "cursor": {
          "ref": "a8770e25-4d6b-419b-b0a6-2c0193c70ae9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fa0ff23d-ce0b-474c-aba9-abe1d6c11c05"
        },
        "item": {
          "id": "61531919-bc15-49a5-b188-5d3f45999485",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "80732d5d-b6a7-4b0b-8b46-e367b250daf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38757c3-293a-4fb8-8faf-0d88f934dc5e",
        "cursor": {
          "ref": "84938887-4d15-4aa7-804d-8abe7911cc3e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f25b40e7-0805-481a-91cf-0910f145b156"
        },
        "item": {
          "id": "c38757c3-293a-4fb8-8faf-0d88f934dc5e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c41d140c-7642-4a3d-9ec8-a199ac8a72a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12bde2b-6115-45a2-841c-0fc345def60b",
        "cursor": {
          "ref": "d94f8837-5e3c-460c-90c3-1a050c7fb856",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0dc88b4d-788a-4bda-a9cd-6bc218655ff1"
        },
        "item": {
          "id": "a12bde2b-6115-45a2-841c-0fc345def60b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4c538498-72a9-422a-949b-f952779ca8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f16453-aa52-4d37-8c1f-1e1d0e4271c8",
        "cursor": {
          "ref": "07770074-2ab9-4dfc-b7bd-f95b096c8686",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1c0a2ca3-e432-4e09-a8c4-4918f412ba1d"
        },
        "item": {
          "id": "66f16453-aa52-4d37-8c1f-1e1d0e4271c8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "986b2f11-3400-4230-a838-be2a8c7de5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79da073b-89b8-400e-b355-7007a9f7868d",
        "cursor": {
          "ref": "ebad1d50-ee8a-45d5-83c9-92da09b2e85b",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "913ad96c-8427-45ad-a5f3-fd4cfa7c3895"
        },
        "item": {
          "id": "79da073b-89b8-400e-b355-7007a9f7868d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0fc840cb-7fec-4807-b0dc-e8db16f8ac6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b84acd-53c5-4fcd-aa9c-c00de690bec9",
        "cursor": {
          "ref": "8e353ef8-b357-40d5-a85e-1e7cd3594186",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0d6fcf5a-f322-42b0-bee3-955efe2221cf"
        },
        "item": {
          "id": "31b84acd-53c5-4fcd-aa9c-c00de690bec9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "926e8439-2530-48a6-a932-9a47c357edd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7565bccc-310b-4dd6-b905-8729337d142a",
        "cursor": {
          "ref": "27cded72-fa95-47d5-91bd-7447a1051043",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "475057a6-be97-4a93-9c86-641ebf7dbdd4"
        },
        "item": {
          "id": "7565bccc-310b-4dd6-b905-8729337d142a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b3d810eb-7efd-4131-963c-216b27e20f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc28ad75-1ac8-441b-9b6d-8e5e8c1b2eec",
        "cursor": {
          "ref": "df282d9a-7c3f-43a1-8bf7-cb85a6f47ced",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f9c5fccb-9546-4f43-932f-d1da677bba95"
        },
        "item": {
          "id": "bc28ad75-1ac8-441b-9b6d-8e5e8c1b2eec",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "40758e03-183a-4ba4-9c3d-2832fd95237b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0445437-8ea1-4f7b-8d0c-694e2b3462ee",
        "cursor": {
          "ref": "c53de519-fbc5-4602-8bd7-85c354970a71",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b5671ed6-99d2-4f55-bd1c-b5aee7dfcc6b"
        },
        "item": {
          "id": "a0445437-8ea1-4f7b-8d0c-694e2b3462ee",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b859b67e-3c95-4fd5-b545-2328ae33d7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a804b6-922b-4e54-af0a-a07e150ecf6b",
        "cursor": {
          "ref": "73d9ff48-b237-4474-8161-2a19ad3578ab",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f97f1f5d-19ff-4bac-85e4-70026b408966"
        },
        "item": {
          "id": "79a804b6-922b-4e54-af0a-a07e150ecf6b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "da4cbef2-d8e9-4a64-a974-f79bbe548314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e96c5f-e03d-4808-9f5b-a723eb2cbbbb",
        "cursor": {
          "ref": "3c771b0e-3e96-4db3-b972-45aea24864d2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1b95707c-65f6-4237-acff-cc37b4ab6e90"
        },
        "item": {
          "id": "e6e96c5f-e03d-4808-9f5b-a723eb2cbbbb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4ef54838-db1f-46b7-b303-7c3342ff9518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d94e6f9-bdc3-4f8f-bbb8-81ac3b3ff2fb",
        "cursor": {
          "ref": "ab74be52-a067-4400-83e4-1cc197fc41ab",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d2a2e12d-789f-4c62-8bbd-026fcbd39373"
        },
        "item": {
          "id": "6d94e6f9-bdc3-4f8f-bbb8-81ac3b3ff2fb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5af04fb1-7501-4ce4-8b78-40d8a6ca38fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd42769-e693-4cba-b37d-da798a320b54",
        "cursor": {
          "ref": "71ab9840-a5ed-4457-b503-73fd268e0c33",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d8089909-c447-40fc-8441-4d71bac61d63"
        },
        "item": {
          "id": "bfd42769-e693-4cba-b37d-da798a320b54",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "aa3afba0-42bd-43aa-a549-2e37f12d6b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e496625b-21be-4e6c-ab77-1fccf211cbc4",
        "cursor": {
          "ref": "6fccd7b4-4509-4310-a2fe-836aa52109db",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ea0f3797-5e56-460a-95b7-5e32d10c58bf"
        },
        "item": {
          "id": "e496625b-21be-4e6c-ab77-1fccf211cbc4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a4d90827-c994-4aea-b5ad-b892b34c1ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b88d40-188a-4221-a5b5-59f0f4db5e24",
        "cursor": {
          "ref": "047e8092-0f58-42da-b2a7-04901680acd5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3ffc7fc5-044a-48b6-857f-963c23dcd6a3"
        },
        "item": {
          "id": "15b88d40-188a-4221-a5b5-59f0f4db5e24",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7036903f-c9ab-4f52-b8da-219890785e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f556c264-9eba-4364-8ff7-cb19d4299216",
        "cursor": {
          "ref": "3b07c5bf-929a-4467-82e1-abae0f058267",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "490fc452-ced0-453a-9216-d27c5a3b8137"
        },
        "item": {
          "id": "f556c264-9eba-4364-8ff7-cb19d4299216",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "674f7803-64ac-444b-9e97-88c6cb9c5445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6867bd-0b1e-489a-bc87-353e4efd644b",
        "cursor": {
          "ref": "48ae605d-3db2-4881-865f-0c646388a5ab",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c70e55a8-3859-4189-b015-97081e2fde2a"
        },
        "item": {
          "id": "3c6867bd-0b1e-489a-bc87-353e4efd644b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "38058e4c-0a95-489f-ac65-19dfe8a07f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12ec7f2-60e1-4b27-a1df-57a1ba97cc2d",
        "cursor": {
          "ref": "14134022-f7af-4382-afb2-173c41ca9a4e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a000008d-37f9-4344-8891-1774d86c49ce"
        },
        "item": {
          "id": "e12ec7f2-60e1-4b27-a1df-57a1ba97cc2d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ef0c4e35-0feb-46d1-9edd-8c93798a4531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5d4518-3001-4bac-b577-e86c2b08c23e",
        "cursor": {
          "ref": "e417e359-4cfc-4d5e-89ee-c89e06e232a3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fa453e02-bc34-4fcf-8a7d-76cd24e1393e"
        },
        "item": {
          "id": "de5d4518-3001-4bac-b577-e86c2b08c23e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e58389bc-b921-4057-88ff-8ba0ff0b4d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b38992f-38d7-481f-8fcc-170cbca20685",
        "cursor": {
          "ref": "8377b5fe-9124-422d-8f99-bac5af7f1c73",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "abf80f7f-c1fe-4422-a2b8-180e2d3c18ef"
        },
        "item": {
          "id": "8b38992f-38d7-481f-8fcc-170cbca20685",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "738f79ea-7a4a-436a-af84-b1143a877f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87727550-838d-421a-a013-14e5a7896468",
        "cursor": {
          "ref": "3d2de468-eb6a-4561-9bf2-a30e0db25d5e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "179c7215-3527-43e6-86dc-3eceb0895b85"
        },
        "item": {
          "id": "87727550-838d-421a-a013-14e5a7896468",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ab71d1ea-a866-47af-abdd-57f005de19a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29da834f-2404-4795-954d-96b93fca3f6a",
        "cursor": {
          "ref": "7cb5a8e7-a410-419f-9f03-c64440492ede",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9611a50d-91bb-42f6-979c-7d1e17877176"
        },
        "item": {
          "id": "29da834f-2404-4795-954d-96b93fca3f6a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "17a162f2-2e48-4d63-9111-51e84063a90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3c730a-7734-434b-aef8-22eec536eee1",
        "cursor": {
          "ref": "05ec8f71-430b-47f2-b676-0d3eb26732f3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "65227f7a-6090-47cd-be11-afe99142c115"
        },
        "item": {
          "id": "9d3c730a-7734-434b-aef8-22eec536eee1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c773c439-95c2-4c28-b0ca-0d8e0e45ebaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eb3f68-b23a-4b81-ac94-cd2b4360f7f8",
        "cursor": {
          "ref": "14c48dab-0ac7-4584-9d2b-72500deb0c0a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "281d3242-0263-4e65-bf8e-a392120adaad"
        },
        "item": {
          "id": "d8eb3f68-b23a-4b81-ac94-cd2b4360f7f8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "542733aa-f14c-40a9-a65d-f2e7558074a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c559f7-0bd3-41b0-b7da-58659aa9d801",
        "cursor": {
          "ref": "2d875de7-8822-404b-84c2-71114e8c6b68",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7d932d98-eed2-410b-b54c-5cef644dd477"
        },
        "item": {
          "id": "61c559f7-0bd3-41b0-b7da-58659aa9d801",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8ef1b344-d2f5-42b9-95b7-fb55be2ff446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1353de4b-d939-465e-bbe3-1b5954e4759b",
        "cursor": {
          "ref": "df385f3c-662b-4b8d-8012-9e9bcdaa03e3",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d5a34a18-b062-424e-bd85-9e1277600065"
        },
        "item": {
          "id": "1353de4b-d939-465e-bbe3-1b5954e4759b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "11319656-d412-4af7-b251-f82512e02352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae791379-619f-4468-a293-5effe8b937b7",
        "cursor": {
          "ref": "20a9186d-cf33-46b3-8945-77d0f2e43756",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4a5f99e6-5fac-4aa8-9e0c-bf0712e54e26"
        },
        "item": {
          "id": "ae791379-619f-4468-a293-5effe8b937b7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8d2598ef-d792-4b5a-aeb5-8600cddac55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff2df73-8efb-479f-93fb-f9a0405047df",
        "cursor": {
          "ref": "ab8600a9-d3c7-40c9-8bd6-2836aef94af2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "200bb9f2-7718-47f8-95cb-6e39b8142007"
        },
        "item": {
          "id": "fff2df73-8efb-479f-93fb-f9a0405047df",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8741f9f5-7025-4088-99d6-bf84e3371a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4770ef2f-c209-4e06-bad8-6c53aad30f4b",
        "cursor": {
          "ref": "79e58308-744f-442d-92a8-bb4ade053576",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e7ebac0c-9bc5-40b9-b3e6-69b3d745d31d"
        },
        "item": {
          "id": "4770ef2f-c209-4e06-bad8-6c53aad30f4b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6faf2d96-c93a-4f44-9fd7-08e00e816b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59244429-a9b8-491b-a3ba-1e84927593a7",
        "cursor": {
          "ref": "8744e675-1e2d-4570-9331-28ae5cd34ec0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5b02876d-cb35-4d5b-a4d5-6bc64338d70b"
        },
        "item": {
          "id": "59244429-a9b8-491b-a3ba-1e84927593a7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e8be0746-d808-47ab-9c38-9060913b66d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da98069-7799-45e8-b0f3-102903cd3ec8",
        "cursor": {
          "ref": "4cdf4f43-b1a7-4366-acac-109c7a69f2c9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dffabae6-b095-4913-9ccd-cb3b91d6cd9d"
        },
        "item": {
          "id": "8da98069-7799-45e8-b0f3-102903cd3ec8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5a48603f-4a3a-49d2-ad79-7a55e774e9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8711a906-a909-4caf-af84-27e4ac792d2a",
        "cursor": {
          "ref": "73a58ad5-3b45-428c-9854-f96e8c17f2cd",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4e92d1bc-bafd-48c9-a574-9cf1af2c224a"
        },
        "item": {
          "id": "8711a906-a909-4caf-af84-27e4ac792d2a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ade57084-f01d-4fb6-804f-16a0fb652f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2067a9-37ca-428e-94a5-965e96e99322",
        "cursor": {
          "ref": "0a7cefe0-ce20-4032-86bf-a1ca9f4a774a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b3090d1f-a766-4071-812e-45219473b3a0"
        },
        "item": {
          "id": "9e2067a9-37ca-428e-94a5-965e96e99322",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4c09d4c3-c9e3-48ae-8ead-e791e3bca321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814feec3-1855-474d-a299-4e598b8a5e3a",
        "cursor": {
          "ref": "7d260268-d3eb-406d-a4df-c02207dcb000",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cf2b0ad7-7adb-4f90-b11d-3dd4c3542913"
        },
        "item": {
          "id": "814feec3-1855-474d-a299-4e598b8a5e3a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1e233d88-ef77-4be7-a5f5-ac15a521dd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb074d2c-7dc7-4e58-81bb-c349ddccddfd",
        "cursor": {
          "ref": "1b202b86-2f06-4ccd-b07c-b5ab734f2a5e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5a558d67-4808-4bb4-8585-bebcb1f90efa"
        },
        "item": {
          "id": "eb074d2c-7dc7-4e58-81bb-c349ddccddfd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a8d1ad42-b0ed-4c1b-b613-098efc762982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498439a4-2c7d-4b05-9e22-5e019669c068",
        "cursor": {
          "ref": "aaaba7ae-4bbf-443e-a053-522161f59128",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c8b5aaa0-b5f2-4855-abf4-354c5f84ceca"
        },
        "item": {
          "id": "498439a4-2c7d-4b05-9e22-5e019669c068",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "62867456-550c-4047-900f-6b1d9f17a618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c12694-6f2c-4e41-ac7e-ff13f10c41cd",
        "cursor": {
          "ref": "b6d833ee-97f7-4db2-a1f2-9ba861f90345",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "98eada93-ee27-4bd7-8816-de47c9bb0482"
        },
        "item": {
          "id": "d7c12694-6f2c-4e41-ac7e-ff13f10c41cd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d4c0da46-e911-4984-8528-949cfd7a1ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d523e4-eca0-4aa8-ba72-2c35f1018437",
        "cursor": {
          "ref": "c791f5f8-c449-463a-953f-b9ab9f6afe03",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8b5761aa-43be-45e4-9fc3-07c6cca465cb"
        },
        "item": {
          "id": "b9d523e4-eca0-4aa8-ba72-2c35f1018437",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9e8aba4c-d14e-4ec9-867a-d1e08d13293a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffdfb2e-5f14-4feb-b4c3-757af3530343",
        "cursor": {
          "ref": "ea9ad632-2f74-4003-a838-845d7b69c077",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a57dca54-5d2a-4ffe-a445-dbfb1dc590e6"
        },
        "item": {
          "id": "2ffdfb2e-5f14-4feb-b4c3-757af3530343",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "061dbcc9-8ece-4c3c-a556-17a4bccd2f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1438ec8c-7bf6-438a-992e-18df24203819",
        "cursor": {
          "ref": "ed001c47-f96f-4d04-939c-11ab6968071c",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2ecc9586-1f19-46dc-84c7-6cfb636ded95"
        },
        "item": {
          "id": "1438ec8c-7bf6-438a-992e-18df24203819",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "da02b76d-cd53-4ff2-95c5-ff902fdacb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1863a50-67ea-4712-9885-904d2e23cb8c",
        "cursor": {
          "ref": "df6a6c75-7354-431d-b7e4-78bb070bd30d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b7c676e8-bbba-4915-b8bf-e69e75d39a85"
        },
        "item": {
          "id": "a1863a50-67ea-4712-9885-904d2e23cb8c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5799b1ff-90c4-44f9-bcd1-5821726b10e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cea090-7567-4483-8c81-073d9de6c4ba",
        "cursor": {
          "ref": "2b3cc918-7b54-40f8-a767-2588c9b442b1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "be3c1f4e-dd6b-4af3-abf4-f69719d51baf"
        },
        "item": {
          "id": "d3cea090-7567-4483-8c81-073d9de6c4ba",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3ffa4440-47ba-4109-8b47-03aa11f51bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc7d59a-1fc2-4d7c-b2ad-45b6eeee0ec1",
        "cursor": {
          "ref": "e08218b8-9104-4f6d-94d2-e5252a1d7083",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fbabdcf6-6ef9-43d8-aeb8-fba20eb2ca37"
        },
        "item": {
          "id": "ebc7d59a-1fc2-4d7c-b2ad-45b6eeee0ec1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "21c5ac70-0162-46b1-8462-15e315d2ee05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eccd9ca-6495-4404-9444-f8ae15084893",
        "cursor": {
          "ref": "5bda158b-ebbb-4f61-abe2-f5dbc139555a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c2702bdd-2397-46f4-9134-ff7f2212ce15"
        },
        "item": {
          "id": "0eccd9ca-6495-4404-9444-f8ae15084893",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "224c2810-afb1-4602-91a8-a33bcbec4389",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "25347e67-269a-4db0-a0ce-cfc6fc885e23",
        "cursor": {
          "ref": "fe3028ce-563b-498c-9225-9f33a8019c2b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d67402fc-d2d0-463c-b614-b004a12b98ad"
        },
        "item": {
          "id": "25347e67-269a-4db0-a0ce-cfc6fc885e23",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6d731546-fbae-44a1-87b9-4665d59b193f",
          "status": "OK",
          "code": 200,
          "responseTime": 2518,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b35d1f-47b6-4688-918e-bfdfa936c826",
        "cursor": {
          "ref": "608adeb3-e0e1-4f58-b08e-4e307b1e5448",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d3a55b7c-7998-4105-9788-8a18e9919a72"
        },
        "item": {
          "id": "46b35d1f-47b6-4688-918e-bfdfa936c826",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0956e6c2-7cc0-42ea-b051-24acec005ef4",
          "status": "OK",
          "code": 200,
          "responseTime": 2545,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60e99cd-7419-49bc-a576-d627d22f840e",
        "cursor": {
          "ref": "30e09fef-f915-4e27-a80e-111ebf08b8a1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c5557030-caa6-460a-a6cb-09f16035b8db"
        },
        "item": {
          "id": "b60e99cd-7419-49bc-a576-d627d22f840e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e95ffcb0-9ca9-49ff-b03b-b6a416afe123",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60e99cd-7419-49bc-a576-d627d22f840e",
        "cursor": {
          "ref": "30e09fef-f915-4e27-a80e-111ebf08b8a1",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c5557030-caa6-460a-a6cb-09f16035b8db"
        },
        "item": {
          "id": "b60e99cd-7419-49bc-a576-d627d22f840e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e95ffcb0-9ca9-49ff-b03b-b6a416afe123",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971a26c0-e7a4-4a31-89d4-89cc4ffe4997",
        "cursor": {
          "ref": "fac509d5-5dbe-49fe-b726-af5b22c8e387",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "91267876-d878-4046-8932-f1478f6b64eb"
        },
        "item": {
          "id": "971a26c0-e7a4-4a31-89d4-89cc4ffe4997",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ad8e9bd4-9b97-484f-bdac-86d7483b1952",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7ec45c-274c-4d43-8be1-4aa6f60a2ee1",
        "cursor": {
          "ref": "68772fb7-03f6-4649-9c6f-b03f021f8945",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "111c0f41-94cd-4dca-ba26-421215014c4e"
        },
        "item": {
          "id": "ec7ec45c-274c-4d43-8be1-4aa6f60a2ee1",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "785a051d-e93a-4f6a-a189-9a7557202c68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}