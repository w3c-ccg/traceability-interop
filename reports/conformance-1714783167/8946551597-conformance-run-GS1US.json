{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7330449a-d5a4-485b-9667-a4f8e2951730",
        "name": "Clear Cache",
        "item": [
          {
            "id": "36ed93eb-4f66-48fd-a685-e62b406b0128",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20b203f9-0e5b-4e16-8dc6-f91ca7e27507",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4e5dae3e-47cb-454b-816e-61904400df08"
                }
              }
            ]
          },
          {
            "id": "aa522c77-ae18-4637-8fbd-745f86245058",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "186913a7-26dd-47d2-bf03-0e1bb3b3669e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "14b4f835-f33e-4eeb-a28b-d369fb0587c6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cb1ab866-3a81-42a8-9abe-771895934bb2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8cec95bc-4cba-4f4b-8122-c4f1f3ec0ef7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e177f1b9-2e97-428d-bdf1-47aa9671218b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d90b8b88-dfb7-48c7-b6d4-607725ba2b1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f7af16d-bc7e-4405-a7f5-4f2a87ea34fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e43ef0eb-33ce-4262-9e39-f2f4c30a7c7b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c0bfbfe-2853-44b9-b2db-cf9ea563bbf9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ef5c2d1-bebf-4a3d-ba97-637cb103876b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b83ebcac-9365-4f63-9662-d19c3245d871"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ab957cd-e18c-4132-9c9f-14d2df9fd11a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5e34ba8e-f736-450e-bf95-8f41da7bd6c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ce13816-2758-4153-aa7d-3d7f7d1f7b11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09a5be8b-a973-4794-a5ce-c27bad470aa3"
            }
          }
        ]
      },
      {
        "id": "7085e3a8-426b-4ec5-8f7b-4f1fc2af227e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9d2e4911-01a7-4a5b-8124-355613870197",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e433718b-605a-42f1-a6b0-ac12f5bce986",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "987adb1c-5825-4cfe-bcf0-bafd20af0ae5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec2c1b6-fc8d-4702-be17-1755e29c48cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f52927b7-4543-451b-a40c-1131ffb76794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad9a338-87a7-4626-a678-6d93f729d07a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef90b474-c50a-4db4-bdff-aae2f1e03d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7f206b5-6294-4106-8be3-ddeaa618dd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae2296e-9635-468e-8995-e679db2294f8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3250d5f-218a-430e-bd4c-ed99b7f3abcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5385271e-0a08-4e61-8509-66ccd9bd1394"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "890f1f07-b916-4cbb-beca-53a2cde7ca0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a587b76-8242-4c89-a2b8-7d0e55f50787",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142878b3-9e72-41ba-92d3-43ca6b2a8703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61369191-a621-4dbc-817f-3ff009a5e202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b7be49-875b-4c05-b8f7-c4b358121409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f561b7d2-1b64-4f48-92ea-a83c59241bfe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "51929563-0151-4b39-90aa-20b4859c9a2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c5ce25ed-5e19-464b-93e7-f08021886be1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6136f2af-9d4f-4724-988b-f5aa06bef95d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "17078029-b4ae-4c4b-b4c5-2843643a5276"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af7be70d-c04e-454c-b500-e58e4eaba4af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "24ea1608-8cfa-41f9-80b7-b201e3029a6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30c59326-526c-435b-93f9-1eaea9741ff5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29b02682-8df9-4396-957d-b7060d2792fd"
            }
          }
        ]
      },
      {
        "id": "bdc18a94-8150-4b3c-9c2e-77ff68d5193f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "22fbea5f-15a9-45af-9bfd-2f74fb26511d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36e613af-5708-4ac3-8759-bf2d28663280",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "82b2b2fd-0fb7-4027-9991-babf6d9f7539",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3392866-0555-46ea-8f61-1afbef112e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538b2e2b-b70c-43e6-82a5-c072fc4a49d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88ab66c-9159-4acb-88cf-d2aa8460e153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "879538c9-ff5e-4cdf-b60e-d5c64cdda955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea62d702-1f77-43a5-94a4-2637ebab2182",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d67a33-7103-410a-8155-de8adbd64c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39945c6e-7183-4981-a157-bcfd6071e56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b83f701-c407-42c3-874b-673282353ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50d955bd-ee20-4196-b440-0b872de2d1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31eddee-a800-4ee2-8cd6-60ae48e6e411",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4561b4ff-b7fb-4034-963f-367e59586f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3acd8f9-ad20-459e-8840-800933d0568d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd894399-771d-4c85-bb75-8757a3d7856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89b5c6d9-1abf-4ce2-8edd-a3ae9bac568b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303a92c6-b521-4f61-b3a7-4b208fd7397b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb8c5ef-91bb-49bb-aa69-03456a49da0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f16779a-dcec-4d31-9d46-8d6f8cb0691f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd455a00-efe6-48b6-9837-f18c68564921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0039a3da-fe4c-4ab0-9613-34bc6f618303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378892e8-137d-47e8-b5bc-5274deca0875",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6a48bd-b4c8-41c2-ab79-9e7aff8117a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e486d6-5b3a-4cd1-acac-9aab1fed778a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb2aa97-fff7-41df-b08a-770c5f048056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f15261fe-f140-4f0e-8c64-98c1aad613a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1133820f-a060-41e9-9a06-1f578b1bca21",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9763bf6f-d5fc-43ab-b46c-9d2b0652f459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63aa3f1-426a-4f0c-bc1f-efb6bc1517f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f6a662-dac2-41fa-919e-3cd881637fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a699caf1-e5cf-497f-8891-b733eb84c267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3a1d21-8fbc-4d84-8b65-49b64be0dcf9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55184008-c283-40b9-af46-339c600e5593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb58588d-135a-4001-be5a-57d4889cbf91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998122eb-1d45-4b5c-9b81-2e62ea51600e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66f07b5a-09c5-4615-982f-63a43c3e2905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdc89bd-6766-4391-81b6-e5d03ecfb999",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2ab9b5-c2a2-471f-b31e-6648ce296f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c28b82c-5778-4ee8-a7c8-e8d76cc92c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e13af9-f052-4aa4-ae93-2b9e267a9843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "282a6648-e317-4bd0-9263-2de2c70b75e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5e6f16-9102-4023-b4d3-f0430887b4ee",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc49d6d1-fa3b-406b-bac0-e19224f5fe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94fa1296-7cf7-409d-8017-822b5e631414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea1d037-2485-46d9-8543-c37c5852bee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f26ed6d-93da-4022-953e-162ff0f57e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a01538-f259-46d9-8606-8bfa7c86d92b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c27e77-3d4b-4e5d-abab-869f7f203938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91de3c2-07a4-4b0f-a424-fcdd550ebed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f045467-8242-4662-9210-ca40810c4ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ad8245c-4bee-4468-b3b3-40154e807c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a720442-5f03-4859-860c-8dba091d89ae",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f9d852-279a-42bb-abd9-5637c9b13b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c7c597-9d0b-49fc-ac4a-c0149f040c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f89b593-f4a4-4eda-9f27-fb417dada354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3948a39f-abdb-48d8-878e-9c733c5516c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f046331-d813-4505-b727-e95e202ed8b3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c64641-4d91-48a2-9df3-bd788bc0f684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c1843b-c679-48ad-b268-2a5dec183de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0c243b-0fdf-4dc4-8fd4-d90537849715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b31897d-9cd1-45b2-ab95-698c5d3e5279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb66b1a-35d3-42a6-9d05-800a06a8c61c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1873d7-7cab-4780-b20d-a18098fde884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e610f3ba-72df-4d4e-b184-7285df5a76c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e14fd77-97e0-44c5-b364-c0dec5673835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d058683b-3e07-4335-8a8a-6a7ef147f892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52433e35-68c5-40c9-86e6-96092cf5efcb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eb9bac-2549-4ca5-9e73-0bd05b8a0c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8514b1b5-cc1f-4834-9452-c4ec507fadcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44ef737-e2f0-4c0e-b514-97b737d87c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b77909f-9c94-4769-a104-d2838a9f2503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9e0da0-dbe8-499e-9123-88ff56e8e0b7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4572d2-b0ae-4398-9534-af3073b95687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eba4364-1e8c-4667-a28b-9ffdf34480e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a09615-d2ee-49b4-87dd-a09e4c7d114d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a080d760-ef7b-4a11-b433-1cf89766d28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4376155c-fc90-43d3-ba9e-6f60fb29fd7d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ad8736-0314-4134-b0ef-8ff5acc5e68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4898ec0-bd3d-4177-b7af-39ddefb69518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa51a49-9d3e-43a9-bb7a-bc64f894a13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1817277-4d8d-4f15-b899-1c1c6bd67d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7ed996-42dc-4a37-a1d0-912ade9be8ea",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cae04a-f5f8-45da-af4f-7f949a7bde74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e5a84e-379c-4302-8c6d-b06d89930622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c85179-8dbf-4595-816c-b07cd0c900c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e85cebe6-4648-4395-9351-45a425d59a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5a2fa6-71de-42e3-a18a-2a3536840ea6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06328d39-281c-482f-b1ad-612bec1be15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306fd20a-53b3-4b6b-a892-f9930b319e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7ebbed-e5e7-4e5f-9a8e-4d936d7752a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "febb0f83-9c4c-4dba-bb8f-a56ef9f45f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc1117b-719d-411d-ba53-4cc2d2752071",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc71062-75ec-46dc-9e35-ccae0031e532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da68f05c-29cc-4ec1-a3fd-763be05adb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571e1280-3a05-4ba9-90c1-cb009632bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84915bea-2236-46af-80e4-a1e69c6ece61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee0a569-3b12-4f57-b538-ad2556e7b314",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e58fba-8cc1-4186-a64d-c36f64c0c0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a033d4e-f0a6-4b69-96dd-74d22afe87f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18dddeb-1ef6-4b25-b7a3-e963b231c2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ce8b2d-8986-42ad-9040-1bbeba20d7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009d1ccc-99d3-4ad2-953d-c948184b269c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326550b9-291d-49c8-85c8-271e4d262227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d23c591-0061-4a97-a99f-411c495922e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7163d79-87e5-477c-8228-781b087080b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "941d3623-1092-466f-82da-baaff6aa35ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbd8086-2e37-4156-96d3-9e8f6dff3dc9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08935a5-f389-42ab-842f-19e61adac8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20157b26-6e78-4969-9efc-7639f55dcce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb57f281-1769-4782-a47f-5e185e0f3903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "807dca77-b6e0-4556-8cfe-2ed233bbe31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d2a092-30d8-44cf-9ba9-ec78ac96e2c0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7445ad6-ea4b-45d3-ba78-36ab2149f3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafe6801-a071-4022-81b5-4bc29b54d465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cbb8f6-fe85-4ca7-aa01-3f19b1c723b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a9e2b0-f592-4a1e-bbd3-4daac274f39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6e3185-3a53-4f83-a14d-1e181d82adf8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395e4483-1605-47bb-98e0-9de434619c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447de0ab-ec79-46d3-9e9c-01c61a3f66c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ca658c-393b-44c4-8c4e-9b67ad3f9a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e04b9851-f3c0-4c16-b09e-a4b7f145b168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751715b5-1d32-4fd5-9e0e-563680a1d510",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf45f49-7a56-4ee3-b1eb-ca0a2eacaeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9f0108-4e8c-4b5a-8925-1d48ca6c72b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54b6c42-fdc5-4d4d-b7e6-560f40e2fef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50256e9c-0882-4b09-87a2-74afd2c65b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568bdc4a-8356-4854-9c3d-2025c43677eb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b0847f-d9c5-44ab-b532-9207e35352fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deadfcb5-deb0-429f-94ea-4685e50a84da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b85c18d-0ec2-40e3-99c5-b077e7a14666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "959f02f9-d74f-4445-a9a4-8b0a5e5a7101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9628fb4-cd69-4116-a54d-916b51ea15e0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef6cbbb-9633-4adc-80eb-db55adf40feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084d28b1-e7cf-4f6e-9076-33ffcd94089c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d46044-9abe-47c6-bfd7-02f685251b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d933c4f4-c6d6-4f09-a76f-5851aca523a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c672206c-9859-4887-a435-f6ab4c886d46",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66a5839-4845-4a27-b43a-e3ea8d353c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5760e310-3f1a-4d32-b4ad-5eadecf2e512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a1b106-d54f-4b0e-9fe7-cd1964c05acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1909b569-cc5b-43c9-a093-379a9693e94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f7d094-5c36-4d60-8b16-283fd63bf936",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179f821c-bb87-4062-89a7-5ef30b525300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c74ee2-6cb4-4ac8-a829-d35faccb0d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e8db12-c51c-4438-951c-c89d1ac16da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32eae47d-20fd-4270-865c-d8bcfb9fc979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eba7ec-4182-42fc-a30a-0e99da0a415f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0093bec-c585-4b75-a2ec-c0d16006e36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bdc8d4-e2eb-4db6-b031-399ffa1ed4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8732205-ee20-4637-b3bc-6128245d174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fca8e903-3a67-46dd-96eb-a0070f82ed23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88462846-7e2c-4e50-a1b6-e1ebea7a2325",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5e7ca8-6846-49b9-8f36-7e1c05534fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b972b2-22a4-44f0-bc97-3269cafbac42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8a2a11-1b64-4ab2-b2ca-888e762afa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9a351e-c990-468e-934a-e153a89cb6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d86335a-46cb-4dfc-89b1-e327c15aa5ff",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3380f879-4f82-4f04-ba38-a9a864ef8c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be9471d-b4e9-41aa-9811-0f15675d0fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eeb7d00-dbd3-4bc4-b9c7-e85bf9702902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b8d398-7c62-486e-ac46-ff49ab04b4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e114a4df-cf57-482d-be6d-a192b2c549b0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4676edba-44e9-4348-9932-d3d30a131395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4864e52-497b-406a-8d1b-5f8d351017fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1b181a-770c-4b40-b47d-ffa850de6663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07b2b2ae-c9ae-4a1a-8cf6-db2097ef1d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df07e7a7-9355-4cb1-8a70-389d2d9ba133",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164aafcd-a115-4656-89ae-a42f1649eff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abd3b2e-afc5-45ed-b31d-f7ae4dbdd33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948c360c-7a92-41b1-9214-d541fd745fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4916b6fa-9e0e-419a-8a67-0888b5ab87b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed88ac02-910b-4244-a859-da403be228a8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d60512f-73c2-4756-b6b8-51fda133929e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d31a7a-a2e5-4dfd-8e80-a475e85a08f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9170b32-1cd5-4efa-bb09-f86f718260b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3140dc-cc14-42b1-94b5-121c36b69eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3c8c60-e594-47ca-8fed-6f5cde1482ca",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6415d5c3-c558-41d2-acf2-c1795a2deac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10bfe873-fab1-4262-beea-14a503806024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a10736-2900-4815-ba9a-f88262123fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf69dc2-85fb-46ba-b0d2-7b873bb0f09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b4a408-68a1-4ee8-afef-0d4475a4e6fb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123988df-caec-49af-98c2-a9531e00a516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22be0de8-165a-4e0e-b4d9-2f453618ca28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9169e4-ebd7-4e26-aa2d-d54fc3d6115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93ac4881-6230-4b28-866a-8ddfd2c77d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16ade94-49f0-47c4-a4df-d065c7643091",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe754996-f452-4550-9a8f-0488edc813bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d1e521-5b15-49a8-a906-71e5b41df93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d76016-e75b-4d23-b06e-778e6a0356a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1492fe0-a552-4699-8b52-9a61bdcc05b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fa982d-6bb1-4a1a-aca3-8dc91568ace2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363686c7-a9e6-4ab7-8afd-ac7738af31ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5207f1f2-d9c3-4405-9087-7ac7e5d14da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3e0617-84e1-4b03-88d0-cee34015c3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a237e5-1298-428b-839f-4364957b38d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217ee1f2-f1d5-4524-8e91-fc2deade05a1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7446ed-6abc-4e12-af6b-d7bb1e1916d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd9d0a6-a340-40b3-9b47-8b1c5fb52068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93085c82-c55f-4e19-bc88-65bd16c6358d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "90c0db7b-ae51-435f-b32e-fb121842e20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e04bc40-bfa7-4d71-9b3e-c35729c25414",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b8d37c-0c8e-409f-9595-d1db0280d6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1352c8-23a8-45b0-bb9a-eea1f62889dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724ee033-4916-4ddd-a5d7-935016aebd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca01323b-6532-4b0b-a964-145422fe025b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e2afcf-85e4-4102-8e58-ff9a1755ec8f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1694ff-4a42-4d59-9cc1-e86f49115859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87428a2-e683-4b0e-a40d-41dabac4d3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e4ee44-689c-4834-a2a7-da8c66ad5abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "87ea497a-ecb2-4dd9-85f1-31156abc64c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df69346-4153-4eab-a6d4-66290900f12e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbecedea-e9e0-4199-83ce-2b9f83d309f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dbdf7b-2b56-4fef-868d-aa9bb1c0a675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f05cdd2-924e-4dbc-990e-7b097a3db2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6082d2c-3dee-415d-939b-78454018f1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918eca71-4870-45a9-9a37-86a64b956fa9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22795159-7041-45d2-b5f9-dd4fe4c9299a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9866f44f-da05-4fc7-8e60-88e8c7cc230c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227a78ec-4017-4b9c-817c-171e23f51815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "972a06b2-9cba-49e6-ba0f-5ca16c22632e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a1e871-fa09-4f22-b0d5-239c120382f5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acee93eb-3993-4957-b16d-dc9612b3069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d973ce4-7345-41c0-a7df-442a7f0a00dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13a9649-b212-4a21-afce-566fb07d2bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd68e15-dad8-40c4-97ea-4282b82e3369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f6921f-caa2-4023-97c7-4a4fef42775a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0aba53-3f13-423d-937b-fc7ed465e2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b8c7522-46d9-4a09-a96d-01c13e2bf30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974e7540-b77d-44f5-acb5-bfdc024d25ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b56f1c-9e9d-4925-8717-a37bb21308cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24de099-449e-4e7f-b7b4-e3a31af357a7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8f13d1-81fc-45d4-8b9c-b2ace3a9b137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf03f83-e4e3-4815-9c10-861e775228bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f97931-df6b-4347-b308-826ccfe4a986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e8e983-ea74-4c50-8d89-3e2cb3b905c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c093ed-29d4-4e47-82fa-d192686e581d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bef6b7a-b3e4-4eb6-b17a-760f2f6de05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1caf96d-9c6e-4cd9-9c8d-1190f9d79a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada7819c-6bd8-466a-8d99-7b2a2cbe5e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeeff116-9414-4cf3-a690-d2414d212b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000b019e-fab9-4d5e-aeb0-d4aeb1872f36",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f41b80-27e6-4e94-be8f-20489cf6a67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066e2bb7-8d5c-4e48-ad9e-c4406e2367ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcc439f-ab60-4731-8ce7-1e90a49d36bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce27c9fc-7504-40e1-8811-73caeb9abae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f87573-3468-454c-8e4f-29fd8147837b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a32877-36f1-4fd6-a51d-282028b38a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70082be8-d8f2-417f-97ef-ce3bb056c4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe33b10-1beb-441d-9571-7d0b42b749cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "70f6acdc-7119-41f1-94b3-738f14c5d5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1a010f-f777-415a-974f-0b878a551edb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75248143-ea70-4996-ac60-d5f0b8a6702f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270f6f1e-19fc-43fe-a045-1f4a5bcc7252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5677d262-03e1-419b-85ce-d824c61820b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb1b023a-d10f-4f8f-b396-81160f34ecf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb88c4b-bd21-433b-a4a9-1de5375c4b8c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5480d2bb-3dc2-48b6-ad35-1d193e3c74a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8b4dfb-a97f-4f3d-92d9-95280ff24bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e3cc2c-0b02-483b-88da-f4724f8da777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0f0fbc-c57d-40e9-a4be-2068d4c5dee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa23237-90d7-4b7c-8e60-38e8462f3be0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85caa15a-2dc6-4d6f-ab19-ba853bf9ccc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209f4461-d468-40ec-8596-d3de5ef496c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d768ba5-1e9a-4133-98f9-96878c0fc2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d790a37-da1d-4966-badb-9ced52af53b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eba3cdb-d9a6-4142-9031-0ca9899b7fdc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57e9c0f-25d6-4f2d-8fe4-8c70b38b6c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ad7162-ffe4-457e-af1b-b73b93c92276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb25c80-4d97-4676-bd35-35cd5e0cad45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "922687fb-4f4f-472f-80df-399b04cd4c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed26edaf-cc41-4ff9-9aa1-a03a066e241f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bf9bff-37ba-4afc-b03c-14c202735b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111bfca4-8dea-43b2-a24e-5bfdf7e31899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c2c3e5-9f7d-42d8-80a2-9d967c49b646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "425547ed-8610-45fd-994a-447e671c565d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c277fb47-9b9f-47b8-99e3-f808a08fbb73",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c06c151-6bf6-4a6e-a060-14c8e900aab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33745c44-b56e-486d-a265-853ed90f1674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33ab9b2-07ed-4355-95b0-aa1f5e5d1242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e5aef8bf-1961-43a0-88fc-9428bf6dd348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bbabd3-0328-412d-9e88-edb158c0e676",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b738603-aa84-4f25-90c6-b6f42b4d3f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf550461-96c6-4ce7-b5cd-cb1f624d202b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac3eb5c-0a86-4d4d-adac-c891507d834e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fea09ac-c336-45cc-8076-a4c78345b2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cddec3-b97f-43a7-8c8d-06868ff70a67",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074c7bba-f026-4861-a070-32c9618e7494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbd3f55-10cc-48e5-bf51-31848c4c5622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83201f4f-04df-4ae4-9907-6637fe0dfe93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "229411d8-2015-4247-b8f7-97903be32a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3a2282-53c9-4f23-969f-d7726286350c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fc1ba4-07b4-4e9d-a43b-cb121d1a847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c6dace-d933-469e-8d24-aae2d1032bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4331a660-d7a2-4845-bb05-deba0fcd106b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3a92ce-754d-4cc9-b7dd-992104718f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc6f402-2002-4a3e-a732-e1d512e46977",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407e78fc-fb2b-4158-89e0-94ae59fe250c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fdaa18-628a-49b9-b6af-e2dc5fe6b264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aa9b91-b1f6-4a65-ad67-526519aa3c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5453e3e7-b00b-4fe7-ad91-1c79089b81a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e628e6-8f22-4e43-846c-ae783db716bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cc4eb9-08c3-49d8-8dd4-4ce44366af8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15fa621-fdbb-4939-b7cd-d36bbbf37427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874757cf-a162-4a87-ba1b-6489f3562849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dccf378a-5a25-455f-a892-91ca448b8991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c28384-68cc-45f2-b9c6-c990728efbb6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda6467e-b7c0-488f-8264-a8a1b7075e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96259898-fc35-4b61-a7b0-f34dca409f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14399533-06d0-40aa-8572-99f04a04b7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a04a46b9-6aef-49df-8e44-d3ea973c1b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e90ff7-315d-4a1b-aa30-dc0ccab66be6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d06399-d034-4d36-8b30-b306aa9d59fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f161aa34-c21d-4793-93e4-76828a095bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2d670f-b8f9-48e8-8d33-2477b157cc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e33a9577-4fde-4632-8d67-30fe14bed3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068fd36e-1d12-492b-b666-d711b9a8cb16",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcc7aee-663e-4665-b164-e6896d12db42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78acdf7-8dd5-48f2-b01c-8ba61d33b3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c199818-a7c2-44ed-848a-1615701f76b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9952f89a-030f-4774-80af-b9f51cf16c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6df6be6-8b61-41f6-9e9d-61905d3aaad7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c938da-2bdd-4f0e-9f2f-1359b3300ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332e78ee-3541-421e-828c-4a3d6a04ac50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594cffd7-03c1-4a3d-a36b-bfa9c4da2e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02762107-40da-4c51-b51d-ff7b97ea56ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfe3d80-df77-461a-86e8-44228dc6d218",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad782c20-52ed-4828-b14f-1335d3a1a3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ad11e2-6e90-468f-9017-f85db3a9b2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009ed8ea-194d-4b9c-9ba5-0ce3790b2b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a346cd81-5cbf-4880-b98a-199620fc6552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21307a7e-3630-423d-bbb4-8bdf823e0223",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2c4d44-2790-4314-b1db-3705bfa57cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6ba26e-12f4-49df-bf3c-bc0a830646a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14be2945-d1fb-4ded-b9ba-d224877e44cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc01cda-b23a-4caf-9b98-6c4aad213309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab970d3-ed57-4902-8343-6d34683a8d55",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5a7e0b-02b7-4e8f-af81-0c2825fc0461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae549be-fbe7-4d9c-a527-401017b5df04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a529c5-72f7-4e2b-aa3f-91c75e504779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1556bb4-64ec-44d9-856c-0d26768aff16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781661c9-e966-437e-a309-f829be6e8e2d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19512cc4-25ed-4a79-b04c-5665b4d1deea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c23fb8-0995-40dc-904e-4527b07638a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bbb896-dbc6-43eb-a206-5abac05ba275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de98db00-3696-4c5b-8f31-9d795a668ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2544aab-9387-49ff-9008-b6a8a8ce091b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e2fcb4-4eb3-4873-8bbc-dd9b790a885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af22bf9f-5484-4711-af92-184cd0f78d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cb0b3c-cb60-4649-be01-4a68b7c4eebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bea0d9e-7b6d-4ec2-8850-b679945bef2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda41629-3161-40da-9ca9-bf95576b8e61",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9c15d9-3d0b-4e73-b482-725050f47cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc783c70-affc-4202-8e89-93aff8c5724b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2ef6b5-bae3-4cac-8a83-70e8f0cba4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03b09f50-5202-44f3-9796-d5ae0673cfec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42e765d-dd5c-49e2-b830-315de24a4039",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7f139f-3cfe-4be9-93b0-d31809c81dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47068a5b-51e9-4726-a035-0cef238002c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c546f588-c5b9-4d58-b6af-d1ce422131bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b08ae1b-4f01-4380-a842-a8384e655995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934b7573-e6cd-454f-825e-207ec2270ef0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b6eb67-d015-4a07-aa45-ec49c3068763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c19bfb-5266-42fa-96e7-eb04f1fc7c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2e2650-88bb-434f-aee1-5a41da03240c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1667058-e55d-45e6-9e0e-a1711fc081f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4855b8-0ac7-40b6-8924-526aea818e81",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6d465e-e764-4aeb-b05a-5b39257bc7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52cffdfd-8a21-433f-8e84-902f6312564f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180ab551-00c6-4524-a246-8588a3967669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "591ea8af-7612-40e2-a18c-d4961236226a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88be9922-8d21-416d-a6aa-d95cfb412e69",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8baa1006-e15b-458a-a230-a4e5ddf5a5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3486f4-1439-4eaa-8e7e-ada9f903727c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9bd4b4-f0a1-41b3-8787-ee3784ab4622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90f58d09-2ba6-498e-a742-df10b7faa611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6055713-a17c-44cc-b4d6-d3d08d54366a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ed1ece-0d6c-49ef-9533-946b8c223bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5edb092c-a02b-4344-ad75-e806f549f11f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1547a2d2-8131-4fee-8495-5e3e9d09b152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e24ee683-a90a-45c6-a3d1-065aaab814df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf8e68c-a499-447d-a5eb-5692eed31072",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97cb865-cdf9-4646-a804-dfc83270966c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6cd2cea-eb54-4cf1-a7ef-391b67ba4612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f35df19-5282-4662-b722-2b676653b68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0e8c3b-89f7-4038-866d-61b57117dd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d6224b-c891-489d-84ec-686171f35b27",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1278ca3-16e1-42a0-953e-f0ac657b7b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02d0b57-f57f-4edb-a0a8-5138909c3fcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2d16b1-d169-4d2a-9f49-30d3544d739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0ce1c7-2c7e-40b7-87fb-c77c98ff6c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6021745f-ac86-4721-a9c6-8326560f4246",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b69cd9-30dc-4b1d-89b2-2d80a9c41c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ad795a-7f23-4b4e-a8d6-68939fa5d24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4582b2d3-aaac-4d48-b281-5e557bc591fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d53400e9-7420-488a-8c6d-b13b77037119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bead08-8f51-41b0-a5f3-dc47887e54d5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f246c0ed-ef3c-47ad-9d87-50f2a80896a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433714f5-6962-4cdb-b40d-8b2ca0f76d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dfb0c1-f3c8-40aa-b7f9-6b4e9a463b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d188cde-0032-4169-ba6a-e569ef31c3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b71ca9-86ee-4a5c-8686-7e80450d2b5a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598462a5-da5d-488e-9dbd-7abdb68b47bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381a34f0-47dc-4276-8199-533d297ae7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beda815f-c397-49ef-bea1-0c5204924a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "843ff3c6-cc62-4b88-971f-8bc235f2d76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a8015b-dd3f-46a3-bd33-40d386e8e155",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e1b742-cad6-4a4d-a190-84bf4faa0ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c241b37-61c1-4281-a4bd-28249149e9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6acecb4-866f-4255-8f42-3719ae330bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0912e58f-dd94-431a-84d1-860c96d777d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcbe52a-9fa9-49ad-974a-c8a6d63114bd",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965470b6-1f13-473c-ab8c-dcda33749109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a79156-02a7-4e21-b170-cb3b989689c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a3efae-2e2c-4ce2-adb7-de3856dacdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49e8398-7e1c-4eca-84ad-4ce7646ad72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2804451-bc5e-412d-979f-95e7de476a0a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6a6ab2-01c7-4673-86cd-8bd50991b407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2119b005-bcb5-4587-8c44-e77edaa8d53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6828651-c056-4d2a-a888-a2f13c2a46c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5634a4-8354-4cc5-a6e8-0b78bf162749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef3c92d-a983-4bb8-956d-228f8f5df454",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dd1693-b68f-4a7b-acb3-5ca79ff83a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b012d55-7ab2-426f-ba74-d6960b7b50a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64ec044-19b7-4af4-be7e-6b58b5a178f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb866c8-4e03-448f-97c8-c51011f84d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c14febe-d377-41ae-817f-b0413d469f11",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e1c83d-6298-46f3-8b7b-6fa97d43f541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7379b375-a8b0-4fb1-9b30-98933797be6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58caf88-cafc-46ec-90b7-476609f6ca4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a856b3f-0744-4dde-850b-3229727b92ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da978fd-3b3e-4ba7-b163-2927eaec1917",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47535a3-cbcf-40af-8791-7bf1f8f112fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e9b986e-40ed-4483-bb8a-adc5ba0f19c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc418cc-152e-441c-8455-2aaa0a831f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80accf61-6cb4-47df-9680-ffbdc6c2db6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e922b67-5d0b-45e5-9466-5ef9a72f7382",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc57f5a-2eca-44f1-805c-4c927dbc1795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b6e22a-fd5e-4950-953e-84062b2f9a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4dff94-4675-44c8-a8ab-822aa8bb9725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "70f79948-97c3-4e89-95fb-5cedcce2b031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b453fe42-d301-4d09-8049-03baf1b5dc25",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd02b278-398b-4142-b1f4-e00b4e54902b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a22ff67-7fa9-48ee-83c1-9b17a0abc12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d1b2a3-7cb5-4f2e-82f8-5526c34ea712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4204719-c534-4c10-931c-a522d5a16e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923871ed-8118-4370-96a4-822a6c4468f8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec01afbe-a085-41aa-a995-f9d32b535948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f739e436-cb12-4d0a-bd1e-b7a701b7f6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c335e38c-e8b4-41fe-9670-66c035492cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1b229c-4157-41d2-9c75-57d20f1adc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8c1015-2e01-438b-96d5-5b33a9b15c3c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7218e9-2226-4c1f-b1af-67b7f1c7ea06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb69e79-b37f-4b08-ae58-2b24cf307a7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e4ca14-cb24-4373-a179-57ef6a83e65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd35492e-ab2e-444a-afe2-9952a180afac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b7148e-3276-4ad1-8a69-a2cc327430d4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dc6b1b-87da-4ad7-8566-37137145f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bd439ee0-eff1-4976-9eee-54f2f20c8c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09f08fe-ffae-48c4-89c2-050d16494772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3727264a-57a0-486f-9bed-09f45d0b43e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "183e59a5-f733-4ead-b62f-864247196cf9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa53c8aa-443a-4cc8-9f81-aefdb8de53e9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60e0fc8-55be-4f52-a5f9-2cc16283d55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dd57a55-02fd-46f2-882f-b4c5d995e57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0f01ac-855b-4ca7-9aa6-90e16bb3ea6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc8cb450-c280-4c22-b7bf-ab6fa8d18626"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b9255e9-3137-4ee4-9a82-c4e962c6ff4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee5c67b3-ffed-4d24-b8b1-079b062e486e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "908cba26-5c37-4522-826d-d2322bf47294",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "487188ec-e14b-4a65-9ff8-8c631b399ca0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce1d547e-e839-4616-a3e0-e23e80ea5bdd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9945142b-984d-4fc7-872a-aad4def5e19a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e8c82fb-4a55-41c0-b269-c455787f2289",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65a4228a-7ee7-4dc7-9bd7-cec5b9e0622c"
                }
              }
            ]
          },
          {
            "id": "b89d9eaa-3911-443a-8640-a76fbe375a84",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ee3f0b3e-0932-4e7d-a2e2-d088230a6eeb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2dda0f47-6124-4ce1-ae6e-7fac50504ca9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b558a1e-ae2f-4c11-ae5c-464956ecc967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "03571e7a-9599-4a70-93f9-a568afb1d875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7db77b-0f57-4e6e-b384-f37153b31390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a326efb-9d23-486e-9ded-20d1a9411278"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dae60037-c355-49f6-9cdf-55689f0345bd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1a9f683-e47d-4c80-ade1-59a47e4c8716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3b72eff0-8a1a-4fcf-bc47-4ed1a4525f72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2220e6bf-7075-4a2c-85e7-9bcec97030b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b0ba7ba-a1c8-4db7-89b6-938eb5962391"
                    }
                  }
                ]
              },
              {
                "id": "e63829ae-323c-47fb-b27c-0d50476a51a0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a736902e-8545-44c9-8f9d-4f8a8024eb6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9102deb5-f357-40de-af30-ea7bed41dca5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d6b1ec0-ddf4-4e28-95e9-993d54104574",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "edc3a0a9-8eb2-4c9e-be55-43477f952321"
                    }
                  }
                ]
              },
              {
                "id": "ed2b4c8f-c420-4b38-b229-78c7ee894cf7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5084d4dc-0d9a-4dab-b04e-b21bf3ff36cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "179614c3-400b-478f-83f1-84f2f91bf8c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "008b71df-67ea-4d0a-9f83-9c3a44ca525a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6732de7-75bb-496e-a6a3-1bfa2adec20c"
                    }
                  }
                ]
              },
              {
                "id": "57668423-c011-4183-b6b3-167e33953c1d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6ff5fa7-0b72-4456-9e77-744791538015",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2ad543c-fd30-489d-9625-f2a1421b1f83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f80fd00-cde0-45f9-9bb3-66879371c78b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "52e93188-356a-4852-a5a6-2924ec73c32f"
                    }
                  }
                ]
              },
              {
                "id": "567b1717-8ae7-41cd-b8dc-c78ffb1e661f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d92f904-6eaf-4490-b6a1-6354ead3ae81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b3b171b0-ccc3-4f45-89ae-7b5a88297a36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74ae5f85-cfa7-41c4-9272-b05d8ce4f200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e8048092-c8ba-4a15-93a2-adaa3fc37a84"
                    }
                  }
                ]
              },
              {
                "id": "d2852495-2ac0-4055-a8c0-24221df8fc9f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2f5352a-0a49-4f28-bb73-a742eca2df91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39b0c26c-757f-4e3f-b268-7436149ed200"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e95e5dcf-1bfd-4110-b3fd-9aceb0880246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f22aef0-c614-45e6-b90d-fe225715f1de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aca9c0bd-340c-46a4-9e2a-5c138e952ce3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72c3d8d9-3506-41da-8cc8-c87e17fb5a86"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48df175b-1268-4167-8e32-88493d96a9d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35315d7d-ee35-42b1-80f9-252bae5a1f76"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "102fc02b-17fe-4836-99b4-8245cceeb951",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bf7bbf0c-d15d-4389-bdbf-b46168a66d41"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b97e8109-49fd-443f-80af-2e74c3c4777e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "479a54b9-9b30-405b-bc36-5117f2fd2bf0"
            }
          }
        ]
      },
      {
        "id": "17a0479b-e6db-4ceb-ac29-0e966203a431",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c020430d-3b58-4ecc-84ff-6f1f27996aa0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbd8c651-8943-4731-a3e1-ae1a1f1ca1ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1cbbe5b-3f62-4b49-b7fc-5f45ce850247",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287fdb68-d372-4ae1-9c1e-caf0b636547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313230d6-d54f-482c-81b2-99000f98cec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef57622f-ccf0-4f47-a5dc-49b1ee7f21d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d42d1b-8493-439f-80c8-60515f99f80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57bd5e2-e4b3-4a46-9d77-8b757422c959",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a959962b-7997-4550-a3dc-14cc8ef3c767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a8a087-f26f-419b-8b27-69f4fbb331cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f2df69-ece8-4010-9f42-f0dc60b78b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcf53ee-2a5d-496e-933a-e5b139f1516f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c03a67-8103-4eca-8a49-7a96ddbe74ab",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5362f75-704f-493b-b9cc-73eb630aa73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881a0c05-85dd-476d-b273-b376835e9d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67cf545e-466f-4b52-b49a-360c4f163d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc89c20-60cc-4f55-a4ad-c20a59022a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd92e890-c452-4c5b-bce5-3c9271c5f821",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a13392-34b6-4ed3-81ed-d9c567bb10ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62b873f-0bfd-4298-9d8b-cc3697ecc404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980da3ed-f239-4ed4-931e-e29d76668793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07e0cd0f-6acf-4cdf-984d-3fb526a71b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99bd041c-7d44-4fe3-a9cf-58440f842ff2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45535309-427a-43af-ad09-1ff78cd3cc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35385a62-1f54-49c8-b8df-c0f3f2e0de06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69f4496-5bd1-46ca-afd5-8a43c582b593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f34f88d-88c4-4cc2-b4bf-13c76e8a8071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b9b9f7-25b8-48c5-86e5-1a75ec1b87ac",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f7c0d8-eeb1-42c3-8e80-90615f1e9347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489d21cf-aee3-4354-a003-5357a53f93a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766a051a-5415-41eb-8d2d-e93834bc992f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a954e71-5b9c-44de-95e6-da2a8c35605c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38f46ec-f4f9-4e26-a2c2-c0c5e1923bcd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca36824-0bcb-42dc-bf16-4da55a5c9661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce61dbd1-0eab-4ad9-b4c9-e15a0b6d636b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175658ed-d0ac-415f-968b-60af33ecfd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a92707-18ad-4938-aa14-4956b20eee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee0c7ea-8f09-4e45-bd67-bed944a6127d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5215354-fd15-4674-a712-70b29c3cb50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44bee24-2017-4a3d-b6c3-45b047bcb783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a81a942-20c2-4ea2-97f0-1badb2dbb451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "307855bc-d20d-4020-a47e-2affcfa0e105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3ece5f-dc0f-49d3-ad3c-a6b9d80f8cf8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18631d5-d2b3-4131-9d82-3dbd7fa26cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46b5fbf-ae99-4cf5-b15a-eeed58c53cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a6e00b-dace-47a8-a3a0-d9656bd0fac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "101dc2c8-343c-4bf7-b994-e40f2846d70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50207f18-ca13-46fd-a6aa-dde036986ab3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0189660-2571-4146-b66b-a5c9c9a8851d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76736f1-fbc6-437a-b2b4-7ca17054cd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2888ece1-e39f-4208-a65a-316d90450581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce50ed8-579b-4b86-9876-33b29893fc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6479640b-f939-49cc-a65e-6382caa42d19",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b47ea7a-734b-471b-8025-02073770c15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d421698b-a016-4609-a105-f316e4824fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f4d9e7-183d-4645-9bb6-7f4e7c4d04e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bad939e2-2f24-4a8b-86bd-1386eb6393e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebbf609-53de-418e-a21f-69a8e467b189",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b141ab0c-7b66-457c-8270-075a29273b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e86491-90c7-48df-91ff-b6b5d6a6dea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde001ad-9d53-45eb-8a39-f2b2c690eece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1cf098-6e9b-48ac-a178-a0cee7050d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4e5aa4-ad74-4c03-b9ac-e3aec16a92ec",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580a551f-952e-4fd1-aaa8-c80e5213b32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3accd02c-bcff-4dac-96ee-2c7d183c1c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7e2b89-216a-4507-8362-63c4efba35ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a81bfa-87b2-48e0-a544-7d275c495dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66ca1d5-25ad-4d85-9288-a8a4f5cf8241",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792f3349-cfbd-41f1-9bbf-f7b4437ba678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ad5e67-71e5-49b9-b137-8086b3aee1d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd34908-0d6b-4039-8609-5d317256d8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba88851-71f8-433e-94e0-007a4da7dd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e79319-435b-4ac3-be23-b840946f50c2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b64cdf-409c-4d4a-973f-c006491523aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6b1406-a8c6-4633-b790-e0c091cd85d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c918cd75-a3a5-487d-aef5-d7d204b5ab7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "45ba7884-a3d1-4e48-a8e0-f547615cb2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b72fbf-b902-4fb2-8d05-98610d5c2f21",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec881cb3-8eb3-4f2c-8439-8d88547389b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0471116e-6c71-4c7e-92cb-ae3b41846900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a24040-5819-4296-8aba-82f24214856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf055db-070f-41cf-ab71-c675219c557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c10d884-871c-4db3-ad45-772755b8be58",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f340773-4e80-4f6e-8193-e08520f99a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e75022-e65a-412c-9ece-eec466675f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82f76f1-5cb5-45ad-a135-b7e3b943dfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa046746-6b6b-43a2-ad7f-e9e00f0ac4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7441f89-6e5b-4a30-9cc5-640526a23722",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850268e7-871f-49b0-9b90-6fb787a34556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d854c7a-9233-4751-abfe-21974d56d271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e593909-11bb-4302-9514-caffea86fa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e74fb3-adcd-40d4-9595-f19ad4003809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45177c32-57fb-497f-ad62-d7552970f9be",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c81c22-1353-47db-b074-6841fd6aa68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1021f3df-7a56-474d-ba08-adfb6b56e760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dc1ad6-de28-4762-98d4-4b73de20ca76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27aa773-97d4-4071-96a7-8776bd9f50dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbefc0ef-1f93-4cf9-8cfe-b1e18edda45d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2495917-af44-4c1d-bdf3-d1ef2ca4d503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93874e0-6f34-446c-a6cc-aad5e863b7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84e62d9-c404-4385-81e2-3f5fc386f75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd389d73-9b65-4449-8d68-8f0008813a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c3bc5d-f1c5-4120-82cb-f42bef6b0e63",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ddbb33-2be0-4ceb-a7b2-56d9e3d667cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfd3692-fe32-41ea-ad7a-8a8f5b4d6b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e02cbb-797e-4e12-b70b-c79ddb59e335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce381c33-316d-448a-9a13-107693571840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3ff1b6-b58e-4135-8f82-7f49d3c9a02d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894cf7ed-0167-4e4e-bb84-1b2a83b947fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38b4a0d-4be2-480a-a812-7c0fe5b40e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0832bf38-145d-4375-9b6f-d66f448c57a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ee3006-ef9f-497b-8cc9-8216ce294854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0959b7f9-5925-40f2-8182-50ebc313ccfe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1938f68f-120b-4e93-9d0d-9b6649806a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119caa08-c401-4636-815b-628ad28a292c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a778ff6b-2051-4f1f-ad13-49270c06c7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7db1c202-8afd-477b-a884-f07738dcf68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f4f4c8-0189-46b2-93b7-360fcfd8f6ae",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad063d9-8130-4188-ac68-c350fa52d695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6c3224-f373-44ce-bbf7-36569b751779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a101cf13-9755-4427-babc-aa79911bac64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99843f04-5e89-4582-ac25-c023d7623d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034d68be-65e1-41e5-b014-3c6e29d1940e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab56d2c-28e2-4b55-9c5f-f6daba9ffad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473ed18b-62d4-493f-a700-35cd811b65c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fe0e0f-649a-49da-842d-e7bc76183d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "717dd77b-2ccb-4dbc-b930-b63a20e99197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de490c9-f342-4f4c-b232-6b3cfc3a7143",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c0ba8f-b140-43d6-a1e1-53e6d1b15cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a6f8f4-44b5-4a53-9a24-ae0b54762406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d832c5b-bdc3-4efc-9da5-3fc93d04d850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "259b50e2-b509-4ed1-8b8b-8b1bc9e5bd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa8e458-9f87-431e-8bae-93883efa37b7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d85fad5-3446-47cd-b6be-625a8ac5a548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fdbf843-f5b0-49d7-af9a-e77030c6450b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e25461-4399-4d21-bdd1-1e03b02acfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4c6c19-9731-467e-8701-aa9893ae1b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4d06d9-6a2c-4035-bbbf-9808b3dc2fd6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec68c4f-5925-46ff-8ccd-2aa292019736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53b1cd8-286c-4389-af25-efba72fb98f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920a1fc0-241b-4976-a6ba-0365895e5e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4eb099-41ac-4ada-8229-76aaddcb0ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1667f6a-4531-426f-b793-822471ed9774",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f56fe78-35b3-4909-8a75-6c2a56abd43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2bba4d-9eb6-447e-8b07-ef24ab9b1cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5924590a-6bc8-45f4-aaec-24cd34b6fa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0b56a9-a25f-46ac-ac03-12a515711315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd36f0c9-d9fb-40e0-ac1c-6855e93a4ad8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d17fc54-4a14-4a0e-922e-ae90d0485c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c097ac2d-d7c6-4ab6-ae68-35e09ce37d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9115cdf1-e2c7-46dd-bebe-d184f35d8911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7660558a-4e12-4f31-8c7f-49e50317dd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382f71f0-5544-4861-b5ce-4079d57d42a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a84a6c-02d6-4e58-8e19-ab61fc119d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9402c7-93ed-44e3-ad49-39c7093fbfbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8798d1b3-c1d7-46cf-b369-63eb04c36d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9caf2e89-facf-4cd3-919c-35777b4c4721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e77c83f-a08b-43a0-9aaf-beaf4dd5ce5c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8a3616-1083-4da8-81c0-2caf99bc1ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd00ef4-7112-469f-bece-0f2cd5427be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323d10e3-8a58-44cb-89c2-76038841df66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02efb68d-1bbe-400f-95c5-9a591d88e624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69433fb-dbdc-48e1-99ca-da6972e34a74",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5216044-3bc7-4994-854b-95acc870537f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f492eb-ba2d-4c61-8b33-2e83338934a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485b2d67-f5a2-4d0d-a888-3bfd7aad0b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db4cf60-f2be-4e65-a1a0-49765e6af75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80c763f-9dc2-4f3a-bad4-902166b7475d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eac532c-f699-4071-b129-ec0c94e0a1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9185eb1d-be05-459c-8c1d-038c58773026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff032d53-157e-404a-9642-8a9c9fc25e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb73ea9-49a1-443a-9144-c78cad23b2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca9581b-1bc3-4e51-a5ab-02e9244d7d0a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e566a9-01a4-4b58-9e9d-60e57927cd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c91ee81-c1a3-4f26-bae4-92e9f8af714a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bd0c6b-44f7-41a1-b20d-a2cc997d1204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d29df6b9-a9d5-47a8-abb9-44c5a21037b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ad5f3b-889c-4820-b89b-2d461e12765a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa4687d-d7f2-4f3e-89f0-5f706d5eac31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffba9a2a-0f18-4a24-9c0a-f1e99556b045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636bfe10-50e8-45d6-a850-9b121505adb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae80dcf-bb8b-4977-8b52-c3b4162e5b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bc0c9e-9cdb-42cc-9f08-f2f01f93432e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c89ca6-e48c-41fa-a3ae-436c43189072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12043b52-4929-4b64-8a66-e03e6ad448ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9ad5be-9d38-4dd3-8a25-f6cbe5ed375e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d570cae-141d-4e71-87ba-616657bab774"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6870f139-7a81-42e8-85c8-d677ae317731",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "259e02ec-00b8-483d-831a-afc10ebcd9a2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88812efd-66f7-49e2-bea5-375860a0b7e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "362c0ced-3859-4132-b712-6c1f5cb453ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd8bc70-2d39-42bc-9f4b-519a9f1e0fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e77da226-37c5-4b10-b40d-a86672e5ef76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92174662-1571-4c63-afe3-b1080c2b403d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fc4ce36-668a-4bef-a97f-e106e34a50bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "795b94d3-e9d4-464f-a29e-5ebe3de681b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01f9b4ef-e02a-4f45-8e4a-bed1950fb252"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3311987b-1485-4076-88fd-9884528441da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "676dacfe-a412-4013-9257-0b3c4bb994ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a2e00ac-a8bc-4ee4-a987-c553f5cf58d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2bda216-b654-4244-affc-015ec6d3306d"
            }
          }
        ]
      },
      {
        "id": "13c6f181-5b81-45c3-99f4-30b1a5acd821",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "35f8cd27-3167-4aa1-bc83-d186eb77709e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b54a9533-4a1f-495e-8626-98a903d7096e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79934901-a00f-4eda-a993-935789f5dbf7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d9327c-4bab-440f-9bd1-23a318ebf087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1e2704-43e5-43d2-a7c8-9bea2f48eaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f292f49e-2307-4646-b9eb-3a32636ba3d0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c34293f-acfe-41f2-9b04-90343c04a924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40eb9f2-17e5-45da-b24b-fcd824d27b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fe5cc6-b097-4adb-8cdf-ce974d3497a3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac9b640-ca39-4f32-a7f7-a4aa4ad1cf2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc9dbba-5266-4e32-acb4-94913554c78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfe69e9-c518-44cf-addc-a8f0b21cfbc2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2047cb-de93-4120-885d-a65734020e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad6640e-fc00-4fc9-bd41-18481eff8f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa3a39c-0b93-46d9-a911-fc3ab204e4e3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998c17a6-21c3-432f-a9e9-9e38c653309b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a31e906-bf4b-436b-a36a-566747f60686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d02c1c-5dd1-46c6-b537-f3c38b8c15e8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20657892-c664-47cc-b578-2d70479e8ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0058b88d-5522-429d-8582-cdf7c52a35ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9688be4b-4cdb-46a2-b338-8b7054971c5c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea8cfac-973e-495b-a0e1-11348244d4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31141af7-bd08-4f39-b589-c7d103310be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1aad520-7da2-42d7-aa77-498aa41a62b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d53368-d67e-4e52-8474-f11959fd4f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a75892-a647-49c3-8787-f96a39c50323",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16e1dd3-45e3-4a71-8756-b60419648b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52119ac7-e472-4633-a164-3c7276ee8c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772b1dc5-dba6-4564-8a8b-0d0d5db14d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91887814-fd71-4cf5-97ea-3f3c84da86d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd4627e-1c10-4da2-8b0a-6810ad0f934c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd51ceb-dafe-47d7-b97a-7302d9ec9bd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c8322f3-04d9-409e-88fe-5375b2f459c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fdefcb-2042-4de0-b3bf-b08c0f32779d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484506df-edde-4293-ba81-a804b3d3858e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea71e702-0758-4ffb-8ebf-e7c42408ef3f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731926d4-d449-45fb-8d97-686a068eecfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea69452a-8370-4e52-b65b-1e15fcada7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54935bbc-aafb-4363-b4da-ec2e65ebb7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b853c898-43ac-471b-ae86-b4de250c7901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e719b4dd-9cce-4ba8-912d-e4354fff463b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f327c47-9f47-4eae-a6ad-e30981a0a1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a294242-6656-410a-9316-6f6bf8b1f727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2efd01f-e92d-43b0-8937-89c6dba94767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff0d5f1-c029-43cc-98d2-e2d9f907b4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5024e3-c413-46a6-b4ad-789b6abb0eb8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c6d16d-70fb-4af5-8e75-77da452607a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f883eb7-c297-43bd-8177-b280dab7bdad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5511846-e05a-4a24-9365-56137f0a073a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b75663b-9d7e-4dd2-9d80-2a81cdbe7ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122543b9-5129-4bdc-b062-e6a9c75c958b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b6c2c5-15dd-432a-952c-03ed0a9ab866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfbaedac-4db3-4260-9002-ee13f1ee6324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9108e1b-027b-43c2-916a-e18ea8c81b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf2b0b0-a137-4662-a98c-54304ec4b25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e53c7b-e64a-4621-8a5b-0cedd2325c38",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57d234f-fd6a-41f7-bae5-f878d49df898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8660dc54-9ef6-408a-9d25-2fa391677aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb869b5-72c8-477c-892d-32575f93b467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54ae6e2-81e1-48e2-8734-fbc4d5743ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13563ad7-3bdb-4683-a842-ead55a1daddd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c88e75-2db8-4f11-8b61-c26186d263c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90b3c88c-74fe-4659-b641-7e14b1813dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82899e07-0208-4280-83cc-af1749471d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e3f475-a701-4ee0-b0fa-b11743d138f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac69496b-4e5d-4b19-9cd2-3c8073636cda",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c0900a-abc1-48da-b7f1-f61243d1a8de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236b6879-f150-4c20-a2cb-5670c47e88e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ed3fee-b3f7-4e16-b6a1-40b53e23f662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8831f3d2-6e85-4f37-9cf4-c8f61aeb3b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbd7e1a-a4b2-44a4-8acb-04fd8e7c70fe",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9963f14-992c-4cc8-b410-27d785a93b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4386cab8-91db-4660-bf22-e86840b4a7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b760568-1694-40cf-8cde-d7f1dd81d932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e34d7b-03b9-47a4-84ec-44e22c286f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c38a5c5-12c6-4b1c-be60-8278604368a9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b6dd0b-bd36-4c64-8bf2-ca16deb2f262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4b1b7e-3726-4ed1-8e71-4d0171f38557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cd342a-32b0-4645-83b0-dea87783e7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be60920f-aa86-4ad1-b787-c7f0a30b49f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb4b8bb-79c2-4fae-9fd7-0d667d0b40eb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57fa81e8-d7c0-4f9d-b72d-756c0acd7cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe52b533-27c8-485a-9c21-c2820136ee5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c2f0b4-1218-49d0-92d3-663ebf73f971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1ab210-f801-4d61-ad70-07bb44b691a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e288f8-d4b2-4ed8-b8bd-ae111c5b1970",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27dc688-eee0-475f-a5c9-9ecce38c0a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f7256b-976a-48d9-8582-bd6c2700d181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b47653c-9df5-43ec-af1d-b1ca9c9ee441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b46567-7e31-4c86-8471-7dfce12cb1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb63155-06e4-455c-92cf-b8ecefeab9e6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea7bd7b-a09e-4ce0-be0d-163d211e69b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7fe4d4-9033-4aff-9d01-669d2675436a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d021d0-3819-46c0-94df-f86d099fedf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e550912-9af1-4fa0-a8a7-d387d85d930e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2f83f4-39d7-43d2-9163-80159ba7e309",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f27e50-836c-49b5-835e-ab6bbb7ef1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a096e902-0ea5-4668-bd75-f2ff73d040eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7aa210-4fc3-41a0-9049-6a3936315c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fe639b-cb0f-4c1b-9577-c1800d5f1e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc8a651-0e1d-49c4-9ddd-ede4601c255c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ed3527-4b5a-453a-ae25-0236260d4e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "017c431e-abe6-402c-b48c-493e3095e873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e76d42-ac87-4734-b371-af7d146880e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f32615a-0560-424d-a0a4-5c0d54e83f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc209f58-1aad-4a4b-8c8c-76cb3892eb1d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0293d074-a6d8-41fa-9a45-b70459f53131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4c1538-6adb-4e78-83dd-0716945c129b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90910bd-fe2f-41cc-9a45-e0229c809c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a63454-ed60-455c-a748-abefd2c16d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7aef5c-d86b-43aa-9b47-46b807f4034e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5564564-35cc-4226-bcb2-cbbaea7232c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fda5fe14-76ec-4cba-affb-364d05904e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc511e00-4af0-4dc6-93b5-a30b5af70e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78317ac2-03d0-41d2-8cb5-c4d716a5cce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34108cfe-fec8-46e1-b75f-33f976336334",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c08b44-87d2-42f6-847e-6ca7949d0c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973e7efa-d90d-4f6b-9a76-c531ed1b1ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112aa775-615f-428c-b9f2-f2d3d0ad9fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9758079d-9bff-4da4-bb77-49c99dd87c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f3da61-aa6c-48a0-bee3-2d9d2343155d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a175f59-8b56-4c57-976e-35ee5a628ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef385653-d952-453f-8286-cdbab7200cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d84a79-ecdc-4f1c-9f91-c460182fadfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5069d620-b889-490c-94b5-edd5dce56a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6d9dfd-f8ec-4905-bc35-bf837b18d354",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b26e771-3f27-4632-8a4f-f470d7980e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429abeb7-0f5d-4c98-8135-dd0b2bf995bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdc28d8-9e81-4e3a-8c86-1033518ef78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738965b4-f997-4a3a-8c2d-c9c211db6bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559ea366-712d-4dec-b8ed-45460eac78e6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467374f0-90d9-4530-ade7-f659de1eee7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a19951a-dfe1-40cc-92e9-cc39be9fd695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99b3372-ffa6-498d-b7d1-dd9e9e6cede0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc39d95-ee38-4b8a-92f1-c114a427198f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e4a986-d2de-433d-b153-36baf58e3e83",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddd8561-f217-4fde-87d5-fa0992224b86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd5a9e20-fb93-4c7d-b18a-f3019dbd9dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1015cfc-514a-4114-83fc-851af694cb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ebdb81-a9bb-4ed9-87dc-e7944309a1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdd3e10-b16b-497f-b6a7-117fa7a640d2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b002a584-e9db-479c-9bef-6353b7206cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81ce8ae2-049a-46e2-88c9-28455275c435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3201aa-21bd-4951-862a-37ae5926e276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c6c3a2-d07c-465c-a252-a3eda2a4881f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fe90e0-bc1f-42e1-9f03-dfe59c489031",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de13a67c-2e95-4062-a535-e0018e382454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d242270b-e6ab-40b7-b1cd-6d0ed41bf7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf52fa8-6125-4e87-85af-7afbbe3e1b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fb926e-7c51-47db-9ec4-23d59f8fe821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a23afa-6800-4433-87ff-c2be592a0103",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a42d993-a686-4953-9cae-def421c800af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b0674d1-22f7-4f09-980e-238964d04e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee56856f-38ff-4d9a-aa13-be409e2f1bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39194c1d-31ab-489c-b1d6-0b3792524d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b92fb5a-67b1-48f7-998a-08faf5e9c042",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0169dbe6-5cae-4306-b13a-d50630923c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1bd5fa3-394a-4357-9ff4-3fa4b1a35a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403da8b5-ba4b-48c2-a9d7-a53200a6901e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ef98b9-d6bb-445f-b5e7-83506b745c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ae66ac-bc06-4372-b46f-04804a861faa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d921cc44-5f45-42d6-9670-3c2669c965d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46aa0a66-c116-445c-ad4d-0b9a1b954bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c3452-35ee-4384-8627-4de1cf72e565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6d74e9-a7db-4012-a4c5-fde8a8dc39e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906d3f9d-e3b3-4c11-a99a-deef2857184a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efef6997-0f51-4e65-9cae-4bfae9557710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3f32ee-bf8f-41e8-8ce4-6fff1d9db714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeeef66c-23ba-44b1-b132-a38665b03d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94c3cbb-e62b-4899-86de-a02051a7c715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d27b5f-329e-43e6-a175-724b9949f44a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e406d309-fdf0-413a-8627-d23e0409b489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18cbaa4-c91e-457f-b8b0-fdc6428fcaf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9d6e8c-e6f6-4e10-8ced-59016f869cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1139583f-c365-451a-b110-052da69187c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96098fc1-edbd-42b2-98bc-6ad9c84e1b58",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04edbdd-5a6e-442e-86e7-3d241fbd7f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce2bfb5-6797-4db0-b60c-53bd19ecc6ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0183bd50-34e2-4744-a2c7-1e776b6d02ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd67313-19ce-43d4-88b8-078018a03478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea1c233-6f59-4295-80dc-4785ccdab852",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecf85f7-b75c-4e63-8592-cc20fcbf48b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecffe0e7-8587-4b8c-b311-a4f0c383d8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c04186a-e5bf-4bda-b35c-3cba8b57575d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfd4da3-21f5-444f-8c2c-f8d2b908170b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948aea6d-8618-43b8-9b08-112f07328192",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bea5eb-caeb-429b-a5aa-462e6ca2a3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac58755-a86d-4362-b357-15af6eab93d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a666c34-9ce0-47bf-b1a5-8c8385e8a1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77ecae9-502f-4082-9b8b-da3f818c3cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599dfe58-56d8-4743-9211-d81bfc0f63af",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735e8cdd-e643-44e1-9e6d-fbe0112856b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cc7dff-61e9-4e79-a45d-9d2a1126b0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b5b810-706d-45bb-9dee-f52f4dbcaef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a54d09a-5c2c-4b94-bf51-12a8996d6270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed15470d-aeee-436d-ae0a-93ecc6c4d17a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2425aae8-da9b-4a18-8127-4c090255bc5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feed55c5-13e4-4731-b931-e4f726e0baa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c085fd43-0758-4c3b-8643-2a81dac67097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e163dfc3-5589-4a7e-8608-aa52f9094e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169f4998-e97f-4692-bd70-27aaf7299f13",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9021369-d3c2-4b96-8c1c-34018ca621b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810143d7-c0fb-4751-918d-4eb96d612ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4be1664-d436-4c33-9def-1d8941737345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230bec1d-750e-495c-9bcf-56179711cbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9638b16c-a8ca-4291-953b-72fbcb2dcce2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ecba90-7ba3-4b38-8458-0903bc0acbfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6e4582-548d-4be0-bcdd-5b49105ae1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d93f448-8026-451e-9cf4-b9ae592fb8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521cc7bb-78b1-4f95-b967-4bf1539bd43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc21ea52-8ccf-48dc-a104-bd74e6741184",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22eac6bb-b41d-4fac-8cd8-c9e30ebfc682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b761223f-db87-4178-8ed6-d3f00aed2884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee157d2-65f5-489e-8957-da80c7aad44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0ced32-dc14-41f0-b2dc-b34df3459c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af450352-b8f4-4012-9918-ff7dc4c64f5b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b999872d-64e5-43c1-8b53-3117c0b6e015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8517083b-0906-4432-af4a-214c056ffb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bb4afa-b616-4c53-8d0f-66290af069b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba8f0cd-3607-4722-9f73-1b061da61236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bfb953-51ca-4663-841e-27f1dff2bfa0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0031c89c-27c6-4583-b9b2-e3a4375df38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac47e8dd-c7a8-4cba-86db-010105995e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44134072-7872-45a1-8a11-00ebfe5286ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3972dfe0-6553-408c-b075-70a888c840c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b640409-d07f-400c-8415-a8142eb8c3d7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2e3a94-6d6b-4978-96e7-eeba56e2d8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288cffa7-fc14-424e-985b-fad5b1a8a2c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26190731-f81a-4585-8236-880843c5d644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8298ae-5b15-4f97-81c1-3664aa5e49a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6009402-6201-46d0-9eb3-a0aa1b6d4dc7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fb24d0-1d43-4f1b-94ec-830ed9d546b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a68461a-cda1-451a-a0ea-df3f1aeff6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1df62a-1c9d-45b4-8e86-9485d8fb88d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81aff27a-df1b-45a5-808e-2c994d7170e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1840f31c-4e68-4ca1-b39e-559ecb4b442d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396fd192-f91d-450e-bc58-3e8816864f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309c6e65-4ad1-437a-862b-1bf2302ef9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbe74bb-9b9d-4524-ad01-43a145b443e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc921eb-4ab0-4761-a724-8f1927b0d542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2894e186-a44d-47a1-b93d-9092e80b6b44",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cefbca-1e8b-477f-acd3-6445bd2bc0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ecfa6f-9947-4204-b726-ab9e6ba6483a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "480fec38-7685-4721-85d0-ceaf5fb8f353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354e9d25-2387-49b9-b137-a993c3db46c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e78dc7c-b9c3-4aac-9585-df39ccc68d92",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7e201a-d773-42ca-a943-ef75f5807353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b29f91-cfa7-4b63-8cf4-628b52f83ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22e58a6-7022-434b-ab77-388084421973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a944f5f1-5172-41ec-b854-76e03d931beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a124d6be-f555-4a37-bda7-da8d4a232cfd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b75b3b7-59da-4c90-bba6-5af4e963d9c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cccc15-74fa-4540-9194-534a67a4a817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d47cee-f043-4d9a-884b-106eeb2888fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8723b16a-cf92-47e1-a3fc-9abe0bf3cfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0702ce44-b30d-4855-a71e-8d91ea7fbc26",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c6d834-14aa-4575-a2da-d5b70022c8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb4cf16-3722-4b7b-b202-513937d6ffa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779b7ae2-9947-451c-9fd0-d8b3ac899737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50025792-d470-48a6-ac8d-3a0a68c00eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686b969b-fb6c-4e63-b988-0457387770be",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2516215-a47d-417c-ae10-3464cf6a0e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325a85a4-8796-480c-aec0-0777bf6f73d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c85a886-a3ce-4cb7-986e-1766861627ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8b3f31-e68f-4ad4-966f-36c3bc2d7135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04e50bb-0358-4b50-9a09-42d5c791f7ff",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e43879-2072-4a99-99a7-41c0bd6e4e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df218b7d-e64a-4733-87b5-f31fb3a4b2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92ad87b-c8ad-4ad5-ba24-a363d0e63a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8805da85-9aa8-4177-9d9a-623ba47d71e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83ffc3b-8ca1-4643-8b7c-6ecf2316cbc2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7d987b-842b-45e7-8dea-7313cfc1bfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c0e21d-95ee-44bd-a653-f75935388020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0682c6a-8359-4d30-9cfb-342046983a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dd0fa5-3e5c-4246-b923-88d39b8d17cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ace229-d943-41ae-8267-b8c6477d905b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083c35b3-c95a-4915-87c6-ebca6fd41d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b643a72-2714-4463-a1e6-e27ba5b61edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8339c93-aa66-404e-8d80-3ab194c9ec81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0ac082-08ff-4c9b-a418-63ee9cf800ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb83cd3-0271-47ec-9efc-21c535cd24db",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb8f32d-52ab-44fa-90e3-0be5be601b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a73663-b38f-4b06-bc33-0cf0add84d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0148b293-5139-47c9-8e3f-cf4663805233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92130f4c-ee56-4e4e-b5b2-51dbdfedc203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9994a095-41c5-4f35-b9c9-d11290a36250",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c72706-0bb2-4c27-b0f1-fc6a57a0d97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16be789-d77b-41bf-b136-7ba91a2e7607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848e12cc-ecd9-4eef-be77-d4406ff704e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718e12c7-537c-4ebf-9a5d-78b54b1b3194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e932fae4-103d-422a-9791-66ff0b7fc4e5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe1d74a-c101-49c0-b406-7b0701b3de92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512c9569-83b7-42ab-b12d-159194680c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1535ca6d-2bdb-421a-a2b0-1913e6aaed58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021e36f7-dc27-4514-893b-99ea732083f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156717e6-d803-4c8e-b9f7-9167c9d5da59",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3c16c1-64de-422e-8678-a3043d293512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7934c17f-0565-41c1-b1bf-2595ee51e796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded81bd2-6202-440d-bd8f-85d5d2e6fdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63cad4a-cdc4-404f-b0de-6dd6cffc223e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12183fd3-6254-4d37-8786-b31b5d911674",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3638bc36-cbf9-443d-9f38-82f1f5dafb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bc8bef-7ac8-4a93-ad36-8bf4a91e6040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162efa4c-273c-455f-9849-9e68e070cc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d07344-7a99-49ec-968f-0c891e9a17e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38f4be6-141a-43d8-bb7c-be622f842827",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3a9d75-9df1-43eb-8680-6bb875485db8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412603a0-e7a9-4c8e-ae12-d511620cd303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433e6290-00fe-432c-b83d-c059d5b6c669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a3e1a7-3461-4c6c-b55e-9e5b887ebf8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fb81a9-f54b-47de-9d8e-a16270e792df",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2540a7-088c-466f-9bf9-b21c13e0e7e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1ed323-eb0c-44c8-a5bc-5efb8e5799a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddd4a45-a86c-452e-99d9-96b3549409d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b971cd-9453-4b41-997d-23d998fc7bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a95d01d-dc2d-41c8-b43f-0af9ca1deaff",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1e7156-4e2a-4535-95dc-b0abbdc772aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b96f73d-dde9-4b50-8d5f-72e4f843d0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf3ea96-92dc-4180-99e7-98454c9c483f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d96e76-efbe-4c8a-b74e-dd1ee8df0408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de5acb4-7e82-406c-964a-6ac9ca4de4aa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9159c608-11d5-4cb3-93db-2124807091b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e12c0e33-3df8-40a8-96b9-ed81c77e1637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5b0979-8151-4a78-bae4-10768b6c0476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8eb8af-3bc4-4868-a50d-fda381fc423a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d360e0-f32d-46c6-b4a0-1e96117bc0e0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4e75da-4709-4937-9713-d2857942a877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130a645b-aa12-4990-a68c-3ff14ff7a2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d813cee5-71fe-4829-8d2d-cca9c6c2dbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878633d3-2ab9-4f36-abb0-69d89dafe48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8bad4a-309e-4fa5-b3aa-7bc4e9c4043b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514d8a18-9929-435b-80f7-0c50cf23f0ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4b78a5-df7a-4714-a06b-8e22e168578e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5dd381-a79b-4b9a-8274-435be5286d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53c8978-c356-42ce-b26c-90a736290ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165cbda8-ca85-4b28-9558-b3199ae1aa85",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf80b3a6-af77-4481-916f-a2526af707b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c639e62f-2791-4ec9-85c8-1e2e3f926a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5b7000-5276-42c2-a9b4-eae14bf68dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d320e28c-777a-4a8e-80ec-1fc87939015f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f4e305-4b6a-4a31-aae3-064d0348cdb6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612af343-7e32-402b-9938-e180be3882d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b7e773e-2b53-4755-be94-dc431b8b0059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06d325b-aef1-44d3-b8a3-ebc2024eff7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538466d8-42c0-45db-a2bc-75fd3a7390d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca0ba9c-5bce-4d19-9af9-a5a4fc532599",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed137170-9d44-48b1-807e-3c8c9a9f6d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9eaa92e-d8c9-4c4b-a107-a76a2dc192dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8cb3d0-2d69-4c71-9035-3b0c21290b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea4d736-5378-4277-96bf-3db8101d7631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50980c3-cce7-43a9-9969-f380d9274338",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97eac88c-66e4-43d2-b8cf-2b8a09b94ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca8c8e0-f4e6-43d4-b04e-ba2355dbe752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2580406e-64ed-412c-99e1-3522ed699bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53463e8-e887-4aaf-aee7-729e074b620d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c784121-a711-4a04-af6a-4b12e71c958f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa8acf2-623f-43c8-bef5-1652c0f15192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7672488-0ab7-4a10-a96b-e043e433f92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7c224a-9587-4629-906c-251241ce3a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1649534e-a532-4653-801d-aa06486a4f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bae4caf-ddf4-4b19-b69c-b29c09058b85",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a74037-ba95-43b9-83d8-be181f0f41d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1415ec5b-bbe0-4a40-affd-d837ddee3c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7b25af-207d-4989-99f8-2a77969ffcfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66066ea4-9f23-48f3-bd49-f2c28b2498ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372dd310-9c18-4982-b065-127b29319616",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5faab6-5d8c-4e5d-b501-4c3a3065472e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01bd35d7-124a-48ef-8811-ef5207cdbc56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00aaadc8-f574-4012-9047-9b76c0f130e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f581cbe0-349e-4c75-affd-763c00054ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e727a79d-6c15-459a-83d1-ca69e8bacf18",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a1bff1-3930-4d1e-be0d-32979965a644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a2f377-66d8-46b7-9913-acdfd4402208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb06c99b-f3a9-4d12-954c-73be1f15433c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a7b7b5-82f1-4a59-be4a-7de81ea62674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07625117-9db7-4e97-9766-2e7e3538d5b3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb688367-6ef5-4e1c-bfd3-4acd144e7008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058c25fa-b763-4949-8fab-a1202de9e5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59341bc-2067-4ca0-b1d0-e581acf790d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e820d3-472c-4030-a2b5-f9f3a441dbcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99bc8f4-ff0e-47bd-bc12-f8c442adae76",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0e0a16-df49-4180-b3c1-d9b8f3dd2f5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b077dab-71e3-46f3-ac3f-3f5de99c1367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae2c465-dd8a-4255-91cf-393ec262d505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554ce678-a472-47fb-883c-ae60b261b2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142d589d-a5bc-4a7c-b726-32e7ed0f89ce",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef68d27-eb10-49b6-8419-7d77705e94ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c80f59b-c787-4624-bcfd-568a091c0509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f9fd70-af26-4093-9c93-17e6e7a7e545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e7f96a3-4bcc-49cd-9c9d-c205c4eaf014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a36e75d-f09a-4258-8f49-47fa14a95603",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0002e8-967e-49cd-a00c-0b35a1ddecbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d334f4b-c922-48f0-8fca-2619e58d004f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2fdd46-d5eb-41ef-b677-ce570d8987fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "109b4215-92b2-4e45-956f-2388ca0cd49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c2e7f2-06d7-4fad-a75a-ddfd70a83ce4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dbcb5c-ee24-42dc-8259-10d6227fe902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b32a2aa-7a1e-47a1-a35c-ca02324e6d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f5a0a3-e2a8-47c3-a601-ae436a4d5f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367a4a29-28e6-44f0-95a2-322bf72cf6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138b26d4-c5c1-45b6-aa93-a774a55eb8fb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c509e7b9-aaf4-4ee4-9a68-a308f1fb4207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc15c74e-a457-4db0-8389-fca8b3b80a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd8c245-aa65-4954-a3fb-acf8a0a9d073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91857fb5-6f3f-4c42-9695-a943a7a53093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87266368-8946-4bf6-9643-e75b2ac777c9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bca266-49c1-41ea-a5e0-2bba13a3e9ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e972e66-9fa1-4a2d-8b30-c244b30a377f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1c9f44-d2c7-45d0-a483-dd54225daccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fd89a0-4390-4a0c-94e2-e7d101962586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc607c20-72ff-4a51-a4a2-3920dc64689c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f654a2-fe32-41c4-8d3a-50161a496f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abd03681-3312-4e8e-89bf-83c17c49be5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb3504f-4ed3-4892-953b-aae39b3e7b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e13a6a7-64e4-493c-9eba-be2a32a19e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b476b85d-f979-4cf9-bf38-fb14626a68ab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc618de-6551-4138-971e-b3797fa45950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f46cd861-30ac-4561-8626-2fe46a38e8f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448e0f90-b15e-4f13-ba86-9a434a30f93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9d1f23-be9b-44ea-9b31-24f129dcef4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba01aba0-e975-4d9b-a0bd-d82e4765383a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36764598-804e-464a-baff-080c5bec1841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0f3b4b-88e4-4b86-a284-361e08fccf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5997e6-addd-4ef0-88f2-05a8dd29d854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352d8121-8011-40b6-83ff-27a63c3d02c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eab8fdd-0459-4317-9773-839df1e38438",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad61537-2a60-48c1-bcf2-d85f37acde45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542bde8f-5c55-4b40-9ea1-474a66a3d46c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34492a3f-2338-4c32-8dbd-5f3e1f220bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeef3042-ac80-4d64-96d9-9b5b1f6f9563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dfdb10-c66c-4add-a2f2-bbc1504e8b1a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b2b9c1-4efe-42c3-aba2-b83f729dfb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e03eb5a-12b4-4a2b-a3ae-661ed1f04c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b406a8c-51cb-4bdc-b512-b0b83fc1ac55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312acca2-4cf3-4be9-b020-3680d4c09d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e0e980-ceda-472e-b621-2ff86c44a24c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d76b61-b06e-46bb-a616-c97b6d180cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "870ceb0e-3a65-43d3-b2a9-1837f18be788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e074e69f-c1d3-424f-bf2c-5d4ad4c94fe4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad28e6f-b794-494f-827b-858fbf4405b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8faf906-4a46-4c7e-a866-27dde8067e01",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153cf87f-9e01-41c6-ba17-f896e1f1280a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d7c39e9-3151-4017-8ae2-cfbc91dd0676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cbd2a9-d85c-4c85-95ca-b66ee3029395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f45aa7a-0841-442f-9298-4ed8bef11a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b157c6f-65cd-4376-bd79-745b9acc793c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5cafe9-cbdb-4bb0-96c6-63020e0aabc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5611c176-8839-447b-a1f3-9ca6dd5fb381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f3067b-2559-4fd8-8b9f-5c8e385d9de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe6b8d5-5957-4330-a93c-d08566ef5542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee034317-16cf-4728-9509-ad188bbe23a4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28aab944-a01f-4e79-86c4-ec60e67c6c09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "706c4132-5b0e-4e99-a024-03e67cc2a56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101e7756-d994-4a7a-825e-cd7d6f14ff7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4d91db-508a-4fd6-82cf-fa5b3e7fec3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afd59e3-cfbc-4dd3-b0e3-db8b7ee04268",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9c20ce-be3a-4f96-a783-53d0a1437992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f7024f-d567-467d-9eb8-e669330b957d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4331aad-dc8f-45e3-8845-3512eb869c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db73f552-9710-463d-b973-efcbf85b16b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be54cc87-3e82-436e-bcad-e975b70a9359",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36bc3de-edcb-494e-80ed-bdb066afa600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb0bb6b-a873-4163-9056-6b14e7e3571e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1d1e01-10f9-421d-b232-9c0e35014653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b906d0-cda5-43f1-837c-4f0425568919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9898e097-7da9-41e8-8b19-5ee7b95e32cf",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0350a38e-32a0-4a6d-b15b-df04ca0970f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "365020d9-a472-4fbd-bc55-dd0de21f46d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646cc8e2-b05d-418b-a5d5-a3c8d3e966bf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbf7270-6099-4e20-aeb4-03dfcba1ba7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a31138-931a-4142-bc01-bbde62f721e9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f75090-4cae-4367-966e-3ec98fc7d784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4838496-7fd4-487e-a84d-7d0fdf77d50f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848f8574-50e4-463f-885a-a41a7fd64ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646ad69b-77c7-4d1c-8413-ed65b9114c16"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adbab36d-09e3-48f3-af2e-ef779dc5d1d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d69925d1-012b-4912-a653-6bdea8ad6dbb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f766a89-e247-4258-b8ad-ea75eff26f8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58336ae3-aae9-4cb1-9b7f-1d2599a806df"
                    }
                  }
                ]
              },
              {
                "id": "f28e7912-4c80-4bc0-8bb5-a049757e91fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24a7c11f-3ac6-4694-a21f-0e87399fd18b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ae4a1b-8afa-4316-83b2-9eef0ec85757",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "69ad89ec-d423-422d-94d9-ec5b45453513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b4a78e-0b0d-4d88-a22d-9b8dab788eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ae4f77c-6f5c-40d1-a036-c9c82a0466b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d93d714-3c06-4074-b01c-85ab0fc5fdb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "164fb322-1607-42c3-aae6-c79ed6b0509d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fae135c-884c-4436-8d80-a6eb7b5455bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbee280a-859f-4719-ae21-4bd826459108"
                    }
                  }
                ]
              },
              {
                "id": "8b1aa197-46f9-470d-a9b9-049ab48ad66c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "07f2f15a-f518-437a-8f1b-315f2a461157",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5864e05-c2e4-476e-84cc-bfb33a8f3d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "21c01966-a5ec-467d-b453-bf85e833e391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad57bc09-19c4-4366-8120-0e916a77f943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c36253-e156-4e94-b121-9be6598f937e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "470ea250-cde8-46bb-8a0c-8baa38f2c806",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a3229ba-8f60-43bb-b446-557edbb8bb54",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4a91185-e6de-4496-96a3-52c6683db6a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3a0694e3-aa71-41c2-b99f-84b9082a4837"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b21e7e1f-0c92-4f73-a030-8926b7924027",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd29f077-d1aa-40ed-a99f-0147d0160f33"
                    }
                  }
                ]
              },
              {
                "id": "f4d93c3d-6eb6-406c-86b9-a15ad931bce3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a44340c-1287-4314-8cb2-66346e80682f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "59178de9-b50f-45f5-9d04-33c281416a42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce409db3-a689-4a39-afb8-68a3eca2a211",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b39c474a-1fb4-4e42-9d29-43333b66d81d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88b53396-01b3-415b-909d-f586bf5844c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4b2a0123-4387-4e66-87fc-51f4d4d6212f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cb2d571-cd98-4bfe-b609-fc92290707be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab1162e1-9bb1-43a2-b945-2715392d38cb"
            }
          }
        ]
      },
      {
        "id": "a7af6d8b-b0c1-4b7e-82b4-d4a092ff19f6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e82042bd-6905-4ad3-9d54-9aa5ba59d64d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f325d15-86ea-4739-b02c-e86a2154f4ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc24666b-3f31-420f-bafb-f74b024ab9d1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b12e8bd-dd14-4872-a55d-e87d44669d2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "70ed55b5-b1d4-48f2-8940-6831a6d6a2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f64dc0-5ab9-4b24-b579-47e84e5903a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0d73351-f1f5-4c9a-a96c-ee22b4c01162"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a0b601c-e289-464d-bbc4-402c47e15e32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d512b4a2-9ac6-42d0-a21c-8ce801d91c2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f66d3d16-477e-4f4d-a9ef-639282bca69d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "648f2327-3d9d-425b-87be-eda91b86d9f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2894eb8d-fa99-47ff-b4a3-9ba326159d7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "64bab1be-2cf5-4d60-ac73-09d841318b3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f161a202-ea17-41ac-8cb2-81e70a7b0c88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "875467cc-ebf6-4083-9a4b-cc9b4d0ea450"
            }
          }
        ]
      },
      {
        "id": "30ce51ff-b11e-4d71-998f-eee2768513c5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3668c87d-9f59-422c-a74f-3dc5942d5476",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e037286e-cd27-4d13-8045-54563029d995",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54af0873-466f-4930-8b8e-92669c341d37",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def7bcd8-2bc1-44f5-a86d-4a748bb28968",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c99037c-932c-47fd-b210-47f687dd9c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9802805e-ff3f-4635-ac1f-a2e3315436ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94afbcb5-6c08-4800-9635-846ce5c91914"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0708d285-f9c0-4e52-9bcc-d35e0972d06f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a86f2ebc-ae0c-4ea5-bc59-390fa68e8fef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a7a47c7-5900-4029-baf5-18758f64f847",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "259464f7-d869-447a-9092-95aff36015e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a0eb6fb-30d0-4c07-a754-50d39c6e6022",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7de3298-7962-4b85-91b3-ee8893887d6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7f168ff-759a-4ab7-9b96-7a423ef5cfac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2d5ade0-27f7-49d4-a443-c6bcf3156e41"
            }
          }
        ]
      },
      {
        "id": "c706441d-b9b5-46fc-8030-044ccc0a1eb4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "fef0f5ae-aa70-47d9-803f-3927987b8d19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17389275-0058-4842-8d40-0dc7a2163040",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "400d0adb-9cc4-468d-82fe-0408a819cd2f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b766e8-3ef5-4c41-9514-4c8fe58e84f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "212c9c69-21ee-448e-b018-5337955ab173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa44dbe-955f-4a92-a234-20b1b700ef50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cb2ee64-4b22-4a0d-b26f-ff5d881c8031"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62a4054c-2834-4197-97a0-22fffc181f3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d55f0a6-5668-4702-8f2a-664654cffb38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8f19b9c-83e5-45af-8df1-faeaa61fe59a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa3b17c1-4f8a-4473-930b-6c5bed49ba93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cefbe957-f6a1-4429-8704-f54b240f80eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f94b624a-b665-4827-8874-7b4aa6ae5879"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bc26680-6cfc-4fe8-9019-09ded11ad4a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7bf61e6-0f17-48cf-bd4e-74ca54e5b66e"
            }
          }
        ]
      },
      {
        "id": "98377c4d-bf08-4e8c-b07d-5eb616eb0315",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a33f748-c48b-4747-8555-c2ca6b48184b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5be033f8-cca6-43c3-ab54-cad0bddd8ff0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7e706fb2-c42d-4fee-8afd-7bf182ed6cb2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5e7b3e2-6a6f-408e-a812-e2104286409f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa8ee91c-be4c-4834-911d-81a982ce54fd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 147.9880952380953,
      "responseMin": 14,
      "responseMax": 11022,
      "responseSd": 733.8935602625122,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714782915265,
      "completed": 1714782960608
    },
    "executions": [
      {
        "id": "36ed93eb-4f66-48fd-a685-e62b406b0128",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c189d0ee-106d-4fca-8a15-7f6b54a57dba",
          "httpRequestId": "c8e6da93-bf2a-459d-a9ea-807a6e681430"
        },
        "item": {
          "id": "36ed93eb-4f66-48fd-a685-e62b406b0128",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6a1dbc89-6b67-41df-9bdb-7a124b005105",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "aa522c77-ae18-4637-8fbd-745f86245058",
        "cursor": {
          "ref": "48f77b52-f872-4780-b774-c2ca31b88783",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b4450d7c-9421-46bc-a30e-ead9b62e78c4"
        },
        "item": {
          "id": "aa522c77-ae18-4637-8fbd-745f86245058",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4949f4e9-8cbc-49ba-83fb-10fde27cf584",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "e177f1b9-2e97-428d-bdf1-47aa9671218b",
        "cursor": {
          "ref": "772368bf-bf9a-4ddb-9030-1029aa677610",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "08d5347f-b801-4258-97c5-57cc9ce3c35a"
        },
        "item": {
          "id": "e177f1b9-2e97-428d-bdf1-47aa9671218b",
          "name": "did_json"
        },
        "response": {
          "id": "5859e1e5-58a8-4b9f-8695-eb241f3ce090",
          "status": "OK",
          "code": 200,
          "responseTime": 271,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987adb1c-5825-4cfe-bcf0-bafd20af0ae5",
        "cursor": {
          "ref": "da344e86-12c4-4a1f-97e7-980188193796",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d04c496-89e5-4fdf-82b6-4222393571ff"
        },
        "item": {
          "id": "987adb1c-5825-4cfe-bcf0-bafd20af0ae5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d0465112-634f-4c2a-bcab-4e31047ad82e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 371,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987adb1c-5825-4cfe-bcf0-bafd20af0ae5",
        "cursor": {
          "ref": "da344e86-12c4-4a1f-97e7-980188193796",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2d04c496-89e5-4fdf-82b6-4222393571ff"
        },
        "item": {
          "id": "987adb1c-5825-4cfe-bcf0-bafd20af0ae5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d0465112-634f-4c2a-bcab-4e31047ad82e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 371,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad9a338-87a7-4626-a678-6d93f729d07a",
        "cursor": {
          "ref": "d90d1f5d-00a5-4e7b-8cc9-9ebaf86f2e94",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8f98839e-872e-4de6-a30f-0092193818eb"
        },
        "item": {
          "id": "bad9a338-87a7-4626-a678-6d93f729d07a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0515a0b4-499b-4a5c-adce-04d14a3e6c6b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae2296e-9635-468e-8995-e679db2294f8",
        "cursor": {
          "ref": "35520cb3-64d2-49de-8a12-a0f3696c406d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "39e5c9a1-4c98-440d-8b20-a2cda8e1c0ec"
        },
        "item": {
          "id": "eae2296e-9635-468e-8995-e679db2294f8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "419e06c1-1fc0-4b34-8938-7c7fc8b98297",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a587b76-8242-4c89-a2b8-7d0e55f50787",
        "cursor": {
          "ref": "fdd89c3e-c767-4faa-9cc4-369619f447ea",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ee4bb993-3083-4314-b0b8-d07b3fffe957"
        },
        "item": {
          "id": "7a587b76-8242-4c89-a2b8-7d0e55f50787",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d8d94deb-94f8-468f-9866-2ca3abbcfc25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 112,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ce25ed-5e19-464b-93e7-f08021886be1",
        "cursor": {
          "ref": "924d9c76-83e3-4151-9bcd-e7a2c9c16a3a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b739af25-5bd1-4177-854a-00a4cf4ceccc"
        },
        "item": {
          "id": "c5ce25ed-5e19-464b-93e7-f08021886be1",
          "name": "identifiers"
        },
        "response": {
          "id": "0da25a31-836b-48d6-b472-ac0b38cdac70",
          "status": "OK",
          "code": 200,
          "responseTime": 356,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b2b2fd-0fb7-4027-9991-babf6d9f7539",
        "cursor": {
          "ref": "9dddd66b-96b2-4a5b-945b-8430ef41cb4e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "96f25a83-b19f-4efe-88ec-0efad76fd756"
        },
        "item": {
          "id": "82b2b2fd-0fb7-4027-9991-babf6d9f7539",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "87a8da45-6ecc-4f43-9654-0ac8d9d2190c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea62d702-1f77-43a5-94a4-2637ebab2182",
        "cursor": {
          "ref": "f60dc7da-6be8-4d83-b7c2-4d1e2c42ad09",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f37b768e-fbbe-4001-a37f-3f25b0a27ec8"
        },
        "item": {
          "id": "ea62d702-1f77-43a5-94a4-2637ebab2182",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "af469c4c-0d0e-45fd-83a3-1d9533ba1da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31eddee-a800-4ee2-8cd6-60ae48e6e411",
        "cursor": {
          "ref": "e9d869d8-aa60-4108-a0f2-1f047b4011ce",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "848ac725-4a7c-4e09-b72a-273d4d9006cf"
        },
        "item": {
          "id": "c31eddee-a800-4ee2-8cd6-60ae48e6e411",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7da8bc6f-51dc-4f6f-a004-6e84a0707cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303a92c6-b521-4f61-b3a7-4b208fd7397b",
        "cursor": {
          "ref": "f8e4c371-5f76-4d0a-bf0e-3744b4538b9c",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "84a9985f-0559-478b-8b31-0dfca0e362d5"
        },
        "item": {
          "id": "303a92c6-b521-4f61-b3a7-4b208fd7397b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a39def4c-191f-4995-9aa9-af4c09fd1cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378892e8-137d-47e8-b5bc-5274deca0875",
        "cursor": {
          "ref": "de6a5df7-2f34-4acb-85ce-1b99a5073da5",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "841fa76a-9c7e-4d22-b10b-f0b95c165e64"
        },
        "item": {
          "id": "378892e8-137d-47e8-b5bc-5274deca0875",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c332d585-859f-4d2f-96bb-7d44cda09376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1133820f-a060-41e9-9a06-1f578b1bca21",
        "cursor": {
          "ref": "03eda2ae-972a-46ef-bb24-6d7974e57dc6",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0cdd2ed9-806f-44f8-ba0c-ece05bab72e6"
        },
        "item": {
          "id": "1133820f-a060-41e9-9a06-1f578b1bca21",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7c219141-f32f-4aca-bc3e-f4c9ed86e3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3a1d21-8fbc-4d84-8b65-49b64be0dcf9",
        "cursor": {
          "ref": "73c2a542-1787-4068-9d31-eddcec2f32b4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "65df8913-70d0-46ba-bc87-91bda3f7123a"
        },
        "item": {
          "id": "2a3a1d21-8fbc-4d84-8b65-49b64be0dcf9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "914a6919-030e-44f6-9dee-04cb642c94d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdc89bd-6766-4391-81b6-e5d03ecfb999",
        "cursor": {
          "ref": "b23ce7df-bb21-4cf7-83d8-7a324ee52b39",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "699f075e-6888-4d46-b1cf-f485a4abbaa1"
        },
        "item": {
          "id": "ecdc89bd-6766-4391-81b6-e5d03ecfb999",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a3cd9ba6-de67-421e-af02-96fb9436ac6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5e6f16-9102-4023-b4d3-f0430887b4ee",
        "cursor": {
          "ref": "b4216201-0370-4bfc-ac78-28df7f228e40",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "afe43b07-ad5c-4406-8dfc-31c893172650"
        },
        "item": {
          "id": "fd5e6f16-9102-4023-b4d3-f0430887b4ee",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4dc7b555-3a7c-4a04-b71c-e28b26b86b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a01538-f259-46d9-8606-8bfa7c86d92b",
        "cursor": {
          "ref": "c891a7c4-42ab-4ed6-89e1-d9666110a7c1",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7e241497-c5a8-429d-97f6-ea09801b3a39"
        },
        "item": {
          "id": "57a01538-f259-46d9-8606-8bfa7c86d92b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fec988a9-e45b-4a72-980d-0543dac75124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a720442-5f03-4859-860c-8dba091d89ae",
        "cursor": {
          "ref": "825e6d22-eaf3-41a4-afe8-3d06c0d7f3fc",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1cffadbd-94fa-4aa7-976e-09551f898022"
        },
        "item": {
          "id": "0a720442-5f03-4859-860c-8dba091d89ae",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2a4ce97a-89ab-45cf-9ac1-b25c82e1ead7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f046331-d813-4505-b727-e95e202ed8b3",
        "cursor": {
          "ref": "5467f9cd-63e0-44ca-9f41-5d552ff45c57",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8c461c24-07c6-4ad0-a376-34f29b1adc08"
        },
        "item": {
          "id": "5f046331-d813-4505-b727-e95e202ed8b3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "120fc6d2-2622-4d6a-89a8-4b22138e26a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb66b1a-35d3-42a6-9d05-800a06a8c61c",
        "cursor": {
          "ref": "265a04fb-e30c-4f5d-9994-e01695fc576d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "78b13670-58fb-431a-ad22-d554a9a8d3ab"
        },
        "item": {
          "id": "2cb66b1a-35d3-42a6-9d05-800a06a8c61c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4fb7591b-b318-4a28-9082-2cba7dbc0782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52433e35-68c5-40c9-86e6-96092cf5efcb",
        "cursor": {
          "ref": "7014eae9-aa21-4221-ae92-10cdc6224939",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "acc04b37-0cf3-410f-bf86-dab760e0f744"
        },
        "item": {
          "id": "52433e35-68c5-40c9-86e6-96092cf5efcb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "85df637f-96e7-44b7-b9a2-d42203cc1266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9e0da0-dbe8-499e-9123-88ff56e8e0b7",
        "cursor": {
          "ref": "b765a8fa-769e-41c0-b819-cb9e7b39c62d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4509363e-7864-47ce-982e-817341f98b00"
        },
        "item": {
          "id": "5f9e0da0-dbe8-499e-9123-88ff56e8e0b7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "041e8cb4-a793-43de-98d6-3638d54fb830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4376155c-fc90-43d3-ba9e-6f60fb29fd7d",
        "cursor": {
          "ref": "ecde664c-dbbe-4cc8-8302-46086c9ef362",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "28c1ca17-aaf5-4c01-801b-cdab6b275301"
        },
        "item": {
          "id": "4376155c-fc90-43d3-ba9e-6f60fb29fd7d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1c24cdae-5954-4bfb-b2ea-457493ba0dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7ed996-42dc-4a37-a1d0-912ade9be8ea",
        "cursor": {
          "ref": "d82cb36a-9c00-4230-9cdb-a6022913b876",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7808dbbe-bc1b-4de9-a069-f2fcccaee3c5"
        },
        "item": {
          "id": "ed7ed996-42dc-4a37-a1d0-912ade9be8ea",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e3cb56b7-3037-4b2d-a9fb-197907239386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5a2fa6-71de-42e3-a18a-2a3536840ea6",
        "cursor": {
          "ref": "4c601472-0e29-42ba-9698-12e2cb8865a9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a90ca829-dcd9-4b63-a0e0-2f959af9f843"
        },
        "item": {
          "id": "da5a2fa6-71de-42e3-a18a-2a3536840ea6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0ac35985-703a-4249-82cd-7f075db9fd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc1117b-719d-411d-ba53-4cc2d2752071",
        "cursor": {
          "ref": "13b5afae-7a45-4172-9da7-2dfda720b445",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "db92cae4-fd11-425e-9597-379769b7238a"
        },
        "item": {
          "id": "1cc1117b-719d-411d-ba53-4cc2d2752071",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "df62d905-5401-4d8d-a91d-0bc22b085442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee0a569-3b12-4f57-b538-ad2556e7b314",
        "cursor": {
          "ref": "892dbd5d-b3b6-4e85-aeb1-dba63f664b97",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b0aef5eb-3c25-42e9-af3c-bedeec1bbe85"
        },
        "item": {
          "id": "bee0a569-3b12-4f57-b538-ad2556e7b314",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3613c119-0770-4e05-89e6-2613ac073d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009d1ccc-99d3-4ad2-953d-c948184b269c",
        "cursor": {
          "ref": "f702aa3f-4051-4163-876f-5bc4cafecd5e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c5c4bb35-91a5-4ff4-8d24-27856b33261d"
        },
        "item": {
          "id": "009d1ccc-99d3-4ad2-953d-c948184b269c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "49a3fbcf-f8ae-4d63-aa38-ce630392bda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbd8086-2e37-4156-96d3-9e8f6dff3dc9",
        "cursor": {
          "ref": "8a95d359-b300-4787-b050-91f3c960137a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5314e944-b24d-4bce-a907-651a7679199f"
        },
        "item": {
          "id": "8dbd8086-2e37-4156-96d3-9e8f6dff3dc9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "551aa1e2-98bc-4085-bdc8-b16185eca0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d2a092-30d8-44cf-9ba9-ec78ac96e2c0",
        "cursor": {
          "ref": "7f8b103a-56bd-4a7f-b48a-786f244ed828",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5bfb194a-d7b5-4fec-a09a-55dd02c73289"
        },
        "item": {
          "id": "15d2a092-30d8-44cf-9ba9-ec78ac96e2c0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4e5160cc-5b74-48ca-ad7f-37f4e97c916a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6e3185-3a53-4f83-a14d-1e181d82adf8",
        "cursor": {
          "ref": "5d9b0d63-e792-4905-acd2-af178b364cb8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a53bad3a-19f5-44e4-a154-47be8bac434e"
        },
        "item": {
          "id": "5d6e3185-3a53-4f83-a14d-1e181d82adf8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0fa3d7aa-8fb8-4218-8c86-f43da9cb3d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751715b5-1d32-4fd5-9e0e-563680a1d510",
        "cursor": {
          "ref": "1c3d4afb-58c9-4dd8-82ad-3a3ab6123110",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f944cd5b-c737-4a51-8b84-fda2b3c8389f"
        },
        "item": {
          "id": "751715b5-1d32-4fd5-9e0e-563680a1d510",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "17105cb5-9456-4b42-b019-18241c3f029f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568bdc4a-8356-4854-9c3d-2025c43677eb",
        "cursor": {
          "ref": "94868e8d-6719-4aa7-b967-b9040bd8ba87",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0484873e-1265-44ba-b633-d9403b95045b"
        },
        "item": {
          "id": "568bdc4a-8356-4854-9c3d-2025c43677eb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ee74ae72-205d-496f-a54d-e4a557da8937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9628fb4-cd69-4116-a54d-916b51ea15e0",
        "cursor": {
          "ref": "d1a43105-75d6-4985-ae85-03dd0b4453a6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ac5533bc-edf0-4e6a-a0a6-c98ba4ab79b6"
        },
        "item": {
          "id": "a9628fb4-cd69-4116-a54d-916b51ea15e0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a04c5992-13d3-4b22-97ab-b5f487f11519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c672206c-9859-4887-a435-f6ab4c886d46",
        "cursor": {
          "ref": "4c9e8ec1-109f-4695-b1ac-4d10cbee7b15",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "08fefad3-e2f6-4e7b-b98c-dec4c797cc5c"
        },
        "item": {
          "id": "c672206c-9859-4887-a435-f6ab4c886d46",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a9b53228-e7ea-4343-bb5f-d3a4829d270d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f7d094-5c36-4d60-8b16-283fd63bf936",
        "cursor": {
          "ref": "ef011813-a714-436a-8b0d-264aa2c93d90",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "37974fa4-9a11-4478-b0db-8db178368357"
        },
        "item": {
          "id": "b8f7d094-5c36-4d60-8b16-283fd63bf936",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "71418cf9-f033-4f8a-95c6-782e852dc81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eba7ec-4182-42fc-a30a-0e99da0a415f",
        "cursor": {
          "ref": "f3acf468-4e44-4735-8faa-6ccec0100657",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6f1df944-30be-4c55-871c-1adc19347c07"
        },
        "item": {
          "id": "d1eba7ec-4182-42fc-a30a-0e99da0a415f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d63d26c4-7919-4b80-af81-8711d1f2780e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88462846-7e2c-4e50-a1b6-e1ebea7a2325",
        "cursor": {
          "ref": "f75097f8-073f-48c4-9d11-e851925fcea1",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fc488047-ae68-4445-868c-946225b64e10"
        },
        "item": {
          "id": "88462846-7e2c-4e50-a1b6-e1ebea7a2325",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9daf7d68-b731-4da5-8e01-d520d56f549a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d86335a-46cb-4dfc-89b1-e327c15aa5ff",
        "cursor": {
          "ref": "9eef708b-b486-4f65-b343-4e859c143768",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ab4cab57-82f2-470e-9600-8614a771f0ed"
        },
        "item": {
          "id": "3d86335a-46cb-4dfc-89b1-e327c15aa5ff",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1ad6307a-2683-44dd-8863-db7b5a3b2a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e114a4df-cf57-482d-be6d-a192b2c549b0",
        "cursor": {
          "ref": "80066e2e-652d-4d4d-a3db-1a86d4844b21",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "11167128-50ed-4f94-8307-8a3ca0c6ac57"
        },
        "item": {
          "id": "e114a4df-cf57-482d-be6d-a192b2c549b0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cd123443-4164-427f-92e8-c6560f5ea7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df07e7a7-9355-4cb1-8a70-389d2d9ba133",
        "cursor": {
          "ref": "b029dfac-f499-437e-a17a-dbeb5b6111c6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "78d98652-9af9-4009-8dd8-b441eb99d576"
        },
        "item": {
          "id": "df07e7a7-9355-4cb1-8a70-389d2d9ba133",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2592e1de-aa2d-4190-bafb-20efd5965e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed88ac02-910b-4244-a859-da403be228a8",
        "cursor": {
          "ref": "0feb954f-287b-4fd6-9a36-b650d0f46d5a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "94b306be-69d1-42fc-a1cd-b20da50cc621"
        },
        "item": {
          "id": "ed88ac02-910b-4244-a859-da403be228a8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ac185e3c-51b2-462e-93de-5aff1aae3d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3c8c60-e594-47ca-8fed-6f5cde1482ca",
        "cursor": {
          "ref": "2f92fff5-a30e-4b37-bcb0-85573ee334a8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e7bf433d-c33f-49e4-9e93-45009fd49b8d"
        },
        "item": {
          "id": "0c3c8c60-e594-47ca-8fed-6f5cde1482ca",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c3cd9e0f-f41c-4794-87da-b84ef372d6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b4a408-68a1-4ee8-afef-0d4475a4e6fb",
        "cursor": {
          "ref": "73e649cc-2ac4-4def-9da5-f71b44a7e442",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d9b51177-345c-42bc-92fb-6a080940931a"
        },
        "item": {
          "id": "54b4a408-68a1-4ee8-afef-0d4475a4e6fb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "18055134-75a8-4d90-bb5b-96620f9309e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16ade94-49f0-47c4-a4df-d065c7643091",
        "cursor": {
          "ref": "957d915f-210c-43c7-8d0f-c41a24e1f0f5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e841be59-9428-4d3f-b014-2e862a7b60da"
        },
        "item": {
          "id": "c16ade94-49f0-47c4-a4df-d065c7643091",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "038bd272-e296-4119-928c-a4a4d47cbcd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fa982d-6bb1-4a1a-aca3-8dc91568ace2",
        "cursor": {
          "ref": "b1f8bf73-f617-4c2d-b445-f42540b6cf24",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e83e5deb-b485-4beb-b3d8-e3edaafd83c3"
        },
        "item": {
          "id": "e0fa982d-6bb1-4a1a-aca3-8dc91568ace2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4efbd020-4d7a-4917-a75b-4a532192d91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217ee1f2-f1d5-4524-8e91-fc2deade05a1",
        "cursor": {
          "ref": "4f3ec779-c04b-4a4c-96ec-28e0845e93b5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "41b62724-0801-4554-9476-f8a07cb81a32"
        },
        "item": {
          "id": "217ee1f2-f1d5-4524-8e91-fc2deade05a1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "055df3d1-506d-41a5-8738-440d47666803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e04bc40-bfa7-4d71-9b3e-c35729c25414",
        "cursor": {
          "ref": "445b3286-ea26-46fa-a53d-e4287a4ce94b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c6e4443e-b9dc-4a8b-8e36-778e093e1fac"
        },
        "item": {
          "id": "9e04bc40-bfa7-4d71-9b3e-c35729c25414",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "94f248e3-e335-4123-8211-cf3775b576a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e2afcf-85e4-4102-8e58-ff9a1755ec8f",
        "cursor": {
          "ref": "86137866-cc05-498a-8fa2-0c6f214946c6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b6a16ea9-0403-4047-9f0e-15445e2c6f42"
        },
        "item": {
          "id": "81e2afcf-85e4-4102-8e58-ff9a1755ec8f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "83aa9fc5-a479-4987-925a-18eb5cb2ec9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df69346-4153-4eab-a6d4-66290900f12e",
        "cursor": {
          "ref": "7956b6d0-d94f-4d66-b574-d53623f85259",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f3a453b2-19a2-4e53-9ba3-cf5d58f4274a"
        },
        "item": {
          "id": "6df69346-4153-4eab-a6d4-66290900f12e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1523a2bb-2d3f-428d-8f61-5b137256bfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918eca71-4870-45a9-9a37-86a64b956fa9",
        "cursor": {
          "ref": "249d7a0d-bbfd-4f01-bdb6-1877f322865d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8668f78d-5752-43fd-b649-20260d8baf08"
        },
        "item": {
          "id": "918eca71-4870-45a9-9a37-86a64b956fa9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bc89ec9d-eaf9-4717-9acd-c57233b8b23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a1e871-fa09-4f22-b0d5-239c120382f5",
        "cursor": {
          "ref": "32f201a8-8666-4b72-9c63-5560b2503136",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bbf44195-8dd2-4de5-95f5-764b5a0e25db"
        },
        "item": {
          "id": "79a1e871-fa09-4f22-b0d5-239c120382f5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fab24af8-ba2f-42b9-aea3-dac8ed799cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f6921f-caa2-4023-97c7-4a4fef42775a",
        "cursor": {
          "ref": "38779ef1-3c74-491a-a2a4-fc9f036a809a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cda8f691-aa71-4dad-ba1b-8ba684a3e2b8"
        },
        "item": {
          "id": "26f6921f-caa2-4023-97c7-4a4fef42775a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3fd4b0e4-f02e-4860-b9ff-5a11f412e428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24de099-449e-4e7f-b7b4-e3a31af357a7",
        "cursor": {
          "ref": "981ebd77-2265-4226-987f-125998b78926",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1449f336-324b-44b5-a02b-4e7589579f8d"
        },
        "item": {
          "id": "c24de099-449e-4e7f-b7b4-e3a31af357a7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cc829526-ce07-4dd4-ad76-8e487a267656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c093ed-29d4-4e47-82fa-d192686e581d",
        "cursor": {
          "ref": "3288f72a-1f19-4b43-9179-82dde0890f1f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "95f8d2a4-ef94-44cf-a9a6-b4f416e1dd5d"
        },
        "item": {
          "id": "12c093ed-29d4-4e47-82fa-d192686e581d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "01652e04-5957-4ec4-9390-457dd28ed8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000b019e-fab9-4d5e-aeb0-d4aeb1872f36",
        "cursor": {
          "ref": "d0471ba0-e06e-4935-a8a0-f5dfffa95175",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2371440c-fb4c-4d7a-8d61-269a5dbcd18d"
        },
        "item": {
          "id": "000b019e-fab9-4d5e-aeb0-d4aeb1872f36",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7e7a04c3-fe68-460e-a31d-02f52d42f26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f87573-3468-454c-8e4f-29fd8147837b",
        "cursor": {
          "ref": "d1b29564-015e-45ce-a85f-d5eb9072d12b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5a1a978c-739f-4909-bea6-033937a41faf"
        },
        "item": {
          "id": "18f87573-3468-454c-8e4f-29fd8147837b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f1544287-6054-4eeb-9d2c-a943293bfc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1a010f-f777-415a-974f-0b878a551edb",
        "cursor": {
          "ref": "d37a9bd9-157c-4557-9f94-a1cef023c2fd",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a35848c3-80ad-4ce7-a89e-73b2d435f3f1"
        },
        "item": {
          "id": "4a1a010f-f777-415a-974f-0b878a551edb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1ea0fb37-1213-4b84-b0f5-7d9a2ba7e7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb88c4b-bd21-433b-a4a9-1de5375c4b8c",
        "cursor": {
          "ref": "00048f7d-aff8-4262-8661-c3f70f4ad80b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fc38c264-51d9-4d3a-98a1-c2b7abf29b70"
        },
        "item": {
          "id": "2bb88c4b-bd21-433b-a4a9-1de5375c4b8c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "edf1ea5b-ef25-48de-978d-c30b5c0600db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa23237-90d7-4b7c-8e60-38e8462f3be0",
        "cursor": {
          "ref": "9cfd6ab7-be53-491d-b300-a654d8fa38b5",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7882a648-d8da-409f-9181-a8064e4d812a"
        },
        "item": {
          "id": "9fa23237-90d7-4b7c-8e60-38e8462f3be0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5d522687-f54e-4967-9340-93a84a6db7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eba3cdb-d9a6-4142-9031-0ca9899b7fdc",
        "cursor": {
          "ref": "08b01908-6eba-4fae-b317-06951a625b47",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f24ce3fd-4414-49e1-976d-8e0950c7bc41"
        },
        "item": {
          "id": "8eba3cdb-d9a6-4142-9031-0ca9899b7fdc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ca23465b-2269-46d7-bf29-ca084b629a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed26edaf-cc41-4ff9-9aa1-a03a066e241f",
        "cursor": {
          "ref": "30cc0650-b2c7-4b2e-af8a-3dd27f6a5382",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "87a79ad7-b8a1-4a4b-b8af-e08172f1336a"
        },
        "item": {
          "id": "ed26edaf-cc41-4ff9-9aa1-a03a066e241f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fcd2f6ea-17a4-4f28-8815-347461dab47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c277fb47-9b9f-47b8-99e3-f808a08fbb73",
        "cursor": {
          "ref": "08dafc25-d5e9-4466-b0ce-8aa8bcd05a1a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9632e877-90e0-4a17-af0d-d8b7729e108b"
        },
        "item": {
          "id": "c277fb47-9b9f-47b8-99e3-f808a08fbb73",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d259affb-788d-475d-85d6-1e79d21f0943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bbabd3-0328-412d-9e88-edb158c0e676",
        "cursor": {
          "ref": "5eacb832-1709-4eec-bf1d-1930aafdc791",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d3a6c25f-c468-45fb-8045-183e35fc1f42"
        },
        "item": {
          "id": "d7bbabd3-0328-412d-9e88-edb158c0e676",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b0732e0f-9cd7-4888-ac12-a0e3f733d3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cddec3-b97f-43a7-8c8d-06868ff70a67",
        "cursor": {
          "ref": "e1fc9108-9b6e-4a07-a510-853666b127cf",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ff5c90d9-fedf-46c5-ba72-325cbb7c40c2"
        },
        "item": {
          "id": "94cddec3-b97f-43a7-8c8d-06868ff70a67",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9056c907-6849-4814-894a-3c1ce132af05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3a2282-53c9-4f23-969f-d7726286350c",
        "cursor": {
          "ref": "e7117301-5ec5-46d0-8765-352c6f8b90c3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c350b98e-27fd-49d5-b217-3a4e18116a6c"
        },
        "item": {
          "id": "fa3a2282-53c9-4f23-969f-d7726286350c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "44d960d1-c184-455b-8843-8872a565dffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc6f402-2002-4a3e-a732-e1d512e46977",
        "cursor": {
          "ref": "7ea08425-7609-4140-8240-2d85db904cf8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6e1d87de-6f2d-4451-a7f7-99cd81d90a42"
        },
        "item": {
          "id": "7cc6f402-2002-4a3e-a732-e1d512e46977",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e681eae6-d42b-4069-a7b8-bd8d360ae0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e628e6-8f22-4e43-846c-ae783db716bb",
        "cursor": {
          "ref": "a953224e-e234-429f-8632-701df61acb41",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d1b8e17f-f994-4a6e-bb04-7c0cfa570bf6"
        },
        "item": {
          "id": "65e628e6-8f22-4e43-846c-ae783db716bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "64eb74c7-b60c-4b48-8402-21276feb27f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c28384-68cc-45f2-b9c6-c990728efbb6",
        "cursor": {
          "ref": "8f37672f-10cd-43c7-8c63-5631f91ccb3d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1d7bb2a5-fa51-4403-9de0-c78835b62e9b"
        },
        "item": {
          "id": "66c28384-68cc-45f2-b9c6-c990728efbb6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "256428a1-207d-41a2-9230-53ad84faf4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e90ff7-315d-4a1b-aa30-dc0ccab66be6",
        "cursor": {
          "ref": "10c15200-e7a5-4411-8a71-8490b268346f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3a6852f7-9c61-4392-b140-322579110944"
        },
        "item": {
          "id": "05e90ff7-315d-4a1b-aa30-dc0ccab66be6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "eaa76a9e-5745-415f-a965-b81190e4c9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068fd36e-1d12-492b-b666-d711b9a8cb16",
        "cursor": {
          "ref": "85bdd5a2-2418-4dcf-8d27-24bc6f27de07",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cc211ceb-2bca-4431-b8b5-720557520400"
        },
        "item": {
          "id": "068fd36e-1d12-492b-b666-d711b9a8cb16",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "52c54c18-3b50-4ea5-85ff-3de6a5f5d895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6df6be6-8b61-41f6-9e9d-61905d3aaad7",
        "cursor": {
          "ref": "22555908-c781-4744-bccc-7ac4dc8f75fc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "500d603e-28bf-40de-8eee-8f27272318e1"
        },
        "item": {
          "id": "e6df6be6-8b61-41f6-9e9d-61905d3aaad7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "afc0b7a2-821a-4598-9b7b-8e5dd7aa5c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfe3d80-df77-461a-86e8-44228dc6d218",
        "cursor": {
          "ref": "4bbce56d-eedb-423d-9178-b22f3946ffc5",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f901da1b-b7a5-4a83-9c0b-d6ff7cee8e17"
        },
        "item": {
          "id": "abfe3d80-df77-461a-86e8-44228dc6d218",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "25e72bd1-98bb-4a61-9be4-ec0afe3982eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21307a7e-3630-423d-bbb4-8bdf823e0223",
        "cursor": {
          "ref": "d5d639b7-5f45-468b-bc1e-209b1c88c115",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a77bd908-7eae-488a-89b2-eee9f1f7d261"
        },
        "item": {
          "id": "21307a7e-3630-423d-bbb4-8bdf823e0223",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "272964b7-86f4-4fdf-9781-9b6815fc18e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab970d3-ed57-4902-8343-6d34683a8d55",
        "cursor": {
          "ref": "23ce8a72-8177-4fd7-965a-bfcf31f1f12a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5bb92c03-3114-4dca-9b9f-f85585d82692"
        },
        "item": {
          "id": "6ab970d3-ed57-4902-8343-6d34683a8d55",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b3512eb8-cc32-44d1-9f71-792c3bddb3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781661c9-e966-437e-a309-f829be6e8e2d",
        "cursor": {
          "ref": "2e5a820a-de04-4d34-86df-af05c8550de5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "678ba345-260d-4dff-b915-db1a324d5a74"
        },
        "item": {
          "id": "781661c9-e966-437e-a309-f829be6e8e2d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5ce28e09-a356-48ec-988d-e9b3bd0e902a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2544aab-9387-49ff-9008-b6a8a8ce091b",
        "cursor": {
          "ref": "ff3384b2-1c9f-438e-80f4-c62ddc517e95",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "866d2c68-78f3-4264-b63b-79f7db3a95f1"
        },
        "item": {
          "id": "f2544aab-9387-49ff-9008-b6a8a8ce091b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3b0140b1-7545-4029-8214-a5e69cff681d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda41629-3161-40da-9ca9-bf95576b8e61",
        "cursor": {
          "ref": "9b7613ae-a4cf-4d6c-ae54-a03e8018fb2e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a6d49fda-234a-4601-bd9a-5233709e36b0"
        },
        "item": {
          "id": "bda41629-3161-40da-9ca9-bf95576b8e61",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "57101e1f-0cc4-415d-abc3-6d5341c1b34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42e765d-dd5c-49e2-b830-315de24a4039",
        "cursor": {
          "ref": "30af3efd-3325-4d6d-ae57-3e4ea6c621bd",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "be991845-adf0-4030-9068-682788512691"
        },
        "item": {
          "id": "a42e765d-dd5c-49e2-b830-315de24a4039",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "87397900-13e0-46e0-bf1c-f097c44869bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934b7573-e6cd-454f-825e-207ec2270ef0",
        "cursor": {
          "ref": "532cc152-c44f-4959-b1be-63a9252e327c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2925c058-ef02-4e61-831e-b516b7413e3c"
        },
        "item": {
          "id": "934b7573-e6cd-454f-825e-207ec2270ef0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cf93b4b7-9e37-4a8b-9c64-9b2f3c3a6489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4855b8-0ac7-40b6-8924-526aea818e81",
        "cursor": {
          "ref": "57c6c218-0d16-437e-864a-93662ee46845",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fe1513f8-b660-4390-84a8-63a4cfb167b4"
        },
        "item": {
          "id": "ed4855b8-0ac7-40b6-8924-526aea818e81",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "731423b8-66c9-43fb-8c09-b18a1714f27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88be9922-8d21-416d-a6aa-d95cfb412e69",
        "cursor": {
          "ref": "dd30c090-f91f-4031-afc1-1eb044faa917",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8ebc9e02-a534-4f97-90a5-f949146d1023"
        },
        "item": {
          "id": "88be9922-8d21-416d-a6aa-d95cfb412e69",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "70f4a269-0da7-4cd8-8b5f-40b391c69b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6055713-a17c-44cc-b4d6-d3d08d54366a",
        "cursor": {
          "ref": "73b8d89b-5352-4aad-8e58-9ea54d6d1ec7",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3922b6b3-58d4-481d-af6a-e144941de4bb"
        },
        "item": {
          "id": "d6055713-a17c-44cc-b4d6-d3d08d54366a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "86352e5d-79c4-44a2-9e42-4231797cd3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf8e68c-a499-447d-a5eb-5692eed31072",
        "cursor": {
          "ref": "1f59c9e9-dc01-4f0c-94a7-f4c1a76f103a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f9b5405e-4238-484f-9aac-32d3d4dbed4a"
        },
        "item": {
          "id": "bcf8e68c-a499-447d-a5eb-5692eed31072",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "62754a13-2fa3-4ea3-b395-655af05a6e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d6224b-c891-489d-84ec-686171f35b27",
        "cursor": {
          "ref": "d5e9067c-4896-4e64-b381-74eff14b78f2",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "95a97b11-a548-45a7-98d2-9ab0a79b9e4d"
        },
        "item": {
          "id": "93d6224b-c891-489d-84ec-686171f35b27",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ff3df766-b9d4-47a7-a2b5-d8dee98cd90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6021745f-ac86-4721-a9c6-8326560f4246",
        "cursor": {
          "ref": "c1d29dd4-ffc2-4146-b01d-aa3e9c8179a7",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d6bed36f-699d-4faa-98c5-3ec3dfc42973"
        },
        "item": {
          "id": "6021745f-ac86-4721-a9c6-8326560f4246",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "20ef09be-621b-4ed0-927d-8bf84c8bd3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bead08-8f51-41b0-a5f3-dc47887e54d5",
        "cursor": {
          "ref": "412d11f8-7320-48fb-90d9-70c23b280752",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5da67bc0-97d4-4bdf-b5c2-5575536d3ab9"
        },
        "item": {
          "id": "e3bead08-8f51-41b0-a5f3-dc47887e54d5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "62064de9-9298-490f-af74-53a9108526f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b71ca9-86ee-4a5c-8686-7e80450d2b5a",
        "cursor": {
          "ref": "829bfde3-ac8c-4b0c-ac62-9cd8ae08e958",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e8402c7-c0bc-4c45-9930-62b93f62b8de"
        },
        "item": {
          "id": "e5b71ca9-86ee-4a5c-8686-7e80450d2b5a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c36f784e-05d8-4a45-9a8a-776a656fa031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a8015b-dd3f-46a3-bd33-40d386e8e155",
        "cursor": {
          "ref": "b2db6a1c-15c8-4166-8bb0-79fbb57ee64b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "19040231-f3c8-4b63-983b-449909df0a09"
        },
        "item": {
          "id": "e6a8015b-dd3f-46a3-bd33-40d386e8e155",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7f4f37a8-4f20-40b3-a894-6fbf9787d0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcbe52a-9fa9-49ad-974a-c8a6d63114bd",
        "cursor": {
          "ref": "dde9c10e-b1c9-4bb6-a322-3f8ac9562786",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "456ebbbc-f79d-41d3-9d8d-a34cbe74d821"
        },
        "item": {
          "id": "afcbe52a-9fa9-49ad-974a-c8a6d63114bd",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d3fd7724-9a2f-4a5d-8163-ebaaf6359752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2804451-bc5e-412d-979f-95e7de476a0a",
        "cursor": {
          "ref": "c8f9656c-d25a-41a2-9adf-d831e8314c49",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "61cf162d-1522-4ebc-a37c-6dbc48023eb3"
        },
        "item": {
          "id": "d2804451-bc5e-412d-979f-95e7de476a0a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7e5118fc-2cea-4c00-9956-17e8a00bf8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef3c92d-a983-4bb8-956d-228f8f5df454",
        "cursor": {
          "ref": "afda1479-df92-40b7-ba7e-6ae4a163975e",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6948fb91-a371-408c-8df9-bc6f68448595"
        },
        "item": {
          "id": "eef3c92d-a983-4bb8-956d-228f8f5df454",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ed5243b-d973-4ca3-8829-b06fdf14336c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c14febe-d377-41ae-817f-b0413d469f11",
        "cursor": {
          "ref": "5d6a5380-560d-49af-a94f-0577f219ce10",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8ab134b5-4119-4127-b1b6-d49b81434312"
        },
        "item": {
          "id": "7c14febe-d377-41ae-817f-b0413d469f11",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "46bb40aa-583f-47c1-9def-2affcd5bfcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da978fd-3b3e-4ba7-b163-2927eaec1917",
        "cursor": {
          "ref": "9754925e-14aa-4e8c-a04e-d99313d2a21c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4f68a3e4-2ebd-4412-b406-2eb6832c5d1c"
        },
        "item": {
          "id": "7da978fd-3b3e-4ba7-b163-2927eaec1917",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "efd6639e-6a0e-4d21-a5ef-91e13028c376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e922b67-5d0b-45e5-9466-5ef9a72f7382",
        "cursor": {
          "ref": "185768a7-9569-4187-84ac-d45bc8a895b4",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7db77a7a-9b11-4d5b-9f2e-be57a3b36bd8"
        },
        "item": {
          "id": "2e922b67-5d0b-45e5-9466-5ef9a72f7382",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a912efa5-f6dc-4524-810a-c95eb12674e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b453fe42-d301-4d09-8049-03baf1b5dc25",
        "cursor": {
          "ref": "2b66c396-d481-4a86-873a-8392a5341d6d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "71af992a-7803-4b82-91ab-8491be2e5a8e"
        },
        "item": {
          "id": "b453fe42-d301-4d09-8049-03baf1b5dc25",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "48704a5a-9ed9-41eb-b842-87a99f6e03aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923871ed-8118-4370-96a4-822a6c4468f8",
        "cursor": {
          "ref": "14024786-45a2-41eb-8b28-5b3b2462b313",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "55dc7ba6-d2e6-4f61-8827-3008b39a56db"
        },
        "item": {
          "id": "923871ed-8118-4370-96a4-822a6c4468f8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9abb28cf-80a7-4341-bb3c-258416dd48fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8c1015-2e01-438b-96d5-5b33a9b15c3c",
        "cursor": {
          "ref": "41b9bbc7-6c47-4817-8bdb-d9c262caf85f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5423b495-499b-4398-9580-64950a403879"
        },
        "item": {
          "id": "3a8c1015-2e01-438b-96d5-5b33a9b15c3c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0bd98d58-326d-478f-abc1-800a13e46097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b7148e-3276-4ad1-8a69-a2cc327430d4",
        "cursor": {
          "ref": "b5731f13-c4d0-46ba-ab30-1de961383b5b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "abbc3f19-df4e-4442-8805-f17c373643a9"
        },
        "item": {
          "id": "90b7148e-3276-4ad1-8a69-a2cc327430d4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8646273b-ece9-42f6-b3c6-f0da0ec8ebe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa53c8aa-443a-4cc8-9f81-aefdb8de53e9",
        "cursor": {
          "ref": "9117cc95-2d73-4ca2-90ff-21e5658a6a45",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "657470bd-802a-422e-8c6d-5a15a5c0e0db"
        },
        "item": {
          "id": "fa53c8aa-443a-4cc8-9f81-aefdb8de53e9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5bbaa0e8-cca3-49b2-9fbe-455cabd793a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dda0f47-6124-4ce1-ae6e-7fac50504ca9",
        "cursor": {
          "ref": "b6f64b65-82b2-4286-a802-c48fbad3a5e5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "527c3798-66cf-4360-875d-44d412109647"
        },
        "item": {
          "id": "2dda0f47-6124-4ce1-ae6e-7fac50504ca9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a7911605-cbfc-4efa-a994-a1e0f3738ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dae60037-c355-49f6-9cdf-55689f0345bd",
        "cursor": {
          "ref": "73e678a9-d1bd-48ee-ad21-a3b59b66b2f1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d191f02b-7384-4f5d-8a99-6365689369c8"
        },
        "item": {
          "id": "dae60037-c355-49f6-9cdf-55689f0345bd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "17856c41-0c99-4943-85ae-160b2bf6bfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e63829ae-323c-47fb-b27c-0d50476a51a0",
        "cursor": {
          "ref": "3bfdf12c-dc07-4889-9503-5b5b20ca0aae",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a309cc10-0f7c-4544-b29d-52322b6ebbbf"
        },
        "item": {
          "id": "e63829ae-323c-47fb-b27c-0d50476a51a0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "63d6cea6-c8a0-4742-a48e-b3c835dcdc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ed2b4c8f-c420-4b38-b229-78c7ee894cf7",
        "cursor": {
          "ref": "0377f632-e770-4326-a2f9-e79e26b7f4dd",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "46f0ac6f-9bc3-4813-8b94-e4b43d84d720"
        },
        "item": {
          "id": "ed2b4c8f-c420-4b38-b229-78c7ee894cf7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0fa79fe6-ac9f-45a3-be8f-fd0aa3bb4912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "57668423-c011-4183-b6b3-167e33953c1d",
        "cursor": {
          "ref": "2da9df70-bb42-4982-81ac-40bde1d40546",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "00e1515e-9af5-403c-a005-4f1ba93ea96c"
        },
        "item": {
          "id": "57668423-c011-4183-b6b3-167e33953c1d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "be1ba418-d198-46ba-8a20-bf1d970b398e",
          "status": "Created",
          "code": 201,
          "responseTime": 11022,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "567b1717-8ae7-41cd-b8dc-c78ffb1e661f",
        "cursor": {
          "ref": "87347f9b-8b7c-47d2-971a-e7c1553e23f8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "861717ba-5f85-482a-ab28-1acf0967aab7"
        },
        "item": {
          "id": "567b1717-8ae7-41cd-b8dc-c78ffb1e661f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b1686e18-5982-4948-b1d1-3ba51a10a097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d2852495-2ac0-4055-a8c0-24221df8fc9f",
        "cursor": {
          "ref": "354bf2ff-9a66-43de-b3cf-2e704451f94e",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c8f2fc35-28de-4e93-82d4-bfeaf1704838"
        },
        "item": {
          "id": "d2852495-2ac0-4055-a8c0-24221df8fc9f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b88138bb-0126-446f-be1f-6f15009a151f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d1cbbe5b-3f62-4b49-b7fc-5f45ce850247",
        "cursor": {
          "ref": "b4d90cd8-5773-4a92-b783-7153b1c77079",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0d1ebc85-f40c-4390-8a72-50ef2844526d"
        },
        "item": {
          "id": "d1cbbe5b-3f62-4b49-b7fc-5f45ce850247",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5442659e-72dc-4d2b-a901-08c66fb41e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57bd5e2-e4b3-4a46-9d77-8b757422c959",
        "cursor": {
          "ref": "88fc7bb7-af37-4bbd-8cd9-dc7c3a918ee6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fafb06fa-0b5b-4548-a1e0-c6750b8845ee"
        },
        "item": {
          "id": "e57bd5e2-e4b3-4a46-9d77-8b757422c959",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "64195d79-9a2d-4fdf-adad-9594d620800a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c03a67-8103-4eca-8a49-7a96ddbe74ab",
        "cursor": {
          "ref": "30cc9da4-10ee-4bd2-84ee-81134ffce056",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "903f733e-be11-43c0-8760-1887b146f4df"
        },
        "item": {
          "id": "22c03a67-8103-4eca-8a49-7a96ddbe74ab",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "503297e7-f05b-4bdf-8adf-760799b3827d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd92e890-c452-4c5b-bce5-3c9271c5f821",
        "cursor": {
          "ref": "94954751-b564-45d5-b5dd-a0f0ad19e61e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "de0c176c-5863-4d34-86a3-d37c9a1f6ee2"
        },
        "item": {
          "id": "bd92e890-c452-4c5b-bce5-3c9271c5f821",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c935bd63-f6d7-4b62-9d3e-b69b7c3895b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99bd041c-7d44-4fe3-a9cf-58440f842ff2",
        "cursor": {
          "ref": "91dd9a00-45fd-4273-a414-b2be498f3599",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8705f8f8-6e19-4a88-83c8-d5257814cea1"
        },
        "item": {
          "id": "99bd041c-7d44-4fe3-a9cf-58440f842ff2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dbed57ab-30fb-44ce-9243-95c6cdaa5b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b9b9f7-25b8-48c5-86e5-1a75ec1b87ac",
        "cursor": {
          "ref": "05d43c96-7ff5-4022-b907-6f3768476882",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "05f4d560-add6-433b-b8b5-28be43c12e09"
        },
        "item": {
          "id": "88b9b9f7-25b8-48c5-86e5-1a75ec1b87ac",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "024b239f-33d3-4b14-add3-6fe64914d2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38f46ec-f4f9-4e26-a2c2-c0c5e1923bcd",
        "cursor": {
          "ref": "d5f34026-376a-457b-ab6e-09ab73f1a2e7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2d085f28-e4fe-436a-b085-869819b5b4b7"
        },
        "item": {
          "id": "d38f46ec-f4f9-4e26-a2c2-c0c5e1923bcd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7b0b8ded-14da-43a3-83b5-0392e1c9b220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee0c7ea-8f09-4e45-bd67-bed944a6127d",
        "cursor": {
          "ref": "d7f9cb7d-03b1-4110-b435-efa0ce3f3e55",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e99625fe-7a80-49ac-b89b-c9c0ee88e729"
        },
        "item": {
          "id": "cee0c7ea-8f09-4e45-bd67-bed944a6127d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2027e1ab-a030-476b-b60a-4f091106edb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3ece5f-dc0f-49d3-ad3c-a6b9d80f8cf8",
        "cursor": {
          "ref": "9a3863d4-c028-42d4-b203-39c55663456f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c2e58e45-5e6e-4bfe-b798-e83c81e681d3"
        },
        "item": {
          "id": "be3ece5f-dc0f-49d3-ad3c-a6b9d80f8cf8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4e04bb71-9110-4d9d-9e1b-2dab712f4d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50207f18-ca13-46fd-a6aa-dde036986ab3",
        "cursor": {
          "ref": "2591195b-98a5-4ecd-9606-1d1d380fcc34",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cd94f295-5e89-4bb9-b7e7-78b7c37de8bd"
        },
        "item": {
          "id": "50207f18-ca13-46fd-a6aa-dde036986ab3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "14d8f8b5-3a5a-4574-bf05-e417b70a8b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6479640b-f939-49cc-a65e-6382caa42d19",
        "cursor": {
          "ref": "04c622f2-7322-401f-ae06-9b0a850e9a95",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4478e0cf-4053-430a-995f-d7fe220cad24"
        },
        "item": {
          "id": "6479640b-f939-49cc-a65e-6382caa42d19",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "83ae0fce-eb49-418d-8a62-33a6ecdecc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebbf609-53de-418e-a21f-69a8e467b189",
        "cursor": {
          "ref": "edd64bb3-ebcd-430c-9901-e0ed4ea0e6d3",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c10150bf-a9c3-49b6-867b-3653d1d5faaa"
        },
        "item": {
          "id": "7ebbf609-53de-418e-a21f-69a8e467b189",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ac3e404c-0d06-4ff0-9f2b-8324e9ad5de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4e5aa4-ad74-4c03-b9ac-e3aec16a92ec",
        "cursor": {
          "ref": "3e07c252-674b-4ecc-a2db-e97ff7607ebc",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7b5d78ee-3110-492d-82c0-ed8614a97f27"
        },
        "item": {
          "id": "8b4e5aa4-ad74-4c03-b9ac-e3aec16a92ec",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c7a250e9-6a61-4587-8bdd-c42a8f66863c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66ca1d5-25ad-4d85-9288-a8a4f5cf8241",
        "cursor": {
          "ref": "e8c5b546-1079-40c9-825b-c735754381a9",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1bf45db4-11f2-4e91-a813-016a0658ea2f"
        },
        "item": {
          "id": "a66ca1d5-25ad-4d85-9288-a8a4f5cf8241",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02640593-c912-4643-a9bc-50c584022b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e79319-435b-4ac3-be23-b840946f50c2",
        "cursor": {
          "ref": "bcc0e953-8844-48d3-a4d3-c7c8bd4ab25f",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9f8d08c8-711b-4d1b-901a-b4682c71a505"
        },
        "item": {
          "id": "44e79319-435b-4ac3-be23-b840946f50c2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "502c4cc3-e542-48f8-b14b-7194148e63aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b72fbf-b902-4fb2-8d05-98610d5c2f21",
        "cursor": {
          "ref": "eb22b6a4-36a5-4fe2-9e72-317722c6b816",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8e261516-45ef-43a1-a77a-42c07ca041d6"
        },
        "item": {
          "id": "75b72fbf-b902-4fb2-8d05-98610d5c2f21",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2aa3a180-4d40-4a52-ad22-79176b7bfa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c10d884-871c-4db3-ad45-772755b8be58",
        "cursor": {
          "ref": "b45fc42a-8a50-424a-87d5-6ef0affb4d94",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d46d3c9a-bd7a-45f2-91be-e2a93b3f9127"
        },
        "item": {
          "id": "5c10d884-871c-4db3-ad45-772755b8be58",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "56b59e05-1f23-4cca-8e10-24a914401718",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a7441f89-6e5b-4a30-9cc5-640526a23722",
        "cursor": {
          "ref": "db7bca9a-82a8-4e08-b8c4-a952cd8d2a1d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9047005b-b505-4b7e-ad94-f76f669ac070"
        },
        "item": {
          "id": "a7441f89-6e5b-4a30-9cc5-640526a23722",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e8f30189-d6aa-489f-8e88-236c6d64260b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45177c32-57fb-497f-ad62-d7552970f9be",
        "cursor": {
          "ref": "ca99285e-6be7-484c-b5a7-9a83a18c24b1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3d7af712-10cd-4b50-a37e-3a43b54ddd57"
        },
        "item": {
          "id": "45177c32-57fb-497f-ad62-d7552970f9be",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "635b09f0-8177-4057-b13f-2aeb165fd7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbefc0ef-1f93-4cf9-8cfe-b1e18edda45d",
        "cursor": {
          "ref": "7704e0a9-f25f-4729-893c-d1db76da4fb4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2db0f399-5610-4918-b0ef-3e20af960aed"
        },
        "item": {
          "id": "dbefc0ef-1f93-4cf9-8cfe-b1e18edda45d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "14df3401-7794-42e2-9eaa-e6d9315fd6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c3bc5d-f1c5-4120-82cb-f42bef6b0e63",
        "cursor": {
          "ref": "0bbf5d7b-5b9e-4e79-9cf8-c44ee41da6af",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "53e7b424-fd69-4c28-9ca2-8dcf76814a63"
        },
        "item": {
          "id": "59c3bc5d-f1c5-4120-82cb-f42bef6b0e63",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e27d9c76-9cf2-4f83-885d-b18ce67c5d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3ff1b6-b58e-4135-8f82-7f49d3c9a02d",
        "cursor": {
          "ref": "ae5f6a79-bf03-4ecb-9404-025f0081bd1b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f7f1127f-8042-4b58-a5fc-4ef7eb571ae5"
        },
        "item": {
          "id": "af3ff1b6-b58e-4135-8f82-7f49d3c9a02d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c17b66d8-34c7-45a7-b3a8-38e5fa59de90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0959b7f9-5925-40f2-8182-50ebc313ccfe",
        "cursor": {
          "ref": "1317a3f2-b7eb-47c6-ba13-4637ed50cdf1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4745d0fe-4e9d-4513-ac3a-22d21a3ef1ef"
        },
        "item": {
          "id": "0959b7f9-5925-40f2-8182-50ebc313ccfe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aaf966a4-6ca1-412d-91a3-847c62444242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f4f4c8-0189-46b2-93b7-360fcfd8f6ae",
        "cursor": {
          "ref": "d862882b-4f92-4ca7-9212-fdc334e813d1",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5df382e1-cf8e-4912-9172-27c6e7914542"
        },
        "item": {
          "id": "32f4f4c8-0189-46b2-93b7-360fcfd8f6ae",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a99d889-3505-4f82-b0a2-1b9c967b035d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034d68be-65e1-41e5-b014-3c6e29d1940e",
        "cursor": {
          "ref": "7bd1d3a3-b77c-41f2-9ed1-4aeb81278f1c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "216f8ffa-d768-4a98-9eec-b5b0d879507d"
        },
        "item": {
          "id": "034d68be-65e1-41e5-b014-3c6e29d1940e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "38a6a4d4-5b61-4289-9d40-7f24f658467b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "9de490c9-f342-4f4c-b232-6b3cfc3a7143",
        "cursor": {
          "ref": "d70877c1-7e4d-4be5-8823-a3d9d14d8652",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8f7295a3-e2fa-4a3f-a252-d6ed055d303c"
        },
        "item": {
          "id": "9de490c9-f342-4f4c-b232-6b3cfc3a7143",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2e632500-8fe6-4601-8393-6827ad03f7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa8e458-9f87-431e-8bae-93883efa37b7",
        "cursor": {
          "ref": "ef6e028e-0d41-4364-a3c1-2ee68c6191e5",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "062a63c0-91d7-497b-9e87-1d6baccc5a14"
        },
        "item": {
          "id": "efa8e458-9f87-431e-8bae-93883efa37b7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ee0c2b2e-c16a-4bee-9769-b37347398508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4d06d9-6a2c-4035-bbbf-9808b3dc2fd6",
        "cursor": {
          "ref": "855c4fcc-4b66-4644-a215-0a3b9ceeac07",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c0887c4e-9755-4f63-8c0f-0120f0ec2da6"
        },
        "item": {
          "id": "ee4d06d9-6a2c-4035-bbbf-9808b3dc2fd6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "49b2dfc4-cf2e-4902-b745-39aa98d336cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1667f6a-4531-426f-b793-822471ed9774",
        "cursor": {
          "ref": "2636f1f1-32fd-49c2-9f6a-6fe97648c4f5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0f9d10de-03e4-4f5a-bde4-f27aacfb03bd"
        },
        "item": {
          "id": "f1667f6a-4531-426f-b793-822471ed9774",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "df8fd254-6964-4fa7-87ff-20f52bb549ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd36f0c9-d9fb-40e0-ac1c-6855e93a4ad8",
        "cursor": {
          "ref": "a5a61d09-c2a8-4563-ab49-6016b5a0e8ea",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "13c92e17-f435-4e40-84f0-87bbeb0c0795"
        },
        "item": {
          "id": "dd36f0c9-d9fb-40e0-ac1c-6855e93a4ad8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "98301298-5ac0-4c26-b256-ef780cf090b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382f71f0-5544-4861-b5ce-4079d57d42a4",
        "cursor": {
          "ref": "0d35efbf-ed26-474a-a3bc-7c27765c45e3",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9a659666-f3d9-4108-8f7e-284e50e48ff9"
        },
        "item": {
          "id": "382f71f0-5544-4861-b5ce-4079d57d42a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "746c0d14-8b98-48d0-9002-a3ad9cc086c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e77c83f-a08b-43a0-9aaf-beaf4dd5ce5c",
        "cursor": {
          "ref": "e72e2007-3192-4dcb-bccd-0283e9e2ab5a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0e3ad180-b074-4fb5-b329-202604fea8b2"
        },
        "item": {
          "id": "6e77c83f-a08b-43a0-9aaf-beaf4dd5ce5c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5ff861c8-77ff-44da-b4f9-729149754cf7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c69433fb-dbdc-48e1-99ca-da6972e34a74",
        "cursor": {
          "ref": "399abb94-b2c4-4e37-9ac5-f181ae0be609",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7f08c7dc-4827-4257-bad9-dc7d1e5370c6"
        },
        "item": {
          "id": "c69433fb-dbdc-48e1-99ca-da6972e34a74",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "30e39035-27a3-4e3a-973f-b55b4caae875",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c80c763f-9dc2-4f3a-bad4-902166b7475d",
        "cursor": {
          "ref": "bb1d48b0-afaa-4727-b979-954186a818c4",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d88b321e-9c51-4930-a410-4a28ea72d0ad"
        },
        "item": {
          "id": "c80c763f-9dc2-4f3a-bad4-902166b7475d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fac73113-0f4f-403c-9ba7-87363b1aec68",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8ca9581b-1bc3-4e51-a5ab-02e9244d7d0a",
        "cursor": {
          "ref": "330572eb-8649-4fe2-85eb-35e3decc7445",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cbbb1ab6-1cf0-4665-b803-9634f396268a"
        },
        "item": {
          "id": "8ca9581b-1bc3-4e51-a5ab-02e9244d7d0a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "628667c1-0b81-4ad5-8f09-39fedbd09050",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "56ad5f3b-889c-4820-b89b-2d461e12765a",
        "cursor": {
          "ref": "7d010bde-055d-4c95-ac0c-6de904a4482e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0008571d-128c-457b-abf1-eb53147b5000"
        },
        "item": {
          "id": "56ad5f3b-889c-4820-b89b-2d461e12765a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c7335a83-1369-475e-8a1f-7a90dc342725",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "22bc0c9e-9cdb-42cc-9f08-f2f01f93432e",
        "cursor": {
          "ref": "d1c9c130-368f-49de-84e7-c5f514c7f1f5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "610ea0df-9c14-4dd5-b56a-9e17a213f9e6"
        },
        "item": {
          "id": "22bc0c9e-9cdb-42cc-9f08-f2f01f93432e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d8285adb-935f-4afe-8d98-2073d7470257",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 86,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "259e02ec-00b8-483d-831a-afc10ebcd9a2",
        "cursor": {
          "ref": "839f4175-8e30-484e-8cc0-7abab002a8e5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6e9838c9-f7b2-47a6-8cd9-88779e0d6504"
        },
        "item": {
          "id": "259e02ec-00b8-483d-831a-afc10ebcd9a2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "069b99db-e047-4827-b1ad-592a24636fd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79934901-a00f-4eda-a993-935789f5dbf7",
        "cursor": {
          "ref": "7534965f-04c4-4dc3-9236-39fa629ce68d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0b994916-4f6b-4885-a10b-733df330ca24"
        },
        "item": {
          "id": "79934901-a00f-4eda-a993-935789f5dbf7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c6c989db-3a6a-42ee-977c-6ef29d3c703e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f292f49e-2307-4646-b9eb-3a32636ba3d0",
        "cursor": {
          "ref": "05edbc0f-03b1-4f10-b6c8-75d0709f2fe5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8947354a-dbd1-4d06-89d6-1b52466b8d2b"
        },
        "item": {
          "id": "f292f49e-2307-4646-b9eb-3a32636ba3d0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e1c42547-5463-450a-9d4d-c3d2d300c5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fe5cc6-b097-4adb-8cdf-ce974d3497a3",
        "cursor": {
          "ref": "fbd97d8b-8fb3-4754-a3e3-dfceb74def34",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0d1f8885-1e70-4880-a0d6-6363cfd317a7"
        },
        "item": {
          "id": "03fe5cc6-b097-4adb-8cdf-ce974d3497a3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b275fbfd-19fb-4a76-87ce-a921435091ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfe69e9-c518-44cf-addc-a8f0b21cfbc2",
        "cursor": {
          "ref": "4f63dace-2f14-4ee5-955c-20b956a71df4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dc1f1069-52c6-457c-abe7-ddbf0b9cb866"
        },
        "item": {
          "id": "2bfe69e9-c518-44cf-addc-a8f0b21cfbc2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8f33f420-0a06-4cc6-abed-bb7ed1e13aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa3a39c-0b93-46d9-a911-fc3ab204e4e3",
        "cursor": {
          "ref": "32fd3373-f690-4e61-83a9-0c002b7aac44",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4ed93692-c40c-4ff2-a656-0de3e218b428"
        },
        "item": {
          "id": "9aa3a39c-0b93-46d9-a911-fc3ab204e4e3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4156fae3-3bce-4a37-b2ca-84d7d17034a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d02c1c-5dd1-46c6-b537-f3c38b8c15e8",
        "cursor": {
          "ref": "f02788b5-46ae-4fd9-95b5-483b04f2d77c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "91db76c6-3392-48a2-8c81-5cb07927de5b"
        },
        "item": {
          "id": "c8d02c1c-5dd1-46c6-b537-f3c38b8c15e8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f98c9d75-d240-450a-8115-9c01a1e08dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9688be4b-4cdb-46a2-b338-8b7054971c5c",
        "cursor": {
          "ref": "aec1415e-ae92-4d9d-a860-2ec827e0ad96",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "758813e2-aa0f-4660-81ce-a947f47ef1e0"
        },
        "item": {
          "id": "9688be4b-4cdb-46a2-b338-8b7054971c5c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "baf1f47f-ee09-4920-8e69-5fe1926d4109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a75892-a647-49c3-8787-f96a39c50323",
        "cursor": {
          "ref": "d8171e66-bb74-484e-aff3-dba1966b49b6",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0ede3ac0-fd04-40c3-8998-6c24945807e4"
        },
        "item": {
          "id": "99a75892-a647-49c3-8787-f96a39c50323",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6cf07a90-4a27-4ed1-8e05-1a0c0d6098c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd4627e-1c10-4da2-8b0a-6810ad0f934c",
        "cursor": {
          "ref": "1f5a7504-42d8-4bc8-a810-4bbbff7f7d25",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "692fb17c-7313-4686-b885-884092cb6f0c"
        },
        "item": {
          "id": "ecd4627e-1c10-4da2-8b0a-6810ad0f934c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3a981c9e-4ef8-45b3-835e-0fb8b45aadc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea71e702-0758-4ffb-8ebf-e7c42408ef3f",
        "cursor": {
          "ref": "36fcb502-0a43-45f5-8420-44d9f9c2c5f1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5c111bf8-7b10-4c5a-8719-7b19f69ef5ce"
        },
        "item": {
          "id": "ea71e702-0758-4ffb-8ebf-e7c42408ef3f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4b32cb44-bd68-4622-a4a4-b8b321b2f395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e719b4dd-9cce-4ba8-912d-e4354fff463b",
        "cursor": {
          "ref": "ae17a6f4-54f6-4ecd-a0c8-f1cce11d033e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bf97c6f8-0152-41e2-99f5-02d969fe130b"
        },
        "item": {
          "id": "e719b4dd-9cce-4ba8-912d-e4354fff463b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "24a0e374-b359-4b73-b15d-90beaff945d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5024e3-c413-46a6-b4ad-789b6abb0eb8",
        "cursor": {
          "ref": "c731cfa5-4fd0-4ad3-9b8c-0232a188c084",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "00603ba0-e509-40fe-a8cc-46d0dbbbc084"
        },
        "item": {
          "id": "bb5024e3-c413-46a6-b4ad-789b6abb0eb8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "4745b20a-2571-4ca7-9716-0c31aab919e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122543b9-5129-4bdc-b062-e6a9c75c958b",
        "cursor": {
          "ref": "7fc3b354-8335-44da-9720-58d6f3c5837d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4c622232-6e97-4fcf-8ed3-73e43e26462c"
        },
        "item": {
          "id": "122543b9-5129-4bdc-b062-e6a9c75c958b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2efc5bab-e4a5-425c-b680-427d2dfb89fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e53c7b-e64a-4621-8a5b-0cedd2325c38",
        "cursor": {
          "ref": "819a5530-7354-4820-8b90-4fa7921dc937",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ea581606-3329-495b-88e4-144c1d4daa87"
        },
        "item": {
          "id": "59e53c7b-e64a-4621-8a5b-0cedd2325c38",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "203d26eb-05fb-4355-88ea-ebe7dd20b637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13563ad7-3bdb-4683-a842-ead55a1daddd",
        "cursor": {
          "ref": "b9c573b3-6fbf-48c5-b3f5-d741f4e9772a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8a554f55-557d-48a6-802c-50a3cc0ec5cd"
        },
        "item": {
          "id": "13563ad7-3bdb-4683-a842-ead55a1daddd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c55b65d9-1574-4c83-af56-05b2ccb54632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac69496b-4e5d-4b19-9cd2-3c8073636cda",
        "cursor": {
          "ref": "eebf1067-bd43-4d8a-89ee-384c16bb4ac7",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "880f41f0-3571-44a6-a128-22853cf13ebe"
        },
        "item": {
          "id": "ac69496b-4e5d-4b19-9cd2-3c8073636cda",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "67336d34-0c8e-4e66-8ac9-ef15ae84ae73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbd7e1a-a4b2-44a4-8acb-04fd8e7c70fe",
        "cursor": {
          "ref": "12a5475f-f660-4920-9bd6-792e7f3fe0b1",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7d54550a-8e03-412c-b6d4-cd73c1679473"
        },
        "item": {
          "id": "1fbd7e1a-a4b2-44a4-8acb-04fd8e7c70fe",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9f26111a-b41c-4913-b4f3-c882d0777438",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "1c38a5c5-12c6-4b1c-be60-8278604368a9",
        "cursor": {
          "ref": "0a45b6c9-aed0-4118-bf15-9b29c037de72",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a25defd0-d809-4d65-a50b-999665293bb5"
        },
        "item": {
          "id": "1c38a5c5-12c6-4b1c-be60-8278604368a9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3c71d7ed-98ab-498c-866b-fa2efcb2e088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb4b8bb-79c2-4fae-9fd7-0d667d0b40eb",
        "cursor": {
          "ref": "7e9f9b8f-d954-448f-a9f3-138c7604bfc3",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "89cc849b-103c-4ff4-b2f3-04046452d715"
        },
        "item": {
          "id": "ebb4b8bb-79c2-4fae-9fd7-0d667d0b40eb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7f687bdb-95d6-4ad1-aa8e-c69d9124ad3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e288f8-d4b2-4ed8-b8bd-ae111c5b1970",
        "cursor": {
          "ref": "fefb5d3d-60b1-4adc-96d6-b8fa3cee7a51",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "82046a99-1eb8-43f9-9b0b-2723a3b14be3"
        },
        "item": {
          "id": "32e288f8-d4b2-4ed8-b8bd-ae111c5b1970",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b1319506-936a-4f7b-8f87-2887a08fc6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb63155-06e4-455c-92cf-b8ecefeab9e6",
        "cursor": {
          "ref": "b0828470-1fd1-45ad-bb5f-49cc47cfbf58",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6b2036f8-9e8d-4264-b893-ff09d3fdd84f"
        },
        "item": {
          "id": "acb63155-06e4-455c-92cf-b8ecefeab9e6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "578f3b76-a0d4-411c-9a61-fd66983f9cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2f83f4-39d7-43d2-9163-80159ba7e309",
        "cursor": {
          "ref": "c4268aa0-625f-4911-b9b4-32817274f76e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c301438c-209a-4de1-a367-6fc4b0e421ea"
        },
        "item": {
          "id": "fa2f83f4-39d7-43d2-9163-80159ba7e309",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1c9429cf-a033-4e35-943f-52b7a7c8d72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc8a651-0e1d-49c4-9ddd-ede4601c255c",
        "cursor": {
          "ref": "7862847f-43f1-45da-87c0-707c71494d55",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "93c21ca1-e6dd-4d64-9a14-e1564173c0f4"
        },
        "item": {
          "id": "0bc8a651-0e1d-49c4-9ddd-ede4601c255c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e23ce763-a0ed-4043-bae1-174bd9cee7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc209f58-1aad-4a4b-8c8c-76cb3892eb1d",
        "cursor": {
          "ref": "78552edd-1286-41b4-869c-4be91a1892d7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "de42868f-b6cc-4678-8214-3f457fbbb764"
        },
        "item": {
          "id": "fc209f58-1aad-4a4b-8c8c-76cb3892eb1d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "12ba75b8-160b-4f96-879f-7a5ae2ad0cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7aef5c-d86b-43aa-9b47-46b807f4034e",
        "cursor": {
          "ref": "22e7803e-3b35-4df2-ac51-3015d416a3a0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "92353631-e8cc-42d5-a702-daa20a80a892"
        },
        "item": {
          "id": "ed7aef5c-d86b-43aa-9b47-46b807f4034e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c179350e-b772-4670-9ba0-0cb744977d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34108cfe-fec8-46e1-b75f-33f976336334",
        "cursor": {
          "ref": "0dc22b0e-a50d-4060-ae2e-b21ca788416b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0a19abcb-b993-4146-b9e5-195ca80d14ec"
        },
        "item": {
          "id": "34108cfe-fec8-46e1-b75f-33f976336334",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6bde7f93-6e98-48f6-a134-030c9209c054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f3da61-aa6c-48a0-bee3-2d9d2343155d",
        "cursor": {
          "ref": "cc329074-82be-499b-b7a6-452273c72c1a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f386165-23b6-43eb-9afb-9d21bdb90ba5"
        },
        "item": {
          "id": "28f3da61-aa6c-48a0-bee3-2d9d2343155d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "13a74a29-f567-409f-a4ea-ad6d535c4f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6d9dfd-f8ec-4905-bc35-bf837b18d354",
        "cursor": {
          "ref": "8f7ebee8-bd29-42bf-9f77-96b0f9b1b707",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1bd84daa-dcda-4676-817a-b6294f39a7f9"
        },
        "item": {
          "id": "3b6d9dfd-f8ec-4905-bc35-bf837b18d354",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "98102b44-3804-46ff-b799-a62a894cdc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559ea366-712d-4dec-b8ed-45460eac78e6",
        "cursor": {
          "ref": "907a4de7-9dab-4efd-9bac-9326daa556cc",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e5cf37e6-c4fd-4cc2-b098-9df37af29710"
        },
        "item": {
          "id": "559ea366-712d-4dec-b8ed-45460eac78e6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7656b9d7-8d97-4252-9d85-00102cff3b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e4a986-d2de-433d-b153-36baf58e3e83",
        "cursor": {
          "ref": "841b9086-05f3-4a1e-a057-6cc6f02cf8e5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ece4fc7b-cad9-4a88-b715-04f69db5a657"
        },
        "item": {
          "id": "d1e4a986-d2de-433d-b153-36baf58e3e83",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eca5d8c1-e69a-4267-a9b7-397e7f35128e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdd3e10-b16b-497f-b6a7-117fa7a640d2",
        "cursor": {
          "ref": "fad19769-edf0-4972-b6df-cad9047456ba",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d33858a8-1ab2-46f2-b282-c341f778f17c"
        },
        "item": {
          "id": "ecdd3e10-b16b-497f-b6a7-117fa7a640d2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9c2f3aa3-d9ac-4233-95e8-caca59291a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fe90e0-bc1f-42e1-9f03-dfe59c489031",
        "cursor": {
          "ref": "347b3e14-5724-4274-b038-62de48a950f4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8abcf488-70ab-4a88-8a9a-cc23bc443733"
        },
        "item": {
          "id": "12fe90e0-bc1f-42e1-9f03-dfe59c489031",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "77f66363-fa9b-4693-800f-199c6fa938d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a23afa-6800-4433-87ff-c2be592a0103",
        "cursor": {
          "ref": "3f7a5ce4-2ce8-40fd-a399-cb648796bd62",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f6d290c0-e87a-48e1-87c0-3836bf04d9c6"
        },
        "item": {
          "id": "12a23afa-6800-4433-87ff-c2be592a0103",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3534b997-a175-4c25-962e-732a9a7b04ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b92fb5a-67b1-48f7-998a-08faf5e9c042",
        "cursor": {
          "ref": "5fe8c111-8c48-4de9-8bc4-3cb0629ef2ff",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "eb6e6aa5-bb7c-467f-8289-dc27d90401eb"
        },
        "item": {
          "id": "8b92fb5a-67b1-48f7-998a-08faf5e9c042",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9e363705-30d9-4822-9ee7-f8605a32d205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ae66ac-bc06-4372-b46f-04804a861faa",
        "cursor": {
          "ref": "9677c517-5173-4551-9cc7-001a7aa9cf82",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "33fb3cf4-3840-4470-9547-33a61577c2e5"
        },
        "item": {
          "id": "81ae66ac-bc06-4372-b46f-04804a861faa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7e020b89-f6fd-4505-9470-be01cb25f3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906d3f9d-e3b3-4c11-a99a-deef2857184a",
        "cursor": {
          "ref": "3a4130e2-99e9-413f-81d0-15c17616c927",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "148508e2-b71f-479e-ac0e-d9371298049c"
        },
        "item": {
          "id": "906d3f9d-e3b3-4c11-a99a-deef2857184a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a8c212fe-0d05-4482-b49f-bdf7f9f38bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d27b5f-329e-43e6-a175-724b9949f44a",
        "cursor": {
          "ref": "e05bb142-4615-477b-af2d-88cde45490ce",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "743f6b5f-0d67-4385-ba21-41d7eefe96b2"
        },
        "item": {
          "id": "c9d27b5f-329e-43e6-a175-724b9949f44a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cf539383-fb99-4a04-94f3-8af92ae4fa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96098fc1-edbd-42b2-98bc-6ad9c84e1b58",
        "cursor": {
          "ref": "1470753a-0d81-4d5a-bfd0-9ac288e34f58",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c8a7b529-5e83-46c6-bbc9-9bec9e3e977e"
        },
        "item": {
          "id": "96098fc1-edbd-42b2-98bc-6ad9c84e1b58",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bae7fa53-80f9-4d7b-8664-f9c736a0778d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea1c233-6f59-4295-80dc-4785ccdab852",
        "cursor": {
          "ref": "a1b0a288-1456-46d3-841f-8de45e99fa2c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e82a71ff-072c-4551-bded-716033d4af40"
        },
        "item": {
          "id": "aea1c233-6f59-4295-80dc-4785ccdab852",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "49ef0868-0bf6-4ace-a014-329e8c65aa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948aea6d-8618-43b8-9b08-112f07328192",
        "cursor": {
          "ref": "e929a01a-a7ef-454e-81a9-e4c9486e1b37",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "352657cf-09e3-4d2f-a949-b978856eb1e6"
        },
        "item": {
          "id": "948aea6d-8618-43b8-9b08-112f07328192",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1d51da33-c2b3-41c4-8ed4-7f14090944e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599dfe58-56d8-4743-9211-d81bfc0f63af",
        "cursor": {
          "ref": "8d715826-386a-4e04-bf0e-1102589e5030",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a99462d6-69ce-43a0-9b3a-374a77a28339"
        },
        "item": {
          "id": "599dfe58-56d8-4743-9211-d81bfc0f63af",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "547129a3-dd8e-492b-9a9a-3b40a7612b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed15470d-aeee-436d-ae0a-93ecc6c4d17a",
        "cursor": {
          "ref": "aafe40fb-319b-4c32-b0ab-b597651c2a62",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e8cd3bf4-2f0c-4dac-ac38-bf10e55f0de2"
        },
        "item": {
          "id": "ed15470d-aeee-436d-ae0a-93ecc6c4d17a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a67c7ec3-3562-4337-a7db-ddb745f15847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169f4998-e97f-4692-bd70-27aaf7299f13",
        "cursor": {
          "ref": "cc4c3516-ffa0-43a5-8a43-565368bfb025",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b79055c7-1870-4158-b2b4-f4150c37e4d4"
        },
        "item": {
          "id": "169f4998-e97f-4692-bd70-27aaf7299f13",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e5c17691-b21a-45a4-ba42-574ef626a583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9638b16c-a8ca-4291-953b-72fbcb2dcce2",
        "cursor": {
          "ref": "8eddec60-8497-46fb-a01a-59bafcb8bf09",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "308d94b4-4db4-4e8d-8426-71230f4069db"
        },
        "item": {
          "id": "9638b16c-a8ca-4291-953b-72fbcb2dcce2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fd468b16-b549-4ea2-8b51-7fb44c426760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc21ea52-8ccf-48dc-a104-bd74e6741184",
        "cursor": {
          "ref": "4e3ac2db-ab3a-43fa-ade3-51995696ce3e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "deae47a2-4ea3-4797-8be5-873855420535"
        },
        "item": {
          "id": "dc21ea52-8ccf-48dc-a104-bd74e6741184",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a6b7173e-7067-4ef7-b31f-83e225fd9e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af450352-b8f4-4012-9918-ff7dc4c64f5b",
        "cursor": {
          "ref": "c633b31b-f2b6-4013-ba13-5950595a27c3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "35ad9e49-77d8-4909-b1f4-7f10922f604f"
        },
        "item": {
          "id": "af450352-b8f4-4012-9918-ff7dc4c64f5b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "df1aead7-d6d8-4c66-826d-a3020a457885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bfb953-51ca-4663-841e-27f1dff2bfa0",
        "cursor": {
          "ref": "1a139d16-665c-423d-893c-96cac8b6e6b3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "420654f5-c35d-490d-8894-8d0b86612cd6"
        },
        "item": {
          "id": "d9bfb953-51ca-4663-841e-27f1dff2bfa0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "654f89fd-c0fc-43d1-8bcb-59f2ec24b917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b640409-d07f-400c-8415-a8142eb8c3d7",
        "cursor": {
          "ref": "c7a69cf4-9a05-4c62-a583-9efd12ec6f7b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "85a95277-d89a-4f9c-9cad-98a879a1f3c5"
        },
        "item": {
          "id": "3b640409-d07f-400c-8415-a8142eb8c3d7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f55f20c0-c206-497b-ad8f-39c387166ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6009402-6201-46d0-9eb3-a0aa1b6d4dc7",
        "cursor": {
          "ref": "0a7dfd80-1631-42f3-8b89-134e3632d815",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "81a4f3a8-27a8-45e0-883b-a8043480a093"
        },
        "item": {
          "id": "b6009402-6201-46d0-9eb3-a0aa1b6d4dc7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0de1f33e-101a-4304-b81d-dc7d9309def1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1840f31c-4e68-4ca1-b39e-559ecb4b442d",
        "cursor": {
          "ref": "7e67bf86-ae66-43aa-90ad-377c760b2fca",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ccf06707-fb28-4772-a4a7-d33e633966fe"
        },
        "item": {
          "id": "1840f31c-4e68-4ca1-b39e-559ecb4b442d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f198b3f8-d29e-4d16-887d-8a937fd0710a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2894e186-a44d-47a1-b93d-9092e80b6b44",
        "cursor": {
          "ref": "e14421a5-7531-47cf-8b77-0956d4adbe3c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9dfece15-6c3e-4734-9d1a-67b9177c34c1"
        },
        "item": {
          "id": "2894e186-a44d-47a1-b93d-9092e80b6b44",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9af4d636-9b96-4936-baf6-7b2f41e6935b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e78dc7c-b9c3-4aac-9585-df39ccc68d92",
        "cursor": {
          "ref": "9d7c34dc-cd11-41e4-8b4d-49db9880558f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "40f93113-d11a-4ac1-a04e-ee53f0d1cb1d"
        },
        "item": {
          "id": "3e78dc7c-b9c3-4aac-9585-df39ccc68d92",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3e2f1262-8f61-4249-a19d-3d98fea08c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a124d6be-f555-4a37-bda7-da8d4a232cfd",
        "cursor": {
          "ref": "c183dd84-c53a-461f-8e3f-fa29f1f3d2e6",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6f2a384b-c0c4-46ee-b368-981472d2a070"
        },
        "item": {
          "id": "a124d6be-f555-4a37-bda7-da8d4a232cfd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ec38b57-8843-4369-ba7d-ff71b5963a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0702ce44-b30d-4855-a71e-8d91ea7fbc26",
        "cursor": {
          "ref": "d9431f84-d88f-47eb-89ef-48ab042dc4e4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "37fa07ad-4e33-42b6-8d5c-cb6623bc4d9e"
        },
        "item": {
          "id": "0702ce44-b30d-4855-a71e-8d91ea7fbc26",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b108eeb9-e8a5-46bf-b52f-df0dcb25d38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686b969b-fb6c-4e63-b988-0457387770be",
        "cursor": {
          "ref": "d8ba567c-256a-49b3-89d8-960abfb72a44",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ee108b10-5962-4037-babe-fdddb8dd4056"
        },
        "item": {
          "id": "686b969b-fb6c-4e63-b988-0457387770be",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a3658674-af53-4f39-a891-601b945d1a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04e50bb-0358-4b50-9a09-42d5c791f7ff",
        "cursor": {
          "ref": "83da5215-353d-4ad4-b154-83fd4b83bcd3",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cf4a7b34-4362-47e8-99ca-6da13827b8f0"
        },
        "item": {
          "id": "f04e50bb-0358-4b50-9a09-42d5c791f7ff",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "59a370b8-ea06-4152-a68f-faee983517e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83ffc3b-8ca1-4643-8b7c-6ecf2316cbc2",
        "cursor": {
          "ref": "f3595dcf-4be9-42c5-b2be-2ec206d2b926",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ae616b83-084f-4bef-917a-29d10e38e965"
        },
        "item": {
          "id": "d83ffc3b-8ca1-4643-8b7c-6ecf2316cbc2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b6c31dd6-e27b-433d-9094-6641b06da9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ace229-d943-41ae-8267-b8c6477d905b",
        "cursor": {
          "ref": "44833fde-343a-4762-acdf-f27b1dc1b6ae",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dd1c0407-2e9f-4acf-9eaa-003198b989e1"
        },
        "item": {
          "id": "43ace229-d943-41ae-8267-b8c6477d905b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "abed3ac3-27f3-4c32-a503-b2ce09690a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb83cd3-0271-47ec-9efc-21c535cd24db",
        "cursor": {
          "ref": "88ac3d86-e888-4abb-888d-e9f912477239",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "19fe78ea-bda6-4783-bd2d-a82c23527df9"
        },
        "item": {
          "id": "5bb83cd3-0271-47ec-9efc-21c535cd24db",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "712f66a0-d478-402d-986a-c47c376d8971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9994a095-41c5-4f35-b9c9-d11290a36250",
        "cursor": {
          "ref": "b10d507c-9bae-4150-a1f5-ae2d893e55ae",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "feb23245-f87c-45ab-8b6e-d1f4d69f45a6"
        },
        "item": {
          "id": "9994a095-41c5-4f35-b9c9-d11290a36250",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ae93eb0f-eb3c-445c-a385-5fcbc0e32c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e932fae4-103d-422a-9791-66ff0b7fc4e5",
        "cursor": {
          "ref": "6b5a480d-179c-4f95-a009-3627b59b03ce",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9e3a9aff-97d8-47c5-9fb0-9ed644d2427a"
        },
        "item": {
          "id": "e932fae4-103d-422a-9791-66ff0b7fc4e5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c23aa4b9-feaf-43f1-b4e8-8d6ac748f5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156717e6-d803-4c8e-b9f7-9167c9d5da59",
        "cursor": {
          "ref": "007ba081-82d0-4565-a5b3-7edc64ada759",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ebd2aa04-f041-48d6-aed8-faaf5fdd98aa"
        },
        "item": {
          "id": "156717e6-d803-4c8e-b9f7-9167c9d5da59",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "552b8fc4-7496-4eb4-8441-11fc9620bab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12183fd3-6254-4d37-8786-b31b5d911674",
        "cursor": {
          "ref": "0ca38b97-5495-434c-b0d1-e4f2c1f0b021",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e8dbead0-94ca-46ef-971c-6c4fd5ab815e"
        },
        "item": {
          "id": "12183fd3-6254-4d37-8786-b31b5d911674",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9bd7ef49-5397-44a8-88c9-20eb6a60c63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38f4be6-141a-43d8-bb7c-be622f842827",
        "cursor": {
          "ref": "aba7ff14-6612-451f-a93e-18ea239f2cfa",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cb1df202-91dd-4207-a082-1f0c2e780b5e"
        },
        "item": {
          "id": "b38f4be6-141a-43d8-bb7c-be622f842827",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7fe3ddef-9baf-425e-9513-e12067b01198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fb81a9-f54b-47de-9d8e-a16270e792df",
        "cursor": {
          "ref": "6a647895-7820-4810-9572-f3e8ec560b02",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fea12295-a3fe-40ca-ba76-ce74634b3643"
        },
        "item": {
          "id": "07fb81a9-f54b-47de-9d8e-a16270e792df",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3ec0dc29-07ec-4723-8bda-b025896115fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a95d01d-dc2d-41c8-b43f-0af9ca1deaff",
        "cursor": {
          "ref": "247ca6e1-fe27-44ac-89cd-6439b77c8d06",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c43355d9-bb5f-4a02-bdb6-8df505ed37b4"
        },
        "item": {
          "id": "1a95d01d-dc2d-41c8-b43f-0af9ca1deaff",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "db934842-d8aa-4a46-8dfe-89bb1d60296b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de5acb4-7e82-406c-964a-6ac9ca4de4aa",
        "cursor": {
          "ref": "1a39fd38-25c3-44b3-ad69-70de67176a49",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "852a3f04-e7eb-4154-a340-07b12b895f40"
        },
        "item": {
          "id": "7de5acb4-7e82-406c-964a-6ac9ca4de4aa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1c83bd4a-7c3a-41dc-a6bb-5798d8d32925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d360e0-f32d-46c6-b4a0-1e96117bc0e0",
        "cursor": {
          "ref": "2666b9ac-ec44-4752-a4ab-f54f97354dd5",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3001371f-4657-4a6d-8166-a5d75a151132"
        },
        "item": {
          "id": "a1d360e0-f32d-46c6-b4a0-1e96117bc0e0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6a36340a-512e-48cd-beb8-f45a6173bd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8bad4a-309e-4fa5-b3aa-7bc4e9c4043b",
        "cursor": {
          "ref": "7f99c6a1-27cd-4ba6-ad50-a25c90968ac5",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "eae383d6-89d9-4a59-b068-59bca7f7c199"
        },
        "item": {
          "id": "5f8bad4a-309e-4fa5-b3aa-7bc4e9c4043b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e34df664-ffad-4e46-ae70-ec22e7fa4969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165cbda8-ca85-4b28-9558-b3199ae1aa85",
        "cursor": {
          "ref": "e19ba4c4-12c2-459f-9706-e4054e47079d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ac2e1b89-9370-4e94-b285-1e23c8973984"
        },
        "item": {
          "id": "165cbda8-ca85-4b28-9558-b3199ae1aa85",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1b6b35ff-e9c8-4c8d-bc03-293aab5c9ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f4e305-4b6a-4a31-aae3-064d0348cdb6",
        "cursor": {
          "ref": "4f98dbe7-76d4-4079-bb7a-94cd49cfe33c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "799a6a8c-bd01-40ba-883c-54ded85800bd"
        },
        "item": {
          "id": "30f4e305-4b6a-4a31-aae3-064d0348cdb6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6c593fad-bfae-40d3-87f3-18dee92c72e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca0ba9c-5bce-4d19-9af9-a5a4fc532599",
        "cursor": {
          "ref": "86e24c4d-95a6-4bbc-b710-7b540d44d100",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "af7af23f-61c7-4e0b-93e7-d8308b312541"
        },
        "item": {
          "id": "eca0ba9c-5bce-4d19-9af9-a5a4fc532599",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a01ba6cf-7b66-4ad3-9565-03b8a2c235ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50980c3-cce7-43a9-9969-f380d9274338",
        "cursor": {
          "ref": "90a783f4-2187-47fa-9021-7b45556c8222",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f8953efa-961b-4df9-ac50-3cfcacc66b79"
        },
        "item": {
          "id": "e50980c3-cce7-43a9-9969-f380d9274338",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c9fd0834-654a-4d4d-8071-d0b39da5c815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c784121-a711-4a04-af6a-4b12e71c958f",
        "cursor": {
          "ref": "5920141d-b574-40db-9a5f-e635a8e2ed14",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "507c0558-a034-481d-ac2e-f64efeab6157"
        },
        "item": {
          "id": "8c784121-a711-4a04-af6a-4b12e71c958f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d2ac89e1-f4c1-40d4-abbd-0de0f10ff59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bae4caf-ddf4-4b19-b69c-b29c09058b85",
        "cursor": {
          "ref": "73272f61-8616-47f9-9e54-f73e9a142c54",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fe4bee47-7923-4d11-b31c-affebfeb1929"
        },
        "item": {
          "id": "7bae4caf-ddf4-4b19-b69c-b29c09058b85",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "928d3e0c-df40-4aa6-973b-01d322c8a147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372dd310-9c18-4982-b065-127b29319616",
        "cursor": {
          "ref": "c9077ee8-7fef-4f8a-8511-5b9d459d2531",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0fa34b4a-4b6b-4252-a44c-9b59333ab21e"
        },
        "item": {
          "id": "372dd310-9c18-4982-b065-127b29319616",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bb6c595d-f44e-4120-be55-910f22fb6752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e727a79d-6c15-459a-83d1-ca69e8bacf18",
        "cursor": {
          "ref": "f0db41e5-af5d-4005-82b8-f213f8324a78",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2bd4ee78-1f4c-456f-ad67-4ac422eefa12"
        },
        "item": {
          "id": "e727a79d-6c15-459a-83d1-ca69e8bacf18",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cb13f085-048c-459c-b1aa-3eef841e0f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07625117-9db7-4e97-9766-2e7e3538d5b3",
        "cursor": {
          "ref": "48584739-46a5-48cd-8314-d9f6045c87ea",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e8d0fd92-be96-48ed-9579-2bd6c2c299d0"
        },
        "item": {
          "id": "07625117-9db7-4e97-9766-2e7e3538d5b3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c6aa839b-4326-45a3-bd9c-5362cb73bc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99bc8f4-ff0e-47bd-bc12-f8c442adae76",
        "cursor": {
          "ref": "66e78dc3-9ef6-4757-9a0e-d626b80a0772",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0c9a7ed0-59d2-4941-824f-03918f2783e1"
        },
        "item": {
          "id": "d99bc8f4-ff0e-47bd-bc12-f8c442adae76",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "30834c29-e842-4182-983a-86fd64d9448e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142d589d-a5bc-4a7c-b726-32e7ed0f89ce",
        "cursor": {
          "ref": "50028b6a-c6c1-4dc5-95aa-1b16129b71df",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b0caf96c-a697-4691-8625-e2c85683739d"
        },
        "item": {
          "id": "142d589d-a5bc-4a7c-b726-32e7ed0f89ce",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ff097927-b693-4a87-bc23-4fb8e515f31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a36e75d-f09a-4258-8f49-47fa14a95603",
        "cursor": {
          "ref": "aa33c96f-7483-49e6-92db-b5a441a40137",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "544a585f-53f8-45d8-9545-2b63c2bee3c3"
        },
        "item": {
          "id": "2a36e75d-f09a-4258-8f49-47fa14a95603",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "71696c12-c5c3-4da0-929b-5870fab49e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c2e7f2-06d7-4fad-a75a-ddfd70a83ce4",
        "cursor": {
          "ref": "78345268-f437-405b-a0e0-1e40a7522e4d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b495003b-299f-4be1-901b-ab4b5ba8a786"
        },
        "item": {
          "id": "03c2e7f2-06d7-4fad-a75a-ddfd70a83ce4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "297d493c-5d6c-4996-928a-524ca7186497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138b26d4-c5c1-45b6-aa93-a774a55eb8fb",
        "cursor": {
          "ref": "20966c91-6c4b-4d20-bf36-9474ef145ed0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1ac2dae8-5b58-4139-bff2-b045a4b85163"
        },
        "item": {
          "id": "138b26d4-c5c1-45b6-aa93-a774a55eb8fb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fbe3f8c0-5925-4970-a044-5a9528dd69f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87266368-8946-4bf6-9643-e75b2ac777c9",
        "cursor": {
          "ref": "44f2b434-740b-4e8a-89db-29f9e59e70e5",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0a57eeae-d52c-49b0-9db7-585a39b0e693"
        },
        "item": {
          "id": "87266368-8946-4bf6-9643-e75b2ac777c9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "af7ef3ea-bf53-4057-8a44-0265dd80961d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc607c20-72ff-4a51-a4a2-3920dc64689c",
        "cursor": {
          "ref": "d260c565-49e5-4518-af4d-e69162bbcbed",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "caeffe1f-a401-4ce8-8811-25a2fcee51ea"
        },
        "item": {
          "id": "dc607c20-72ff-4a51-a4a2-3920dc64689c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c98d8fc9-b2c1-480a-a730-ad54f6779ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b476b85d-f979-4cf9-bf38-fb14626a68ab",
        "cursor": {
          "ref": "4d427b67-8a04-4c7c-9826-809ef1293911",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "39367a1f-3bba-4658-a40a-5122e1d1546c"
        },
        "item": {
          "id": "b476b85d-f979-4cf9-bf38-fb14626a68ab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d90f512e-6250-467e-a429-c4d97431e07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba01aba0-e975-4d9b-a0bd-d82e4765383a",
        "cursor": {
          "ref": "4961363e-bb3e-4e8f-840f-5e761cfcc2a8",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "91f8d7cb-66ed-4796-960a-bc1a6757e8ad"
        },
        "item": {
          "id": "ba01aba0-e975-4d9b-a0bd-d82e4765383a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f47e2b27-4d0f-4ab6-b382-19e7884b6a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eab8fdd-0459-4317-9773-839df1e38438",
        "cursor": {
          "ref": "bd7196b9-6b76-48f3-aa41-4e68b36b684d",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ea3d71dd-3a2b-4e58-b465-acb931e56985"
        },
        "item": {
          "id": "0eab8fdd-0459-4317-9773-839df1e38438",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "36ecdca6-292a-4456-937c-9b95bcc7adca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dfdb10-c66c-4add-a2f2-bbc1504e8b1a",
        "cursor": {
          "ref": "c9429e04-c384-4794-ad66-476240536ee7",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8f2a2709-1e4d-4778-814d-4208ea4635a4"
        },
        "item": {
          "id": "97dfdb10-c66c-4add-a2f2-bbc1504e8b1a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "371b235d-3428-47f5-84fb-d8cd00e559c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e0e980-ceda-472e-b621-2ff86c44a24c",
        "cursor": {
          "ref": "d1f200cf-1dc3-4270-a79c-efb7e6d596c2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4d9e6397-c47e-4a38-b874-a6510b42ae22"
        },
        "item": {
          "id": "f3e0e980-ceda-472e-b621-2ff86c44a24c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e395bc32-13b8-403d-848f-9d72f5b7e934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8faf906-4a46-4c7e-a866-27dde8067e01",
        "cursor": {
          "ref": "26897342-b62a-4f0f-9097-6fe3d1977917",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "858f2a52-d707-4bda-a0be-d473b14c34f1"
        },
        "item": {
          "id": "e8faf906-4a46-4c7e-a866-27dde8067e01",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "95279d2b-8b70-4913-9c30-049c40d12c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b157c6f-65cd-4376-bd79-745b9acc793c",
        "cursor": {
          "ref": "84b73739-a801-49d1-bbb4-37be2a24d870",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8249d4ee-dd69-432e-993b-278d7b6b3b6e"
        },
        "item": {
          "id": "2b157c6f-65cd-4376-bd79-745b9acc793c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c1d6a2e7-0ec4-43d6-8826-bf93977eb676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee034317-16cf-4728-9509-ad188bbe23a4",
        "cursor": {
          "ref": "a8f2506a-0373-4290-a3c4-6d4c57c1adba",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "31bdf636-e35d-40e9-935e-9886d6ac20a8"
        },
        "item": {
          "id": "ee034317-16cf-4728-9509-ad188bbe23a4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c461743a-7345-40bb-b656-a489bee4fc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afd59e3-cfbc-4dd3-b0e3-db8b7ee04268",
        "cursor": {
          "ref": "feadba93-8f41-4310-a9fe-afd65a3773d4",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "be070a4a-ea93-422c-8edd-6b0eaa44a7ec"
        },
        "item": {
          "id": "4afd59e3-cfbc-4dd3-b0e3-db8b7ee04268",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "921911c8-def8-4dce-a471-812f90d910e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be54cc87-3e82-436e-bcad-e975b70a9359",
        "cursor": {
          "ref": "e016c5f0-0699-4f74-a0f0-a5a7b3b06498",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "37ec2593-62ae-4caa-90c2-81965c9f2788"
        },
        "item": {
          "id": "be54cc87-3e82-436e-bcad-e975b70a9359",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d0db8a66-a7b5-41eb-abbd-76dd89dba8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9898e097-7da9-41e8-8b19-5ee7b95e32cf",
        "cursor": {
          "ref": "c2104829-3281-4263-b7bf-db76ecd74371",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b052b6ba-87d6-400f-8344-24178f08c383"
        },
        "item": {
          "id": "9898e097-7da9-41e8-8b19-5ee7b95e32cf",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "58f86501-8040-4322-9fd6-7e464fe70d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a31138-931a-4142-bc01-bbde62f721e9",
        "cursor": {
          "ref": "66ad6e89-7b43-4116-86e3-2dad859b111c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6089c3d0-401a-46ba-bca5-3d68887f6b18"
        },
        "item": {
          "id": "29a31138-931a-4142-bc01-bbde62f721e9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5720f95d-650f-443a-ad79-a815aae58043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a7c11f-3ac6-4694-a21f-0e87399fd18b",
        "cursor": {
          "ref": "33918df2-a0c1-4b7a-afd0-bc1919beb0e2",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "61c342e9-1004-4b5c-91de-03157c0e2028"
        },
        "item": {
          "id": "24a7c11f-3ac6-4694-a21f-0e87399fd18b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "34f61f3f-7210-4c2e-9d13-1ec22e8973b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f2f15a-f518-437a-8f1b-315f2a461157",
        "cursor": {
          "ref": "2ec8ad29-32f2-4d1f-9978-66dcf223e44c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9f2d5f6c-cbbc-4a46-a104-a3047d5e4e47"
        },
        "item": {
          "id": "07f2f15a-f518-437a-8f1b-315f2a461157",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e2e54c1d-99f0-41af-a1a7-9913584566c4",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3229ba-8f60-43bb-b446-557edbb8bb54",
        "cursor": {
          "ref": "1a068224-54e4-4e20-80a1-d4bbca1a18b1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0347848f-ed00-4c7d-a1d4-b374bcecb679"
        },
        "item": {
          "id": "3a3229ba-8f60-43bb-b446-557edbb8bb54",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f8bd98fe-cc46-43e0-9268-c116028e23d1",
          "status": "OK",
          "code": 200,
          "responseTime": 3006,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d93c3d-6eb6-406c-86b9-a15ad931bce3",
        "cursor": {
          "ref": "ff61390c-48a1-4658-94d2-5e0196188779",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "079a6b07-f223-4995-9965-1197e1c8b536"
        },
        "item": {
          "id": "f4d93c3d-6eb6-406c-86b9-a15ad931bce3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fb76e0db-0b63-4ef5-adc5-54f950685930",
          "status": "OK",
          "code": 200,
          "responseTime": 2098,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc24666b-3f31-420f-bafb-f74b024ab9d1",
        "cursor": {
          "ref": "17c1a3f3-2505-4d03-a684-5460b4fd2739",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9e11ae30-6670-41b5-ab2d-ce13737ed4cf"
        },
        "item": {
          "id": "fc24666b-3f31-420f-bafb-f74b024ab9d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb3289be-4d08-498d-94cb-12912664e84c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc24666b-3f31-420f-bafb-f74b024ab9d1",
        "cursor": {
          "ref": "17c1a3f3-2505-4d03-a684-5460b4fd2739",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9e11ae30-6670-41b5-ab2d-ce13737ed4cf"
        },
        "item": {
          "id": "fc24666b-3f31-420f-bafb-f74b024ab9d1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb3289be-4d08-498d-94cb-12912664e84c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54af0873-466f-4930-8b8e-92669c341d37",
        "cursor": {
          "ref": "cec0bc98-5983-40bc-ac70-32fe515cde02",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "25887e8e-e389-49a2-b7aa-f744a124feed"
        },
        "item": {
          "id": "54af0873-466f-4930-8b8e-92669c341d37",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ea7baaf1-c91a-4e84-84bb-3f9568a6f382",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400d0adb-9cc4-468d-82fe-0408a819cd2f",
        "cursor": {
          "ref": "d3cd7fb4-1e8f-41e9-a48c-7ea066c2c829",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "900e5666-96c0-4b41-ae3b-a7a711d2f880"
        },
        "item": {
          "id": "400d0adb-9cc4-468d-82fe-0408a819cd2f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e8f76e3e-85cd-4d45-9f60-38fc277a60bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}