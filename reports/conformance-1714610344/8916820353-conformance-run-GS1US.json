{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "72172382-3f43-49d3-901d-036c7afe2fff",
        "name": "Clear Cache",
        "item": [
          {
            "id": "73ed1a8a-d626-4ea9-bcc6-db9ff96097cd",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56017405-dde1-451d-9b84-953fc6033243",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8256d80e-befd-4c3d-a6c0-9426e4680e7d"
                }
              }
            ]
          },
          {
            "id": "986d10c4-b213-4c65-85a7-15e6d4525662",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed518721-58ef-444d-81ab-a07db9a8e722",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a858d7d6-147e-4c08-bd41-5024222ab534"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b40cb181-ac99-4f86-8219-f162dbbac935",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "05541331-204b-481f-afc2-77fd50bc2a41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "daa31b01-3339-41c1-ae39-a21d1523e42c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e1bd520-f654-4625-b356-d4ee9cab5038",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f14ff83-5c03-469b-99f6-0e284459a666"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2698311e-7b01-4359-a6db-8db11946e858",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "197e589f-4ae1-4eac-a11d-b1b664f475ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "597d404e-58f3-4c91-a781-383acda7b792",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fab10b77-8318-42b1-8e3a-dadab3592d18"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a218857-4570-40cc-8c1a-fd1afdfaa783",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7f6e89a9-9dd9-4f29-8231-9099365d69cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc3277f0-0bdd-47bf-950d-cdc1ef8cfb00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "551a62fe-1efb-4b28-a4e0-f0a864e66120"
            }
          }
        ]
      },
      {
        "id": "75e4a10b-bc67-4455-a4bc-0a8200d1848a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c8962ce9-6fda-4fad-b309-553fa599b9c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ed5a7e26-eec5-4571-890c-527c3c43ff02",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d496ef16-0466-4697-b88a-cd5942fd9161",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73257e5-eeeb-4f9b-8217-fa021bd7d1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a738e8c-c270-489d-9e6e-2cb7499125ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660ae044-8c44-49c3-8fc4-19a29451415c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86039e5-e4e9-4363-bd6d-08ae38524d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb20e375-916f-4dc3-a274-7281b8291f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdd94c6-06e8-452c-8351-351d4bd9a361",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a000b4d-f340-49ba-80f3-51ea1d343d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55368127-ff5f-4f28-b25d-f7f48e215bb1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2691233-e85e-4ad2-8d20-d59444a1aa48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca8c8cb2-0a13-4e2d-b20f-381f5b7db93f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec9b18f-354e-441e-8797-7ebef6f0df43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e241009-bf04-4bf6-bc2e-77994388f2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c33ad686-d32f-41a9-9c58-e135b91e021e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34faa5f2-1d55-4ef8-8375-ca39027e5a08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fa537cee-bc80-404d-b6a0-2703489ec1ff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65f9e436-6baf-4d6f-9887-d00ba115d553",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa90256a-6035-42f0-ab9b-ce91bdd00971",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "92bfd86d-d9b7-4ee7-93ab-bae62bd0622f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59f91655-1924-4f15-b18d-e289028de286",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2bd180df-ba7e-4e60-8a6c-9d90c4954ec7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1e3f94a-5e89-47a2-b3cd-bf7ea0b19238",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "981a01f4-2e49-45fe-af9b-a7018836dbec"
            }
          }
        ]
      },
      {
        "id": "e087c441-53f0-4bba-b004-67a2a14bbdd5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b46446ad-a545-4d3a-acf4-a70cfa976f00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "408f65e2-4ae1-4029-a2db-5dcc16c0ff52",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e488ea26-63de-4d70-a49f-2a44b89908d1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652f7bb4-f568-4a79-aa31-84cacca72198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17060d54-b990-490d-a53c-c28fe44a9965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5edd3d4-2edd-4df5-9a1b-e75092ae2d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c95c7c0-6bd5-4e51-ae2b-bad5cd6a47b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c084003-997d-4846-a3c8-fefb107e8681",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44906a4c-d5b1-46ab-901b-15b937952939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1d09da-56a1-4373-a5ca-bd5f775626ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6ee4fd-c5a8-4ff6-92d4-bd8c0f95be7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38a28b21-8f54-4eec-b63d-8e3fb2d99516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41c542c-a3fa-4e16-8f34-15fe00226177",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a70bbab-822f-46d0-b7f8-d245abb61ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b393dde-d5b6-4dbd-b69d-a89f3e565777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3a6154-5bce-4a1c-b2b7-40d4182753e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bf4078c-12b9-4c54-b240-00b11e6afb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39dd363-a381-4335-b4f0-983b5d8041b4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca463d0f-2856-406e-a8e4-21ff4df7fc4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218a05be-9a8a-48b0-a85f-74a49f2b33f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ca5100-b7d5-4402-ae6d-9d768f22cde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72f59fef-03f5-4ac6-83be-d7f41b7d3384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe4bee2-46b5-442c-974b-46847c2f4a14",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8215f04-a307-4fca-9a66-248cc47ace94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff1f672-b752-4df1-8653-10bb744e8bf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f8e0d4-8d65-45e6-9b3b-078e5f4a236e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31e9b20f-fd3b-4a52-9a1b-c1269a27ac39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c159936-adf2-46b4-8f79-e8b2189e9aeb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1406b2-20f9-48e8-91bc-948b8601b0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a597897-aad9-400d-8029-4c76e4bb15e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ddfd0f-35f7-4280-9aaa-694c14879af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f695257a-9ff2-4201-b25e-bf041a81a28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5a0bd2-da1b-4733-b3f0-e463d3186d98",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86c414e-be5c-4fb8-a4c5-cd0c6051e154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f003cbf-3db8-4287-b71b-0d1f701eb388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bc3d0e-f035-48c6-abab-0d3cb75d059e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fd69e0f-5415-4c4d-aa1e-2053b4f3024e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38f3678-5b73-48f6-9c15-bac8e2f844d6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b530aec4-fd6c-47eb-8f4a-f1f4108e22b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc199c47-51a6-454d-b574-735bca4ec774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714e2335-a387-4fb4-a10a-fa9a3ce45c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f05a4fa4-d75b-445d-8931-df5c70d1fcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe58d643-4d4a-44dc-af51-b0b2cdd64038",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237e9d49-bfbf-46a0-a651-a0032af26576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4c29b2-611e-47a6-beea-96507a377735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef25daf-8ba4-4dcd-b409-c85487d51637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8918a06-b306-45fe-ae04-753481c7c737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae1aba5-c2af-4fd3-b65a-6affb4e5abcd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7ed2f8-9f8b-4542-bbdc-c6f9cc049734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c98d13-0d13-490a-9143-048c94ee144b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a82d3a-c50b-48a2-ae32-bfd2cb739fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d73bc1da-3c68-47e7-aa6f-4a1c62b373aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631047ce-e4a1-453e-8d2d-b337fa820414",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3add1dd-3e49-4e83-92a2-df066bed59f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2730f19-ab9c-4092-b231-fa41b32b2da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7a3816-0ef7-4c8e-823c-694f0d87cdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49c8183f-c2a1-4e28-89da-523c648e4712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3affa1f1-d2ed-4b1f-84a5-c5224a6c10be",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e67f818-66a7-43d4-ae25-fe5b228c4bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b036c86-b32c-4860-9d6b-5a6d8aa59e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666bb272-4335-4d82-a2e9-37a1887f63c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3d98451-202d-4de2-b967-a1850b5eefc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be041005-a952-4c3f-92d2-783f0e9c6237",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04cf286-e466-4c37-8e82-42698a0d22ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e4a94d-954b-4408-9661-37c41b0e0404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7368afc-4886-4d5f-84c9-2fb3251a90cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e367d0d4-0e0a-4955-8c47-59242621fb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b90781e-1fce-4c5d-91a0-9ef703342297",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387c81d8-231a-4e3c-b41a-02c67a24aba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7477e56c-9b08-4f98-a910-4ba9b59523e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480d510c-af10-49f5-a326-752c87090676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f8f7104-4634-4808-9ff8-b409371e1d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f4b658-97ac-48c7-9746-331600f00fb4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8660975a-26fd-42e9-9f9b-e2e8e8028559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ca207b-101d-42c1-a3a3-29c218007f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8fb1ed-ae43-49c1-89ed-43342cfd44b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b036668-be10-40f4-b7f3-8433ff94852e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c555f2-f85b-4815-9192-ce485c234d1a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfcee41-f695-4eca-ba0e-fca50cb90c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4ea49d-3659-4acc-ac70-c08d677103c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070cbb8a-c802-4fb6-a141-13d7cba83f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18bde4fe-588c-4a5a-8b54-22133e41a009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bef5f3b-d54f-4b41-aa8b-786f66cd7abb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b01af5b-9b3d-4cce-9673-835ca436bdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13634b3-f171-46ab-9b53-749732e6e42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14834dc-fd99-47f7-8a0e-b3c36681b173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e06c874b-ae21-4144-996c-72edd067aec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4cbba1-df70-4164-8c57-059982e31c08",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881e2e7f-c254-464b-b56e-ddeda9a10028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e020f0f5-0ddd-47e8-9615-57dc9b0d8199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5803a2-2efb-443a-ae10-7431a85a6c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9127b9-772e-45bc-b0e0-abf7a51a5563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45296274-d3e9-4a7e-9fb2-04a01e93ecd0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e07dc1-df29-4622-88bf-0b26944ff756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcfaa40-922a-4f86-91c2-9c93e1f68213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e25fdfd-659f-4745-9539-1b6eb22d8d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3821e14-1b0e-456a-98c5-fdaa0dfe599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466c68d7-d0df-427b-8c58-848179ebac03",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301479da-ce95-4044-bfe9-25ac025f93ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de3eb6d-33ea-438e-b068-f3a084b56e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbbf66c-26d7-4f1e-a2b4-a72adef5464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3619da0-6b91-4b85-b6e2-703646ce07ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bbc1b8-8214-4b80-9ba2-15cf9a5344c7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92a6541-462f-472d-9928-fcd71ce8546a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9168c71d-16fe-4bfb-86f2-5439192bcd7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127fbcd8-99dc-4a61-a0e8-73a370d59ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f39b2ec-9306-4892-a2d2-dcb89405909f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88776ae9-cbe8-4a72-960d-6ba10e60784d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51da7452-1eaf-40fd-9b5e-016443514f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d155160-152a-4395-ad00-6728e69e9dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a22ab58-b269-49bf-9c5c-71dfecb12f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e274e8-703e-4c23-8b85-8e9c215d281e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff0dcd3-3b6d-453a-8c82-7d30420c5a86",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596f9c1b-2bd0-4451-a7ca-3617ab46b270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a20493d-d2fc-40e0-a2bb-20359448b71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6add3d2b-1858-4cc9-a11f-bb0e4ecfb7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "426213d2-c23f-4849-84c8-5cbaa78ac010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11362fd8-feb0-4ce1-8812-58b1741d00f4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e5dbaf-ff5d-46c3-a126-01537e2676d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce55b5e-b947-40c8-ad58-bdd60ad338cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9504d3-ceec-4e0a-8e26-e5cfa24c6322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4edd5b-5dd0-4545-a7fb-3e9326f6fba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca6607c-3ab4-47fa-9ad4-de63cf7e31f2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea99ed8-f579-4c61-b6ab-45c59d2fa9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad423ec4-1a47-4489-986f-ae7f158654b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a702d7c2-340c-4a67-8b9c-4ff3a027df83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "183d2180-06d0-4f20-bab8-644890f760bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcef00f-d10b-498c-a90b-5e9f32ffc3cb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c7247b-bd39-4be2-8bdf-222dc9525661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2354953f-cc63-491b-892a-479736229264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278553e3-8ddb-48f5-a6e7-ddad880d5645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71249e25-7d0f-45aa-a0f5-bd81614b4f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05143b39-8a51-4e7b-9a77-87b03fddf459",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ac0a58-8961-4875-8e6c-1d2a1f78f86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4fc37a-5b6f-4b31-9ae9-3ebcd908d0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557796b9-c518-4862-8a8c-af2bdc5e53f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5292bd0e-e3c3-4aea-9f2f-dd7b3dc48f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4c0514-2ea4-4b5d-8abc-2f3b6f23da71",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27bf0f6-a66c-4189-ad4b-2fd30daa2292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4de3c8e-6bc2-4822-a1b0-45e1c2c62d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad343459-834b-432b-97da-55e709dd6831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a28388d8-ef6a-4804-ba09-3565ed5c11ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b362bfc-64f4-435a-9774-e64a3eaea3b4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6a2b4d-a4a9-4c97-a98d-60d21d0052b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cecce82-c391-41d6-bae0-a52590f08f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38239c4-0666-47a2-8519-6f8770799c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2b73ee-12cb-4e1a-a7be-608616273990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff439d7-359b-4e6b-aeaa-05fdee8cca4a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f021d7ca-6348-4f9c-b25b-62fd5543a2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30988013-2aab-4591-89bf-4bf84a45dee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4e22e1-6d2d-4387-b024-4acfd65192a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5383b774-5b31-49a4-91ef-ddd4b13e41b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be09348-84b7-479f-8ea7-6ff3ed7b3cd2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d246e65-c4c5-4fd2-a9e5-866296ed9107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce083ad-ece5-441d-bea8-2acfcffa8585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62ef19e-e8da-454a-b9b2-25b4e2ca7d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "959efd6f-3642-44a1-9188-2f3457cd79ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec641b0-690e-4cd2-b107-98f65374885d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7533ef9e-c084-4a9c-a16b-217a10719686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3452289e-5e0c-4bfb-afc7-023e9e676861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d628c803-4584-4f63-8302-0ee4a8015c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38474308-8767-44e9-970e-fbc6b6f25660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94f03e0-37ff-4d5a-9310-b2cb931e069d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4295892b-644e-40bc-a397-4c605bd1ffd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e12e1d-3dde-4caf-b346-54bda50756d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412e8c00-f9ff-4613-a1ec-a7c41eea3948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68cbb05e-380d-4b2a-ae94-9590e311147e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e08b2e-c3e7-4095-9c38-d1ab961b505d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c71e18-6ebf-4fbc-aa8e-769001cc75f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ed5d0e-5a4f-4deb-acf6-ba728be1a408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7ba1b6-766e-4a31-bb49-f04a412d1410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1793df52-7593-424d-94ff-ee475201028b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35cdf3d-5513-4360-8ac7-0a30600c481c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dbd320-732e-4eea-baba-241cfe0eb08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f670c06-565b-4700-8a7b-3c3777d9809a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a516921c-8ccd-41ae-abd7-47343b350f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d15cf8-8dab-45de-bc4f-b682f02680e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e703b63a-6649-477c-8a29-189c77f420f4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495ff669-85ff-46f1-90e5-488b74ed5633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce77ca83-d45c-4179-aa8d-393de1dc8a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e387e9-ee94-4448-a382-72097bdc9c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54b12aa4-e7b6-483b-99bf-c82b73730d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a94f785-a6f1-47e4-991b-2e5903daef79",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67023cc6-24bf-4597-a1ce-ca337e09d140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8dd322e-4d97-459c-a1bb-b7e255549727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08513f28-91d0-4bcf-a0b1-57aba6cb42d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a78a95a4-e594-41de-a018-bc2a53af4922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bad628-6260-477c-acae-a18c1214e9e6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626d3cee-00f1-4713-97f5-81d0a72f4a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44baf9d-08be-4dc3-affd-85a6769805c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0c95ef-3d2e-4936-a015-a033d684494c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7beab3a0-5389-4bc1-9dae-fefbaca6383c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a3af42-8e6a-44ba-97b9-a6a66c2ba8e9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26af17e-f59d-45b6-89ce-822ff019c3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6eb5143-0de0-4773-9c46-2cf1ffb67430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e45e9ba-b8ea-47fe-a319-93ba8458df21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a189be4e-3090-47ff-b3cb-ddd146b11161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeb76a6-d699-4aa5-ba0d-58375b5ff75c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57ba301-0d31-41ff-91fa-b842c28e994d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509f4909-8882-4f19-ba24-f6ba2d235e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8414f5bb-5620-4b81-b994-a77cac0525de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "017c1197-8a8f-49ff-9bf2-18eac80e378c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a141e415-1358-46d0-a603-ee7aa4cd6bdf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed40eb1-429a-41e4-a5aa-70585669823b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e8a030-9ee3-40a1-bf60-a345dd297fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0406cd55-83df-474a-a2e2-f1b5e06581fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2d759d-307c-472a-99a1-2f1a3f57cfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cf9f4b-a3ac-446b-a5aa-4d0136308244",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff4249b-3a58-4460-86e1-a0579a239a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c94c89-fc3f-42f7-8443-209ec1271e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf557fbe-e56d-4446-8204-2dd9b3f46870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2e1f87-0645-4c02-9f47-8cf51f532814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b4c887-8e2b-4b23-80e3-31b398faa481",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54994e16-041b-41f8-88ee-6b77af46a025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36daeb7b-5c8b-457a-90bb-3a6aef7acc57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daff944-e3ad-486b-99f2-2af2e84ff187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2314cde3-a2fa-4b0b-87f9-562a7d6840c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e757607-6e82-4d8d-8ad3-c4b696d3d5a4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936e8dd7-a096-4a57-ad60-3884702c967f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7751afdd-a813-437d-9d4e-36d06e3e206f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3221ef-7945-4bea-86d7-af9f1affff4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3938eb0-b53d-4bb5-b7ee-5995a07a3d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a437edd0-10f3-4401-a122-baf0c6bcdab1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfbc78c-c935-46c6-b35e-ec713b7cff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86187bd5-d798-40ed-97f2-5719cdfa1b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726734bb-6a19-4382-8366-1049e1458703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98ad696d-8903-4605-81d9-a4c997634d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a134140d-f6c9-4b19-bf43-4b1f5dbb212e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b589165-8701-49ff-880e-b3e1cebea1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509a3d67-ad28-42ef-8216-98f178573e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379274f3-49b6-45b3-a7db-5acbdaa687ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da2d5e1-e994-47b8-ac3b-ead3d8026ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb16ede6-ef25-4d23-b1c8-a6f3488776ec",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b29d02-ed66-4d45-aafb-0ff7ae0cd51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51946a8b-c06f-47d2-b94f-c5e0bf42e346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a85d3e-67d6-44aa-a94d-5a250c00b214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a671cb4-7de7-45a3-a6a9-543368ae9c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d978ac15-17eb-4d93-bdd3-0ac5062a0925",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb386ddb-70d1-45e0-b32c-9eed0c7b38aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e546680d-bdf3-4b34-92e9-589e1d89ef4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5840e56c-fc09-45c8-acbc-7732dcf911d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6bdb53-cf89-49db-93b2-46315074c654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a0d8a6-4067-4d3e-b115-4d7933248a7a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef73e3d-2f78-475f-9853-2fbbae874d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d55659-a80d-4de0-853f-a91156cc19e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102ff06a-3118-4acf-a494-7e0871b606b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ccdace-3b5a-4ae4-a65f-39393e324605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d338e982-66d1-4aaf-aa67-0b2a9f12487c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6ac403-5258-4380-97ef-83518e58cc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026b644d-697f-4132-9560-a58d622516b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7576d5b1-fbc7-4503-8608-fc25297d7d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ca3b959-6ea9-4b10-ae44-6fafd6699a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d383046-fa4d-4325-9926-3252c79ca385",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cda27a8-b5b8-47c6-9d51-81d55a5ce485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6644b52c-88f9-4108-abe6-cbaa079a45a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38be9b75-0cbd-47ad-ad47-b69716247ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b02c26-0a9d-40f5-9ed8-1ab768ec8f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd3ccc0-4c28-40fa-aff5-bc09b5e1a2b2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726066ad-dfe9-4b09-a4ed-b519a0885179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2508776d-f68e-42a7-909c-55af85e952de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd92e22-d3e5-4bc7-bbce-7f7382fa0e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b981d5-5a3c-4cc9-a93d-24a2984a8870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49b280a-a42e-41db-8721-ec4b22bcfe85",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd40af80-48c9-45f0-aef0-c80eed3cc5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b3bd85-2e4d-4271-b16e-440609e78812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68522f98-69e8-4bda-8703-7da8ad8e7e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94649922-7972-4e74-b9a5-b0b6babb393b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fe29ff-6141-4bc6-9be9-829e77c63895",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4c1cfa-e9c2-43de-a5e9-d5c63d19212e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edf5c71-fbd0-414e-82ed-9145347061f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e286a8ce-4def-45af-80de-2be30622eda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b35d5a68-a0d7-428f-87e8-ca86a1d876e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5360576e-d5a0-465e-b030-5cc5c464883d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f73939-2cdf-4ed4-902b-74997b6cba9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687c7978-0fb2-43b2-bc3e-4b9dc3ae3e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b40eac4-ccd8-4971-82b5-1fda3c5f22c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0d169a-1deb-4ace-ad66-9a6a9e59acad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726d2ee7-6769-41fb-9b2e-5e95d2b826a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87775899-0c69-4998-ad4d-dbd8d574777e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7a59c1-6500-49ba-957a-3fb24a515b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0f5988-618f-4b89-b4ef-a16a0974e5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8943a418-b9f9-4426-b817-3aed9c45ec17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91a69f6-4dce-43aa-9992-61fe2b6af35c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499d5cd6-a9de-401d-a5c2-887ca51f8658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb7de13-b89e-4805-bd0b-85dad22d09cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ff784b-c914-44e5-9011-1f9a048e9ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d2011f-1c8b-4d3d-8e19-b446b834e501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9273c9fc-7c84-4e1b-b6c4-99cb5f89e130",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ab1846-6231-4413-b521-d52938b9b100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc8be56-2837-4ca4-addd-a1849c0b7e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94393909-e8c2-4495-b4d4-4392abfae599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b35ec3b9-f92a-42e0-bf3c-edd1867c0a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321bcebc-397c-4901-a5f5-2f2f29d06262",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0428dc0-2821-4819-ac78-c8714f315269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b48bd48-69f6-4bc2-96e4-ed8ab510693a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c798949-277a-4106-9e9c-1acc3b1d4cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be7cf2b7-0603-4625-8648-6c857b3155e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d9481e-8a9c-416c-922e-440d402ce14c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ec5a72-64a9-427d-accd-376ba41da92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f832d099-bbe0-456e-b56d-f22e0d12ba9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7d79d3-4612-4d30-bc80-0c627ac54275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a04b471-743b-4d60-a31b-db0a14ff2a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a59ec0b-cb35-4d3e-a9d2-bee082f763c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7fe50a-3514-4642-8ffe-057b8f2e63c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bb78fa-68a0-47ba-98b5-9cda5e969460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4beb79-8819-4928-bc0a-61848918da12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3848107-0dad-4f51-a25c-37ccd1f3e198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484725ba-2259-4491-bfd3-cf80130d9858",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1045f057-aaaf-48bd-ab4f-3e2774cc9051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb26ec3-b5b6-45d8-84d2-c690d3593f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece2ba30-37df-45fc-a178-db44747156d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "117ddc57-f4fd-4577-8092-3679eebd338d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1bd1e2-b88f-4376-938c-6b1a4eb4e8d0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e992825d-bf68-4d19-a9a9-862fb684173c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8209648b-fe42-4be9-876f-8ed6ce364db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a809e0a-8c1e-4ad9-a2eb-fa62933afa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4821db85-ed23-4b8f-ab63-d03e771e2b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c2b73b-f0f7-4290-9c37-ad5db04e2e42",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb55c01b-6119-443e-b096-4cce689ff4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8ff96f-5dcd-48da-90d4-bbafbe82079b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1156d218-bb21-4b01-9521-ea83448f2aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af740a8-f09c-4eb9-9118-9a2f50ab95f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9640f3cb-e132-4921-b8aa-28e5b96d3601",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78828ecb-460e-4c2d-b517-a764327e68c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad93cf9b-9dc0-4f8b-bee2-997971090205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1305d9e-309a-4298-8c79-b967fa0e7e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "411ccd8a-61f7-4ecb-b1d0-d27b6998c28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909cb6d2-3f61-4811-8f5d-ce9ff6ddaddb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41754326-6663-45aa-a8e9-e546afd7bbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297a766a-2b30-4e67-a3a7-fb7b1febaf85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5eecae-909d-4625-8b5a-50f70883756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b1b043-3440-4236-9400-8c19298ddd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215b0fa8-202b-4b41-bbdd-c61ee1d299dc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4532d5f-c663-4839-a035-d166cdc6b22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c06dd0-0a92-416a-88e5-c78020a7b520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e4a716-cbe7-419a-8523-361a688d07a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab3b875-c396-4bcf-bc83-83f681fa6990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e142bb2c-a243-4043-8522-a79960705fe6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cc5dfb-10f0-4543-a1be-77eb0563ad2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54569ccb-f526-4037-be0f-cba3b0ae91f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f85b3ff-9748-4d71-a4e5-5db2e62a37d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4556ca5-6031-4b48-b899-99d7650599ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5372a6f3-032a-43b0-99c4-0a8d5eb2e10b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7efde1-3a29-4e01-b43d-146c47ad1b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f80931-62f0-4955-96c5-cf08642a9cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d0107b-b4fa-4e05-91ae-880b957debf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9c9220-8ba4-49d5-a875-eae09baaf34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bf30b0-d4dc-4efb-a072-4903ba3a0029",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4494900b-9d87-4a98-94df-857fde5c2a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d4f915-c317-4067-85fd-435fd4c3fdf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ff0f72-757b-4b7e-81df-cbe323fa2f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab23bda6-4c15-4975-a0bf-28766da50a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd35a5c-afa4-4000-9d36-d93654757920",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115d974d-6291-4321-b590-552ae7be551d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0e2666-d28a-499d-adc1-2596c72c1818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f760725-d8b5-4b43-ade9-3f466defbcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a5e600-bb3a-479d-b83d-50ff8c07177e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87081570-dc26-48dc-bd4e-94b0e70b8d31",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748754d0-e24d-4b16-8836-bc898a90c1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef39ceb-0d93-4353-aadf-6e13473d0b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142d40c1-3f4c-4861-a87a-a87cb4ce975d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a93614b-5282-42b6-ba88-147cf17341c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af40797f-bf5d-47dd-88b9-e105ce5709bb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a47c95a-0d97-4a0b-8ec1-bb3fe91a6c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa98add0-047b-4807-af17-f06404a0d9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8842674-257d-4d75-bac8-b332a3abbbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca865b23-1418-4395-a40d-8656973e4d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fe706e-5864-4b56-9a31-3130b6cc9c4f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8231d430-36fd-43e9-a10a-3ff5d916a643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f968beff-2043-4b61-8122-1ba3eaa6302a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08bc5d4-689d-4f55-bbd2-57bd98ca7b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5caa648-a6d9-495e-aa26-45c193f217ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c139f4-06a4-4dc0-a653-fc9432062e16",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe97f42-267f-4113-b254-982a320b082e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ce7f17-eaa2-45e5-a5d8-8ee2aa96bbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebd8e95-81cd-4224-aeea-e9ee46668ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "139188f8-441c-4d22-9953-ce5557d461e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934018b4-2d72-4079-ab7a-4a438d22a55a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb81732-6238-4858-a83b-e15267e98eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ded4cfa-367d-4553-aa70-3d5acb35046c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad4816c-4ce8-4421-b4d5-1fc7fce50082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08418d32-e445-4f8f-adef-17b81f986af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d140f005-5287-49ec-982b-eddc8e2ff3c4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2218ff-f19b-4543-b768-95b46c6d211c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218d3290-428e-4cc4-99c1-5776251fd4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1dd5daa-e0c2-4a45-8c3b-93250595d450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8d261b-76a7-44a6-8ab7-e40069b45935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95aa7308-262c-4344-931f-a259cbe8e857",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0add33e2-6f5a-4125-b70f-ae4f8467effd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ead1313-8545-4560-be79-14d94bfe8a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6b1b91-bc7e-4ae3-a791-f2f1c95cbbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84951da4-13fd-4cf2-b3ed-5807efe34374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4153f47-e526-4b6c-9ddf-200b30a4c977",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c50c4db-3038-469c-b856-aa03c1036087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e8035b-5f5c-4009-92b7-2bf4dff17fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d72a207-ce12-405a-a2ec-1757f484ada3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0ca320-7256-4928-9a8b-38982b32203f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb16393-d429-4779-9dda-d75ce1fb84c1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca45be8-7f0c-4998-a2c3-60e3e249d555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab8325a-5a8c-49d3-be5b-fef44968512c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f810e5-4c5b-4ee0-8a62-6deeef2006bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22e4fe57-3034-4584-9c0b-f4d4d2cc2402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fff713-c4fa-4680-80e4-3f9163a17a9b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdec8a8-7bd0-444e-9049-5af373cbe4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d948b38-52fc-4ef1-9406-cf8268532e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7959b2c3-5943-412c-a406-161587d16a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "40c9d1d4-6a04-4629-909d-446f69e11371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e762a41-9cdb-4d04-9d98-c8725e22df36",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d58971-9c56-44fb-b418-64482af648d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf74a0d0-eb85-4b6e-839c-d1d31dc9ff3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b21868-8677-4f20-82b0-aebe95491b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58b2891f-b32e-487e-a717-20c5dd916ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73be36b-d083-42f6-9e47-54d18daef04a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe9c565-389f-4cc6-a529-d39491c6044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed4b802-90ec-45a4-bdd1-2dc2d8ac4ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e655565f-8a2a-4ebe-8bbe-cd28b7638852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6334e95-5c5b-4a54-a799-0c54322521f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9008232c-5f9f-4fe8-b7bc-cd33c4fbb1cb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5944e53d-d145-453a-a4f8-fa62cb8a638b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84580c05-b57f-4181-aeb0-9858bc8f6d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448158ec-75f3-4af5-a881-7191e486d579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7479521d-f328-4414-86b1-9c6a03f6f9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98326586-7d75-490e-b9fa-ba7d73336a9b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f867bd8-77e9-40a1-8327-89d6f13e0ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b966e98c-db28-4c60-8996-87d28915f603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcdcbe9-3766-4fe3-bb27-ab16ba36af56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b63fa37-f922-45fd-ac96-13fe602cbcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedcbd60-e426-449c-9364-c6660d8301f1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae4ceab-119d-4f50-a24b-aa84eb0fa71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61e7799-f1ce-40b5-8e06-f298b5ecb329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fa59f7-5f43-40bf-b97b-f56d942f8326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee88815-a4dc-4d65-9336-9844746c78c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82167a40-abe0-4242-8368-d355ca3b82c6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f008bfdc-7a7d-4343-b54f-70990c225ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0f1005-9034-42c4-b9b5-923a8200df26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae219c8e-7549-42c3-8083-aaeaa3332067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "981c0ee8-ca55-42f2-91f7-fa4db09e9a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd486d29-ac2a-403b-bb83-3e47f00d437b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfc12ce-b906-4eee-9fe9-9c8cfc7a463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ab4cad-8b1e-43f6-93b7-f584e25ab9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8979c5d4-3caa-46b9-95b1-267c426395f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "830f30ff-71c9-465c-a08d-f85fe009995c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568e60db-5ef8-44ba-906e-29a58073d555",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c67236-9b3f-4366-9ac7-41effcd6f9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4042dd-af04-4086-bad5-dcf00fdc5946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cee2e8a-22d4-4a50-aa81-ffb739342784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0205df8-2dcc-4c66-814b-a8b98dcd3e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9101c2-abc4-45ca-a3f5-03b246e2d707",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5d8351-3204-4607-9a21-0ab6578a8442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fc7772-ebb3-47ce-9e08-bbba78f058f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5656d3-5665-45de-826b-4783ee0c4df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0d229e-4c06-4375-abba-7bd358a82ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142b7d53-eeac-42a1-bfd1-51c8923b69ce",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae051457-885a-4600-b016-e8d511488430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd2ab83-8970-459c-9891-66749f33b4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2af4177-08c6-4536-b838-ab10b1e8e763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "846662ba-f876-495c-b692-52702fc1e901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d010b56-c87f-40dc-be4e-ee0582edaa80",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a184c941-6958-437a-a574-ce16eca3ae90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "62cbea0d-5453-4b54-a96b-5f5b08204a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a8bdab-eb38-4e33-a361-3bce35b578de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3780c327-6874-422b-81b4-3c95a35089f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6a30dcf-ca87-4707-9977-31bf391ea418",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5dde001e-e930-495e-a1cb-f8296f062ac2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7377c4-b540-406a-b969-f941dc09a096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "262e9554-89a6-4d19-8cbe-6b3714cbbb19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2cff4e-5196-42d8-9d85-76690489ab18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cfd9152-e79b-4baa-aa01-f0bbe21cbf62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bff1de3e-81ae-4d64-b362-e0234d0c360c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e88b07b9-c7e8-453b-a742-230eb5e2a641"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ca0e397-4076-44be-bc7c-c104230e9740",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64957cca-d51e-4ad0-8e95-0feb5acebfd3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "629aad13-3c0e-4ac9-af5d-08c72e5da74d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e742541d-b5cb-4953-a927-17798514f5be"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "507b21eb-17d4-469b-8e81-beb22ca9d721",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc16c218-be3e-4c6d-b244-04a906f29570"
                }
              }
            ]
          },
          {
            "id": "2c233d78-d737-4666-bbf4-985187723918",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5930b5e7-b04d-4b3a-b82b-cee44d8f9f24",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ad0fd205-bcd3-4066-9ad3-1ed8cc5967c0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e6a9e4-1def-4827-9432-3973d2d70eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f3d19873-e7b8-425c-80e0-aaf343c71dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5bd4d0-75f3-4a96-afcc-47f3b98f7098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe947683-7fbb-4fcf-9961-9ac9b19412c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04c4d50e-9582-4c42-8240-c8685f8dfce7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "936d7e6f-1a9b-4df5-85b5-a59dacaa2b69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bba9941c-926e-4e06-aa19-bed7e70a328b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "108eec62-abb6-42a3-b498-2b681b6a8413",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "677d5eac-f109-4030-9a3d-b83a0fddbcaf"
                    }
                  }
                ]
              },
              {
                "id": "b544f4e0-574a-4cb7-b7db-3a43c9da9d2f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f64520c-ace4-47f3-864c-569d77cd3924",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e49d495a-806a-4348-84c1-b103899fdcc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a5c84a7-1a1f-413e-a149-646314c20238",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "569d0b9c-5f78-4b2a-afc2-a246aea6e822"
                    }
                  }
                ]
              },
              {
                "id": "8469a7b7-3267-459c-99bb-23f27f972ea1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7584edf8-0c29-4799-b6e7-a91c9171fa44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fcee6054-b159-41a4-a14b-614fd377d6ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af03e8db-a5a5-4c0f-a0d3-146076bf9717",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e20afb29-38b7-4e34-85af-4fa6cb84f3b6"
                    }
                  }
                ]
              },
              {
                "id": "23592f5b-00aa-47ee-a68f-76c4bae39904",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d8f3cb4-6048-4066-9562-0f8630f72eaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c11acc8a-a852-45e1-b834-d2e0747178d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34f46fcf-8a9e-4828-8174-9dda977e831f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bd56d6e2-6da1-4f38-943c-08ba31b00903"
                    }
                  }
                ]
              },
              {
                "id": "4ed04287-9b5b-4b38-b674-5525a387f9da",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4c25ef8-ee0c-4f56-835e-0e194f3dfce9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3cf90bbb-3857-4fe9-bea8-72ebf38653b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "733ea21e-1460-4b61-8e60-b29341cfa0d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e0c4b7e4-2ab3-4ff4-abed-9eca63e61e72"
                    }
                  }
                ]
              },
              {
                "id": "2940b602-340e-4ae3-bb01-30b4ba40dba9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7a81be2-fe35-4282-8b6b-13b7df90986f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f260b27e-d43d-4da5-8e7f-60a82d476fa7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22c1b0de-2a49-46ce-8d17-fc3965113310",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb6fd452-1b5d-48e7-8f85-de081c636d59"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8157ef48-f9c9-4025-a993-b28ac8ef4bc2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35738958-a1eb-4164-9718-d99042121b3f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fc43d55a-4d4a-4f8e-8166-8c8e73f9a33b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63efbe70-1bf1-4d4d-b6fd-91152071d7cb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0781ec84-52c6-4578-8252-fd8c98021bd7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4eae1b14-cc62-4fe9-ae5f-41521d99376c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e06196c-d3b0-4522-bcb1-a24bf21f2459",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dba2a209-9f44-4fa6-85d9-37613b826c5e"
            }
          }
        ]
      },
      {
        "id": "56527572-d5a1-45cf-ab53-7b484b646f0d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7346dee1-61ce-48fb-bbe7-9576c69c7963",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb6770cc-20f7-4bdf-9017-608553dae6ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "939b6d38-5691-4006-829a-f168a48a9334",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba9a053-bddb-4dc9-8931-d9e2c8199095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a3cc9d-ba11-48a1-942c-db5759100a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f42948b-fcf9-4d5f-805c-4ad0c9097c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfca415-7d0c-428f-a48b-f84fc1f64b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6a5192-f806-4e1e-9ce7-e22ed3429a53",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d343ca01-739d-45ca-8f23-02078bb53603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0402d0-419a-4064-960d-8df51cd4eccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200b938a-c80f-4070-ac71-4f930bb9abf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce3340a-f850-49ff-9a89-e06247247b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b152e9-f2f1-45bd-8a26-7fd0b9282692",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd18c49-ae1b-4d54-b098-884045d89589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55aa4eb-c457-4c33-8081-e2377cf6a41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12ba02b-cce2-4dd0-ae95-4ad13670f28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4162339-0c89-43dc-b75b-6de8f5c02dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3625254-a1af-4e5c-a0e9-337af21ff51f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82dcdbb-4897-4cc0-9530-3ed6b3401a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a08d529-f36d-48b8-9c54-67daabe83d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156cab29-052f-4773-9a21-ac5c23a3239b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3ad9a8-68fd-4063-a0f7-6143e1e48adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3483d0-3d25-4f95-9e36-94e8dece5b5f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6ec0eb-2e7e-4adc-a3da-5dfb14e839a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646f9975-ad01-4f78-ab54-c05364b20884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ebc28a-4323-43a0-b8b9-96eb9da706ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc58e5f3-0ab4-4b21-8b68-777058f85ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2070bf54-c962-460d-a842-89d50714f4fc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea78a019-5a12-4532-b249-a5cec4552117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c265663e-d908-4584-8b4f-94ab22a60ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a3357a-8013-456e-9ce5-f0dde81c7408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a80accd2-efd2-47c5-8319-0ea555fbd70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3379d8-7e2e-4cf6-98a1-81f3d7548016",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8892174-dc5e-4830-9e8a-7ad925615c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed96ab4c-6c47-464c-a881-6c73df6318d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e48630-0485-4a82-a834-48167fcb5f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a93c1e9-1953-49d3-ab6d-82c70d39dc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0e996e-5979-4928-832c-66ad5f38d501",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654c0733-b8b6-43d9-9484-b041f8effc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b719aebc-5e6a-4c22-afa2-26bb729902d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c314d3d-2732-43e8-b8b0-09b2dcb3be11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f4cb4c-356e-45e7-8b1f-e2506efe373c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4902fb95-b753-4c0d-a33c-445d37fd7315",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c75e9a2-944d-4796-ba3c-f5032b808783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6f2271-f83a-4114-abdc-b56bd17bc14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36b2aa0-7fa8-44d8-8ea0-86e4651822cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3637a73a-2ea7-402c-a7ed-91b6f4df64d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99002c74-a13d-4756-887e-2d9deddc62eb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cc0a62-6697-4bfa-b769-3f08931be7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18833baf-ba50-4fad-91f1-0018373b4956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa90da3f-d11e-4086-ac5d-5037df665e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9e0785-2180-4ee6-a80e-45e61d66cb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff162b3-9f54-4875-b29a-735b74a5ee9f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19280878-687a-4a14-8a01-5a78f3249684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684f9240-214f-4363-93cd-b0e8107d4d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52724c2b-7400-48c7-b8e3-dc94db6ee7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf3e424-7282-432f-855f-0a32ab1eb009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8566d5-1d16-406c-b922-f9feb3bd0314",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4778e1da-59d9-4e71-9cc2-0490cc21f5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f8e99c-953d-4e6f-930c-a1ad6a3b92ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60bf2f4-2487-43be-9bc1-c725ab76d14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6783739a-e3db-4e5e-bd27-e3592b2cabed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af77265-b8da-4784-b25a-10d0c65f434d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c15c860-ae2d-43d4-8bea-ad8c06f1481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db368ff-217d-4988-9d72-21fb8e5f6eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f7f226-d19b-4a0c-a4fc-3b6586bbb859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcab47fd-88b3-4e5e-bb5d-77845ec6de75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9462f7-a595-4e32-8293-1203d98bbee0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470400cb-b149-4bc5-af13-86f708dc4d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc8d9a9-a65b-4690-9aaf-6e42b77484cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0f3fda-12f3-4108-8719-43b8c3843751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7491c19-f22b-412b-92a3-55fee2847318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2296222-1008-4e96-9850-ac01e98253c4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88df2111-1945-4eaf-bf62-3b83b8e33f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24781249-9813-4cad-b474-d0c4f742703a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f519482c-ef59-46d9-b5a4-b2cc8b8e23cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ee6a5d-10aa-498c-b9ed-7e14bee89fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cf34a2-e08e-42ae-8c4a-ed67651475b8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235133cc-b810-4d95-b0e3-e657813dc5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ff4b7e-c3cc-4649-8b2a-7d79e0fc0265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d30c3cf-6446-40fd-9e78-65ae437d2a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8cbd86-9749-443a-a1f5-e0251fc8e03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf9d018-d9d1-4ac3-af9f-e3348ecc1a2c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114c46d6-99ae-43b2-80dc-fd22cb8e872a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c2184f-5617-4866-98cf-adddd8521ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f35cf84-7763-4d67-a930-856b808e84ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef222a8-7808-4c16-90d4-2e26803460c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0040df26-0dc1-4815-bff8-133e203215e8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6c6069-eb4d-4623-b9db-1fc604aa6020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736b9c02-eec6-472e-a4bb-64b53a90774c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443d8b9c-d8c8-433f-992c-ee7caaac040c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3d5536-0de3-4764-a487-6345b9deac08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315fe5b3-6284-45f3-a7e4-ce58e80c1254",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29a9cae-068a-4628-ba98-3f0c90fc3a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb5a769-399f-4a64-965e-a5d2b107c21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9343541d-5865-4364-9889-2d3dfadcbcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "881b9d23-fd30-4363-bdda-6f2f9e82dc5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b12c130-25f4-4cc5-9f2a-d2d3ef0f2bb2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "462a3fe1-d756-49f8-8203-02d9e1f95761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baea639c-0e0e-431c-81c7-5ae1b4077485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ebfa74-3f17-4a6b-99e1-1332a850f608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbde04d6-a773-452b-9e0a-d43a17b9a15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92de2c6d-c53b-489f-8c1e-ef64cbbbb6d8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f03de65-2c72-482d-a754-39a8f63042d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238a3b6b-55e3-4e09-859d-e7e818f321ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6542687b-31b6-49b2-a7cd-4841642e0e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b50904-fa09-4cad-8054-90d58f1662a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee471e8-84e1-436b-b7b6-d086dcec2519",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68957ff3-47dc-4527-8ac5-680b7d8c7f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1adad2-f811-4557-a7da-6d2a4ad9f8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cc06ad-bc77-4cd5-a6f7-94ffb93ce0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5cea7a-f446-4362-a1b4-69c0b9527568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ad51ee-0008-44e4-8dad-0ee47ac3d040",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d8ad99-adb5-412b-ab44-e8ece6d46f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b6438d-63cf-4803-8ab4-d9148eda34d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e236a51b-10a0-4cbf-afc9-54488b41d15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c6eb8b-5396-4612-9497-cadbfae562db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797386e0-61e3-45fc-866c-fe1c979390dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc2be51-843b-4b77-86cf-2737fe351c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bba7099-98fc-4104-b9cb-2afa8e49aaff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be0eaa8-eb49-4317-89de-7f8fc63f8222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a97552-0059-4677-9a28-c75b23198e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf795a2b-6f0a-43aa-87af-7e970fb25232",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22226ac-6184-407e-8930-41f58a2df6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56739c19-7a30-4094-8fd8-c7274c51ebe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86a7a01-c562-4388-8242-13d0c15107f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6af712e-e2d5-45c7-8f00-34780eae0f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe06e30b-6e59-4f9a-a241-b8b952297c52",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9914804-a0b6-4acf-bc4b-8a156de73a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d224ca-a8b1-45e6-8de2-f0255e63cd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2f5424-a4b0-456b-9bb5-9857597ccc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae31470d-ee36-47c9-a819-951822ca3b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c455834d-4de2-49b8-a5aa-51bb8a683656",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fd9696-cc4f-461d-80e2-ea09e474d16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696c2304-aae7-4273-aec1-dd824255f235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaee836-08f7-4ef1-b821-d76706d4fb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11309715-f729-4cad-8e99-8009acdeec28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ace572f-ca4b-4045-9cde-e5ad78e7ed9f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4383b7-7926-4ba5-9c37-ec0c1f5b9928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74217bb1-d069-44c2-b7b0-7e6faffed93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f41d58-70e9-42e9-8d6f-e98bc02e4dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1c51b3-8ceb-4fd4-9010-8f9e8ad61cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12315378-3eaa-4596-ae22-f18f7525dada",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d59d80-af90-4c59-b104-6a35f9bbd2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c998cd-a024-4d57-99ea-3f48ccd1929f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4085a913-544b-4389-b7d8-c3d5260027db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dba5ee62-9b46-4b69-96c4-4f2501e8254b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e9fbf2-55dc-4a49-9df4-18841a28504f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c96e985-abfe-4677-acd7-98cd9d35efdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceadca69-c405-426f-9ebd-959df8fd9531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b26bc7-5b8a-4adb-a17a-ec155b31f9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bde48c-0f91-467a-b06a-7fac973b6d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f46793-de91-485b-afde-1634e0f15af9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b664f7a-e546-474c-ae0e-94483448a808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e6c6106-1ca6-4da9-94aa-c2916f3d1887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eafd83-11b3-466b-aa98-8d218102f7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ec36c1-ff51-49eb-bef5-384a27cac6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753aa429-61f2-42e3-abbd-a84180237403",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fac1cb-a840-4f42-9ca6-72401df683a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3792278-5cf0-44d6-8687-f17a173a5e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7d5ae7-b063-4b43-9a9b-4022a8038551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72970316-1173-4492-a27a-fedffe2f4dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0703af8-fb18-43e6-84d2-4c6ddba054c3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeacd26c-dfce-45a8-adf2-1be4c294107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4237a12c-047b-4ed1-aeaa-cc2a243bd669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666f29eb-4b89-43a6-a044-bc88b6280170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa8fcce-5779-46ae-8819-80ee8997080f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a457877-c5d4-450e-8fd5-c1c31176b05d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eb0a9d-ea31-43c6-ad93-5123fe045e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79540854-fb28-4dc8-8c99-8cddd792cff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4606dcd-9113-4737-87c2-71f5e2c873da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48791e6e-0ebb-46a9-acc2-7f740d8aa372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7317d5a5-3e6c-497e-9a7b-db921da78406",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508a4e8b-ad67-45b7-8e2f-c9c03ff7b05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619a0e74-f78e-4f8d-beef-33d1a7340da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8c0855-4aea-45dc-ac31-c1a2e8ecd802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01da0829-b244-4719-8259-29eed7b1835d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78175995-7adf-4816-a7f5-2794bf9a0cc2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e84cb0-74b2-4b6a-a7dc-7c49e2e2f08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b20ed7-e6f4-44f3-83b7-8daa55939cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4432d432-3806-4276-9997-2f1c90c0ac9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da10326-c1ae-4f91-ab51-c1a511dedf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beafd1e9-8899-4adc-aa4a-7e325cfb8328",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a501891b-da47-4fad-a47b-ad1be508e232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85eb7af9-25d0-4824-bf59-493ddafc6030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fba2e5-2cf6-4ee5-bf7e-cfd05b83d4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df2bca29-0662-4310-a111-12957316f221"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "57858dd8-27c8-4419-a1a3-663050d43135",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8d38478-7c6a-48d7-a226-42175283656b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe304d6d-c627-4077-b6d8-c822355bf718",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "164996cd-1bc5-41ab-a703-4b3fc524b5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d17808-66b0-41a2-a4d9-20742368a844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a54fad6-2636-45db-8d9a-1ea314d01a7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87054af8-1b09-4594-bc3a-756ff6db90e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "766ace5a-2338-4d5c-8fb6-59f198d129a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bedbec1-34d0-4ea8-8658-7350180d31bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d694e6b-2080-45f2-8559-1f293e75c8e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c6408bb-2d4d-4595-9a10-24ce0f1e2fa7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b29079a-aa9a-4913-9d32-2a1dd7316ffe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "283e8021-00ae-4df8-970a-b02e4f7ca604",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dec148b2-9bbd-4314-928a-638dddf9caef"
            }
          }
        ]
      },
      {
        "id": "dd59481e-69b5-41cd-9a0e-d45d6e85cb79",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3a86c96d-901a-4bdd-b7fa-212f0b6c28cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "034b7ff7-e6d8-407d-8ebe-a20343d05556",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7bc0766f-d0f7-47d6-9c08-0b5dac46080d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139ce718-3db6-4823-83dc-60f483f4263f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07e71eb-c6af-43d7-9e12-3ca5dbf83fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913e0c50-40e8-43bd-9cb5-d09c68fbe4d9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f483608-ae09-44aa-9d5f-0177fc181a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f05d56-6dc4-4dd1-acbb-d370846b0bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da9c29a-4821-4e4c-b952-4bd83c1537f0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce600392-687b-4f3a-bc64-1408a7696d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6533e0-6b42-4749-8af9-fcdf700e7544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50a2243-5cc0-4cef-990f-d8004150107a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456dce56-af64-44b3-983a-a9e0bc4b1349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7133c169-14a9-47a6-8cac-1a1c7b975a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a504f9b-ce16-42b6-b3de-fc92206d25ee",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85946929-4fa1-4253-a77e-5df3bb484ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41022ddc-dcd9-4743-a2ba-ee5855d73164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958699fc-cf32-4239-89ba-4357dd362d8e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0feac8-7a75-48d1-8767-d0d1efb49a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ba844e-d37a-43bd-821c-8163526875b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626553d7-1d9a-418e-acaa-66b8e6a710ce",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6de5ea1-2f62-400a-a379-a0acb15f7ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e78621-d613-4392-8cb6-9fdb0d07afcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44b7d19-ac14-4438-8434-3a0ed56c1cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532ca38f-9638-4fa0-86cc-5daab8009662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3938d192-bc58-43be-b303-adf04a718663",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d97293-8478-4fa1-b1f3-ed9340440d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9fb4c86-167e-4f71-8434-e2a373b537f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5201ee4a-b122-4061-988b-1068fe7db157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c091bbe-1dd3-44dd-bb6e-ba4b171c7fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d96a8d7-5729-472c-b659-d797c2cbc76c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ada95a4-5ef6-4ebe-989b-48eba86dd633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780cb76d-c924-49a5-b126-329d2d398b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae046c5c-b9d5-4a12-a038-1689e81854e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc4fa2b-7758-4171-9a0d-6dd09cd71f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33184e3-ef55-4b12-9c73-7889f6192c7d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b280b0f1-a6d1-4308-9073-31e262ec4f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "217969d2-16bc-410b-8d30-e34707146bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814e7681-4ee3-4e62-8b44-bfbfe5ba76d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88072020-d570-4af3-bf9f-278ee0e42aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669a46e2-6bb7-4638-84e1-0c8c0ec3cad9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979d8bb3-e9b5-4172-a69e-26032966fb2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d8ce94-4ce5-45fb-a8e0-af334ec57f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea533eb-2f1e-4ce2-87e7-0d82f84d991a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c4e0c0-cc16-4c64-bcb0-acb518de7f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e7b603-afa3-4255-a606-f81d34d402a9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e5875d-96ab-4441-9496-aa86c9828707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4d2d42-12f9-4264-945e-530f17427e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726fec41-b666-4d34-8559-c74d9f35f6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a59b7b-d541-4632-a7cd-8991f853ce92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3181867-b33f-4578-9926-77c6b6ad2f9e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a858ad1b-e420-4c84-82b4-f1b44077d788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "167c4475-d754-45fd-ba92-aa898bceedcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91cebc6-d06d-4f4f-935d-0247b2c2faf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337f8936-da7a-4d7d-8b9f-16c9d188c8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9925d06e-a8dc-4d2c-934d-0fe5d49e9196",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feb6814-9c79-4e77-989b-6b473e519ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c62c2a4-c486-4a92-bf44-f60f434291a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cecdccc-3c27-4ef1-9f2a-f3b83f886942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a86a7df-ee28-484a-878f-99f4aed1d8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257d28bb-4623-471e-b1c7-da83f833b4ca",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b8c1f3-063e-4fae-b549-e083c07a4b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43ae0447-47a8-4216-824b-28bb4dee61d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf4b7c9-f89b-443a-8dcd-5c06641a3470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab65b543-6e12-4084-9c8e-6c582f6180ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f67e93-d75c-48df-bb2e-74cf1b8d905c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5152bef6-507f-4d2b-952e-8084127f33a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "145e53eb-2558-4238-bb46-7f295b27fe5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739d989e-980b-487c-8300-3f31c2cb8485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3a2204-7ade-4eca-96a3-8d8f8e27e77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6ac0e6-505a-42b3-92e7-114c767b8c02",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7220fd4d-ca5b-4c99-b68d-5f9c39d475d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd96355-2d8e-4b6f-90f2-47970597a655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "256efc78-c285-4e3c-beb0-1bc2f9c80797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e91871d-b362-4ebf-9cd2-7eb4e2bae22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e253caf9-a7f6-4677-8dcf-aed1bcab7a85",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cea81e-27b6-4757-97b4-75d2239dce16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4a70d7-944a-41eb-91f1-070a0c930a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26c4f35-f5f2-43e2-a120-5cb3c05ee509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c4678d-03f9-4a97-82b8-6e9753e40823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f47a36d-2dde-4ab3-b0ca-b4025730f93d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d17d40a-fe9e-43ce-9d39-5c4bf98199dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5db72b-cbc3-4e1d-a9d9-2870e4c8d89a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c9e63c-a21f-4fe5-985c-180d6989a10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c63a5b-5a70-436d-a668-13ce57076601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb69a758-462b-4141-b0b1-2e696adb31ff",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5157d00-9c42-4e4b-8438-5e59140a8149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b243a7d4-1819-438a-a087-008c0a27febc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "934420d6-181a-43e8-9623-84b672028cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f33c66-cc4b-4b41-bd6d-e3666542e22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee42bb6d-5f2c-42a3-9472-e4bfec4e8fed",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d91f701-a0f0-41a8-b7ec-70203584c1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5ba320-01b4-42bd-9903-7f890ea1431a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25e3d3f-667e-4cb9-bf9d-1d7706f4e180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b18da3-c176-4ba2-9b87-6d8d2179c283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46ad238-5736-4335-9cbd-f2d0afa829e8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59b43c1-ed37-4781-a7b0-a04f1a394018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88a2fdd-e242-4831-9256-ff2852cc5851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45498fda-8cb7-4825-a354-17564e001c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f027a6e-d94f-4af2-b324-df8f7b929c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369840ca-5304-4abc-ae71-0b52440b42b7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c1b8de-b38b-462d-a444-4c17230f72d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c74e90d-ac4e-49b3-8f47-d0eabc3efbb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71944df-1b7e-4b13-a5ba-2daf0aa38642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0554022f-9211-412c-af77-744b9beea471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de5ef05-b65b-47fc-b15b-12aae49830fa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280e3bc9-6092-46a9-97d0-2af0fb04b3a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5308668c-367f-4e78-b77d-313ef4995604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e221228-a071-4321-b180-84ef72118bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33378c12-38f5-4085-9913-082cb70b7ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7533bf8b-363b-4fb6-8045-a61a31bed4e6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b5e25f-1231-470b-9594-090e753f781d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08165d80-f529-4a60-945d-e7b1a5ea53fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b173ea54-a065-4035-b2a4-eb20ec20067b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9001d8b8-fc67-49a2-98b6-1d44d6c38390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bae7c38-b25f-4b5d-b5cc-5f983b91dddc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9a3649-3d40-41d0-a138-d995af0bedaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db6093bb-ded0-48b3-b953-1df41c3b3249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51f37df-2a9e-411f-a5e9-f468d4cd2caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530478af-5e11-44f9-9e76-5e80a0ecf83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c055e97-6f83-4a41-925b-57d33c55d698",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48163e36-984c-4299-90d6-1b8488a703e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dca1590-651b-4f75-8f79-336716b81888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfc19b9-a14c-4ef6-8617-bc089396e27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1e7949-6253-4767-a2bd-606c96d48bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1381dca-de61-478a-85a7-949d8db5a09b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2462c4ac-ad58-4bf3-b611-0f5b978f4c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970ad6c7-f3f1-449a-8245-b2753c695a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c59a29-e873-4ca2-b8b9-5875d1e22b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91819117-8413-475e-b258-339b78a8e739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569521bc-439a-4d67-8e5b-d923d810b775",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f5f98c-99e8-4814-8d18-fa5955480fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0326e0d1-ed13-4565-8c48-2b395f9457f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c920ed3-37cd-456d-a28d-fa4d27b1e9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a4ab51-f57f-41eb-8f99-4bb7d1b42a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c7e9c2-40db-4fb4-afff-9a275d4810c3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f170064-a48c-4b60-9430-7a1c099092af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1f49bbc-02af-415a-8699-ace5c5e0baf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd8b2cb-a72b-4b19-ac06-3c1319c1683b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3dd3b99-37ce-4a60-b35e-cb60f8fee9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a943095-d598-413f-b37e-fb871cb66ccb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f2ce6a1-33ba-42c0-95d2-b0ba4fbd6d1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70636494-e10a-41a1-9e8a-5be20cec16d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6640d966-ac55-4140-9172-f9dba1037c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a341f74c-9779-4560-9d5d-5c3a3b6ebafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018ea123-7622-47eb-958b-5afd527423ca",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3687a195-859a-48d3-bf13-afd8f9f8566d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "553f4c3e-8e26-4416-abb6-ec2f15a29a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1865540a-9c8a-45ab-b392-0c34cbba3acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fa3e6d-a376-4420-8f45-3f3f79bc01d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcce411b-c526-4a77-bd6c-35e0703ab403",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb21f948-5d90-4b4f-a0f8-1d57adcccfc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f1620a-df77-4afd-8cbf-7e0e0be1115d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0709ec54-d696-432f-a2b1-15ffee6b1e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a35c68-4977-4670-8c01-dca88b6460ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e37e8a-ba67-40ec-8ff7-02936603ed5b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619ce6d7-9899-429c-a61f-bd5a600ccc9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fdb654c-3b0e-4b36-9bf9-5194de101342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8111ac7b-0898-4fd6-b73e-810fdde2827b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98af85fd-ce5d-4fd4-bdde-1ecb700ebb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51fffcb-ae14-4f54-bb48-8b6fe61a6ea8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b4d9e1-b654-4dff-ab42-91b345623f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d603bc2-7ebd-4068-999e-fc5a9b79f57f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c371c91a-e374-466e-9d98-629df3a6b693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcdbe48-a3de-447e-b85e-0b90c8a0b089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0872a47a-8f93-4e5a-a540-c23756a85467",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23a0a2e-6214-4ba5-9d66-d3573c71bf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95849e13-bfb1-4459-9081-dabf68073bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd3f1e0-6cca-4f8a-be37-1b555bbbe09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd753a68-4bce-4d34-83e2-66b03c1cebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ec4b64-9488-4835-bfcf-0b5b048df4d4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c649a15f-6ec0-49c1-9532-3ef009498437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3771ab9-fcaa-444f-8baa-0e15776da6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c62291-9621-41d5-9114-f7c2cffb38af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68b867c-e22f-41ef-b390-79470adc0145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7a403f-4b59-4038-94cb-212727701689",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4993520-71e7-47d7-9a02-61e9cdb72b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5d1928-140e-412d-bacd-00a61d637402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c99ac3-79f9-441c-a13a-2385d18e1a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90ef60b-80a0-4892-a7b6-ecd49b244a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82155f79-612d-4aba-8896-02d6df416c3e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8734b114-a31b-4c63-9d33-0da8686d823e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388ff6d9-76ca-4c70-80ea-3591c359ebb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a8296e-7783-4ff0-b704-366a3ad61a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cc458d-969f-4993-979b-f14cc9e578c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1a3de4-cbd5-46f7-8acc-f09e2eb8b253",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4844d9-2781-4c27-a9d7-3518cce16c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4463635-f51b-48ba-9564-ff7f086c3cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5ad89d-ed4e-4e69-a5d4-b1b41d82184f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa43e13-189d-42b0-b312-b2f27e52d34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b87eae-dc0d-4610-b09c-cfe235b1cce1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b7f154-e6fa-4ee6-a956-93e8fc36b0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7d2967-b3c7-40ec-8d3a-956bf96bb8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879d55b2-0f94-45b3-98d7-5ab1065cde22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18940530-3864-40a4-87d1-bcb5ffeeb81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5713c160-1460-4842-8450-37137711069b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3f29f1-b68c-450c-ba89-3ea85fe90971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84d1fe0-5ef9-44cc-9470-a7be158a36cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22ab9b9-592b-46f4-96e2-5251b094a6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c41976-6e9b-4843-b790-87192c800c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03b99d6-449b-43f1-b762-81758fa02a4e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709f92b3-2b22-4ca1-b72f-60988022f927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cb3263-f0b9-451f-82ed-27c669c083ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec12845-f7f8-40ac-9e92-456de61b6a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8d8333-b1fa-4550-8d41-738e77ef6a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69688b98-bb50-462b-af0d-76da453da93d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2f11c6-197a-49f4-ac48-4a33df001b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a395f5b-4e6b-4b63-ae20-14b8b9964c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac14532-809d-4449-9442-2a348f4d09eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f3c3a0-1c82-4950-a57e-a2f7320ab6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd993f3-aa66-40bb-99ea-381a3bf91b0b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8507af76-da1b-420d-a0a0-5af65ad8c5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa0e84e-e43c-45e0-ae21-9d1025de38bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43941259-d231-4488-832b-a09a8b01151c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486283a9-6035-4a3b-88f0-46f23cceeb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a764c856-8b3c-48ae-932a-ae176ffe0a30",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5dd195-04a0-42c2-ad15-c05f5e15b37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7a7a2c-7fc3-42ef-b5cd-9456d8a0a57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed093514-21f7-4feb-bdfe-322b8fac3acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ff8379-745b-423e-996d-30c95c578ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831f07e4-1bb7-4132-b9f8-9d8c3371717a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce77fda-dec0-42c2-be84-6db1232adbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185ceaee-cbbb-407f-8f65-07d82fd81bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed763fb-9bbe-4383-a9cb-bae7b51371bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495aa20e-f3d9-4288-836f-3b48c0107f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8112461-df7d-4a57-adb4-8a39d9d88d53",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa419c9-7186-4ee0-a275-0c31c8d7ecb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54185946-5d4b-4468-9bc3-11e11b19e819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077ae4c8-7576-46eb-9eb7-79ae404e44c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf8d643-b2e7-410f-a0e9-ba1792aa2823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b19a141-cb83-4d13-b182-f16f28f1edc2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817c8a89-5392-49ff-babf-422912722d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4811023-1795-4c21-8398-081072108c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3fb04d-fd5c-4525-a415-58626f46bf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36226efe-c802-4b34-adab-d25c8d86ec96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c61ace-1abf-403e-a2b0-0e0831862a90",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452b2ef1-91a8-4cd9-834e-55d1e4a8e638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c4971d-e1e5-4f47-9a00-2993268c8c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c480a97-dbfc-4cce-b64d-c009f92bb460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b923ca1d-9515-4024-b7f1-cdba1c9abe10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e50eeca-0d48-44ca-9efa-c1fab724b4a1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a8ea88-7ed1-4e24-8363-920072285749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507ad2f7-58c5-4d66-bed9-9c1cea81c0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b8a874-6017-480e-9e4e-9b42dbacf8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8355616-7e18-4f50-aca5-ecc8028f35ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd977a3-318f-4237-903b-2c653eed1446",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f643058-9574-4772-b64c-6a20f17d37f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc262a1-2e6a-4d4e-99ea-8258e78f41ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8549900-3dbc-40a9-8113-1c99385af11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fb2753-19dc-4ddc-9170-7bd63fbe06ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f09ae60-bff0-4593-941e-c4f040c26c37",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94e831c-e620-4747-ae3e-95680fe25355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cf47ba-8f83-4bef-a776-5d463c46c945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d1dd45-24b5-4374-80ba-ccc71c547dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31da7db9-f577-4703-a8b6-19e2e523225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c73f587-6527-4110-a729-800266bffb34",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43130b0e-39a4-4006-9354-51ad24f211e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb4f11e-0571-4b14-b849-e82e8aeaf675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26286d9b-5ae6-4cee-9cca-632072efdf9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0184421c-5111-4a92-950b-886e5550db98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ad6166-3d1b-4d9a-ab49-82bd51165a18",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ea1f0d-0c9c-4da7-8208-232f74986fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f928f9-0103-404e-af99-78c03b5a9bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d23a26-b3c3-470d-b908-044b5ad5e339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ba8082-fdd7-4fc7-87f2-cbc244a8916e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d61dc4e-f10f-485c-b42c-3358292ff941",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2977a644-e12f-4d16-9326-507fa37466fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d55464-11d5-4313-8d09-44abb3f118d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8c0854-a354-4f12-85c7-e9b5ef5a7378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4375ab3b-5061-4b35-bb98-6740d270acb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad8b968-b034-4395-9b8b-9d47fbae54c5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f512c7b-188b-40fb-9642-62c736465c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0141d7e5-5e51-4dd1-b949-acdaa51a3b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0680778f-6564-4773-9c49-0cb418e3814a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adeee235-d27c-444a-98cb-1be45a723c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68476e9f-2574-4535-93ad-e4277303d5bd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f0721e-5a8c-4083-805a-42c74adccbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bc7116-ae55-4f5e-a5d1-932a7955e4be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6564bf-297a-4a09-946f-ae6e16befd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeffb9cf-89b1-4492-82bf-0e3ffc040acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db71b8a-30d6-48ba-9ab3-296e7efbb420",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3e2627-3a79-4c9b-9ddf-411d7758650e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e820e075-5a20-447e-ae9d-3663f6e452ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe83fda7-79bc-4038-bd0e-1e0f908f6093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6741f99-186c-429e-94ae-2a773d67c669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c550a8-00e2-4b82-83c9-322d571f8ce4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5a13ef-761d-4d7c-929e-04da3fed262d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144b4dad-509b-425f-aae8-ca17ef2f6eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1556c293-b34a-4dd5-bee3-ad0f8026a48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c39e4a-3422-4874-bbdc-2f79e01f7906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6465c98d-b718-4162-8fdd-f892524db414",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20e8afe-5d65-4980-8f24-e8a830e94b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0f2bff-0cdd-45d6-882c-503d6be84ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80d80f3-e9d6-49f2-b9d6-dbfda0482e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4544a391-d794-4cc5-9f75-b74e7d6d4de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6457be3-65dd-4eab-ab50-921808bfc108",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333b6dea-c65c-436c-b3a5-f8dd34d3ba21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0131aab5-157a-439f-9324-f0160763e37f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a1978a-3d07-487c-9868-3cda228ff42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeec0ec-8b2a-4458-bc24-6f65c8bfa054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b96088-cfcc-42b6-930d-3a944682715b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad083ee-8768-477a-bdfb-4ca938fdaafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee858f85-c965-4502-88a4-2211c4ccebfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc1513a-75fd-4a67-88b2-1a014d39bbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c9b130-fe9c-46a9-86a2-73f09fb93556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d140fb0-390e-438e-915d-0174a2f73e32",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf395904-7503-4773-b363-68a7fa96c356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b923acbf-1fc4-4a7c-b8f2-c47f88db0d85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bce040-fdba-4190-9254-15fd262acdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a46342-e107-44e2-a2f7-b3489d12cd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7453b758-4668-4b2c-b64d-6ca71cde687b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952cbdc0-61f9-419b-ad85-367865c76c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe2eb1b-fa17-4b92-901c-546db47cc8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d0eab7-033d-46bf-989b-097db249d7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdaaa9a0-542a-4502-a2d8-1f179d1e4d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b41584d-dcb4-4a5a-a819-ef7448a622f2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c9a598-accc-4f89-9ddc-cf1dc5325ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d1eb1b-04b3-4043-9f1c-fd86b21a7d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e1351f-06f8-425e-a322-b981fe44f5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43b6973-ef3c-45a5-b06b-b0bc666b5a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3409306-5507-415a-8aa7-c222e9dfd7a0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939c562a-b8c6-4ffa-846a-a02412f57147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4f6bd0f-d2b0-453d-9b52-158e56848189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9488cc9e-0b1e-4a6f-b4be-24fc7121be6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29da878e-328d-48cb-865d-acbd60be961c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c3ee96-71a2-4475-acbd-44efe60f7f2a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af2885b-7da4-4d5a-b568-b6cba1eb505a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e01c25-21b8-4f6e-bf41-7e7b0af861f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa673a5d-d6f6-4a49-bd90-ba7f1c96370f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c87e1f-a374-4142-918b-75e3cb65e15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed2c85f-74be-4ae8-b925-73ef892c07dc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc39971-8bef-40bc-afff-6e319f24df8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0b700f0-b7c6-4769-9dab-bb547c1b679e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cd7969-48d4-4852-8b79-0d256eee11e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82614136-d8d3-4653-91ec-a39466ee6acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a4ae72-feb8-4986-b29b-212fe306d39b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f0497a-3df9-44f0-87a9-c3aa5edc620c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a481d2-3338-476a-83ec-cf5c50e9c98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5942cd-17fe-45c0-9e31-923bf5e4688b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57f1611-c84f-49ad-8a78-5e0741c369c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1946fc-a4a5-4332-9429-8b176a7cc18c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee02c7f4-6eb9-40e3-bdc2-dad64f25a37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3ca72ba-4f71-4f32-850d-fb6d32e8434c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021ec542-b90b-4194-afa3-16a93fbfbf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b572711e-446b-4e0b-8f67-7f7a32e0cd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb81e2c-248d-4791-9f37-1a9e8f739f2f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860e4f82-4ead-4310-9d60-388776d318a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e420ce61-d979-419e-ba12-e88c97a2b867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31c06a0-9726-4c2b-b1b6-f3cc9d105eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e784ccd-98a0-4044-96f5-6b2db061d5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48cb031-1f55-4d04-96ab-4c472f38a2a7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c250614b-c233-4aea-b7ea-5eec8f68a5f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bee43c7-7872-4d0c-a53b-0ad39eabee86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcc3e00-0ab9-4f81-bb26-d3ed682dcdac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88868018-5a4f-46c3-9cbc-155c12eea85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6c8491-dd14-4370-bde9-ae4c102a4983",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1274fc-9c49-4217-bf7c-6da16bb66351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb039a9f-4a6d-4885-875b-8e09025833f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a28e2f-ceb2-4cf4-807b-8216563b23c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312bb144-570f-41f2-a39b-a7f27b3597d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f187667d-d7d2-4cbd-9749-38d43e5a3bb1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929770d8-e0bf-4e12-b8d1-901a4b5f2e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01361ed9-85ea-4196-a394-f5a6e473413f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f370cb-deee-4937-82cb-e780e4564a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1658ef21-5b77-48c8-9210-42d9216b1627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f9a680-1ea3-46b7-b7d7-64c063d6f185",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9597fd7d-2fef-4530-96be-78e2a9fd2969",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a65a45-0414-49b7-bea2-a1be516b3fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a8d7db-1213-47dc-bd25-95028ad494c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8a2d5e-dc66-40a8-8437-a40be2ad6aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953026cb-85c6-4a9c-9f70-792c14a9502d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83607791-172f-4beb-8c78-b7009b6c47bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e124d87-d915-4725-961b-d553549731cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a6afec-5ad2-4f43-9fbf-ac6e58629369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c953f2-bcfc-4cde-b57f-34d707007692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43df7eb9-5e21-4be7-93f6-67005e657d16",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358c3805-7c07-47c9-a1ea-f0b21f29b8d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c326e7-ea2e-4485-8752-071ffea76994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a04694-99b2-496f-879d-c956688ccaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11150ac4-c3bd-40ce-9abb-af7ccca451c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01abc434-429b-441b-b4ef-4784b5022546",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2066dd0c-5295-4727-86fa-056a9a4c7043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b50fa7d0-a863-4bdd-8454-8675aadae93c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c00bff-da38-4266-ae6f-5e0f5e50ae82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed80e6e-e40d-425e-b9ea-65cb27a26d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c166c1-bff1-48ab-a288-6c50a83db105",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233b1605-78f3-4c4b-aee8-623daa0a0953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ae0fcc-c633-4a03-9ae6-f94a59303a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a49c9f-6f93-4ae6-841a-8f1385baa513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de9cf8d-55bc-4af1-bd2e-f6121fc17e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cf1fc2-deed-4512-afc1-ed066c4cfbc7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db9a387-5407-47c4-b695-354e8c5412d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17c9c81f-4639-4d45-ae3e-2f3ccdb58c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd78d4fe-1c46-431f-b12a-cebecde18245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d94b28-6b4d-4175-b8fa-1eb57577f9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8a4f6c-b106-4ac8-a592-b0538105fcb3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e2a2f7-5db5-4fe1-9066-33b1d8ddd5dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dcf967c-c193-4ca1-a70f-a7612eabc360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce02aa91-134d-4e73-8e05-1ab841b88906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dd4ea2-bbbd-421e-ba1d-3ec7bea73709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae393ff6-e82c-4b0b-a710-b5484fcce639",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8789381d-9f37-45b0-a8c4-21d5d56e9d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c13af71c-0440-4b6b-96bd-aac1342fd112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dbe68c-7813-42da-8961-33e5307b50fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81926cc1-40e4-4236-87d1-0b7d1e0784eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47ffbe7-9aaf-4be4-8fd8-a15d9d55e395",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37553a5-ee68-495c-8dea-130feca68aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ffa9266-f29b-4c01-b510-b14deda2c4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaf6f7d-f77c-4ff1-b119-212a69e7c9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05ec40d-9012-4358-b39d-ef3d74e50ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67208989-455d-45a7-bf51-6e763cefcabe",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d18181-8caf-4815-b07b-c27552542749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13cd573f-5beb-43d0-b547-0ee85f9f06c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4876209b-9cca-4b22-bce9-893b47184f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a1ec7b-422f-4523-b8b4-717a3daa0008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09726b5-61f3-40a4-b079-0d83d755b511",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5150a5-04aa-405a-a508-7596340e3b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8717b81-f857-4a3d-8d58-af55b38a0347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0c7ea9-d03f-4ed5-9a9d-6ef48909ce54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7fb945-6d9c-4cfb-ae3d-06078a29d2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba37107c-e293-4da3-8ad2-65755f836ba9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45701c16-1a8a-450f-b653-2324833541fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ba22f1-d62e-4f68-a3cd-009b6a46ec75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc43d51f-b335-4c59-b62b-b258ca86bd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b83156-2a33-4838-9944-d44129280f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5ec125-5c51-48fc-8369-39b24ce2bb99",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e5c462-a81b-47b4-89cd-c713388a06f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ec6c4b-2ed0-4483-920a-9e32abefcf6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b95503-5176-41f7-b9b2-ab686e1a03e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55638c2f-844e-4299-bf3c-20465ee84a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5f845c-2167-4914-ac8d-3b03e555b432",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e957121b-fa08-4bd4-a251-087f8ff1830a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95315a0c-567a-484f-baba-ceb8eea86d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8973d3d0-2164-4fd2-8dbb-36e3ee2e475d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e81a90-67fb-4585-a084-78374a7adf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069fda96-8cc3-4e8b-b4ab-5ddf07c7b8df",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27a9c4a-bdcd-4104-9bda-3420d0490039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "805fd48c-2651-4cc0-82a4-abf7fcc57bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6f4b82-a550-4d44-afbc-c6daf01cd672",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14623eee-eed7-440b-8e2c-bec95ab2cd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d77f8d-e3f0-4653-b22c-b5a4047524d5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f763a9-819c-4a74-8de8-d90ad01d037a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "699dfe0d-d18a-426a-8d62-879427c7dfd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31865d44-b5c9-4728-8986-3243c601e480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da18a03c-0447-40c3-8063-e411eba28100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbb7f48-48ed-4553-a134-5e24cbf9ecb0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a828dd47-6cbc-4c80-abe5-c7a91c422256",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93d7fcb-136d-48a2-88a9-6d497a72e0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4bf743-9384-4e2b-848f-8004fa895054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea27a6a-a09b-4c16-b254-da63fc5a8086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09eccaf-5757-46fd-9a2b-c36f491a5a1e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1fb674-c684-4ae4-ab56-9ca1012e18a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b918946c-3c7d-4423-8dd4-31bb2a6721b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28499e2-935e-44df-809d-93f05bafd06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d618bbf6-2af1-4ee0-bfae-df4ab55e0223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf0ae36-d5de-4952-8319-885b81a3017d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a10e0ee-ee7c-4233-b3de-c3428485e760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d7ca59-570b-4dc1-afc7-906aa1734bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3275aa-3f76-4a12-8a40-23d50768cb08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04a0db2-a606-4447-8a44-3a5b05d3d1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09070bb-1c7c-433c-952f-3fecf5cd5302",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac228efb-1df9-41e3-8712-c7cfd971339b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ca6ff2-f0fa-448a-9eef-981f8e61d1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5aa21f-1c14-47ee-a227-561d75ec9675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7a4a36-2d3c-4d9d-b74f-185465eeb745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d7e690-4373-463a-95d1-4233aa59bbf2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680e9694-9f78-4da7-a1a7-b93e7f92a9d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e5770b0-199a-421e-bac0-40e77512fbf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862f4a65-8e7a-41dc-91a1-0aefc7ebc138",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3276fa35-b680-4a7b-8b5e-08139dbe3244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fadec6c-c2ff-4c71-b49b-d2f169f33366",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d12c28-966e-4db1-923f-b42a190b5ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41750fa4-6af7-458d-8cc5-98499e5789a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "750c0e70-e00c-4a90-b6b8-f48196ccfabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86bbd11e-16a4-49c4-ae56-6223115336b6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5f208d3-bbef-4063-a396-f528aef495f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff662002-d00b-41e9-959a-4eecabdb028d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66e61f74-d9b4-4537-b850-4f2a48fbd6b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c99b42a-575b-46a1-b671-069e3f156270"
                    }
                  }
                ]
              },
              {
                "id": "f7375c8d-5693-4876-bd5e-03bdd8a35ec0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8951ac6f-80e0-4953-8b4f-911314be8421",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efad2f81-2c4e-4d50-97d1-922033a559ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "422c309a-0dca-498e-95d0-eb60b633e776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0b9ac8-ed14-4fba-9bcc-632a68a65c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc85a25b-7302-4670-89af-d9e41c3dcc62"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4215ba38-ed07-4be9-bd16-a864e57ec5ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6412358e-83d9-4469-9af5-8ea36a384da1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d713c93-a3b9-4c26-b48e-7622ea0e1425",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "761c8354-2dcf-469f-92b5-722c96fa8401"
                    }
                  }
                ]
              },
              {
                "id": "cec0eb78-923c-479c-bf8f-7c20a2eac790",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "54d0ab65-255d-4d8f-aafa-67b8fcdbc2a3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dd68dc-4bd7-49bf-9255-8a86a70ad71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a2a39938-1da7-43d9-8075-719740d56930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e28101-7e7c-4cb9-be54-fc7120cb385e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03040bb-52dd-43d0-b065-7dff20167680"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "04710fd7-d4da-4216-b363-6a652c071449",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c4ff087-48b8-4b35-8001-7e03567613f2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eab5cb1f-72f3-4694-9132-10074aa241ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d69d6b01-a728-4eda-97d7-5b3caf29db3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8ffd878-e670-44bb-8ea3-8ad42707f497",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa32c084-54cd-48ba-b691-21d909d5b2ec"
                    }
                  }
                ]
              },
              {
                "id": "6607b306-ede2-407e-809e-9186d2644cf3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4174151a-face-4016-870d-9452a0d38cc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a3ca9c94-cfd7-4f45-8df3-3a0fc420e416"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1db9d66-5572-4fae-a4b8-44eb4ed2e348",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ed36286-0a3f-4fab-a3b2-6751f1ee68b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "434217d4-f506-435a-93d0-12fe232e0d40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1a17c70b-258c-4fe3-96df-aeab509e8cff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a390f5d-d4dc-4aa2-961f-562265c57373",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5294f740-dd73-449d-8a7e-03eebac19095"
            }
          }
        ]
      },
      {
        "id": "e04f5772-3a4c-4cf3-b33a-e30948c1eead",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1fc6557f-6c4a-425c-9dce-ac75684f4dc8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f1a3531d-8ce2-4096-8810-dbc8e816ab7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a82f0c0-4278-4202-a8d4-bc393940638e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b7b7e0-ff8c-4c3f-9ce0-e532cd2a7b09",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "44104e71-96fc-43ab-a557-a22707266e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2a3bec-d91f-4d4a-a9eb-48d92351154f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "299a1ec6-5a7b-42ab-b655-45e8dd9960b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ee8d289-ccc4-4dd5-9bd1-57da72302d2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91414c76-6c06-4aa6-a9a9-ba1699e44588"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "973b7782-b199-4d82-948c-23187588d73e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4580c259-9b63-49d1-bb43-b7bad52b0b48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f19bc5e-49b0-4365-86ab-43a19aec0624",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "947d4f82-e36f-45fb-95de-4409f4e40ee7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35f10b38-0390-495b-9262-1e928ca1aba0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "095f860a-2c5d-458b-ba2d-6610856683cf"
            }
          }
        ]
      },
      {
        "id": "7c11b591-cd60-4b6f-be88-ace6c00ea693",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a2201ef9-3806-4220-bff1-9e737e98ce17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8502d757-6179-4db4-b1c0-2850f30046c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a38a83dd-168a-404a-adea-66291a3a6f47",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b465e9a-e810-4ce4-b696-1464783d3605",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecfa1584-866a-4265-a4b7-965b0b633f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76edfad-612a-471d-a5c1-5d7fb23f06fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6371e05-8177-490d-ab18-31e6bbf095ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3397cb36-fd9c-47f0-b720-60f4b3250878",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6a4195d-c042-429b-9a00-406af9fdef3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be7a7b66-366f-4223-ab3f-800735a4fb42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63df4c65-5147-4e8d-adfd-14b219b4802a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bc83192-f6e8-4e3c-b9fc-0e3af606efa5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d44bdb9a-274c-43e7-86a4-cd2ec68acb08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb34d77a-bbb4-4eeb-9e89-a884b8662bd6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e24aa60b-9257-44d5-8d3f-22fe10ccc6d5"
            }
          }
        ]
      },
      {
        "id": "4df186c4-d51b-408d-b132-7a9abb6a4222",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f1fc80f7-913e-429c-ae97-e38b8df3e92a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "092cf73a-4bbd-4388-96f6-d0ffa2e07bea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ba387be-8f5b-4822-95d1-126a53ac4960",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd7c541-e03f-48ea-ae2e-cae1e61f1b41",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cad63abc-f87b-4cdb-848f-9cffe45ada39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abef27f6-85b0-4ce4-aef0-72ff8056ad9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1879d597-4ee2-4f3a-b199-a68a93ca62ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fee0824-b493-4148-9d79-d786185f4e7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33cdc03f-0186-4747-8fc0-c729d350f072"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fee31a7-8d26-4aa5-9142-05eccc405041",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0fed559-8b46-4119-b416-9644b8e93be0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c73e52d2-0a25-45e9-a49e-fa4140dd0ca9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be7e6809-c35c-4604-a2ff-fef2b80372a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8be20dcb-2909-44f5-8ac1-6bba7b1fc69a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37efb8c7-581a-479e-ba34-3b45b3eb23bf"
            }
          }
        ]
      },
      {
        "id": "018cc7f4-78e9-4da4-94f5-1c4ebd341cf3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a186ff9d-a80c-47b7-b079-636d4cfb8284",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72e367f1-f5b1-4556-99e5-30380247f281",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3f1f1ed7-b12b-48b0-b7c2-e33568986e22",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30b5331d-9895-412e-9bc1-b9970c99f9f8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72586ecb-f175-46d5-ae99-35410840bc39",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 141.8492063492064,
      "responseMin": 7,
      "responseMax": 10143,
      "responseSd": 708.0007293900406,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1714610121448,
      "completed": 1714610165783
    },
    "executions": [
      {
        "id": "73ed1a8a-d626-4ea9-bcc6-db9ff96097cd",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21e96e83-ad0d-45cc-9f0f-0fcc7f5b3464",
          "httpRequestId": "77e059ca-c9fc-40c0-9d94-00e3c33c33d0"
        },
        "item": {
          "id": "73ed1a8a-d626-4ea9-bcc6-db9ff96097cd",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b3d16148-3c29-4a78-8b9c-458bf5f6969f",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "986d10c4-b213-4c65-85a7-15e6d4525662",
        "cursor": {
          "ref": "56c614f8-2005-4f09-8e1f-d3ee730e57ab",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cbc2a75a-791a-4e31-bf63-0bdc05387fe6"
        },
        "item": {
          "id": "986d10c4-b213-4c65-85a7-15e6d4525662",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c2c160c8-2781-4cc1-aa82-7711e7dbbe6e",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "daa31b01-3339-41c1-ae39-a21d1523e42c",
        "cursor": {
          "ref": "ad9f1c87-70c3-4d39-aedc-73b22304fe4b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "eaa6cc62-90a4-4c5f-b681-1fce092397d8"
        },
        "item": {
          "id": "daa31b01-3339-41c1-ae39-a21d1523e42c",
          "name": "did_json"
        },
        "response": {
          "id": "2c128d42-e5ed-48fb-8ba9-1b4627fcbdd8",
          "status": "OK",
          "code": 200,
          "responseTime": 270,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d496ef16-0466-4697-b88a-cd5942fd9161",
        "cursor": {
          "ref": "f308637e-d660-4a6a-8d0e-dbe8b797afb1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d6dad906-0ca2-4a9d-9ac7-99e45979a874"
        },
        "item": {
          "id": "d496ef16-0466-4697-b88a-cd5942fd9161",
          "name": "did:invalid"
        },
        "response": {
          "id": "b80023b4-e6b8-4400-be14-763087b08b5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 239,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d496ef16-0466-4697-b88a-cd5942fd9161",
        "cursor": {
          "ref": "f308637e-d660-4a6a-8d0e-dbe8b797afb1",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d6dad906-0ca2-4a9d-9ac7-99e45979a874"
        },
        "item": {
          "id": "d496ef16-0466-4697-b88a-cd5942fd9161",
          "name": "did:invalid"
        },
        "response": {
          "id": "b80023b4-e6b8-4400-be14-763087b08b5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 239,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660ae044-8c44-49c3-8fc4-19a29451415c",
        "cursor": {
          "ref": "16aa7f87-d37e-4cd4-b2df-0eff715ab6ad",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7a723e8e-bd2a-4f56-9029-a82f0eacec90"
        },
        "item": {
          "id": "660ae044-8c44-49c3-8fc4-19a29451415c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ddfbb607-1942-40a2-900c-49bfa38f94c9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdd94c6-06e8-452c-8351-351d4bd9a361",
        "cursor": {
          "ref": "8bd3ad1d-f0b6-4c1b-a2e3-3fc29a07ae48",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "39b2dadc-27c4-44ef-a288-003b36042cdb"
        },
        "item": {
          "id": "8bdd94c6-06e8-452c-8351-351d4bd9a361",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "38ecb7ae-6240-4301-aef0-d537e8ea0579",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8c8cb2-0a13-4e2d-b20f-381f5b7db93f",
        "cursor": {
          "ref": "bfffc676-1e37-4187-af63-ae1c03170690",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fa964dac-1a34-4284-a6b9-ef9d7b3c0360"
        },
        "item": {
          "id": "ca8c8cb2-0a13-4e2d-b20f-381f5b7db93f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1ca42771-37c3-4983-b9e8-e97614cf577a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f9e436-6baf-4d6f-9887-d00ba115d553",
        "cursor": {
          "ref": "9cf9f68a-9973-42e6-bc95-70b9e8d7dc78",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7a525dc6-c142-47cf-b7e9-5a31e2e04532"
        },
        "item": {
          "id": "65f9e436-6baf-4d6f-9887-d00ba115d553",
          "name": "identifiers"
        },
        "response": {
          "id": "23640b29-73ec-4b10-bb6c-6abc4a443b50",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e488ea26-63de-4d70-a49f-2a44b89908d1",
        "cursor": {
          "ref": "f1f4866c-cf33-44e3-8d81-9f0d46a60672",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "039a67e1-4467-4456-b5b5-9514235752f4"
        },
        "item": {
          "id": "e488ea26-63de-4d70-a49f-2a44b89908d1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "55f628e4-ecd1-4845-9ff1-e9245c67e371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c084003-997d-4846-a3c8-fefb107e8681",
        "cursor": {
          "ref": "f44c2cd9-eb53-4462-ad68-41cb39ca5f34",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "550e255a-8533-4426-8197-81700df92a5d"
        },
        "item": {
          "id": "2c084003-997d-4846-a3c8-fefb107e8681",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "480e8669-5ea3-463a-9bb2-e8aba9b1fdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41c542c-a3fa-4e16-8f34-15fe00226177",
        "cursor": {
          "ref": "e9a6a830-839f-427a-ba7d-bdd4e7878fae",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "93538bc3-bb67-4962-b540-d6c1caab0e2d"
        },
        "item": {
          "id": "c41c542c-a3fa-4e16-8f34-15fe00226177",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "90b1108d-32ff-40aa-8090-0f52c2789093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39dd363-a381-4335-b4f0-983b5d8041b4",
        "cursor": {
          "ref": "b711a49b-0368-4665-9a9f-de49fdbcaeb4",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "52560f40-989d-495b-9a23-d638d93ef9f9"
        },
        "item": {
          "id": "d39dd363-a381-4335-b4f0-983b5d8041b4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f0086375-1365-416d-8a4f-db07db33ae6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe4bee2-46b5-442c-974b-46847c2f4a14",
        "cursor": {
          "ref": "f82ad29c-4681-41a7-909b-efca049bfd06",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7d06e899-61c8-4d3d-9719-e7ad6d859269"
        },
        "item": {
          "id": "abe4bee2-46b5-442c-974b-46847c2f4a14",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "aa2f89ef-7219-46a8-8dd8-57eb02835b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c159936-adf2-46b4-8f79-e8b2189e9aeb",
        "cursor": {
          "ref": "722e5c98-bf23-4db0-a33c-77f333594c44",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ca6467ad-5c64-4a14-ba8b-ff944e9f5e5c"
        },
        "item": {
          "id": "1c159936-adf2-46b4-8f79-e8b2189e9aeb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "40e2ea4a-27db-4dfc-a767-7a68ec1880c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5a0bd2-da1b-4733-b3f0-e463d3186d98",
        "cursor": {
          "ref": "b480b083-14f4-488f-af7d-31f2dc3fc7bd",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "987858d4-3b6e-4232-a9e4-72d34b3d141e"
        },
        "item": {
          "id": "eb5a0bd2-da1b-4733-b3f0-e463d3186d98",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "14edff60-7be4-4212-9fee-41e9c53fa069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38f3678-5b73-48f6-9c15-bac8e2f844d6",
        "cursor": {
          "ref": "bf9efee1-8d9e-40db-acb6-f17be890c4f3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5899364f-8d15-4b07-872c-1de0d2b7a422"
        },
        "item": {
          "id": "c38f3678-5b73-48f6-9c15-bac8e2f844d6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "584b7975-5ea4-4057-8e2a-94f464c62b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe58d643-4d4a-44dc-af51-b0b2cdd64038",
        "cursor": {
          "ref": "5a44593c-2dcd-4d4f-b697-c22f819453f2",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "781ec0b2-1e2d-464a-9417-08d4de4fccc3"
        },
        "item": {
          "id": "fe58d643-4d4a-44dc-af51-b0b2cdd64038",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4f480ced-f62a-490f-acd4-2d806c06c65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae1aba5-c2af-4fd3-b65a-6affb4e5abcd",
        "cursor": {
          "ref": "69d5d2aa-5129-4167-a829-9fb5580a5030",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "af7bd158-7d99-473a-9d57-17057d40d7ee"
        },
        "item": {
          "id": "6ae1aba5-c2af-4fd3-b65a-6affb4e5abcd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7ab33e92-87f5-4251-9f9f-a5f7c2dd74fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631047ce-e4a1-453e-8d2d-b337fa820414",
        "cursor": {
          "ref": "a023c90e-7fba-46a1-aea5-c533b92a845a",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "98dc02bb-b103-4ee1-a8af-b5c3109f564d"
        },
        "item": {
          "id": "631047ce-e4a1-453e-8d2d-b337fa820414",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2ab7811c-5dd0-4144-9ce5-44c1043ca1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3affa1f1-d2ed-4b1f-84a5-c5224a6c10be",
        "cursor": {
          "ref": "73e5d0e0-56f6-4cc2-bce3-6225b206d3fa",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2860f359-5927-4437-92ea-6c8b263f2fad"
        },
        "item": {
          "id": "3affa1f1-d2ed-4b1f-84a5-c5224a6c10be",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3a19daeb-b345-437c-ba8c-c022ba74d712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be041005-a952-4c3f-92d2-783f0e9c6237",
        "cursor": {
          "ref": "455f2fe9-54bd-4103-a8cd-e1a9ae25d885",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cb16397b-8dea-4ec2-ac52-6ae6cea36622"
        },
        "item": {
          "id": "be041005-a952-4c3f-92d2-783f0e9c6237",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5f761007-c7d1-4a21-a997-32c475f09f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b90781e-1fce-4c5d-91a0-9ef703342297",
        "cursor": {
          "ref": "db071d42-803c-414e-9c27-e33467897e54",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9e369123-9843-47cf-8a0e-0e7a244f2ea0"
        },
        "item": {
          "id": "7b90781e-1fce-4c5d-91a0-9ef703342297",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "822d56e5-28fa-40e3-87f4-4070b6b77dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f4b658-97ac-48c7-9746-331600f00fb4",
        "cursor": {
          "ref": "f7f23eca-8baf-4416-9f37-e048ec63a41a",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "95930bdc-cb4e-4080-9923-00d878de2546"
        },
        "item": {
          "id": "76f4b658-97ac-48c7-9746-331600f00fb4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1e2e6ea9-3e7a-4037-af58-ec3314c16ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c555f2-f85b-4815-9192-ce485c234d1a",
        "cursor": {
          "ref": "2ff8323a-4871-46d6-8344-20b930064cde",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7eb0f5ac-9562-4da9-8aaf-509fe3d9184c"
        },
        "item": {
          "id": "14c555f2-f85b-4815-9192-ce485c234d1a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "70e0f78d-feeb-4b38-b001-1e9ab622f2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bef5f3b-d54f-4b41-aa8b-786f66cd7abb",
        "cursor": {
          "ref": "e36ddcf3-53ad-4b4f-ae21-178c2de97d2e",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a09d144d-6470-48f2-8fca-2a8455b0043d"
        },
        "item": {
          "id": "2bef5f3b-d54f-4b41-aa8b-786f66cd7abb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "57d2a0de-47e5-4896-83f7-cf6531e70a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4cbba1-df70-4164-8c57-059982e31c08",
        "cursor": {
          "ref": "c3cb74da-7f59-4b32-80f0-df55cc6c581d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8f95c81b-015d-4209-a5a7-d0712fb59fda"
        },
        "item": {
          "id": "db4cbba1-df70-4164-8c57-059982e31c08",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5f23bf85-187b-46ee-9643-f7940875ee0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45296274-d3e9-4a7e-9fb2-04a01e93ecd0",
        "cursor": {
          "ref": "80c9d99a-d591-428a-a85c-c2309b72d885",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2ae70c1c-6e91-4a84-9f59-f1a47678b5e3"
        },
        "item": {
          "id": "45296274-d3e9-4a7e-9fb2-04a01e93ecd0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e2e8826d-f151-4dc0-a006-71e28b17a3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466c68d7-d0df-427b-8c58-848179ebac03",
        "cursor": {
          "ref": "441692ab-266a-4974-958d-7750c4c04b23",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "74f04047-3e11-4165-a207-11eb882ebbb7"
        },
        "item": {
          "id": "466c68d7-d0df-427b-8c58-848179ebac03",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b65d735f-bf3b-428d-8a8c-afc920c0d676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bbc1b8-8214-4b80-9ba2-15cf9a5344c7",
        "cursor": {
          "ref": "9e163484-93e2-4b3f-b1d6-7f5b18b99156",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "34d84272-b817-415b-a131-ed791d34b6c8"
        },
        "item": {
          "id": "60bbc1b8-8214-4b80-9ba2-15cf9a5344c7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "97eb8f20-2f13-415f-84c3-986385a84050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88776ae9-cbe8-4a72-960d-6ba10e60784d",
        "cursor": {
          "ref": "bfaf2fcc-29da-4d1f-98aa-ee3d6a17d907",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8c7ad90d-54b4-49e6-b376-01ae1b395a69"
        },
        "item": {
          "id": "88776ae9-cbe8-4a72-960d-6ba10e60784d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f90f8851-ad54-4d58-aa9c-1a4698ba4c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff0dcd3-3b6d-453a-8c82-7d30420c5a86",
        "cursor": {
          "ref": "40dcb693-91d7-4dd5-a63d-b0796faa6bf2",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a60a4a27-5199-49c0-ac8e-9363df5436b0"
        },
        "item": {
          "id": "8ff0dcd3-3b6d-453a-8c82-7d30420c5a86",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "13e03407-f1f5-4f8a-bf1f-90f3499d991c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11362fd8-feb0-4ce1-8812-58b1741d00f4",
        "cursor": {
          "ref": "57f3020b-fb88-4bf2-8e4e-8ef0afd0f5c6",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "24ae7a43-21ca-42dc-9cc5-5298727c139b"
        },
        "item": {
          "id": "11362fd8-feb0-4ce1-8812-58b1741d00f4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "93274c0f-68af-4130-b795-60ba40aafbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca6607c-3ab4-47fa-9ad4-de63cf7e31f2",
        "cursor": {
          "ref": "9679c52d-a724-4254-a887-b6d7bb01cbcb",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "048d6e87-dfcb-4547-bde8-9b3e7ed02d19"
        },
        "item": {
          "id": "bca6607c-3ab4-47fa-9ad4-de63cf7e31f2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6a73317c-b365-41cc-bc6b-4f363faaa3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcef00f-d10b-498c-a90b-5e9f32ffc3cb",
        "cursor": {
          "ref": "a840f820-b28a-4dd4-b6c6-c9e31e5bb406",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9158e9ca-2ce0-491e-927c-620ea82b6eb9"
        },
        "item": {
          "id": "cbcef00f-d10b-498c-a90b-5e9f32ffc3cb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "864b6865-d98e-41cb-bd27-bba2ffda69ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05143b39-8a51-4e7b-9a77-87b03fddf459",
        "cursor": {
          "ref": "014bf97b-57cb-4d4c-9b90-63a5058774b9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2e70a9dd-f276-42c2-b1cf-7716363ffd0d"
        },
        "item": {
          "id": "05143b39-8a51-4e7b-9a77-87b03fddf459",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "387ce8bf-58f2-4073-aaa3-2bfbb9476fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4c0514-2ea4-4b5d-8abc-2f3b6f23da71",
        "cursor": {
          "ref": "9a0487d7-b991-434c-8c0f-d00b717a4f63",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e938c18a-1569-4047-9f14-db27c5eae715"
        },
        "item": {
          "id": "4a4c0514-2ea4-4b5d-8abc-2f3b6f23da71",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1b396831-293f-4f38-97ea-cd96caf1c794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b362bfc-64f4-435a-9774-e64a3eaea3b4",
        "cursor": {
          "ref": "008d5b7e-11a9-4b96-a181-b9fd74988be3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f2c617ef-2026-47ae-88e8-bdf8f91588ea"
        },
        "item": {
          "id": "6b362bfc-64f4-435a-9774-e64a3eaea3b4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d1020bda-93b8-4808-b962-db69570eca73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff439d7-359b-4e6b-aeaa-05fdee8cca4a",
        "cursor": {
          "ref": "3de408ed-93d5-43f0-ac27-221f4ec0a620",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "24b8a63d-d1ba-4265-a654-d9fd9a67f657"
        },
        "item": {
          "id": "3ff439d7-359b-4e6b-aeaa-05fdee8cca4a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f94de7a6-4b23-4a13-ba2f-6fce7b59dc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be09348-84b7-479f-8ea7-6ff3ed7b3cd2",
        "cursor": {
          "ref": "b886f979-2bdf-4426-82fe-893e95829672",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "475d5f99-48fd-4fd8-8bb4-ba4e59b11492"
        },
        "item": {
          "id": "2be09348-84b7-479f-8ea7-6ff3ed7b3cd2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "929a3501-2bbc-4986-8f49-b0235be76b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec641b0-690e-4cd2-b107-98f65374885d",
        "cursor": {
          "ref": "7b7b001b-c3af-4dc7-a85f-0e90995b2435",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a94042b8-1f8b-484e-b9dc-654ed53ebb00"
        },
        "item": {
          "id": "9ec641b0-690e-4cd2-b107-98f65374885d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f0850058-b662-47cb-9286-12ddcd8f7133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94f03e0-37ff-4d5a-9310-b2cb931e069d",
        "cursor": {
          "ref": "6171f923-9fe0-47d7-8a0a-4b9cfaf67547",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6356a3bf-8ac5-4d5d-9304-1a3f8745e8ef"
        },
        "item": {
          "id": "c94f03e0-37ff-4d5a-9310-b2cb931e069d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "977f399a-3067-47eb-bdc4-6bfa719945ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e08b2e-c3e7-4095-9c38-d1ab961b505d",
        "cursor": {
          "ref": "43ffb274-f472-45b6-ac58-5b00a69186b1",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c507868b-fadf-48d8-879b-8c81972df2d1"
        },
        "item": {
          "id": "54e08b2e-c3e7-4095-9c38-d1ab961b505d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8760a80b-2c92-4938-9db9-98269438524e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35cdf3d-5513-4360-8ac7-0a30600c481c",
        "cursor": {
          "ref": "775756ca-b754-4fd2-81ea-a910e3b8fe4b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cff082a3-2e52-443e-bfcf-196b294f7b93"
        },
        "item": {
          "id": "c35cdf3d-5513-4360-8ac7-0a30600c481c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "889efd74-96f0-4553-8141-3c8f995fc1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e703b63a-6649-477c-8a29-189c77f420f4",
        "cursor": {
          "ref": "712ba69b-733e-4bfa-a31a-51aed46b516a",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7868dc37-83ef-4715-9286-fb9ed99a2c3f"
        },
        "item": {
          "id": "e703b63a-6649-477c-8a29-189c77f420f4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "40e2a0f6-ba99-45b2-acad-68fc3c6eeb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a94f785-a6f1-47e4-991b-2e5903daef79",
        "cursor": {
          "ref": "90bb6e7e-75e7-4264-b676-5c3587397ef5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a78f919a-bb5a-4fe1-9694-98972d541d52"
        },
        "item": {
          "id": "1a94f785-a6f1-47e4-991b-2e5903daef79",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a2141d52-363d-4f26-aee5-137eff9d020c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bad628-6260-477c-acae-a18c1214e9e6",
        "cursor": {
          "ref": "3279e3fc-c329-4db7-b486-bb62a88702ad",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8d8e612b-2894-469b-8c13-7562af522675"
        },
        "item": {
          "id": "d3bad628-6260-477c-acae-a18c1214e9e6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "651d6813-62b0-4b30-9bbc-0dbe08aa6a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a3af42-8e6a-44ba-97b9-a6a66c2ba8e9",
        "cursor": {
          "ref": "92dd9da4-352a-4d84-82fa-74cf0c76da79",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9fe2ebae-7836-40c7-866d-f925edff5593"
        },
        "item": {
          "id": "72a3af42-8e6a-44ba-97b9-a6a66c2ba8e9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bb1f7a96-3680-40c8-8779-d030522825a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeb76a6-d699-4aa5-ba0d-58375b5ff75c",
        "cursor": {
          "ref": "eb0153e4-40e0-49ed-8eb4-c23da0d28e06",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "0c748157-1410-445d-918d-4c77fc326204"
        },
        "item": {
          "id": "aaeb76a6-d699-4aa5-ba0d-58375b5ff75c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "21e5a019-6bfc-4f50-9bd1-102512841418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a141e415-1358-46d0-a603-ee7aa4cd6bdf",
        "cursor": {
          "ref": "28dcae13-2243-4d58-9ad2-8980d793bfdd",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "130947f2-6a14-4b29-9cd3-c153dd1aa1ca"
        },
        "item": {
          "id": "a141e415-1358-46d0-a603-ee7aa4cd6bdf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e1ec398b-6fa4-456d-bc5a-f24525121bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cf9f4b-a3ac-446b-a5aa-4d0136308244",
        "cursor": {
          "ref": "81524920-b0d3-4e23-ab60-b797b99f4657",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "85c39450-edd8-4c9a-98cf-2c64685a82ce"
        },
        "item": {
          "id": "d5cf9f4b-a3ac-446b-a5aa-4d0136308244",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "002601f2-a3de-4837-b4c5-77d6bbace05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b4c887-8e2b-4b23-80e3-31b398faa481",
        "cursor": {
          "ref": "5ed7fdf6-2fc7-4966-b1f7-512e6ebd2b26",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b6168291-224f-4815-b53f-08ab332af9b3"
        },
        "item": {
          "id": "06b4c887-8e2b-4b23-80e3-31b398faa481",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "951476dd-bd5c-4841-9392-3e3b949ce54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e757607-6e82-4d8d-8ad3-c4b696d3d5a4",
        "cursor": {
          "ref": "e14b6c94-073f-4c9b-a24d-19d43a05c997",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4db5822a-6f8a-479b-9537-a706168a0e46"
        },
        "item": {
          "id": "8e757607-6e82-4d8d-8ad3-c4b696d3d5a4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b4eda26f-b122-4889-b7f2-2f69a7a12f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a437edd0-10f3-4401-a122-baf0c6bcdab1",
        "cursor": {
          "ref": "8c6b525e-fe66-47e7-857a-f6e25a8fc091",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ff4bf267-4ebc-484f-b66f-25f387bf4736"
        },
        "item": {
          "id": "a437edd0-10f3-4401-a122-baf0c6bcdab1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "125754f5-973e-49a1-9aca-b53b7df145f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a134140d-f6c9-4b19-bf43-4b1f5dbb212e",
        "cursor": {
          "ref": "205c0cd7-3bb9-468c-a4ed-1bb45cf0f425",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d43f06d4-e0f1-486d-bcb5-c56a20c83dfe"
        },
        "item": {
          "id": "a134140d-f6c9-4b19-bf43-4b1f5dbb212e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a4de205c-0b10-4600-a66b-1440bae68263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb16ede6-ef25-4d23-b1c8-a6f3488776ec",
        "cursor": {
          "ref": "b6ee08ac-c7b3-4f5d-bcba-66b65a3325ba",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1e74f4d6-f7eb-4291-9595-96081a375e57"
        },
        "item": {
          "id": "eb16ede6-ef25-4d23-b1c8-a6f3488776ec",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0429656c-136c-46b7-b993-0327ee5b5ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d978ac15-17eb-4d93-bdd3-0ac5062a0925",
        "cursor": {
          "ref": "2b48d2c4-762b-4921-867e-f5f0e20e14ec",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "888b588f-6ca0-4548-ad7a-f5d99bd4c83e"
        },
        "item": {
          "id": "d978ac15-17eb-4d93-bdd3-0ac5062a0925",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7666af4f-5a6f-4493-9690-2594bc9f204f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a0d8a6-4067-4d3e-b115-4d7933248a7a",
        "cursor": {
          "ref": "ba7a4e78-3581-4f4e-8e07-c770ea06c534",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1a501324-7ff2-4276-b322-129814d5dec3"
        },
        "item": {
          "id": "d3a0d8a6-4067-4d3e-b115-4d7933248a7a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "608b4f7d-9ee1-4f47-8e6c-b29eeb23c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d338e982-66d1-4aaf-aa67-0b2a9f12487c",
        "cursor": {
          "ref": "a4f30aff-ceda-4696-87da-26a69dca401b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b2257f27-bc8d-44ea-924d-de2c49b1da98"
        },
        "item": {
          "id": "d338e982-66d1-4aaf-aa67-0b2a9f12487c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e879691b-ddda-40c5-966b-5875c9a15036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d383046-fa4d-4325-9926-3252c79ca385",
        "cursor": {
          "ref": "ca612c8c-4075-4540-94f0-176a2639ea0f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dc36b413-92e8-4da5-91fc-75573a73d7c2"
        },
        "item": {
          "id": "3d383046-fa4d-4325-9926-3252c79ca385",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "33cf03d3-3750-411a-ae92-f066befa9f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd3ccc0-4c28-40fa-aff5-bc09b5e1a2b2",
        "cursor": {
          "ref": "476bf44a-4fc0-41bd-a63e-b231b7c5873c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "45a1ee27-2e35-4c35-b157-ce231f8949ef"
        },
        "item": {
          "id": "7dd3ccc0-4c28-40fa-aff5-bc09b5e1a2b2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4b9f3de3-e3f6-4a76-8224-43a6d65a37e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49b280a-a42e-41db-8721-ec4b22bcfe85",
        "cursor": {
          "ref": "4926943b-338e-4345-b267-f122134cdb97",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "de45a737-c8fb-4324-9abf-4c29669c5518"
        },
        "item": {
          "id": "b49b280a-a42e-41db-8721-ec4b22bcfe85",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a3582345-887b-48b2-9aa5-2cba51ca38e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fe29ff-6141-4bc6-9be9-829e77c63895",
        "cursor": {
          "ref": "f7788a2c-f61b-4d99-affa-f0c68ee3a1cb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9e0df7ba-311f-4818-8c85-0c05e9600d40"
        },
        "item": {
          "id": "49fe29ff-6141-4bc6-9be9-829e77c63895",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9b7e82ae-4f32-4219-87ed-bb16130117f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5360576e-d5a0-465e-b030-5cc5c464883d",
        "cursor": {
          "ref": "85611746-38e1-470a-bf5e-c1bf784234c0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d25e6c99-4e27-4a22-9af4-dbf6896d0be5"
        },
        "item": {
          "id": "5360576e-d5a0-465e-b030-5cc5c464883d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "93dfc7a8-68b1-48ce-b0a2-e72f01c386f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726d2ee7-6769-41fb-9b2e-5e95d2b826a7",
        "cursor": {
          "ref": "9846af86-5869-4356-8162-8d585d1ca879",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ef7d951a-c7c0-4ba3-b283-89cd8b5a89a9"
        },
        "item": {
          "id": "726d2ee7-6769-41fb-9b2e-5e95d2b826a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "619a41b9-7c74-4cc9-810b-ab5e916f6500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91a69f6-4dce-43aa-9992-61fe2b6af35c",
        "cursor": {
          "ref": "9d54384e-b0aa-481a-bc5f-be9f4c82f273",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ad1f2579-b2e3-4ab2-83a4-8bb4a67f7a38"
        },
        "item": {
          "id": "e91a69f6-4dce-43aa-9992-61fe2b6af35c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4deee763-3342-4c1e-89c0-cb7c7e7ba2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9273c9fc-7c84-4e1b-b6c4-99cb5f89e130",
        "cursor": {
          "ref": "0df69643-3417-4c49-81d1-e817dfc25776",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9c7fc916-b338-4d68-9a0a-9f0a59db03ac"
        },
        "item": {
          "id": "9273c9fc-7c84-4e1b-b6c4-99cb5f89e130",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fe01d45c-75f5-4f13-8b64-fc27c7e2cd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321bcebc-397c-4901-a5f5-2f2f29d06262",
        "cursor": {
          "ref": "94716452-93d2-432a-b200-b63667692c4a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e3c783ce-ff42-4131-8b94-f821f1df82f2"
        },
        "item": {
          "id": "321bcebc-397c-4901-a5f5-2f2f29d06262",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7559c942-9de9-4642-ad8a-bbfdbebdd89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d9481e-8a9c-416c-922e-440d402ce14c",
        "cursor": {
          "ref": "7d16a0c9-f6dc-421a-a95f-db931f5df386",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "42eb6bda-f35d-42f3-ba89-fead9b0ad1d1"
        },
        "item": {
          "id": "77d9481e-8a9c-416c-922e-440d402ce14c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "da6d9d09-251c-4540-bb71-e2d25a3a8cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a59ec0b-cb35-4d3e-a9d2-bee082f763c1",
        "cursor": {
          "ref": "171e6d0d-d2c2-48f0-b5e3-cf01ee1e748b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1d33d102-812a-4a0c-97ea-9309cddfcede"
        },
        "item": {
          "id": "0a59ec0b-cb35-4d3e-a9d2-bee082f763c1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "547dfc75-c1a5-4a7a-a073-87a5806ecf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484725ba-2259-4491-bfd3-cf80130d9858",
        "cursor": {
          "ref": "041b1710-afa9-4434-b8d4-241a8243a64f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c55afe5b-b9f0-45ba-8e6e-6f64696a80ea"
        },
        "item": {
          "id": "484725ba-2259-4491-bfd3-cf80130d9858",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5f7b4024-69fc-4ba6-b4c1-e0286086c7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1bd1e2-b88f-4376-938c-6b1a4eb4e8d0",
        "cursor": {
          "ref": "3bd37503-1fb2-4994-a717-41730063689f",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1694f81d-ab45-4c2b-9e81-6636713cefd0"
        },
        "item": {
          "id": "1b1bd1e2-b88f-4376-938c-6b1a4eb4e8d0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a57536ca-4e79-4df3-ab49-c033709d9809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c2b73b-f0f7-4290-9c37-ad5db04e2e42",
        "cursor": {
          "ref": "41674734-2211-4831-a010-beef0a9eb206",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c9fa3474-fef2-432c-8865-fa20f1514819"
        },
        "item": {
          "id": "74c2b73b-f0f7-4290-9c37-ad5db04e2e42",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "07613025-b8b1-4b89-ab3b-b2eb02167c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9640f3cb-e132-4921-b8aa-28e5b96d3601",
        "cursor": {
          "ref": "b9395f35-e692-4804-99a3-ea6a1b788a1a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71533080-5bad-43ac-86b1-a14d3fea7928"
        },
        "item": {
          "id": "9640f3cb-e132-4921-b8aa-28e5b96d3601",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "db5fc040-92b4-47f3-bf9a-07b4b298e14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909cb6d2-3f61-4811-8f5d-ce9ff6ddaddb",
        "cursor": {
          "ref": "599d75b6-49a8-4f68-bcac-89be3d60e17f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a115ab60-c88c-4aa7-993a-db33fa561da4"
        },
        "item": {
          "id": "909cb6d2-3f61-4811-8f5d-ce9ff6ddaddb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bcdd062a-456a-4902-89d6-149240ac684c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215b0fa8-202b-4b41-bbdd-c61ee1d299dc",
        "cursor": {
          "ref": "06540f51-d83e-4a9e-9633-81376f693c6e",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f03c720c-0cfc-4ce3-b2f9-8e1e0ff06dc6"
        },
        "item": {
          "id": "215b0fa8-202b-4b41-bbdd-c61ee1d299dc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e68bb044-b459-483e-bfc7-29bd3afa3f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e142bb2c-a243-4043-8522-a79960705fe6",
        "cursor": {
          "ref": "df72a361-b494-4ca7-8922-ec6229da57ae",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "35708781-bc83-48ef-b7c1-c111b1e1b92b"
        },
        "item": {
          "id": "e142bb2c-a243-4043-8522-a79960705fe6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f69498b4-2f55-4e71-bf56-c4a06f9058b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5372a6f3-032a-43b0-99c4-0a8d5eb2e10b",
        "cursor": {
          "ref": "6f5dfdbc-ba19-4fd8-80ca-a753c5974637",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ce0e0825-331c-4d8f-8b1d-5d78ce1e4239"
        },
        "item": {
          "id": "5372a6f3-032a-43b0-99c4-0a8d5eb2e10b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e536e996-3434-45a8-89c7-70c968186f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bf30b0-d4dc-4efb-a072-4903ba3a0029",
        "cursor": {
          "ref": "e42753ea-7ab9-4d8f-ad6b-72b9489aa3fd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3ca7bd02-ba8e-4424-b21a-3110d7cd751d"
        },
        "item": {
          "id": "00bf30b0-d4dc-4efb-a072-4903ba3a0029",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ba79463e-c13f-4706-b9b8-ad21f77f74f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd35a5c-afa4-4000-9d36-d93654757920",
        "cursor": {
          "ref": "11818e7d-bb45-421f-8a7c-ea2d1146c332",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "378ddc0a-6626-41e9-a6a4-3e5fa5d02b78"
        },
        "item": {
          "id": "fcd35a5c-afa4-4000-9d36-d93654757920",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0fca66f2-dcc8-423a-b10b-7c97a424a7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87081570-dc26-48dc-bd4e-94b0e70b8d31",
        "cursor": {
          "ref": "66625e6a-8c5c-4d40-98bc-8a7a67000fcf",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2900b987-7ad4-417a-ac60-e01e9e6bed26"
        },
        "item": {
          "id": "87081570-dc26-48dc-bd4e-94b0e70b8d31",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e368f02e-e62d-4f7e-805e-24de97a6bfea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af40797f-bf5d-47dd-88b9-e105ce5709bb",
        "cursor": {
          "ref": "bdc00cca-59e2-42f8-9c5c-6aec0b5f42de",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5376eba6-1751-45cd-bd47-c6a1f5c7bcfc"
        },
        "item": {
          "id": "af40797f-bf5d-47dd-88b9-e105ce5709bb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "2bf1f70c-6fff-4473-9c0e-476131418db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fe706e-5864-4b56-9a31-3130b6cc9c4f",
        "cursor": {
          "ref": "3c3eee50-6d2f-41bf-b97b-cd8b0bc112a0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "97d723fc-d0b1-4cfb-a050-8ac5f99bf2e4"
        },
        "item": {
          "id": "68fe706e-5864-4b56-9a31-3130b6cc9c4f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3420d665-4635-4877-be9c-e84bf91e3067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c139f4-06a4-4dc0-a653-fc9432062e16",
        "cursor": {
          "ref": "c265dece-5760-4d0e-8f93-4fd56015831d",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b402abbb-d289-4e51-86d8-7b041865d543"
        },
        "item": {
          "id": "79c139f4-06a4-4dc0-a653-fc9432062e16",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f0929f3f-3297-47d2-b36d-60173f872250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934018b4-2d72-4079-ab7a-4a438d22a55a",
        "cursor": {
          "ref": "1ee410c8-3743-458e-a170-b0f23eb51805",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e79709ea-2d9f-483a-8492-e188bda1a0e6"
        },
        "item": {
          "id": "934018b4-2d72-4079-ab7a-4a438d22a55a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "478a5f6c-d340-473b-8abe-d8a1442a5be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d140f005-5287-49ec-982b-eddc8e2ff3c4",
        "cursor": {
          "ref": "300a568d-06c2-41bd-8c68-6b704f08d07c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "744d3d46-224d-420d-ad44-c1b31522aaed"
        },
        "item": {
          "id": "d140f005-5287-49ec-982b-eddc8e2ff3c4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f4d6f0ee-2aad-4896-a5fc-89893623e812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95aa7308-262c-4344-931f-a259cbe8e857",
        "cursor": {
          "ref": "b74ffa4b-70e1-4d60-8040-2390251f6720",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6a79f1ad-82bf-4a73-b8f8-42bde77d0fa1"
        },
        "item": {
          "id": "95aa7308-262c-4344-931f-a259cbe8e857",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "aadf69d2-be8c-4166-bfba-900b9ab9d119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4153f47-e526-4b6c-9ddf-200b30a4c977",
        "cursor": {
          "ref": "05173517-6c6e-48bf-aade-3574e566f77e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b948fdfd-835b-4339-bf64-4162baaba838"
        },
        "item": {
          "id": "c4153f47-e526-4b6c-9ddf-200b30a4c977",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "99d010cc-4a7b-49c2-b172-122de4bb5017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb16393-d429-4779-9dda-d75ce1fb84c1",
        "cursor": {
          "ref": "7179cb02-4509-4d8c-81c9-a06abf83c2b7",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2da14d9f-ae7e-440a-835d-7d9d073f0a09"
        },
        "item": {
          "id": "7cb16393-d429-4779-9dda-d75ce1fb84c1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1a15bc74-40a7-4bf5-a947-cc2082d38d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fff713-c4fa-4680-80e4-3f9163a17a9b",
        "cursor": {
          "ref": "54fd0354-4f75-4a2e-a824-6d546cafcdd2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8f88e61c-6378-4ce9-bdf7-ad7a155ed3e4"
        },
        "item": {
          "id": "84fff713-c4fa-4680-80e4-3f9163a17a9b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6ebf6674-30e4-4b02-8447-2f2acc445403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e762a41-9cdb-4d04-9d98-c8725e22df36",
        "cursor": {
          "ref": "eec516c3-410d-4303-b3ae-126f2070d14a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f76ea3a5-bd5e-4e63-be1e-37987668242e"
        },
        "item": {
          "id": "9e762a41-9cdb-4d04-9d98-c8725e22df36",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "08fd1658-cceb-4d55-8afb-f8c9744a6ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73be36b-d083-42f6-9e47-54d18daef04a",
        "cursor": {
          "ref": "fe9e9ceb-2b3c-4b9f-ab2d-2676077fe5f5",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "195abd13-7fee-4d8a-b946-dc8a2d7e8fbd"
        },
        "item": {
          "id": "c73be36b-d083-42f6-9e47-54d18daef04a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5c03196d-26b5-4dd6-8d14-b3b7b4dee1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9008232c-5f9f-4fe8-b7bc-cd33c4fbb1cb",
        "cursor": {
          "ref": "38542fd4-5652-40f6-93dd-4d5647bbe154",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b9d3ee4b-7732-4780-a1ad-c24549db91c1"
        },
        "item": {
          "id": "9008232c-5f9f-4fe8-b7bc-cd33c4fbb1cb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e60da4a0-083e-402b-98aa-8f5adf2f80b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98326586-7d75-490e-b9fa-ba7d73336a9b",
        "cursor": {
          "ref": "20658277-5ae9-42d4-9487-a9eb0ffdf0f8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a335990d-8a48-432f-b1c8-758f7ac5f164"
        },
        "item": {
          "id": "98326586-7d75-490e-b9fa-ba7d73336a9b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9845d23c-abc9-41fe-b975-6a99d614c69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedcbd60-e426-449c-9364-c6660d8301f1",
        "cursor": {
          "ref": "6c31c0b2-7833-414b-abcc-9a44ae033859",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7a9f63ea-aeb7-4789-87ff-8824846d0887"
        },
        "item": {
          "id": "dedcbd60-e426-449c-9364-c6660d8301f1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c99cd455-5898-47f2-80aa-036ffc1a9870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82167a40-abe0-4242-8368-d355ca3b82c6",
        "cursor": {
          "ref": "8da747ec-8a7d-4f52-b59c-c355a275e2be",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "71fb69f2-a521-46c6-8d47-d5bcf91c1d8b"
        },
        "item": {
          "id": "82167a40-abe0-4242-8368-d355ca3b82c6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "64c8bbba-a522-4bf1-992f-49c43b5e0aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd486d29-ac2a-403b-bb83-3e47f00d437b",
        "cursor": {
          "ref": "30170e01-0bbc-4626-a404-7c0f9948f306",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "697bede8-6148-4809-92a4-627461a3a040"
        },
        "item": {
          "id": "bd486d29-ac2a-403b-bb83-3e47f00d437b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8d8152da-d126-4ad9-b01f-38ba02791900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568e60db-5ef8-44ba-906e-29a58073d555",
        "cursor": {
          "ref": "eb78409c-14e2-4d95-9368-8a523b600c5c",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "36219159-c5dc-4c9c-95da-ec71d4cd1f4f"
        },
        "item": {
          "id": "568e60db-5ef8-44ba-906e-29a58073d555",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "528c7626-8040-46fd-8114-c00faa3c0362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9101c2-abc4-45ca-a3f5-03b246e2d707",
        "cursor": {
          "ref": "faa7298f-91f5-4b91-bfdb-f48878508028",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1128fc13-0441-43eb-bbbb-a4b7b196834a"
        },
        "item": {
          "id": "eb9101c2-abc4-45ca-a3f5-03b246e2d707",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bb388fc0-3286-4955-9b08-068bf97f75ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142b7d53-eeac-42a1-bfd1-51c8923b69ce",
        "cursor": {
          "ref": "b4ddf075-f63c-4228-9dce-a93f5ea1a789",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0b467ede-a545-46e2-a474-634b3a5f62ce"
        },
        "item": {
          "id": "142b7d53-eeac-42a1-bfd1-51c8923b69ce",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b3a2992a-8934-410a-9570-b9a89bacdd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d010b56-c87f-40dc-be4e-ee0582edaa80",
        "cursor": {
          "ref": "51104287-4b33-446c-b5f6-af270387816d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d0fc4268-8221-4ced-91c6-1a57fa533461"
        },
        "item": {
          "id": "4d010b56-c87f-40dc-be4e-ee0582edaa80",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0412f354-6187-41e7-baaf-6aba6a816eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dde001e-e930-495e-a1cb-f8296f062ac2",
        "cursor": {
          "ref": "d6b46d38-ad51-473e-a3d2-9043bac838e5",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4cf29d34-73e6-4012-9271-df03be92a701"
        },
        "item": {
          "id": "5dde001e-e930-495e-a1cb-f8296f062ac2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b5bf9cf8-3b78-4638-9fe7-6c3f57d75231",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0fd205-bcd3-4066-9ad3-1ed8cc5967c0",
        "cursor": {
          "ref": "6a50246d-7142-4687-95a5-bd296afcb979",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "987ea54c-0dde-46a3-8e11-b380fa9e9db4"
        },
        "item": {
          "id": "ad0fd205-bcd3-4066-9ad3-1ed8cc5967c0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ef561c99-896c-4c79-b673-e05269ee823c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "04c4d50e-9582-4c42-8240-c8685f8dfce7",
        "cursor": {
          "ref": "286d5d73-690a-434c-9204-2b9018703dac",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "62c6d3d4-23f0-4431-b2cb-7d89b7ee9843"
        },
        "item": {
          "id": "04c4d50e-9582-4c42-8240-c8685f8dfce7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "21d08708-976f-4ade-8c0c-edff6f611692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b544f4e0-574a-4cb7-b7db-3a43c9da9d2f",
        "cursor": {
          "ref": "04b06fff-fcdd-4545-b972-348d58843c60",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8515b379-5aba-4dc8-b3c1-a8fa97b0e561"
        },
        "item": {
          "id": "b544f4e0-574a-4cb7-b7db-3a43c9da9d2f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c767931b-bbed-4e59-be8c-54cf2aacaea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8469a7b7-3267-459c-99bb-23f27f972ea1",
        "cursor": {
          "ref": "9869e26c-3b0f-44a9-b7df-7621e3bf26d3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a30495e1-ad18-48c7-b540-af7fabd94b1b"
        },
        "item": {
          "id": "8469a7b7-3267-459c-99bb-23f27f972ea1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6549725f-26cd-48f0-bd83-fcc0441a9552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "23592f5b-00aa-47ee-a68f-76c4bae39904",
        "cursor": {
          "ref": "8cee8f16-6c63-48c9-92ed-d5b60f4c4a1e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e0be9674-5c3e-4442-a94a-ad0baaa774bb"
        },
        "item": {
          "id": "23592f5b-00aa-47ee-a68f-76c4bae39904",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9358a97e-796f-4fad-94c2-738b39b7f17d",
          "status": "Created",
          "code": 201,
          "responseTime": 10143,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed04287-9b5b-4b38-b674-5525a387f9da",
        "cursor": {
          "ref": "cfc53e99-c7a7-405e-82d3-6717b5ee120f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "306e81a4-2d5b-43e1-ae0d-0921b1f8fa11"
        },
        "item": {
          "id": "4ed04287-9b5b-4b38-b674-5525a387f9da",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "22132082-3cdd-4fd0-a35d-f2872c6a6d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2940b602-340e-4ae3-bb01-30b4ba40dba9",
        "cursor": {
          "ref": "432ec839-7c44-4062-be32-4d82660ffd32",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b3a74c03-6803-4b4b-b539-1fe76e6b430d"
        },
        "item": {
          "id": "2940b602-340e-4ae3-bb01-30b4ba40dba9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ee37d57e-b6e1-4ef3-9739-0404eda84ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "939b6d38-5691-4006-829a-f168a48a9334",
        "cursor": {
          "ref": "33971507-833f-4d3c-b474-960671f9b01e",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "79c63e62-6c67-46dd-b926-c0314165b562"
        },
        "item": {
          "id": "939b6d38-5691-4006-829a-f168a48a9334",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "23cebb78-45b4-4cbd-9789-a7ab9e8d4990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6a5192-f806-4e1e-9ce7-e22ed3429a53",
        "cursor": {
          "ref": "fc2986f4-00d5-4f7f-bbd0-cbd7e4ae0bc1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fd0b48dd-a077-4999-b73f-73e23acffb5c"
        },
        "item": {
          "id": "6a6a5192-f806-4e1e-9ce7-e22ed3429a53",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7b9c1806-9d3d-4323-8903-a8fc4fd2134a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b152e9-f2f1-45bd-8a26-7fd0b9282692",
        "cursor": {
          "ref": "593c7e9b-2c9a-415f-8ed3-e9b1c7a9ec48",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dca76c85-845d-42b5-908b-e2d265df00b0"
        },
        "item": {
          "id": "66b152e9-f2f1-45bd-8a26-7fd0b9282692",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "231fb6a2-c1a2-49da-bb85-e89de7e4afd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3625254-a1af-4e5c-a0e9-337af21ff51f",
        "cursor": {
          "ref": "5938f72b-48a1-4b15-82f1-f54b02060f57",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8a96eeea-41e9-4548-9983-09c6372d18ed"
        },
        "item": {
          "id": "a3625254-a1af-4e5c-a0e9-337af21ff51f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f87beda7-1eb9-47f7-8d87-478ac8e6c958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3483d0-3d25-4f95-9e36-94e8dece5b5f",
        "cursor": {
          "ref": "8ce6ef07-7cd1-40b6-8715-2325e2630497",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fa689a61-2459-4315-bf01-080192ba7965"
        },
        "item": {
          "id": "bb3483d0-3d25-4f95-9e36-94e8dece5b5f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e5873add-94fd-498a-a665-62378d1be0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2070bf54-c962-460d-a842-89d50714f4fc",
        "cursor": {
          "ref": "4e84ad89-7772-4821-8a7d-23ea8ac2775d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a3eb3a6e-e2eb-4596-9223-32da54f3620c"
        },
        "item": {
          "id": "2070bf54-c962-460d-a842-89d50714f4fc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a70a3241-4271-49b4-9896-f65a3a076ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3379d8-7e2e-4cf6-98a1-81f3d7548016",
        "cursor": {
          "ref": "bea60acc-c5d5-4c2b-b937-ce8ce2c49468",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a83c013c-c603-465d-bc82-c6fe9f993fce"
        },
        "item": {
          "id": "cb3379d8-7e2e-4cf6-98a1-81f3d7548016",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "15264c32-c0b3-40be-8d6d-afab4f7fbdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0e996e-5979-4928-832c-66ad5f38d501",
        "cursor": {
          "ref": "8e78f302-34c5-463c-b3ce-dc8b8c3eee44",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ff3c8ce0-8f42-459b-a44e-08246f004c3b"
        },
        "item": {
          "id": "de0e996e-5979-4928-832c-66ad5f38d501",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5b4cc28c-171e-403e-b25b-945511934aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4902fb95-b753-4c0d-a33c-445d37fd7315",
        "cursor": {
          "ref": "ab9a1f9a-390c-438e-abc3-de849d0ee5a3",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f47aa0e4-9e26-4a8a-bb61-056619a34b6b"
        },
        "item": {
          "id": "4902fb95-b753-4c0d-a33c-445d37fd7315",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "085d438c-7678-4e22-bc74-601b5ca88383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99002c74-a13d-4756-887e-2d9deddc62eb",
        "cursor": {
          "ref": "8870e920-279e-4b20-9d2c-cf195e211549",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2a7f36cf-d2d1-4d4a-a109-aa081f2cc9a6"
        },
        "item": {
          "id": "99002c74-a13d-4756-887e-2d9deddc62eb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "93a76708-9a10-4a4d-addb-dddc15699edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff162b3-9f54-4875-b29a-735b74a5ee9f",
        "cursor": {
          "ref": "3d29ced7-dcd2-4f3a-adb2-ed2777e03f16",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3937c2ea-3312-4192-b4b6-d8aba177b0fc"
        },
        "item": {
          "id": "5ff162b3-9f54-4875-b29a-735b74a5ee9f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5e55f308-ace4-4b29-bf0e-ae7614fc6913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8566d5-1d16-406c-b922-f9feb3bd0314",
        "cursor": {
          "ref": "14ce9c3a-fe43-4c02-9289-ad9978841a85",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "29725a14-1fd2-40cb-bf34-388dac0a624c"
        },
        "item": {
          "id": "4a8566d5-1d16-406c-b922-f9feb3bd0314",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d99b25d7-06fd-475d-9ea4-17cdedf835b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af77265-b8da-4784-b25a-10d0c65f434d",
        "cursor": {
          "ref": "f480ee23-9057-45d7-9741-1c8ea219a235",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eb4fefac-cf79-4790-98ef-4b030aed4e9c"
        },
        "item": {
          "id": "2af77265-b8da-4784-b25a-10d0c65f434d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "de56f119-6350-4fa4-80db-12f57d60b0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9462f7-a595-4e32-8293-1203d98bbee0",
        "cursor": {
          "ref": "beaef9b3-fb34-4072-a9ac-9c4877eee009",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cca4c763-6c9c-4520-bd62-811180517938"
        },
        "item": {
          "id": "ab9462f7-a595-4e32-8293-1203d98bbee0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "834ec4a8-9de5-4416-871e-a6decd8466f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2296222-1008-4e96-9850-ac01e98253c4",
        "cursor": {
          "ref": "a71bce9c-9943-47a2-ad0d-ded28b4da8a9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "81692171-d046-4b55-af22-3a0a0f30c026"
        },
        "item": {
          "id": "e2296222-1008-4e96-9850-ac01e98253c4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a690327a-24a6-4267-b42e-032196e566a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cf34a2-e08e-42ae-8c4a-ed67651475b8",
        "cursor": {
          "ref": "66a6e16d-39c2-41b6-a59b-750e9879ef30",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0c9de462-06c0-4ef1-b53b-04d083931e6e"
        },
        "item": {
          "id": "40cf34a2-e08e-42ae-8c4a-ed67651475b8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f6902e2e-2d6f-44bf-a936-61cc8a9f3dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf9d018-d9d1-4ac3-af9f-e3348ecc1a2c",
        "cursor": {
          "ref": "7164ebdb-9088-46ea-b0f4-11d56b415998",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8bce4c76-6136-44dc-94a0-81aa23604d02"
        },
        "item": {
          "id": "0bf9d018-d9d1-4ac3-af9f-e3348ecc1a2c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5b63965a-6d3f-4a65-ab0e-fc1998512516",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "0040df26-0dc1-4815-bff8-133e203215e8",
        "cursor": {
          "ref": "4255ec11-e2d1-4763-99f3-5cbe3a564d7a",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "da9a518d-7a74-4d33-a3c5-7a2e736b943f"
        },
        "item": {
          "id": "0040df26-0dc1-4815-bff8-133e203215e8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "be65ceff-d403-489f-93c8-2c2245555161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315fe5b3-6284-45f3-a7e4-ce58e80c1254",
        "cursor": {
          "ref": "28d86421-878c-4745-b5ca-6b0fe32e98fe",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b3c67c92-5b8d-4378-9db0-c4ec773e0d45"
        },
        "item": {
          "id": "315fe5b3-6284-45f3-a7e4-ce58e80c1254",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5213b1fb-2cc8-4ea4-8cc7-d42d04b391ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b12c130-25f4-4cc5-9f2a-d2d3ef0f2bb2",
        "cursor": {
          "ref": "e5108ba1-af2a-4817-a39c-1fe605b057ad",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c1dfb6c9-1224-4c33-b838-93bc74d6b77b"
        },
        "item": {
          "id": "8b12c130-25f4-4cc5-9f2a-d2d3ef0f2bb2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a011756a-fab3-48db-8ee1-d9eafc1736cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92de2c6d-c53b-489f-8c1e-ef64cbbbb6d8",
        "cursor": {
          "ref": "fbe3ae94-8219-45d1-a7ee-78a84931e1ab",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1f48fe91-1800-424d-80fc-c9ed8a2007d7"
        },
        "item": {
          "id": "92de2c6d-c53b-489f-8c1e-ef64cbbbb6d8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cf94b50f-7635-430e-89b0-cdef41eddab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee471e8-84e1-436b-b7b6-d086dcec2519",
        "cursor": {
          "ref": "76880124-67d5-44d5-aae8-ebe75b29f577",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "807a1d26-3fa6-4fae-ae71-0dcfbb3c1179"
        },
        "item": {
          "id": "4ee471e8-84e1-436b-b7b6-d086dcec2519",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "96c0ac53-4d5e-4f52-a161-8ea5e5c3a10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ad51ee-0008-44e4-8dad-0ee47ac3d040",
        "cursor": {
          "ref": "5e3b136c-ba60-47fa-b1ea-1016e64bc056",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8dc12b06-ad61-49e6-b926-fdbd2b628f43"
        },
        "item": {
          "id": "40ad51ee-0008-44e4-8dad-0ee47ac3d040",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2a07a7bc-ec0d-44af-9a34-531133424a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797386e0-61e3-45fc-866c-fe1c979390dd",
        "cursor": {
          "ref": "53c0056b-dc70-4641-b3a7-767c2936c97e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "71a4c7cb-4966-4513-82b3-419b08ae49bc"
        },
        "item": {
          "id": "797386e0-61e3-45fc-866c-fe1c979390dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9f058c39-ad97-466c-bd66-efb0ab709641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf795a2b-6f0a-43aa-87af-7e970fb25232",
        "cursor": {
          "ref": "b0ea0189-f95f-4a63-b107-6cb46dca9470",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2fb280de-7cae-4707-9cf7-9bc0392c4cc0"
        },
        "item": {
          "id": "bf795a2b-6f0a-43aa-87af-7e970fb25232",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c34a16ab-fee6-4ec4-acb7-2a35ab237baa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "fe06e30b-6e59-4f9a-a241-b8b952297c52",
        "cursor": {
          "ref": "90e240d6-8967-4939-b228-969bb9351c29",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0ef439f2-1d05-47d5-a335-c54bc5056980"
        },
        "item": {
          "id": "fe06e30b-6e59-4f9a-a241-b8b952297c52",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9ce0759a-2b47-4c21-9983-3a42b6c3835f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c455834d-4de2-49b8-a5aa-51bb8a683656",
        "cursor": {
          "ref": "f9767289-21d3-4d37-872e-a521d98657fa",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a9ccc8d1-d9e6-42de-b306-f83b23be95c6"
        },
        "item": {
          "id": "c455834d-4de2-49b8-a5aa-51bb8a683656",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "061b9665-1084-480d-ac00-7e8fe2c9e4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ace572f-ca4b-4045-9cde-e5ad78e7ed9f",
        "cursor": {
          "ref": "aec2e539-95fd-4ecf-900c-eeaca232fd0d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d6400cbb-4f6a-4271-9a07-f84398577522"
        },
        "item": {
          "id": "6ace572f-ca4b-4045-9cde-e5ad78e7ed9f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9c7f8630-432f-4ce8-8370-0193a41e83cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12315378-3eaa-4596-ae22-f18f7525dada",
        "cursor": {
          "ref": "0dae036a-cf14-4354-b9ea-ead6e9576d22",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e82f834e-1655-4e8e-9e78-eb22080e83db"
        },
        "item": {
          "id": "12315378-3eaa-4596-ae22-f18f7525dada",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "89629561-272e-418e-8da9-744c1fc7c540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e9fbf2-55dc-4a49-9df4-18841a28504f",
        "cursor": {
          "ref": "18a7e819-e895-4a2c-b479-c756bfbfea92",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "da7c7e00-f1cd-47f6-9041-9b6ac6bc03c2"
        },
        "item": {
          "id": "14e9fbf2-55dc-4a49-9df4-18841a28504f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "86db486e-ef7e-4c71-a9ad-b6e9d046dc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f46793-de91-485b-afde-1634e0f15af9",
        "cursor": {
          "ref": "4e27d281-3abd-4b82-915b-f46b70b52998",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "46b8de7c-8560-428c-9ff3-51650287eff6"
        },
        "item": {
          "id": "44f46793-de91-485b-afde-1634e0f15af9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4aeabbc6-44c9-4839-b620-cf97d86573b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753aa429-61f2-42e3-abbd-a84180237403",
        "cursor": {
          "ref": "dadba4e9-8e29-45bc-bba1-b0960a86629e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a8080b8f-2ac5-461b-b107-8a681a8a8648"
        },
        "item": {
          "id": "753aa429-61f2-42e3-abbd-a84180237403",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "59873494-b3ad-42c5-970a-712ffe5dc244",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c0703af8-fb18-43e6-84d2-4c6ddba054c3",
        "cursor": {
          "ref": "90029970-999e-4c31-9af9-168fafe9660e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eeaff8e6-c286-4c69-8e99-4218c92a99b1"
        },
        "item": {
          "id": "c0703af8-fb18-43e6-84d2-4c6ddba054c3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "664e366c-3aca-4d3e-bda4-395f353e7745",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "0a457877-c5d4-450e-8fd5-c1c31176b05d",
        "cursor": {
          "ref": "0b2f12df-6e9e-49a8-b7da-839ba7a33088",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9e8a9f3d-2d0c-4e44-8db5-28e8df64f031"
        },
        "item": {
          "id": "0a457877-c5d4-450e-8fd5-c1c31176b05d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "09ed3ecd-9409-4d20-8005-a83852160226",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "7317d5a5-3e6c-497e-9a7b-db921da78406",
        "cursor": {
          "ref": "3a16a7e8-548b-4e91-9044-090401378990",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "37e59aeb-802d-4fe2-8fb6-73fde26d4618"
        },
        "item": {
          "id": "7317d5a5-3e6c-497e-9a7b-db921da78406",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3fbee711-5e65-4e69-8bce-d646bfcfbcf5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "78175995-7adf-4816-a7f5-2794bf9a0cc2",
        "cursor": {
          "ref": "16fc561c-3a1e-4c96-bf2e-7a6ef47386f1",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "eb3ec677-72ab-4abd-926b-98f4be239290"
        },
        "item": {
          "id": "78175995-7adf-4816-a7f5-2794bf9a0cc2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "475f3d5f-5ed9-4702-90a9-028737f903ce",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "beafd1e9-8899-4adc-aa4a-7e325cfb8328",
        "cursor": {
          "ref": "8c16d9d6-22f2-4c7b-bb87-117e335c4644",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "78cfc79d-1ed5-4e44-9082-54f077d4d653"
        },
        "item": {
          "id": "beafd1e9-8899-4adc-aa4a-7e325cfb8328",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ade50579-d886-449a-a3fe-12f10ec800c2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "a8d38478-7c6a-48d7-a226-42175283656b",
        "cursor": {
          "ref": "ee951b20-8690-4004-ad22-66d2bc0dbb69",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2eeb0d69-963a-4a61-8a80-9c54679e2044"
        },
        "item": {
          "id": "a8d38478-7c6a-48d7-a226-42175283656b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e5889232-5137-4925-a83d-1599dff63ecd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc0766f-d0f7-47d6-9c08-0b5dac46080d",
        "cursor": {
          "ref": "af469d04-18d8-4bd0-833f-437ce5de9172",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "76a10c5c-7dd1-4c4e-9c3c-a3f673bbf903"
        },
        "item": {
          "id": "7bc0766f-d0f7-47d6-9c08-0b5dac46080d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b7faeba1-1356-4d0b-94ef-987f19b54b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913e0c50-40e8-43bd-9cb5-d09c68fbe4d9",
        "cursor": {
          "ref": "42a077a7-b0ff-4183-b230-7b27765900db",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f8424248-c9f8-4ae5-a570-2a5615080606"
        },
        "item": {
          "id": "913e0c50-40e8-43bd-9cb5-d09c68fbe4d9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5c25e41d-99ed-423f-af8d-813db847f763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da9c29a-4821-4e4c-b952-4bd83c1537f0",
        "cursor": {
          "ref": "d7e71598-71ef-44e8-8ee6-eac6cf5e5041",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "89f18b5d-ed07-4888-85d7-cd0feea1dd92"
        },
        "item": {
          "id": "4da9c29a-4821-4e4c-b952-4bd83c1537f0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "db437cf5-f5ce-4a03-82b5-3ff40b277907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50a2243-5cc0-4cef-990f-d8004150107a",
        "cursor": {
          "ref": "f9a8bcf1-1065-46b9-8b42-eb0391fd7677",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "44c86cf5-393a-4944-ade3-1235a887c7a1"
        },
        "item": {
          "id": "e50a2243-5cc0-4cef-990f-d8004150107a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "60d5e5b8-7fd0-4871-8c52-3f54903955e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a504f9b-ce16-42b6-b3de-fc92206d25ee",
        "cursor": {
          "ref": "090c9190-e364-4b2e-9326-c7279b2633ea",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "34645946-8cce-4c88-baf1-d00a9c4eb898"
        },
        "item": {
          "id": "2a504f9b-ce16-42b6-b3de-fc92206d25ee",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a0eaec36-af83-4192-911d-fde33c220ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958699fc-cf32-4239-89ba-4357dd362d8e",
        "cursor": {
          "ref": "d1f609dd-9361-4647-990b-b3e27feb93b0",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1640e137-6b6b-4dc0-8b53-ea0b6c023859"
        },
        "item": {
          "id": "958699fc-cf32-4239-89ba-4357dd362d8e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d7b6209b-1db6-488a-aeef-5ba449ef319b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626553d7-1d9a-418e-acaa-66b8e6a710ce",
        "cursor": {
          "ref": "d1a67e08-14df-44b9-9fce-75c53c9b8f6a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d6abcfed-3ea3-4a44-9422-9b194784cd8c"
        },
        "item": {
          "id": "626553d7-1d9a-418e-acaa-66b8e6a710ce",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fec16b6c-9d7c-4bed-87ba-4f1e15651466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3938d192-bc58-43be-b303-adf04a718663",
        "cursor": {
          "ref": "1ba7a641-595d-406c-af77-d219b4d3c0fd",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "44668a63-36d6-4e9f-a711-b321618a63fb"
        },
        "item": {
          "id": "3938d192-bc58-43be-b303-adf04a718663",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0ec3feb1-d4fe-4a30-9a62-cd2a2d1afd85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d96a8d7-5729-472c-b659-d797c2cbc76c",
        "cursor": {
          "ref": "6957929e-4677-47d3-b815-f89039fbf7c1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9cb3c6bd-1b3d-4a83-877e-1247414dae1a"
        },
        "item": {
          "id": "8d96a8d7-5729-472c-b659-d797c2cbc76c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0b68401f-9e24-4f10-a9a9-2ebff48d2e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33184e3-ef55-4b12-9c73-7889f6192c7d",
        "cursor": {
          "ref": "702a405d-6972-417f-9cc1-2f5134aba4f9",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "39c770a2-5379-447c-ab11-f8cb1954976d"
        },
        "item": {
          "id": "a33184e3-ef55-4b12-9c73-7889f6192c7d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "27dca933-3fdf-4aac-b3a4-97a4f02e9ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669a46e2-6bb7-4638-84e1-0c8c0ec3cad9",
        "cursor": {
          "ref": "16a5a435-f8d6-4468-b94d-0fa37816395c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0f9a0772-77e3-4e09-96bc-6c7fbd6e22e3"
        },
        "item": {
          "id": "669a46e2-6bb7-4638-84e1-0c8c0ec3cad9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bba73d40-8d2a-4273-b718-e5e29ebd30c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e7b603-afa3-4255-a606-f81d34d402a9",
        "cursor": {
          "ref": "e5fadbd7-7669-46de-81f4-9245a3331a14",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9cfafdd1-0e75-4733-8e9e-f41fb7076975"
        },
        "item": {
          "id": "a9e7b603-afa3-4255-a606-f81d34d402a9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "330cd6a3-851a-4ad7-b28d-c828e7c15185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3181867-b33f-4578-9926-77c6b6ad2f9e",
        "cursor": {
          "ref": "17ae0832-acf9-4c32-b966-a357abc18e92",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1b225a1a-b276-4735-861b-5520062a573b"
        },
        "item": {
          "id": "d3181867-b33f-4578-9926-77c6b6ad2f9e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "376b892d-ca47-45d8-97b5-fec2106a0472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9925d06e-a8dc-4d2c-934d-0fe5d49e9196",
        "cursor": {
          "ref": "7ace9c9d-2244-4ab5-a178-54e934ade91e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "72d4ee4a-2853-4256-85f1-d62a0ac9c067"
        },
        "item": {
          "id": "9925d06e-a8dc-4d2c-934d-0fe5d49e9196",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fec5e1bf-e512-445d-b5fd-8a81b324aa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257d28bb-4623-471e-b1c7-da83f833b4ca",
        "cursor": {
          "ref": "bab7de37-05b9-43e7-afb7-ca11ecd978ec",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "fe09af4c-8204-432b-b7c9-70c3b0bcdef9"
        },
        "item": {
          "id": "257d28bb-4623-471e-b1c7-da83f833b4ca",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "19bead3d-769c-4d1e-a8b3-f1f0d4777ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f67e93-d75c-48df-bb2e-74cf1b8d905c",
        "cursor": {
          "ref": "b568696a-2595-4d9f-8506-5ef12e8e0326",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c5b94c46-8d8b-4dc9-acfd-6de138c51bff"
        },
        "item": {
          "id": "c2f67e93-d75c-48df-bb2e-74cf1b8d905c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0517f7da-cb51-4328-ba31-097a42b03b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6ac0e6-505a-42b3-92e7-114c767b8c02",
        "cursor": {
          "ref": "2bf2fe9a-3140-4743-98d8-14f4d4ca069c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e16ac6d4-9168-4fb8-8045-e80401e1e835"
        },
        "item": {
          "id": "ce6ac0e6-505a-42b3-92e7-114c767b8c02",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "72dccda9-4038-4071-9887-2f3b6db5b88c",
          "status": "OK",
          "code": 200,
          "responseTime": 155,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "e253caf9-a7f6-4677-8dcf-aed1bcab7a85",
        "cursor": {
          "ref": "312be778-f373-465e-961b-148de6aa88d4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f4cecd7f-5c7d-49df-a007-f0e968f0f989"
        },
        "item": {
          "id": "e253caf9-a7f6-4677-8dcf-aed1bcab7a85",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e1f209e7-7ec1-4133-a74e-185e3c1a7028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f47a36d-2dde-4ab3-b0ca-b4025730f93d",
        "cursor": {
          "ref": "d6a43a34-084e-491f-91ee-b9eabe0a2b84",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "28fbd692-a8c0-4b37-a3ab-dd53f05a2b17"
        },
        "item": {
          "id": "4f47a36d-2dde-4ab3-b0ca-b4025730f93d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "480a9576-ad86-4c73-9903-4ec5393bb316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb69a758-462b-4141-b0b1-2e696adb31ff",
        "cursor": {
          "ref": "7b3a1da3-8253-4a9f-95f6-737651e1a256",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5e60992a-b186-4043-a3ac-4ac0e90795cf"
        },
        "item": {
          "id": "bb69a758-462b-4141-b0b1-2e696adb31ff",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "adedf164-781a-4526-957c-1bd1b9cf0fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee42bb6d-5f2c-42a3-9472-e4bfec4e8fed",
        "cursor": {
          "ref": "f31c0118-4dfb-406b-a485-d273d70e780c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9385441f-678b-4a5d-a9f4-cfc9fa3fd834"
        },
        "item": {
          "id": "ee42bb6d-5f2c-42a3-9472-e4bfec4e8fed",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4aca5410-8be1-4276-b5ed-3675ba9ad3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46ad238-5736-4335-9cbd-f2d0afa829e8",
        "cursor": {
          "ref": "28ee1981-2e75-4afa-9146-f64915b8fbbd",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "927a4b1f-66ab-4746-a1b1-32a93c8187c2"
        },
        "item": {
          "id": "c46ad238-5736-4335-9cbd-f2d0afa829e8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bc7281b6-affd-4a4e-b582-858739479c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369840ca-5304-4abc-ae71-0b52440b42b7",
        "cursor": {
          "ref": "fb4be328-051e-4012-9e2d-9857fe326332",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5494d4b0-90ad-4248-87b1-5c4f342a3bb3"
        },
        "item": {
          "id": "369840ca-5304-4abc-ae71-0b52440b42b7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3fa6bf59-59d1-4837-8620-24f6311b5f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de5ef05-b65b-47fc-b15b-12aae49830fa",
        "cursor": {
          "ref": "969fb555-c808-40ed-bebd-2650341f9f39",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "52deee30-4bdc-4be6-9790-ec4129bedcf3"
        },
        "item": {
          "id": "8de5ef05-b65b-47fc-b15b-12aae49830fa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e707ebc3-080c-484b-a6f9-575c7214ab83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7533bf8b-363b-4fb6-8045-a61a31bed4e6",
        "cursor": {
          "ref": "0260baf6-64b8-4113-9d84-68602abd3aa1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "006de5df-cbe8-48ad-8163-8aa96c851b24"
        },
        "item": {
          "id": "7533bf8b-363b-4fb6-8045-a61a31bed4e6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d0192ba4-94eb-4051-80fa-7ee2a3d8a964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bae7c38-b25f-4b5d-b5cc-5f983b91dddc",
        "cursor": {
          "ref": "650741ca-7585-4a00-8e0b-6a9ebbeeb79f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "76a73d0c-bd6d-4368-8bcf-6f212b9511df"
        },
        "item": {
          "id": "2bae7c38-b25f-4b5d-b5cc-5f983b91dddc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2df672d6-5654-43eb-a9e2-23b9a131eae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c055e97-6f83-4a41-925b-57d33c55d698",
        "cursor": {
          "ref": "d08c972d-88b2-4e70-8474-8edda145f352",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3ff62733-fc71-4112-859d-a7c4a51e35e1"
        },
        "item": {
          "id": "6c055e97-6f83-4a41-925b-57d33c55d698",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1bbbc7b4-f503-4286-baec-a9f390cffe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1381dca-de61-478a-85a7-949d8db5a09b",
        "cursor": {
          "ref": "d54afd8d-96c2-4204-ba20-d8b531ba7a7e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "11e04cc6-c903-4bc6-a457-4d803e1ad666"
        },
        "item": {
          "id": "a1381dca-de61-478a-85a7-949d8db5a09b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "72e33939-bf1f-470e-b334-3aa9c558442a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569521bc-439a-4d67-8e5b-d923d810b775",
        "cursor": {
          "ref": "19fdce4e-5b98-47ba-8207-df0dcc5b0729",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "51f54986-7f71-49eb-8916-8799e48b0401"
        },
        "item": {
          "id": "569521bc-439a-4d67-8e5b-d923d810b775",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "db8f6e86-ea94-4c88-84d1-1b4514929f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c7e9c2-40db-4fb4-afff-9a275d4810c3",
        "cursor": {
          "ref": "5275a1d0-4b25-49e7-bdc6-036fe1579d29",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bb304388-c34f-4a6f-9130-413cf420d59d"
        },
        "item": {
          "id": "e9c7e9c2-40db-4fb4-afff-9a275d4810c3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cbb95fac-b052-414f-9a12-63bcdfc28118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a943095-d598-413f-b37e-fb871cb66ccb",
        "cursor": {
          "ref": "2859ef3c-b50e-463f-b2c4-7e6c68181ed9",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b9340e6f-5bd7-4657-8b84-c6818d456242"
        },
        "item": {
          "id": "7a943095-d598-413f-b37e-fb871cb66ccb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "001b8237-a7f8-42f4-a651-dabc5f1c2115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018ea123-7622-47eb-958b-5afd527423ca",
        "cursor": {
          "ref": "760d6249-fa6f-4ea1-936c-517778ec2be5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "adfc2df9-e841-43d6-9fe7-87d49888ea31"
        },
        "item": {
          "id": "018ea123-7622-47eb-958b-5afd527423ca",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "021973e2-9933-4863-94ac-5e086aea55ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcce411b-c526-4a77-bd6c-35e0703ab403",
        "cursor": {
          "ref": "a99038fe-2744-485c-8d21-3052279faaa2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2825ca1e-7d86-419b-9f19-1fca6ef1a7da"
        },
        "item": {
          "id": "bcce411b-c526-4a77-bd6c-35e0703ab403",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b531a461-534a-4ddb-a937-2666a0d78b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e37e8a-ba67-40ec-8ff7-02936603ed5b",
        "cursor": {
          "ref": "3065a2ac-64d2-4d3c-ad4f-ead4d67d6420",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "88a4c7de-34ec-4438-85f2-3ac1dae5e349"
        },
        "item": {
          "id": "d9e37e8a-ba67-40ec-8ff7-02936603ed5b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6d85b461-0490-4f3f-89b0-593511f42c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51fffcb-ae14-4f54-bb48-8b6fe61a6ea8",
        "cursor": {
          "ref": "c9ca7d46-b9ff-4487-875a-e657c0885f4a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7f587366-b8cd-4330-86b0-ed4e6b9daf1a"
        },
        "item": {
          "id": "d51fffcb-ae14-4f54-bb48-8b6fe61a6ea8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "abb01440-7cf9-40c4-9ba0-c83183992ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0872a47a-8f93-4e5a-a540-c23756a85467",
        "cursor": {
          "ref": "adb0a7de-c30e-4be2-be00-d63ab528cb24",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fa3f895c-5126-42d4-9d9a-e71fc642d8d3"
        },
        "item": {
          "id": "0872a47a-8f93-4e5a-a540-c23756a85467",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "796dac3d-7def-43b3-a66d-0115515ad7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ec4b64-9488-4835-bfcf-0b5b048df4d4",
        "cursor": {
          "ref": "2a10f60a-fc77-43be-b7e2-d839b976ff6d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1969bcff-e509-423b-bf12-2f777d98a967"
        },
        "item": {
          "id": "07ec4b64-9488-4835-bfcf-0b5b048df4d4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e0455e22-1f65-4647-8ce2-c7b474ec4b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7a403f-4b59-4038-94cb-212727701689",
        "cursor": {
          "ref": "ddf44d23-f7ed-4b43-a94b-c12fe2e3816d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5ed4be18-435c-43a5-8127-99bffd0e8781"
        },
        "item": {
          "id": "0a7a403f-4b59-4038-94cb-212727701689",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e889d61c-82ac-4768-bac8-7b3d8401bb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82155f79-612d-4aba-8896-02d6df416c3e",
        "cursor": {
          "ref": "abfcaced-e9bc-4296-be9b-06849d1167a1",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d66d3856-d3b7-40c8-b6cd-c8348355a0ba"
        },
        "item": {
          "id": "82155f79-612d-4aba-8896-02d6df416c3e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "eb1e1831-b138-49c6-bf5b-aa65e041cd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1a3de4-cbd5-46f7-8acc-f09e2eb8b253",
        "cursor": {
          "ref": "73306f8e-a556-45ca-aa20-d0315d5f1a2a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5f1b5df4-15ad-4af0-ae22-f0c990c2a5dd"
        },
        "item": {
          "id": "4c1a3de4-cbd5-46f7-8acc-f09e2eb8b253",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "91bcb241-a2b8-4e6d-a6f4-16644711d4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b87eae-dc0d-4610-b09c-cfe235b1cce1",
        "cursor": {
          "ref": "baa07765-0725-43dd-9c9a-48fd4d278075",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e70596f3-38c2-4114-bb52-728dfbabadd7"
        },
        "item": {
          "id": "f3b87eae-dc0d-4610-b09c-cfe235b1cce1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "42368a1d-5218-40ca-beed-bab6af37211e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5713c160-1460-4842-8450-37137711069b",
        "cursor": {
          "ref": "78002b73-1c6a-4317-a257-5f8b5eeb8d54",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "aabb9ec0-065c-4923-8bd2-59feba225a42"
        },
        "item": {
          "id": "5713c160-1460-4842-8450-37137711069b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4a301415-c386-4430-b9de-769ff5fb4cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03b99d6-449b-43f1-b762-81758fa02a4e",
        "cursor": {
          "ref": "60a1a29d-4be6-4582-98f9-8a78b4fb9c1e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "05793d11-e1c9-42b9-97e8-2bf76cc151d9"
        },
        "item": {
          "id": "d03b99d6-449b-43f1-b762-81758fa02a4e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dc475402-d240-4820-8908-a55466ac9b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69688b98-bb50-462b-af0d-76da453da93d",
        "cursor": {
          "ref": "0006ae52-e6cc-4edf-a93d-5f47bdf2531e",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c883ce3a-787b-4aef-88ad-4a22738f81d3"
        },
        "item": {
          "id": "69688b98-bb50-462b-af0d-76da453da93d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5beff905-c9f4-4750-b843-69e8ae146a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd993f3-aa66-40bb-99ea-381a3bf91b0b",
        "cursor": {
          "ref": "a1b89160-8b5c-4075-abce-99ea30c950bd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1eb224fa-582a-4fe9-a263-668a5097f0bf"
        },
        "item": {
          "id": "4cd993f3-aa66-40bb-99ea-381a3bf91b0b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c88b8801-379b-4467-83f0-c2c7d89a6550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a764c856-8b3c-48ae-932a-ae176ffe0a30",
        "cursor": {
          "ref": "cad4b461-2dd9-441e-8986-e64f527f292b",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d0d8eff7-2738-457c-adf4-6655b254121b"
        },
        "item": {
          "id": "a764c856-8b3c-48ae-932a-ae176ffe0a30",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c884da17-4ad3-4779-a616-19fc747bb2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831f07e4-1bb7-4132-b9f8-9d8c3371717a",
        "cursor": {
          "ref": "b26f067f-70e7-4a9d-a672-91b929377b0a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "83a9d3a6-2520-4789-9eee-95588fb867d4"
        },
        "item": {
          "id": "831f07e4-1bb7-4132-b9f8-9d8c3371717a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ec6dbe8d-00c3-48b2-a60e-f5033281bc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8112461-df7d-4a57-adb4-8a39d9d88d53",
        "cursor": {
          "ref": "0308f0b2-6102-4abd-b837-04720687af29",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8533ecab-ab3a-46cc-b5d6-6f9f61060ccd"
        },
        "item": {
          "id": "c8112461-df7d-4a57-adb4-8a39d9d88d53",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b47e653e-ddb3-45e6-966c-27ae266e2da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b19a141-cb83-4d13-b182-f16f28f1edc2",
        "cursor": {
          "ref": "61875695-775d-4569-9d8b-9fad247aba39",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f8e62d22-42b3-44b9-b4df-2c0334755f2c"
        },
        "item": {
          "id": "9b19a141-cb83-4d13-b182-f16f28f1edc2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "77942e1c-600a-4dcf-a829-8fe0120e5bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c61ace-1abf-403e-a2b0-0e0831862a90",
        "cursor": {
          "ref": "d5f203e7-d321-46fe-9e8c-55268ac6a963",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6397a9d0-82d3-476c-af1b-81066ae3d19b"
        },
        "item": {
          "id": "35c61ace-1abf-403e-a2b0-0e0831862a90",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0cf0ca7a-85f8-4a4e-ba45-7d03f6b6d42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e50eeca-0d48-44ca-9efa-c1fab724b4a1",
        "cursor": {
          "ref": "b79739fa-1efe-43ac-815d-805fc86206fb",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b038d07d-3252-498b-b58c-d1b8c4041c9c"
        },
        "item": {
          "id": "0e50eeca-0d48-44ca-9efa-c1fab724b4a1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "787dec63-9a14-4b65-8851-d203f3cf3c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd977a3-318f-4237-903b-2c653eed1446",
        "cursor": {
          "ref": "8f4af868-cb65-4285-b8c6-06d2925edcd8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f91b7afd-8d5a-4274-b8d8-9c4e00a11819"
        },
        "item": {
          "id": "efd977a3-318f-4237-903b-2c653eed1446",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fa43451b-91ef-42a1-ac69-4b82e47eb1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f09ae60-bff0-4593-941e-c4f040c26c37",
        "cursor": {
          "ref": "64041384-77e9-4eae-a849-a32975eaeeb1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c9d7736c-8537-4848-ada5-fd2f49dae317"
        },
        "item": {
          "id": "6f09ae60-bff0-4593-941e-c4f040c26c37",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9c47f6d0-1742-42cc-ac94-cd5a43883b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c73f587-6527-4110-a729-800266bffb34",
        "cursor": {
          "ref": "731f9a57-53ab-494f-ad5d-34ba796af1b5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bd23753f-97be-49b4-b820-069f4d8167ec"
        },
        "item": {
          "id": "4c73f587-6527-4110-a729-800266bffb34",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0084d2fc-6d75-48e2-98b0-2218ebb792ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ad6166-3d1b-4d9a-ab49-82bd51165a18",
        "cursor": {
          "ref": "fc45cc19-5fc1-4d9f-b066-b7b29ead3fbb",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "503fca2d-a4eb-4151-b248-88be14b0b34b"
        },
        "item": {
          "id": "c4ad6166-3d1b-4d9a-ab49-82bd51165a18",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "00067982-1fed-4258-8d51-0b959d946cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d61dc4e-f10f-485c-b42c-3358292ff941",
        "cursor": {
          "ref": "541a57ff-b937-4c5c-b600-bdd9409d55e0",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2699bc7e-341c-484c-8285-3bc3383a6000"
        },
        "item": {
          "id": "9d61dc4e-f10f-485c-b42c-3358292ff941",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b29ad4b5-b17f-4e7b-87d0-53933cc32fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad8b968-b034-4395-9b8b-9d47fbae54c5",
        "cursor": {
          "ref": "cfed65ba-d0e0-46c5-88ec-ae54af7fc88d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e6a73946-b80c-4364-9c28-9cc3bde088ab"
        },
        "item": {
          "id": "aad8b968-b034-4395-9b8b-9d47fbae54c5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "912480bb-a52f-4ff3-a0a5-f25e9b32373e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68476e9f-2574-4535-93ad-e4277303d5bd",
        "cursor": {
          "ref": "4c409b89-b59e-4520-af9d-eaba37148d64",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0fe9bed3-f9f9-4df4-bd06-0109fff03896"
        },
        "item": {
          "id": "68476e9f-2574-4535-93ad-e4277303d5bd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "eec1f1f3-1124-4ebf-85d8-e2169918aecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db71b8a-30d6-48ba-9ab3-296e7efbb420",
        "cursor": {
          "ref": "04cdd0f2-215e-402d-aff5-2704117cd273",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9d818225-c685-4a83-9ca0-9d739041e5b6"
        },
        "item": {
          "id": "3db71b8a-30d6-48ba-9ab3-296e7efbb420",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6349c3a6-9447-4192-885d-7987bdd6d038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c550a8-00e2-4b82-83c9-322d571f8ce4",
        "cursor": {
          "ref": "2a7641a6-8fb8-4d87-8f78-008645c8995f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ffc66146-24c8-45ca-971c-509fe1896687"
        },
        "item": {
          "id": "96c550a8-00e2-4b82-83c9-322d571f8ce4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b85a3618-ed47-44cc-84db-7d18f2c85ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6465c98d-b718-4162-8fdd-f892524db414",
        "cursor": {
          "ref": "3db38715-ef52-4cb1-8c89-b05dbcbfab9e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "549c2718-1e6c-40c3-ada2-d638e428212b"
        },
        "item": {
          "id": "6465c98d-b718-4162-8fdd-f892524db414",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ff7254b9-0237-471a-ad2f-5c6ee350d723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6457be3-65dd-4eab-ab50-921808bfc108",
        "cursor": {
          "ref": "08cfb1c3-8287-4cf6-9772-014ce2b9cbc1",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5bd1d9b7-97e3-43a8-b7c1-fa66c395d909"
        },
        "item": {
          "id": "c6457be3-65dd-4eab-ab50-921808bfc108",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ee4c5e84-b782-4492-b89b-6c505db9f4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b96088-cfcc-42b6-930d-3a944682715b",
        "cursor": {
          "ref": "87557ce0-169b-4235-b537-52c2fe232219",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fd3cce6e-2dae-4536-845b-edcb566fcdf1"
        },
        "item": {
          "id": "78b96088-cfcc-42b6-930d-3a944682715b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "12306816-9b79-4f9b-bdbe-7850ba65693b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d140fb0-390e-438e-915d-0174a2f73e32",
        "cursor": {
          "ref": "3e8e6657-8520-49c3-bae6-c71b732d3b5c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d3550581-104d-4268-83ee-051c82a4cced"
        },
        "item": {
          "id": "8d140fb0-390e-438e-915d-0174a2f73e32",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "41f52057-5cc0-4d82-9207-a1025e93f701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7453b758-4668-4b2c-b64d-6ca71cde687b",
        "cursor": {
          "ref": "3d102c5f-d81b-4df8-9271-1cbd99d218b0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "283e33c5-f448-43bb-a593-9a6be488fb03"
        },
        "item": {
          "id": "7453b758-4668-4b2c-b64d-6ca71cde687b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "29a3c15a-e478-4492-b2b3-e308270b4855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b41584d-dcb4-4a5a-a819-ef7448a622f2",
        "cursor": {
          "ref": "007da625-3b8f-4182-88c4-3712a5864966",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bc08af41-039c-48d8-ac5c-5bfb017e6ee7"
        },
        "item": {
          "id": "8b41584d-dcb4-4a5a-a819-ef7448a622f2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2f357c49-9371-4268-a932-f96ed02a217f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3409306-5507-415a-8aa7-c222e9dfd7a0",
        "cursor": {
          "ref": "402d53a8-f352-4a65-96eb-bf3ab180a93b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8216a6e0-4008-4f81-a2c3-d3e57b501afe"
        },
        "item": {
          "id": "b3409306-5507-415a-8aa7-c222e9dfd7a0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "132c2ecf-9446-4131-9b9c-5a507487b5e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c3ee96-71a2-4475-acbd-44efe60f7f2a",
        "cursor": {
          "ref": "439e98c7-bf54-400b-aa9c-126398b7abfb",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cbe5a7a6-e149-4f4c-a6c2-8f3987d5bffb"
        },
        "item": {
          "id": "f1c3ee96-71a2-4475-acbd-44efe60f7f2a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fb3e65e0-0420-4646-a549-df11b4d9d030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed2c85f-74be-4ae8-b925-73ef892c07dc",
        "cursor": {
          "ref": "0fa9f4fa-87ce-44df-b7ad-e592bbb25a5e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a694ce5-94d7-425b-a062-a09c90b32777"
        },
        "item": {
          "id": "7ed2c85f-74be-4ae8-b925-73ef892c07dc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "338e2189-240d-4873-b0c0-7caf98b60a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a4ae72-feb8-4986-b29b-212fe306d39b",
        "cursor": {
          "ref": "d73edbed-27de-4f1e-9451-0e5ad78080ca",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5a470410-8395-498b-8766-52ba9fa909be"
        },
        "item": {
          "id": "d8a4ae72-feb8-4986-b29b-212fe306d39b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5bc77864-044b-4bb0-9d79-0f36c4b8d20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1946fc-a4a5-4332-9429-8b176a7cc18c",
        "cursor": {
          "ref": "02c5540f-2abb-4265-8aa2-7e3f96b93e10",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "344757a8-629a-418f-a81c-af4332d33b67"
        },
        "item": {
          "id": "fa1946fc-a4a5-4332-9429-8b176a7cc18c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9270ffef-bfef-4eac-8abe-e0b1b28b1877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb81e2c-248d-4791-9f37-1a9e8f739f2f",
        "cursor": {
          "ref": "0c9dac84-73d4-4c7b-a903-cacebd978f75",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fbaeeb38-4deb-4d7f-8912-9a068a4047fc"
        },
        "item": {
          "id": "5bb81e2c-248d-4791-9f37-1a9e8f739f2f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "79b499cf-f9ab-4516-be98-a8b9560fcf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48cb031-1f55-4d04-96ab-4c472f38a2a7",
        "cursor": {
          "ref": "276d4a2a-1c36-497b-a9d0-19740e491989",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9c93e5b6-675b-4991-8243-47c840803c43"
        },
        "item": {
          "id": "d48cb031-1f55-4d04-96ab-4c472f38a2a7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5d909eb5-5872-49ba-acab-90ee6be911b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6c8491-dd14-4370-bde9-ae4c102a4983",
        "cursor": {
          "ref": "bbe1be3c-4316-43cd-9d9a-bfe7a09d1ba1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0631e3d9-0010-477a-bd58-17c4eca82183"
        },
        "item": {
          "id": "1d6c8491-dd14-4370-bde9-ae4c102a4983",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5e72be82-46c7-496b-8fda-d96b61a6c057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f187667d-d7d2-4cbd-9749-38d43e5a3bb1",
        "cursor": {
          "ref": "3f764aff-3b96-4d0c-863c-697077fea3e6",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "125ca786-3f5b-4113-b391-0745cea1ee03"
        },
        "item": {
          "id": "f187667d-d7d2-4cbd-9749-38d43e5a3bb1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "884ca8ee-905f-4a18-a60a-b44ab752a987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f9a680-1ea3-46b7-b7d7-64c063d6f185",
        "cursor": {
          "ref": "ed7c3e5e-1a24-4d75-a55e-f46933317332",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "8d866c93-807e-4468-9728-11604b5daaa3"
        },
        "item": {
          "id": "07f9a680-1ea3-46b7-b7d7-64c063d6f185",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bc25c307-379a-43da-bd01-c90c3792a96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953026cb-85c6-4a9c-9f70-792c14a9502d",
        "cursor": {
          "ref": "d73d195a-7676-4825-8169-bfb3aad714db",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "de3c15c6-01b1-4ba8-83b0-5a3d3a6afcc0"
        },
        "item": {
          "id": "953026cb-85c6-4a9c-9f70-792c14a9502d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a739f090-79c3-42f0-b068-685ee3fdc9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43df7eb9-5e21-4be7-93f6-67005e657d16",
        "cursor": {
          "ref": "1b8d327a-c570-4ee5-b73f-e8b90103e90c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2617e17d-fed4-4f9f-bbde-a0eb164da128"
        },
        "item": {
          "id": "43df7eb9-5e21-4be7-93f6-67005e657d16",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c61878a8-30df-4a81-b4ba-dd6d0ca1e659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01abc434-429b-441b-b4ef-4784b5022546",
        "cursor": {
          "ref": "39e433ab-6192-4358-b24b-9b54d09c01d0",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e3aa254d-700a-4466-a13a-1c0e2582077c"
        },
        "item": {
          "id": "01abc434-429b-441b-b4ef-4784b5022546",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d6b0c2a3-a321-4369-9ef8-d67514cd649f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c166c1-bff1-48ab-a288-6c50a83db105",
        "cursor": {
          "ref": "608c773c-b882-4c7d-ac8c-2a48a16e77a1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6428519c-5d09-45f4-8e71-fbe50857999b"
        },
        "item": {
          "id": "00c166c1-bff1-48ab-a288-6c50a83db105",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "983e6e71-c20d-45e4-b01a-1e57e2edb6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cf1fc2-deed-4512-afc1-ed066c4cfbc7",
        "cursor": {
          "ref": "2140baf3-616e-4eca-bac2-1ccc7a00148f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "114f2768-aee5-4f6a-9683-06a49181708f"
        },
        "item": {
          "id": "88cf1fc2-deed-4512-afc1-ed066c4cfbc7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0c93522c-da43-40f4-af07-07c9f9414732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8a4f6c-b106-4ac8-a592-b0538105fcb3",
        "cursor": {
          "ref": "78e093d5-5fee-4cf2-ab45-4c8f44bd80ee",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "37b773a2-4c7e-4abe-83ed-59cb3a534f47"
        },
        "item": {
          "id": "5c8a4f6c-b106-4ac8-a592-b0538105fcb3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "535e91ff-0229-4e83-aa0d-f11de304d920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae393ff6-e82c-4b0b-a710-b5484fcce639",
        "cursor": {
          "ref": "d39860a4-f772-4617-be98-ec5020785172",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "283c230b-22d4-4c64-bbdf-3c901c4ffc7f"
        },
        "item": {
          "id": "ae393ff6-e82c-4b0b-a710-b5484fcce639",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "65ea3762-bff9-482b-ba3c-5287f8719a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47ffbe7-9aaf-4be4-8fd8-a15d9d55e395",
        "cursor": {
          "ref": "efb36677-7cba-4dcf-a324-0c8f06ed6c73",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a81c0843-63ad-4eb5-8020-dbb1e52cb799"
        },
        "item": {
          "id": "e47ffbe7-9aaf-4be4-8fd8-a15d9d55e395",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "39f6987a-8517-4cd0-b082-ff11a1f7ee9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67208989-455d-45a7-bf51-6e763cefcabe",
        "cursor": {
          "ref": "0e5721cc-7c5f-4b69-9fb1-5fd832768899",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "78e3e0da-451a-4c7c-95a9-f52949a211b7"
        },
        "item": {
          "id": "67208989-455d-45a7-bf51-6e763cefcabe",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "257804e8-f6a6-417d-a662-9604f441ad7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09726b5-61f3-40a4-b079-0d83d755b511",
        "cursor": {
          "ref": "3dc5c25a-54d0-40a1-956e-60c12013fdbc",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e71f3741-9618-4cda-84ad-58d60cb0723e"
        },
        "item": {
          "id": "c09726b5-61f3-40a4-b079-0d83d755b511",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d8db8b64-a5a7-4669-93f1-e2d2ef9f8eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba37107c-e293-4da3-8ad2-65755f836ba9",
        "cursor": {
          "ref": "417c43a2-c600-4de5-b53e-97be789ad870",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4112ce3f-aa7d-4e32-a6c8-7b0a6c49c074"
        },
        "item": {
          "id": "ba37107c-e293-4da3-8ad2-65755f836ba9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8753d147-4bde-4ef8-b3e0-8e113c0de3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5ec125-5c51-48fc-8369-39b24ce2bb99",
        "cursor": {
          "ref": "ba7928b0-80c8-4bb8-a242-59ee2df1ee63",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f1f995a1-a328-4ebf-8c92-3dbd30664b11"
        },
        "item": {
          "id": "3c5ec125-5c51-48fc-8369-39b24ce2bb99",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3159a4d6-e6ea-4f88-a35e-263a81c67967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5f845c-2167-4914-ac8d-3b03e555b432",
        "cursor": {
          "ref": "81bd6ec7-bb8a-481d-b74f-a1d7d864c5f9",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5a4405ff-ea44-47da-8d54-1bd69210a16f"
        },
        "item": {
          "id": "ca5f845c-2167-4914-ac8d-3b03e555b432",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7a63c5c1-7c36-4b49-8c91-e3da6e1a3c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069fda96-8cc3-4e8b-b4ab-5ddf07c7b8df",
        "cursor": {
          "ref": "42b85d21-f3c2-4eba-825c-8d40dcd7f0ae",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7522a42e-1fa0-4e15-8f29-92c7924d92a7"
        },
        "item": {
          "id": "069fda96-8cc3-4e8b-b4ab-5ddf07c7b8df",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6df5ef86-a30f-4e0e-beff-7a316ce635a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d77f8d-e3f0-4653-b22c-b5a4047524d5",
        "cursor": {
          "ref": "466a7dda-a79e-4b8d-85cb-1267ca6be4dd",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "29e8b0d2-1e67-437e-9f4a-ffda5b0bd44f"
        },
        "item": {
          "id": "f3d77f8d-e3f0-4653-b22c-b5a4047524d5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "836e849d-b3c2-4535-ba4f-5bf97e19413a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbb7f48-48ed-4553-a134-5e24cbf9ecb0",
        "cursor": {
          "ref": "4bb93e54-3eba-4e2b-b8ed-741f2bd5e936",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b3d37399-c615-4ce4-be85-eebb8954c4d7"
        },
        "item": {
          "id": "ccbb7f48-48ed-4553-a134-5e24cbf9ecb0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "211a2516-946d-4958-9778-0ff16e0ce722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09eccaf-5757-46fd-9a2b-c36f491a5a1e",
        "cursor": {
          "ref": "3e0c6e25-2399-4a14-8e1d-6266396326ba",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ff8d094b-822b-4310-b8d9-8258e05e1885"
        },
        "item": {
          "id": "e09eccaf-5757-46fd-9a2b-c36f491a5a1e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "21de8698-7308-45b6-9f17-11bc51252d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf0ae36-d5de-4952-8319-885b81a3017d",
        "cursor": {
          "ref": "6aaecd9a-f47a-4166-835b-c8cffa662d5e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6e6cb8df-76fd-4a92-a9ff-ba9b233fb271"
        },
        "item": {
          "id": "1bf0ae36-d5de-4952-8319-885b81a3017d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "56cf15c3-14ab-43a0-81ec-2b08236c756a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09070bb-1c7c-433c-952f-3fecf5cd5302",
        "cursor": {
          "ref": "7eccb338-667a-4bf2-82d9-2f86b139df73",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "413202be-b08b-4404-9119-abf2a6215962"
        },
        "item": {
          "id": "a09070bb-1c7c-433c-952f-3fecf5cd5302",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "adf470db-a23d-448f-8c63-cd5b90d443a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d7e690-4373-463a-95d1-4233aa59bbf2",
        "cursor": {
          "ref": "4e815e70-86ec-4ca4-99a3-3493cf90d6ef",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bbb34d9e-0185-4653-ba3b-a382f7dffa9d"
        },
        "item": {
          "id": "65d7e690-4373-463a-95d1-4233aa59bbf2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6de3b7c8-a9f8-4794-9218-c47be5dc22f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fadec6c-c2ff-4c71-b49b-d2f169f33366",
        "cursor": {
          "ref": "bd1d2bb6-c45a-4e49-877c-11915990d05b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fa34cbe4-529a-43d6-ba64-4e6eb99a2db6"
        },
        "item": {
          "id": "8fadec6c-c2ff-4c71-b49b-d2f169f33366",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "29ed964f-8d05-43b5-a1aa-e65a10d4038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8951ac6f-80e0-4953-8b4f-911314be8421",
        "cursor": {
          "ref": "058599c7-c905-43aa-81c1-b7ce06833508",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "24db8a13-a1b5-4b08-b80b-602bdfe0155d"
        },
        "item": {
          "id": "8951ac6f-80e0-4953-8b4f-911314be8421",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5c135cef-7b31-4a61-bc25-e26a4ca82c42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d0ab65-255d-4d8f-aafa-67b8fcdbc2a3",
        "cursor": {
          "ref": "a8db7607-7307-4bdf-b78a-468548920fb0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "802e4498-eaeb-4305-83bb-c85c6adc9e32"
        },
        "item": {
          "id": "54d0ab65-255d-4d8f-aafa-67b8fcdbc2a3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ad37bcb6-65c9-4901-9224-96e037e21057",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4ff087-48b8-4b35-8001-7e03567613f2",
        "cursor": {
          "ref": "f3c1dc8f-2d31-4554-832a-c28a6a55ceea",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3afb1109-9a2b-4717-947a-37bcc9065e3c"
        },
        "item": {
          "id": "5c4ff087-48b8-4b35-8001-7e03567613f2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ec7d814a-5255-4fe3-9916-d742859467ab",
          "status": "OK",
          "code": 200,
          "responseTime": 2461,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6607b306-ede2-407e-809e-9186d2644cf3",
        "cursor": {
          "ref": "58611795-2eec-4ae6-a5db-91d2f2df49d5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "598f11cf-3bfd-45d8-a0b6-a8b9310511b2"
        },
        "item": {
          "id": "6607b306-ede2-407e-809e-9186d2644cf3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f5e467a0-c640-48b1-90fb-f10a70c64432",
          "status": "OK",
          "code": 200,
          "responseTime": 4457,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a82f0c0-4278-4202-a8d4-bc393940638e",
        "cursor": {
          "ref": "d2cc3bb3-98c4-4337-af28-cdc7e33e10e3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "62f3f3d8-a956-48cd-a0b7-cb94f2be8cc0"
        },
        "item": {
          "id": "7a82f0c0-4278-4202-a8d4-bc393940638e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2b6aa3f3-c38c-4fe9-980e-fa22c2a08749",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a82f0c0-4278-4202-a8d4-bc393940638e",
        "cursor": {
          "ref": "d2cc3bb3-98c4-4337-af28-cdc7e33e10e3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "62f3f3d8-a956-48cd-a0b7-cb94f2be8cc0"
        },
        "item": {
          "id": "7a82f0c0-4278-4202-a8d4-bc393940638e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2b6aa3f3-c38c-4fe9-980e-fa22c2a08749",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a83dd-168a-404a-adea-66291a3a6f47",
        "cursor": {
          "ref": "e778f87b-db9b-4118-ba54-d885df88ba28",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "20fb101d-a2bc-4e99-b275-078d6a9496a9"
        },
        "item": {
          "id": "a38a83dd-168a-404a-adea-66291a3a6f47",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c2daf93c-62ee-4074-b9e2-0b29e472f69d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba387be-8f5b-4822-95d1-126a53ac4960",
        "cursor": {
          "ref": "9017b8b8-2564-4fb5-bcdf-c6374dd30870",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3c7d84de-aa66-465d-b4a1-5ea22edf829d"
        },
        "item": {
          "id": "5ba387be-8f5b-4822-95d1-126a53ac4960",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c39c8e1f-0b1a-48fe-9a70-1f87cd9c1bb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}